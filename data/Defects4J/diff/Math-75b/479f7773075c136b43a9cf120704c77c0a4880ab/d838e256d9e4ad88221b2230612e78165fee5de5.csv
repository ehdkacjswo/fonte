is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,45, The default implementation uses the identity
True,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,45,* The default implementation uses the identity</p>
False,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,47, P(x0 &le; X &le; x1) = P(X &le; x1) - P(X &le; x0)
True,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDistribution.java,47,* P(x0 &le; X &le; x1) = P(X &le; x1) - P(X &le; x0) </p>
False,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,169, p=1.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,169,* p=1.</p>
False,src/java/org/apache/commons/math/distribution/CauchyDistribution.java,src/java/org/apache/commons/math/distribution/CauchyDistribution.java,24, References:<p>
True,src/java/org/apache/commons/math/distribution/CauchyDistribution.java,src/java/org/apache/commons/math/distribution/CauchyDistribution.java,24,* References:
False,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,90, <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,90,* <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java,89, Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java,89,* Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,95, Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,95,* Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,89, Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,89,* Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,85, Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,85,* Returns 0 for p=0 and <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/java/org/apache/commons/math/distribution/IntegerDistribution.java,75, returned.</li></ul>
True,src/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/java/org/apache/commons/math/distribution/IntegerDistribution.java,75,* returned.</li></ul></p>
False,src/java/org/apache/commons/math/distribution/NormalDistribution.java,src/java/org/apache/commons/math/distribution/NormalDistribution.java,24, References:<p>
True,src/java/org/apache/commons/math/distribution/NormalDistribution.java,src/java/org/apache/commons/math/distribution/NormalDistribution.java,24,* References:</p><p>
False,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,128, <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,128,* <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,162, for p=1.
True,src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,162,* for p=1.</p>
False,src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,138, distribution function at <code>x + 0.5</code>
True,src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,138,* distribution function at <code>x + 0.5</code></p>
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,100, <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,100,* <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,89, <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,89,* <code>Double.POSITIVE_INFINITY</code> for p=1.</p>
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,109, <p>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,109,* </p><p>
False,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,31, will result in a <code>ParseException</code>.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,31,* will result in a <code>ParseException</code>.</p>
False,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,125, will result in a <code>ParseException</code>.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,125,* will result in a <code>ParseException</code>.</p>
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,27," returns the element in the first row, first column of the matrix."
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,27,"* returns the element in the first row, first column of the matrix.</p>"
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,173, unless <code>0 <= row < rowDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,173,* unless <code>0 <= row < rowDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,186, unless <code>0 <= row < rowDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,186,* unless <code>0 <= row < rowDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,198, unless <code>0 <= column < columnDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,198,* unless <code>0 <= column < columnDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,211, unless <code>0 <= column < columnDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,211,* unless <code>0 <= column < columnDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,227, otherwise a <code>MatrixIndexException</code> is thrown.
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,227,* otherwise a <code>MatrixIndexException</code> is thrown.</p>
False,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,244, otherwise a <code>MatrixIndexException</code> is thrown.
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,244,* otherwise a <code>MatrixIndexException</code> is thrown.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,32, <li>inverse</li> </ul>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,32,* <li>inverse</li> </ul></p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,46," returns the element in the first row, first column of the matrix.</li></ul>"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,46,"* returns the element in the first row, first column of the matrix.</li></ul></p>"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,109," The input array is copied, not referenced."
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,110,"* The input array is copied, not referenced.</p>"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,125," The input array is copied, not referenced."
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,126,"* The input array is copied, not referenced.</p>"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,188," The input array is copied, not referenced."
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,189,"* The input array is copied, not referenced.</p>"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,332, Makes a fresh copy of the underlying data.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,333,* Makes a fresh copy of the underlying data.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,344, <code>double</code> values.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,345,* <code>double</code> values.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,363, Does not make a fresh copy of the underlying data.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,364,* Does not make a fresh copy of the underlying data.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,506, </pre>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,507,* </pre></p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,598, unless <code>0 <= row < rowDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,599,* unless <code>0 <= row < rowDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,619, unless <code>0 <= row < rowDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,620,* unless <code>0 <= row < rowDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,641, unless <code>0 <= column < columnDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,642,* unless <code>0 <= column < columnDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,664, unless <code>0 <= column < columnDimension.</code>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,665,* unless <code>0 <= column < columnDimension.</code></p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,690, otherwise a <code>MatrixIndexException</code> is thrown.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,691,* otherwise a <code>MatrixIndexException</code> is thrown.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,713, otherwise a <code>MatrixIndexException</code> is thrown.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,714,* otherwise a <code>MatrixIndexException</code> is thrown.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1010," Crout's algortithm</a>, with partial pivoting."
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1011,"* Crout's algortithm</a>, with partial pivoting.</p>"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1017, automatically.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1018,* automatically.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1197, matrix.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1198,* matrix.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1209,  by the <a href=#getPermutation()>permutation</a> property.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1210,*  by the <a href=#getPermutation()>permutation</a> property.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1227, and current first row is last.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1228,* and current first row is last.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1229, Returns a fresh copy of the array.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1230,* Returns a fresh copy of the array.</p>
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1259, Verifies that the input array is rectangular and non-empty.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1260,* Verifies that the input array is rectangular and non-empty.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,24," returns the element in the first row, first column of the matrix."
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,24,"* returns the element in the first row, first column of the matrix.</p>"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,156, unless <code>0 <= row < rowDimension.</code>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,156,* unless <code>0 <= row < rowDimension.</code></p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,168, unless <code>0 <= column < columnDimension.</code>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,168,* unless <code>0 <= column < columnDimension.</code></p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,184, otherwise a <code>MatrixIndexException</code> is thrown.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,184,* otherwise a <code>MatrixIndexException</code> is thrown.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,34, <li>inverse</li> </ul>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,34,* <li>inverse</li> </ul></p>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,48,* </p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,100," The input array is copied, not referenced."
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,101,"* The input array is copied, not referenced.</p>"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,117," The input array is copied, not referenced."
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,118,"* The input array is copied, not referenced.</p>"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,261, Makes a fresh copy of the underlying data.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,262,* Makes a fresh copy of the underlying data.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,272, Does not make a fresh copy of the underlying data.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,273,* Does not make a fresh copy of the underlying data.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,375, </pre>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,376,* </pre></p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,467, unless <code>0 <= row < rowDimension.</code>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,468,* unless <code>0 <= row < rowDimension.</code></p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,487, unless <code>0 <= column < columnDimension.</code>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,488,* unless <code>0 <= column < columnDimension.</code></p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,513, otherwise a <code>MatrixIndexException</code> is thrown.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,514,* otherwise a <code>MatrixIndexException</code> is thrown.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,763," Crout's algorithm</a>, with partial pivoting."
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,764,"* Crout's algorithm</a>, with partial pivoting.</p>"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,770, automatically.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,771,* automatically.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,949, matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,950,* matrix.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,961,  by the <a href=#getPermutation()>permutation</a> property.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,962,*  by the <a href=#getPermutation()>permutation</a> property.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,979, and current first row is last.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,980,* and current first row is last.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,981, Returns a fresh copy of the array.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,982,* Returns a fresh copy of the array.</p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1011, Verifies that the input array is rectangular and non-empty
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1012,* Verifies that the input array is rectangular and non-empty.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,30, throw an IllegalArgumentException.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,30,* throw an IllegalArgumentException.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,34," the same effect (similarly for arguments to <code>getCount,</code> etc.)."
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,34,"* the same effect (similarly for arguments to <code>getCount,</code> etc.).</p>"
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,37, <code>Comparator</code> is supplied in the constructor.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,37,* <code>Comparator</code> is supplied in the constructor.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,160, by the Iterator will in this case be Longs.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,160,* by the Iterator will in this case be Longs.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,242, Returns <code>Double.NaN</code> if no values have been added.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,242,* Returns <code>Double.NaN</code> if no values have been added.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,255, Returns the percentage of values that are equal to v
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,255,* Returns the percentage of values that are equal to v
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,266, Returns the percentage of values that are equal to v
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,266,* Returns the percentage of values that are equal to v
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,292, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,292,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,342, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,342,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,354, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,354,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,366, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,366,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,383, to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,383,* to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,399, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,399,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,412, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,412,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,425, Returns 0 if v is not comparable to the values set.
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,425,* Returns 0 if v is not comparable to the values set.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,80, is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,80,* is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,96, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,96,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,114, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,114,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,130, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,130,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,148, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,148,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,163, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,163,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,181, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,181,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,184,* </p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,199, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,200,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,201, See {@link org.apache.commons.math.stat.descriptive.summary.SumOfLogs}.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,202,* See {@link org.apache.commons.math.stat.descriptive.summary.SumOfLogs}.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,203,* </p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,220, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,222,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,223, details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,225,* details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,238, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,240,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,241, details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,243,* details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,259, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,261,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,262, for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,264,* for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,277, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,279,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,280, for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,282,* for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,300, details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,302,* details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,302, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,304,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,304, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,306,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,320, details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,322,* details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,322, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,324,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,325, array index parameters are not valid.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,327,* array index parameters are not valid.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,345, details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,347,* details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,350, computed.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,352,* computed.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,352, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,354,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,355, array index parameters are not valid.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,357,* array index parameters are not valid.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,376, details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,378,* details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,381, computed.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,383,* computed.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,383, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,385,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,385, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,387,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,400, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,402,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,407, </ul>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,409,* </ul></p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,423, the array index parameters are not valid.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,425,* the array index parameters are not valid.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,430, </ul>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,432,* </ul></p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,448, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,450,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,455, </ul>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,457,* </ul> </p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,471, the array index parameters are not valid.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,473,* the array index parameters are not valid.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,478, </ul>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,480,* </ul></p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,498, <code>0</code></li>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,500,* <code>0</code></li></p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,504, </ul>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,506,* </ul></p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,507, a description of the percentile estimation algorithm used.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,509,* a description of the percentile estimation algorithm used.</p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,533, </ul>
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,535,* </ul></p>
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,536, a description of the percentile estimation algorithm used.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,538,* a description of the percentile estimation algorithm used.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,27, implementations.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,27,* implementations.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,29, <strong>Note that these implementations are not synchronized.</strong>
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,29,* <strong>Note that these implementations are not synchronized.</strong></p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,47, then {@link #incrementAll(double[])}.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,47,* then {@link #incrementAll(double[])}.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,51, input array.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,51,* input array.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,53," If the array is null, an IllegalArgumentException is thrown."
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,53,"* If the array is null, an IllegalArgumentException is thrown.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,71," then {@link #incrementAll(double[], int, int)}."
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,71,"* then {@link #incrementAll(double[], int, int)}.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,75, input array.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,75,* input array.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,78, IllegalArgumentException is thrown.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,78,* IllegalArgumentException is thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,109, Throws IllegalArgumentException if the input values array is null.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,109,* Throws IllegalArgumentException if the input values array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,126, Throws IllegalArgumentException if the input values array is null.
True,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,126,* Throws IllegalArgumentException if the input values array is null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,27,* </p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,29, validation for the <code>evaluate</code> methods.
False,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,30, <p>
True,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,30,* validation for the <code>evaluate</code> methods.</p>
False,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,64, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,64,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,369, <p>
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,369,* </p><p>
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,375, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,375,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,24, This interface is designed to be used for calculating statistics that can be computed in
False,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,25, one pass through the data without storing the full array of sample values.
True,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,24,* This interface is designed to be used for calculating statistics that can be
True,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,25,* computed in one pass through the data without storing the full array of
True,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,26,* sample values.</p>
False,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,26, applied to the input values.
True,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,26,* applied to the input values.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,26, mean = sum(x_i) / n
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,26,* mean = sum(x_i) / n </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,28, where <code>n</code> is the number of observations.
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,28,* where <code>n</code> is the number of observations. </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,31, following recursive updating algorithm:
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,31,* following recursive updating algorithm: </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,37, </ol>
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,37,* </ol></p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,39,  Returns <code>Double.NaN</code> if the dataset is empty.
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,39,*  Returns <code>Double.NaN</code> if the dataset is empty.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,44," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,44,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,25," (x_i - xbar) ^ 4,"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,25,"* (x_i - xbar) ^ 4, </p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,28, sample observations and xbar is the sample mean.
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,28,* sample observations and xbar is the sample mean. </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,30, The following recursive updating formula is used:
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,30,* The following recursive updating formula is used: </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,38, Then
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,38,* Then </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,41, [n^2 - 3 * (n-1)] * dev^4 * (n-1) / n^3
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,41,* [n^2 - 3 * (n-1)] * dev^4 * (n-1) / n^3 </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,44, returns <code>0</code> if there is just one value in the data set.
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,44,* returns <code>0</code> if there is just one value in the data set. </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,49," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,49,"* <code>clear()</code> method, it must be synchronized externally. </p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,27," <code> exp( 1/n  (sum of logs) ).</code>  Therefore,"
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,27,"* <code> exp( 1/n  (sum of logs) ).</code>  Therefore, </p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,36, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,36,* </ul> </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,41," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,41,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,90, See {@link GeometricMean} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,90,* See {@link GeometricMean} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,92, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,92,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,24, We use the following (unbiased) formula to define kurtosis:
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,24,* We use the following (unbiased) formula to define kurtosis:</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,27,  <p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,27,*  </p><p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,29, {@link StandardDeviation}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,29,* {@link StandardDeviation}</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,32,  is returned when there is not sufficient data to compute the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,32,*  is returned when there is not sufficient data to compute the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,37," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,37,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,53, be incremented or cleared.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,53,* be incremented or cleared.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,132, See {@link Kurtosis} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,132,* See {@link Kurtosis} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,134, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,134,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,71, be incremented or cleared.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,71,* be incremented or cleared.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,128, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,128,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,130, See {@link Mean} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,130,* See {@link Mean} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,25, The following recursive updating formula is used:
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,25,* The following recursive updating formula is used:</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,31, Then
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,31,* Then</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,33, new value = old value + dev^2 * (n -1) / n.
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,33,* new value = old value + dev^2 * (n -1) / n.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,36, returns <code>0</code> if there is just one value in the data set.
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,36,* returns <code>0</code> if there is just one value in the data set.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,41," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,41,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,26, We use the following (unbiased) formula to define skewness:
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,26,* We use the following (unbiased) formula to define skewness:</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,28, skewness = [n / (n -1) (n - 2)] sum[(x_i - mean)^3] / std^3
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,28,* skewness = [n / (n -1) (n - 2)] sum[(x_i - mean)^3] / std^3 </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,31, {@link StandardDeviation}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,31,* {@link StandardDeviation} </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,36," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,36,"* <code>clear()</code> method, it must be synchronized externally. </p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,52, be incremented or cleared.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,52,* be incremented or cleared.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,85, See {@link Skewness} for the definition used in the computation.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,85,* See {@link Skewness} for the definition used in the computation.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,124, See {@link Skewness} for the definition used in the computation.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,124,* See {@link Skewness} for the definition used in the computation.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,126, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,126,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,36," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,36,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,127, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,127,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,129, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,129,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,131, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,131,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,146, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,146,* Returns 0 for a single-value (i.e. length = 1) sample. </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,148, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,148,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,150, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,150,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,168, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,168,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,173, computed.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,173,* computed.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,175, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,175,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,177, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,177,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,197, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,197,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,202, computed.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,202,* computed.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,204, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,204,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,206, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,206,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,25, The following recursive updating formula is used:
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,25,* The following recursive updating formula is used:</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,32, Then
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,32,* Then</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,34, new value = old value - 3 * (dev/n) * m2 + (n-1) * (n -2) * (dev^3/n^2)
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,34,* new value = old value - 3 * (dev/n) * m2 + (n-1) * (n -2) * (dev^3/n^2)</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,37, returns <code>0</code> if there is just one value in the data set.
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,37,* returns <code>0</code> if there is just one value in the data set.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,42," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,42,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,27, variance = sum((x_i - mean)^2) / (n - 1)
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,27,* variance = sum((x_i - mean)^2) / (n - 1) </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,30, of sample observations.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,30,* of sample observations.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,49, should only be used when the full array of values is not available.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,49,* should only be used when the full array of values is not available.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,56,* </p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,185, See {@link Variance} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,186,* See {@link Variance} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,187, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,188,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,189, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,190,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,191, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,192,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,209, See {@link Variance} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,210,* See {@link Variance} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,211, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,212,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,213, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,214,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,215, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,216,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,246, See {@link Variance} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,247,* See {@link Variance} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,251, computed.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,252,* computed.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,253, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,254,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,255, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,256,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,257, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,258,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,300, See {@link Variance} for details on the computing algorithm.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,301,* See {@link Variance} for details on the computing algorithm.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,307, invoking this method.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,308,* invoking this method.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,309, Returns 0 for a single-value (i.e. length = 1) sample.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,310,* Returns 0 for a single-value (i.e. length = 1) sample.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,311, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,312,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,313, Does not change the internal state of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,314,* Does not change the internal state of the statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,29, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,29,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,34," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,34,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,68, @see org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic#clear()
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,68,* @see org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic#clear()
False,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,95, the array index parameters are not valid.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,95,* the array index parameters are not valid.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,102, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,102,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,29," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,29,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,31, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,31,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,36," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,36,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,97, the array index parameters are not valid.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,97,* the array index parameters are not valid.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,104, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,104,* </ul> </p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,44, </ol>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,44,* </ol></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,53," <code>{0, 1, 2, 3, 4, Double.NaN}</code> evaluates to <code>2.5.</code>"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,53,"* <code>{0, 1, 2, 3, 4, Double.NaN}</code> evaluates to <code>2.5.</code></p>"
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,57, result in <code>NaN<code> or infinite values returned.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,57,* result in <code>NaN<code> or infinite values returned.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,62," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,62,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,98, state of this statistic.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,98,* state of this statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,108, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,108,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,111, algorithm used.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,111,* algorithm used.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,136, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,136,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,139, algorithm used.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,139,* algorithm used.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,159, state of this statistic.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,159,* state of this statistic.</p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,169, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,169,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,171, See {@link Percentile} for a description of the percentile estimation
False,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,172, algorithm used.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,171,* See {@link Percentile} for a description of the percentile estimation
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,172,* algorithm used.</p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,27," <code>NaN</code>, then <code>NaN</code> is returned."
False,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,28, <p>
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,27,"* <code>NaN</code>, then <code>NaN</code> is returned.</p>"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,28,* <p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,32," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,32,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,96, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,96,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,27," <code>NaN</code>, then <code>NaN</code> is returned."
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,27,"* <code>NaN</code>, then <code>NaN</code> is returned.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,32," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,32,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,96, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,96,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,35, </ul>
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,35,* </ul></p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,40," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,40,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,104, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,104,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,106, See {@link SumOfLogs}.
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,106,* See {@link SumOfLogs}.</p>
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,27," <code>NaN</code>, then <code>NaN</code> is returned."
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,27,"* <code>NaN</code>, then <code>NaN</code> is returned.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,32," <code>clear()</code> method, it must be synchronized externally."
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,32,"* <code>clear()</code> method, it must be synchronized externally.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,96, Throws <code>IllegalArgumentException</code> if the array is null.
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,96,* Throws <code>IllegalArgumentException</code> if the array is null.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,36,  the observed counts follow the expected distribution.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,36,*  the observed counts follow the expected distribution.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,45, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,45,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,47, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,47,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,67, described by the expected counts.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,67,* described by the expected counts.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,76, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,76,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,78, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,78,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,98," <code>expected</code> at the 99% level, use <p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,99," <code>chiSquareTest(expected, observed, 0.01) </code>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,98,"* <code>expected</code> at the 99% level, use </p><p>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,99,"* <code>chiSquareTest(expected, observed, 0.01) </code></p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,109, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,109,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,111, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,111,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,130," The rows of the 2-way table are <code>count[0], ... , count[count.length - 1] </code>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,130,* The rows of the 2-way table are
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,131,"* <code>count[0], ... , count[count.length - 1] </code></p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,135, <li>The count array must be rectangular (i.e. all count[i] subarrays must have the same length).
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,136,* <li>The count array must be rectangular (i.e. all count[i] subarrays
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,137,*  must have the same length).
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,137, <li>The 2-way table represented by <code>counts</code> must have at least 2 columns and
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,138,        at least 2 rows.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,139,* <li>The 2-way table represented by <code>counts</code> must have at
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,140,*  least 2 columns and at least 2 rows.
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,140, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,142,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,142, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,144,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,159," The rows of the 2-way table are <code>count[0], ... , count[count.length - 1] </code>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,161,* The rows of the 2-way table are
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,162,"* <code>count[0], ... , count[count.length - 1] </code></p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,169, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,172,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,171, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,174,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,188," The rows of the 2-way table are <code>count[0], ... , count[count.length - 1] </code>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,191,* The rows of the 2-way table are
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,192,"* <code>count[0], ... , count[count.length - 1] </code></p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,191," To test the null hypothesis that the counts in <code>count[0], ... , count[count.length - 1] </code>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,192,"  all correspond to the same underlying probability distribution at the 99% level, use <p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,193," <code>chiSquareTest(counts, 0.01) </code>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,195,* To test the null hypothesis that the counts in
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,196,"* <code>count[0], ... , count[count.length - 1] </code>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,197,"*  all correspond to the same underlying probability distribution at the 99% level, use </p><p>"
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,198,"* <code>chiSquareTest(counts, 0.01) </code></p>"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,203, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,208,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,205, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java,210,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,32, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,32,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,39, (e.g. tests at the 95% level  use <code>alpha=0.05</code>).
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,39,* (e.g. tests at the 95% level  use <code>alpha=0.05</code>).</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,42, {@link StatisticalSummary} instances.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,42,* {@link StatisticalSummary} instances.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,59, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,59,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,79, value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,79,* value by 2.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,84, <code>sample1</code> and <code>sample2.</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,84,* <code>sample1</code> and <code>sample2.</code></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,90, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,90,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,95, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,95,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,114, <code>alpha * 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,114,* <code>alpha * 2</code></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,120, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,120,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,127, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,127,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,147, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,147,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,150, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,150,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,165, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,165,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,168, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,168,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,183, t-test to compare sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,183,* t-test to compare sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,185, The t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,185,* The t-statisitc is</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,188, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,188,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,195, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,195,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,197, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,197,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,200, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,200,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,203, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,203,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,218, sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,218,* sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,220, The t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,220,* The t-statisitc is</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,223, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,223,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,230, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,230,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,233, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,233,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,250, sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,250,* sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,252, The returned  t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,252,* The returned  t-statisitc is</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,255, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,255,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,262, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,262,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,266, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,266,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,285, t-test to compare sample means.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,285,* t-test to compare sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,287, The t-statisitc returned is
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,287,* The t-statisitc returned is</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,290, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,290,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,296, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,296,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,298, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,298,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,301, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,301,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,305, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,305,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,325, returned value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,325,* returned value by 2.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,331, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,331,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,334, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,334,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,351," perform a 1-sided test, use <code>alpha * 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,351,"* perform a 1-sided test, use <code>alpha * 2</code></p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,361, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,361,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,367, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,367,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,370, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,370,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,391, returned value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,391,* returned value by 2.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,397, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,397,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,401, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,401,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,419, <code>alpha * 2.</code>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,419,* <code>alpha * 2.</code></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,429, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,429,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,435, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,435,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,438, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,438,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,460," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,460,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,470," variances, use {@link #homoscedasticTTest(double[], double[])}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,470,"* variances, use {@link #homoscedasticTTest(double[], double[])}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,476, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,476,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,480, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,480,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,496," {@link #tTest(double[], double[])}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,496,"* {@link #tTest(double[], double[])}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,501," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,501,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,505, minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,505,* minus 2 is used as the degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,511, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,511,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,515, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,515,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,539," perform a 1-sided test, use <code>alpha * 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,539,"* perform a 1-sided test, use <code>alpha * 2</code></p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,544, Welch-Satterthwaite approximation.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,544,* Welch-Satterthwaite approximation.</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,556, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,555,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,562, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,561,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,568, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,567,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,597," {@link #tTest(double[], double[], double)}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,596,"* {@link #tTest(double[], double[], double)}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,601, sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,600,* sizes minus 2 is used as the degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,612, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,611,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,618, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,617,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,624, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,623,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,648," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,647,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,654," {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,653,"* {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,660, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,659,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,665, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,664,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,688," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,687,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,692, the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,691,* the degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,698, <p>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,697,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,702, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,701,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,727," perform a 1-sided test, use <code>alpha * 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,726,"* perform a 1-sided test, use <code>alpha * 2</code></p>"
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,732, Welch-Satterthwaite approximation.</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,731,* Welch-Satterthwaite approximation.</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,744, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,743,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,750, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,749,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,757, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTest.java,src/java/org/apache/commons/math/stat/inference/TTest.java,756,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,30, implementation to estimate exact p-values.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,30,* implementation to estimate exact p-values.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,68, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,68,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,98, value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,98,* value by 2.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,103, <code>sample1</code> and <code>sample2.</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,103,* <code>sample1</code> and <code>sample2.</code></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,109, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,109,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,114, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,114,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,139, <code>alpha * 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,139,* <code>alpha * 2</code></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,145, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,145,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,152, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,152,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,175, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,175,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,178, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,178,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,200, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,200,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,203, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,203,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,225, t-test to compare sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,225,* t-test to compare sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,227, The t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,227,* The t-statisitc is</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,230, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,230,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,237, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,237,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,239, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,239,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,242, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,242,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,245, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,245,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,269, sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,269,* sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,271, The t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,271,* The t-statisitc is</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,274, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,274,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,281, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,281,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,284, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,284,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,310, sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,310,* sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,312, The returned  t-statisitc is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,312,* The returned  t-statisitc is</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,315, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,315,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,322, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,322,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,326, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,326,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,354, t-test to compare sample means.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,354,* t-test to compare sample means.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,356, The t-statisitc returned is
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,356,* The t-statisitc returned is</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,359, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,359,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,365, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,365,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,370, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,370,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,374, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,374,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,403, returned value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,403,* returned value by 2.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,409, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,409,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,412, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,412,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,437, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,437,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,446, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,446,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,452, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,452,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,455, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,455,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,482, returned value by 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,482,* returned value by 2.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,488, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,488,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,492, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,492,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,517, <code>alpha * 2.</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,517,* <code>alpha * 2.</code></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,527, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,527,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,533, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,533,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,536, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,536,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,562," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,562,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,572," variances, use {@link #homoscedasticTTest(double[], double[])}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,572,"* variances, use {@link #homoscedasticTTest(double[], double[])}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,578, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,578,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,582, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,582,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,612," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,612,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,616, minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,616,* minus 2 is used as the degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,622, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,622,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,626, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,626,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,659," perform a 1-sided test, use <code>alpha / 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,659,"* perform a 1-sided test, use <code>alpha / 2</code></p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,664, Welch-Satterthwaite approximation.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,664,* Welch-Satterthwaite approximation.</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,676, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,676,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,682, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,682,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,688, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,688,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,721," {@link #tTest(double[], double[], double)}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,721,"* {@link #tTest(double[], double[], double)}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,725, sizes minus 2 is used as the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,725,* sizes minus 2 is used as the degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,736, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,736,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,742, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,742,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,748, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,748,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,776," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,776,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,782," {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,782,"* {@link #homoscedasticTTest(StatisticalSummary, StatisticalSummary)}.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,788, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,788,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,793, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,793,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,823," For a one-sided test, divide the returned value by 2."
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,823,"* For a one-sided test, divide the returned value by 2.</p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,827, the degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,827,* the degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,833, <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,833,* </p><p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,837, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,837,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,871," perform a 1-sided test, use <code>alpha * 2</code>"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,871,"* perform a 1-sided test, use <code>alpha * 2</code></p>"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,876, Welch-Satterthwaite approximation.</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,876,* Welch-Satterthwaite approximation.</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,888, </li></ol>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,888,* </li></ol></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,894, here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,894,* here</a></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,901, </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,901,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,962, Does not assume that subpopulation variances are equal.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,962,* Does not assume that subpopulation variances are equal.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1016, are estimated from the data.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1016,* are estimated from the data.</p>
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1041, The sum of the sample sizes minus 2 is used as degrees of freedom.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,1041,* The sum of the sample sizes minus 2 is used as degrees of freedom.</p>
False,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,43, both observed counts follow the same distribution.
True,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,43,* both observed counts follow the same distribution.</p>
False,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,54, </li></ul><p>
True,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,54,* </li></ul></p><p>
False,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,56, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,56,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,94, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,94,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,130, <code>IllegalArgumentException</code> is thrown.
True,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java,130,* <code>IllegalArgumentException</code> is thrown.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,29, <code> y = intercept + slope * x  </code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,29,* <code> y = intercept + slope * x  </code></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,32," available as well as ANOVA, r-square and Pearson's r statistics."
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,32,"* available as well as ANOVA, r-square and Pearson's r statistics.</p>"
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,37, added to the model.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,37,* added to the model.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,51, </ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,51,* </ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,114," Weisberg, S. ""Applied Linear Regression"". 2nd Ed. 1985"
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,114,"* Weisberg, S. ""Applied Linear Regression"". 2nd Ed. 1985.</p>"
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,147," <code>(data[1][0],data[1][1])</code>, etc."
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,147,"* <code>(data[1][0],data[1][1])</code>, etc.</p>"
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,151, dataset.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,151,* dataset.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,154, data.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,154,* data.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,190, <code> predict(x) = intercept + slope * x </code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,190,* <code> predict(x) = intercept + slope * x </code></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,197, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,197,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,212, The intercept is sometimes denoted b0.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,212,* The intercept is sometimes denoted b0.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,219, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,219,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,232, The slope is sometimes denoted b1.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,232,* The slope is sometimes denoted b1.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,239, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,239,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,258, The sum is computed using the computational formula
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,258,* The sum is computed using the computational formula</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,260, <code>SSE = SYY - (SXY * SXY / SXX)</code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,260,* <code>SSE = SYY - (SXY * SXY / SXX)</code></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,265, <p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,265,* </p><p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,267, {@link #addData}.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,267,* {@link #addData}.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,271, 0 is returned.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,271,* 0 is returned.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,278, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,278,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,290," <a href=""http://www.xycoon.com/SumOfSquares.htm"">here</a>."
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,290,"* <a href=""http://www.xycoon.com/SumOfSquares.htm"">here</a>.</p>"
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,292," If <code>n < 2</code>, this returns <code>Double.NaN</code>."
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,292,"* If <code>n < 2</code>, this returns <code>Double.NaN</code>.</p>"
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,308," <a href=""http://www.xycoon.com/SumOfSquares.htm"">here</a>"
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,308,"* <a href=""http://www.xycoon.com/SumOfSquares.htm"">here</a></p>"
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,315, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,315,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,329, <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,329,* <code>Double.NaN</code>.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,350, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,350,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,373, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,373,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,389, <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,389,* <code>Double.NaN</code>.</p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,405,* </p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,416, The 95% confidence interval is
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,417,* The 95% confidence interval is</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,419, getSlope() + getSlopeConfidenceInterval())</code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,420,* getSlope() + getSlopeConfidenceInterval())</code></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,423, <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,424,* <code>Double.NaN</code>.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,429, Bivariate Normal Distribution</a>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,430,* Bivariate Normal Distribution</a>.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,443, The (100-100*alpha)% confidence interval is
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,443,* The (100-100*alpha)% confidence interval is </p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,446, getSlope() + getSlopeConfidenceInterval())</code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,446,* getSlope() + getSlopeConfidenceInterval())</code></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,449, <code>alpha = .01</code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,449,* <code>alpha = .01</code></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,455, Bivariate Normal Distribution</a>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,455,* Bivariate Normal Distribution</a>.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,460, <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,460,* <code>Double.NaN</code>.
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,464, </li></ul>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,464,* </li></ul></p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,486, <p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,486,* </p><p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,491, Bivariate Normal Distribution</a>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,491,* Bivariate Normal Distribution</a>.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,495, <code>Double.NaN</code>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,495,* <code>Double.NaN</code>.</p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,510, Will return <code>NaN</code> if slope is <code>NaN</code>.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,510,* Will return <code>NaN</code> if slope is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,31, The equations are listed in the comments of the corresponding methods.
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,31,* The equations are listed in the comments of the corresponding methods.</p>
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,35, function transformation on how this affects the sampling.
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,35,* function transformation on how this affects the sampling.</p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,56,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,74,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,97,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,117,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,141,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,160,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,184,* </p>
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,202,* </p>
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,32, in the comments of the corresponding methods.
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,32,* in the comments of the corresponding methods.</p>
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,38," 32 (1978), 175 - 199."
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,38,"* 32 (1978), 175 - 199.</p>"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,67,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,84,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,106,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,124,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,142,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,165,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,184,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,202,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,225,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,244,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,262,* </p>
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,285,* </p>
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,404, forward transform and negative for inverse transform.
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,416,* forward transform and negative for inverse transform. </p>
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,443, require that.
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,455,* require that.</p>
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,31, The equations are listed in the comments of the corresponding methods.
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,31,* The equations are listed in the comments of the corresponding methods.</p>
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,35, transformation after sampling.
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,35,* transformation after sampling.</p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,55,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,72,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,95,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,113,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,137,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,155,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,179,* </p>
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,196,* </p>
False,src/java/org/apache/commons/math/util/ContinuedFraction.java,src/java/org/apache/commons/math/util/ContinuedFraction.java,122, are scaled whenever they threaten to become numerically unstable.
True,src/java/org/apache/commons/math/util/ContinuedFraction.java,src/java/org/apache/commons/math/util/ContinuedFraction.java,122,* are scaled whenever they threaten to become numerically unstable.</p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,148, </ul>
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,148,* </ul></p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,196, </ul>
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,196,* </ul></p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,218, </ul>
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,218,* </ul></p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,343, </ul>
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,343,* </ul></p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,618, strictly less than <code>d</code> is returned.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,618,* strictly less than <code>d</code> is returned.</p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,620," If <code>d</code> is NaN or Infinite, it is returned unchanged."
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,620,"* If <code>d</code> is NaN or Infinite, it is returned unchanged.</p>"
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,826," x = 0, and (byte)(-1) if x < 0."
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,826,"* x = 0, and (byte)(-1) if x < 0.</p>"
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,842, Returns <code>NaN</code> if <code>x</code> is <code>NaN</code>.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,842,* Returns <code>NaN</code> if <code>x</code> is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,860, is <code>NaN</code>.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,860,* is <code>NaN</code>.</p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,877, if x < 0.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,877,* if x < 0.</p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,891, -1L if x < 0.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,891,* -1L if x < 0.</p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,905," if x = 0, and (short)(-1) if x < 0."
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,905,"* if x = 0, and (short)(-1) if x < 0.</p>"
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,69, <p>
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,397,* </p>
