is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,54,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,56,public abstract UnivariateStatistic copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,115,* Copy constructor.  Construct a new DescriptiveStatistics instance that
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,116,* is a copy of original.
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,118,* @param original DescriptiveStatistics instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,120,public DescriptiveStatistics(DescriptiveStatistics original) {
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,121,"copy(original, this);"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,172, or if the productof the available values is less than or equal to 0.
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,182,* or if the product of the available values is less than or equal to 0.
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,666,* Returns a copy of this DescriptiveStatistics instance with the same internal state.
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,668,* @return a copy of this
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,670,public DescriptiveStatistics copy() {
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,671,DescriptiveStatistics result = new DescriptiveStatistics();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,672,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,673,return result;
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,677,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,678,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,680,* @param source DescriptiveStatistics to copy
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,681,* @param dest DescriptiveStatistics to copy to
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,682,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,684,"public static void copy(DescriptiveStatistics source, DescriptiveStatistics dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,685,// Copy data and window size
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,686,dest.eDA = source.eDA.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,687,dest.windowSize = source.windowSize;
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,689,// Copy implementations
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,690,dest.maxImpl = source.maxImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,691,dest.meanImpl = source.meanImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,692,dest.minImpl = source.minImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,693,dest.sumImpl = source.sumImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,694,dest.varianceImpl = source.varianceImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,695,dest.sumsqImpl = source.sumsqImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,696,dest.geometricMeanImpl = source.geometricMeanImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,697,dest.kurtosisImpl = source.kurtosisImpl;
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,698,dest.skewnessImpl = source.skewnessImpl;
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,699,dest.percentileImpl = source.percentileImpl;
True,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,80,* Returns a copy of the statistic with the same internal state.
True,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,82,* @return a copy of the statistic
True,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java,84,StorelessUnivariateStatistic copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,69,* A copy constructor. Creates a deep-copy of the {@code original}.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,71,* @param original the {@code SummaryStatistics} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,73,public SummaryStatistics(SummaryStatistics original) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,74,"copy(original, this);"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,128,"eturn new StatisticalSummaryValues(getMean(), getVariance(), getN(), getMax(), getMin(), getSum());"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,137,"return new StatisticalSummaryValues(getMean(), getVariance(), getN(),"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,138,"getMax(), getMin(), getSum());"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,619,* Returns a copy of this SummaryStatistics instance with the same internal state.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,621,* @return a copy of this
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,623,public SummaryStatistics copy() {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,624,SummaryStatistics result = new SummaryStatistics();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,625,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,626,return result;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,630,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,631,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,633,* @param source SummaryStatistics to copy
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,634,* @param dest SummaryStatistics to copy to
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,635,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,637,"public static void copy(SummaryStatistics source, SummaryStatistics dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,638,dest.maxImpl = source.maxImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,639,dest.meanImpl = source.meanImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,640,dest.minImpl = source.minImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,641,dest.sumImpl = source.sumImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,642,dest.varianceImpl = source.varianceImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,643,dest.sumLogImpl = source.sumLogImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,644,dest.sumsqImpl = source.sumsqImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,645,if (source.getGeoMeanImpl() instanceof GeometricMean) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,646,"// Keep geoMeanImpl, sumLogImpl in synch"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,647,dest.geoMeanImpl = new GeometricMean((SumOfLogs) dest.sumLogImpl);
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,648,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,649,dest.geoMeanImpl = source.geoMeanImpl.copy();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,651,"SecondMoment.copy(source.secondMoment, dest.secondMoment);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,652,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,654,"// Make sure that if stat == statImpl in source, same"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,655,// holds in dest; otherwise copy stat
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,656,if (source.geoMean == source.geoMeanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,657,dest.geoMean = (GeometricMean) dest.geoMeanImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,658,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,659,"GeometricMean.copy(source.geoMean, dest.geoMean);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,661,if (source.max == source.maxImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,662,dest.max = (Max) dest.maxImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,663,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,664,"Max.copy(source.max, dest.max);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,666,if (source.mean == source.meanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,667,dest.mean = (Mean) dest.meanImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,668,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,669,"Mean.copy(source.mean, dest.mean);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,671,if (source.min == source.minImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,672,dest.min = (Min) dest.minImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,673,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,674,"Min.copy(source.min, dest.min);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,676,if (source.sum == source.sumImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,677,dest.sum = (Sum) dest.sumImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,678,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,679,"Sum.copy(source.sum, dest.sum);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,681,if (source.variance == source.varianceImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,682,dest.variance = (Variance) dest.varianceImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,683,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,684,"Variance.copy(source.variance, dest.variance);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,686,if (source.sumLog == source.sumLogImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,687,dest.sumLog = (SumOfLogs) dest.sumLogImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,688,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,689,"SumOfLogs.copy(source.sumLog, dest.sumLog);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,691,if (source.sumsq == source.sumsqImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,692,dest.sumsq = (SumOfSquares) dest.sumsqImpl;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,693,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,694,"SumOfSquares.copy(source.sumsq, dest.sumsq);"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,53,* A copy constructor. Creates a deep-copy of the {@code original}.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,55,* @param original the {@code SynchronizedDescriptiveStatistics} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,57,public SynchronizedDescriptiveStatistics(SynchronizedDescriptiveStatistics original) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,58,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,141,* Returns a copy of this SynchronizedDescriptiveStatistics instance with the
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,142,* same internal state.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,144,* @return a copy of this
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,146,public synchronized SynchronizedDescriptiveStatistics copy() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,147,SynchronizedDescriptiveStatistics result =
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,148,new SynchronizedDescriptiveStatistics();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,149,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,150,return result;
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,154,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,155,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,156,"* <p>Acquires synchronization lock on source, then dest before copying.</p>"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,158,* @param source SynchronizedDescriptiveStatistics to copy
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,159,* @param dest SynchronizedDescriptiveStatistics to copy to
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,160,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,162,"public static void copy(SynchronizedDescriptiveStatistics source,"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,163,SynchronizedDescriptiveStatistics dest) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,164,synchronized (source) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,165,synchronized (dest) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,166,"DescriptiveStatistics.copy(source, dest);"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,45,* A copy constructor. Creates a deep-copy of the {@code original}.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,47,* @param original the {@code SynchronizedSummaryStatistics} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,49,public SynchronizedSummaryStatistics(SynchronizedSummaryStatistics original) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,50,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,271,* Returns a copy of this SynchronizedSummaryStatistics instance with the
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,272,* same internal state.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,274,* @return a copy of this
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,276,public synchronized SynchronizedSummaryStatistics copy() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,277,SynchronizedSummaryStatistics result =
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,278,new SynchronizedSummaryStatistics();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,279,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,280,return result;
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,284,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,285,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,286,"* <p>Acquires synchronization lock on source, then dest before copying.</p>"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,288,* @param source SynchronizedSummaryStatistics to copy
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,289,* @param dest SynchronizedSummaryStatistics to copy to
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,290,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,292,"public static void copy(SynchronizedSummaryStatistics source,"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,293,SynchronizedSummaryStatistics dest) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,294,synchronized (source) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,295,synchronized (dest) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,296,"SummaryStatistics.copy(source, dest);"
False,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,22, Base evaluation interface implemented by all statistics.
False,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,23, <p>
False,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,24," Includes ""stateless"" <code>evaluate</code> methods that take"
False,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,25, <code>double[]</code> arrays as input and return the value of the statistic
False,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,26, applied to the input values.</p>
True,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,22,* Base interface implemented by all statistics.
True,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,48,* Returns a copy of the statistic with the same internal state.
True,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,50,* @return a copy of the statistic
True,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java,52,UnivariateStatistic copy();
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,83,"* Copy constructor, creates a new {@code FirstMoment} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,84,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,86,* @param original the {@code FirstMoment} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,88,public FirstMoment(FirstMoment original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,89,super();
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,90,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,133,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,135,public FirstMoment copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,136,FirstMoment result = new FirstMoment();
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,137,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,138,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,142,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,143,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,145,* @param source FirstMoment to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,146,* @param dest FirstMoment to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,147,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,149,"public static void copy(FirstMoment source, FirstMoment dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,150,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,151,dest.m1 = source.m1;
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,152,dest.dev = source.dev;
True,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,153,dest.nDev = dest.nDev;
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,70,"* Copy constructor, creates a new {@code FourthMoment} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,71,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,73,* @param original the {@code FourthMoment} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,75,public FourthMoment(FourthMoment original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,76,super();
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,77,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,118,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,120,public FourthMoment copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,121,FourthMoment result = new FourthMoment();
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,122,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,123,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,127,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,128,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,130,* @param source FourthMoment to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,131,* @param dest FourthMoment to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,132,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,134,"public static void copy(FourthMoment source, FourthMoment dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,135,"ThirdMoment.copy(source, dest);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,136,dest.m4 = source.m4;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,64,"* Copy constructor, creates a new {@code GeometricMean} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,65,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,67,* @param original the {@code GeometricMean} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,69,public GeometricMean(GeometricMean original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,70,super();
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,71,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,75,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,77,public GeometricMean copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,78,GeometricMean result = new GeometricMean();
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,79,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,80,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,172,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,173,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,175,* @param source GeometricMean to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,176,* @param dest GeometricMean to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,177,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,179,"public static void copy(GeometricMean source, GeometricMean dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,180,dest.sumOfLogs = (SumOfLogs) source.sumOfLogs.copy();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,78,"* Copy constructor, creates a new {@code Kurtosis} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,79,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,81,* @param original the {@code Kurtosis} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,83,public Kurtosis(Kurtosis original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,84,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,193,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,195,public Kurtosis copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,196,Kurtosis result = new Kurtosis();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,197,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,198,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,202,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,203,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,205,* @param source Kurtosis to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,206,* @param dest Kurtosis to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,207,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,209,"public static void copy(Kurtosis source, Kurtosis dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,210,dest.moment = (FourthMoment) source.moment.copy();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,211,dest.incMoment = source.incMoment;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,92,"* Copy constructor, creates a new {@code Mean} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,93,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,95,* @param original the {@code Mean} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,97,public Mean(Mean original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,98,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,169,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,171,public Mean copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,172,Mean result = new Mean();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,173,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,174,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,179,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,180,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,182,* @param source Mean to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,183,* @param dest Mean to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,184,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,186,"public static void copy(Mean source, Mean dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,187,dest.incMoment = source.incMoment;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,188,dest.moment = (FirstMoment) source.moment.copy();
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,62,"* Copy constructor, creates a new {@code SecondMoment} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,63,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,65,* @param original the {@code SecondMoment} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,67,public SecondMoment(SecondMoment original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,68,super(original);
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,69,this.m2 = original.m2;
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,99,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,101,public SecondMoment copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,102,SecondMoment result = new SecondMoment();
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,103,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,104,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,108,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,109,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,111,* @param source SecondMoment to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,112,* @param dest SecondMoment to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,113,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,115,"public static void copy(SecondMoment source, SecondMoment dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,116,"FirstMoment.copy(source, dest);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,117,dest.m2 = source.m2;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,74,"* Copy constructor, creates a new {@code Skewness} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,75,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,77,* @param original the {@code Skewness} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,79,public Skewness(Skewness original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,80,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,185,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,187,public Skewness copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,188,Skewness result = new Skewness();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,189,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,190,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,194,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,195,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,197,* @param source Skewness to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,198,* @param dest Skewness to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,199,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,201,"public static void copy(Skewness source, Skewness dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,202,dest.moment = new ThirdMoment((ThirdMoment) source.moment.copy());
True,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,203,dest.incMoment = source.incMoment;
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,67,"* Copy constructor, creates a new {@code StandardDeviation} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,68,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,70,* @param original the {@code StandardDeviation} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,72,public StandardDeviation(StandardDeviation original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,73,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,243,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,245,public StandardDeviation copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,246,StandardDeviation result = new StandardDeviation();
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,247,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,248,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,253,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,254,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,256,* @param source StandardDeviation to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,257,* @param dest StandardDeviation to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,258,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,260,"public static void copy(StandardDeviation source, StandardDeviation dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,261,dest.variance = (Variance) source.variance.copy();
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,72,"* Copy constructor, creates a new {@code ThirdMoment} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,73,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,75,* @param original the {@code ThirdMoment} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,77,public ThirdMoment(ThirdMoment original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,78,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,113,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,115,public ThirdMoment copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,116,ThirdMoment result = new ThirdMoment();
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,117,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,118,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,122,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,123,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,125,* @param source ThirdMoment to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,126,* @param dest ThirdMoment to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,127,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,129,"public static void copy(ThirdMoment source, ThirdMoment dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,130,"SecondMoment.copy(source, dest);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,131,dest.m3 = source.m3;
True,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,132,dest.nDevSq = source.nDevSq;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,135,"* Copy constructor, creates a new {@code Variance} identical"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,136,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,138,* @param original the {@code Variance} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,140,public Variance(Variance original) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,141,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,350,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,352,public Variance copy() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,353,Variance result = new Variance();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,354,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,355,return result;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,360,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,361,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,363,* @param source Variance to copy
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,364,* @param dest Variance to copy to
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,365,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,367,"public static void copy(Variance source, Variance dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,368,dest.moment = (SecondMoment) source.moment.copy();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,369,dest.isBiasCorrected = source.isBiasCorrected;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,370,dest.incMoment = source.incMoment;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,58,"* Copy constructor, creates a new {@code Max} identical"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,59,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,61,* @param original the {@code Max} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,63,public Max(Max original) {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,64,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,136,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,138,public Max copy() {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,139,Max result = new Max();
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,140,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,141,return result;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,145,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,146,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,148,* @param source Max to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,149,* @param dest Max to copy to
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,150,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,152,"public static void copy(Max source, Max dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,153,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/java/org/apache/commons/math/stat/descriptive/rank/Max.java,154,dest.value = source.value;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,46,"* Copy constructor, creates a new {@code Median} identical"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,47,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,49,* @param original the {@code Median} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,51,public Median(Median original) {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,src/java/org/apache/commons/math/stat/descriptive/rank/Median.java,52,super(original);
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,60,"* Copy constructor, creates a new {@code Min} identical"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,61,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,63,* @param original the {@code Min} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,65,public Min(Min original) {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,66,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,138,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,140,public Min copy() {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,141,Min result = new Min();
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,142,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,143,return result;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,147,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,148,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,150,* @param source Min to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,151,* @param dest Min to copy to
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,152,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,154,"public static void copy(Min source, Min dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,155,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/java/org/apache/commons/math/stat/descriptive/rank/Min.java,156,dest.value = source.value;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,94,"* Copy constructor, creates a new {@code Percentile} identical"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,95,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,97,* @param original the {@code Percentile} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,99,public Percentile(Percentile original) {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,100,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,252,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,254,public Percentile copy() {
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,255,Percentile result = new Percentile();
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,256,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,257,return result;
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,261,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,262,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,264,* @param source Percentile to copy
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,265,* @param dest Percentile to copy to
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,266,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,268,"public static void copy(Percentile source, Percentile dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,269,dest.quantile = source.quantile;
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,58,"* Copy constructor, creates a new {@code Product} identical"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,59,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,61,* @param original the {@code Product} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,63,public Product(Product original) {
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,64,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,127,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,129,public Product copy() {
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,130,Product result = new Product();
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,131,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,132,return result;
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,136,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,137,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,139,* @param source Product to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,140,* @param dest Product to copy to
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,141,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,143,"public static void copy(Product source, Product dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,144,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/java/org/apache/commons/math/stat/descriptive/summary/Product.java,145,dest.value = source.value;
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,58,"* Copy constructor, creates a new {@code Sum} identical"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,59,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,61,* @param original the {@code Sum} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,63,public Sum(Sum original) {
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,64,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,127,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,129,public Sum copy() {
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,130,Sum result = new Sum();
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,131,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,132,return result;
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,136,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,137,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,139,* @param source Sum to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,140,* @param dest Sum to copy to
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,141,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,143,"public static void copy(Sum source, Sum dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,144,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,145,dest.value = source.value;
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,66,"* Copy constructor, creates a new {@code SumOfLogs} identical"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,67,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,69,* @param original the {@code SumOfLogs} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,71,public SumOfLogs(SumOfLogs original) {
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,72,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,139,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,141,public SumOfLogs copy() {
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,142,SumOfLogs result = new SumOfLogs();
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,143,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,144,return result;
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,148,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,149,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,151,* @param source SumOfLogs to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,152,* @param dest SumOfLogs to copy to
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,153,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,155,"public static void copy(SumOfLogs source, SumOfLogs dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,156,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,157,dest.value = source.value;
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,58,"* Copy constructor, creates a new {@code SumOfSquares} identical"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,59,* to the {@code original}
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,61,* @param original the {@code SumOfSquares} instance to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,63,public SumOfSquares(SumOfSquares original) {
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,64,"copy(original, this);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,127,* {@inheritDoc}
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,129,public SumOfSquares copy() {
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,130,SumOfSquares result = new SumOfSquares();
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,131,"copy(this, result);"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,132,return result;
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,136,* Copies source to dest.
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,137,* <p>Neither source nor dest can be null.</p>
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,139,* @param source SumOfSquares to copy
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,140,* @param dest SumOfSquares to copy to
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,141,* @throws NullPointerException if either source or dest is null
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,143,"public static void copy(SumOfSquares source, SumOfSquares dest) {"
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,144,dest.n = source.n;
True,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,145,dest.value = source.value;
False,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,41,rotected DescriptiveStatistics createDescriptiveStatistics() {
False,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,42,eturn new DescriptiveStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,119,public UnivariateStatistic copy() {
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,120,return new deepMean();
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,139,public UnivariateStatistic copy() {
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,140,goodPercentile result = new goodPercentile();
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,141,result.setQuantile(percentile.getQuantile());
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,142,return result;
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,158,public Percentile copy() {
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,159,subPercentile result = new subPercentile();
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,160,return result;
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,176,public UnivariateStatistic copy() {
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,177,return new badPercentile();
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,181,"private void checkSameResults(DescriptiveStatistics first,"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,182,DescriptiveStatistics second) throws Exception {
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,183,"assertEquals(first.getGeometricMean(), second.getGeometricMean(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,184,"assertEquals(first.getKurtosis(), second.getKurtosis(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,185,"assertEquals(first.getMax(), second.getMax(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,186,"assertEquals(first.getMean(), second.getMean(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,187,"assertEquals(first.getMin(), second.getMin(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,188,"assertEquals(first.getN(), second.getN(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,189,"assertEquals(first.getPercentile(10), second.getPercentile(10), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,190,"assertEquals(first.getSkewness(), second.getSkewness(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,191,"assertEquals(first.getStandardDeviation(),"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,192,"second.getStandardDeviation(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,193,"assertEquals(first.getSum(), second.getSum(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,194,"assertEquals(first.getSumsq(), second.getSumsq(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,195,"assertEquals(first.getVariance(), second.getVariance(), 0);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,196,"assertEquals(first.eDA, second.eDA);"
True,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java,197,"assertEquals(first.getWindowSize(), second.getWindowSize());"
True,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,116,public StorelessUnivariateStatistic copy() {
True,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,117,return new sumMean();
False,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,42,** Verify that calling increment() in a loop over testArray results in correct state */
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,43,*  Verifies that increment() and incrementAll work properly.
False,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,48,tatistic.clear();
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,50,// Add testArray one value at a time and check result
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,60,// Add testArray all at once and check again
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,61,statistic.incrementAll(testArray);
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,62,"assertEquals(expectedValue(), statistic.getResult(), getTolerance());"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,63,"assertEquals(testArray.length, statistic.getN());"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,65,statistic.clear();
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,67,// Cleared
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,172,* Verifies that copied statistics remain equal to originals when
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,173,* incremented the same way.
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,176,public void testCopyConsistency() {
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,178,StorelessUnivariateStatistic master =
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,179,(StorelessUnivariateStatistic) getUnivariateStatistic();
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,181,StorelessUnivariateStatistic replica = null;
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,183,// Randomly select a portion of testArray to load first
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,184,long index = Math.round((Math.random()) * (double) testArray.length);
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,186,// Put first half in master and copy master to replica
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,187,"master.incrementAll(testArray, 0, (int) index);"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,188,replica = (StorelessUnivariateStatistic) master.copy();
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,190,// Check same
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,191,assertTrue(replica.equals(master));
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,192,assertTrue(master.equals(replica));
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,194,// Now add second part to both and check again
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,195,"master.incrementAll(testArray,"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,196,"(int) index, (int) (testArray.length - index));"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,197,"replica.incrementAll(testArray,"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,198,"(int) index, (int) (testArray.length - index));"
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,199,assertTrue(replica.equals(master));
True,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,200,assertTrue(master.equals(replica));
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,230,public void testCopy() throws Exception {
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,231,SummaryStatistics u = createSummaryStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,232,u.addValue(2d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,233,u.addValue(1d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,234,u.addValue(3d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,235,u.addValue(4d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,236,SummaryStatistics v = new SummaryStatistics(u);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,237,"assertEquals(u, v);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,238,"assertEquals(v, u);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,239,assertTrue(v.geoMean == v.getGeoMeanImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,240,assertTrue(v.mean == v.getMeanImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,241,assertTrue(v.min == v.getMinImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,242,assertTrue(v.max == v.getMaxImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,243,assertTrue(v.sum == v.getSumImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,244,assertTrue(v.sumsq == v.getSumsqImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,245,assertTrue(v.sumLog == v.getSumLogImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,246,assertTrue(v.variance == v.getVarianceImpl());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,248,// Make sure both behave the same with additional values added
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,249,u.addValue(7d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,250,u.addValue(9d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,251,u.addValue(11d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,252,u.addValue(23d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,253,v.addValue(7d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,254,v.addValue(9d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,255,v.addValue(11d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,256,v.addValue(23d);
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,257,"assertEquals(u, v);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,258,"assertEquals(v, u);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,260,// Check implementation pointers are preserved
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,261,u.clear();
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,262,u.setSumImpl(new Sum());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,263,"SummaryStatistics.copy(u,v);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,264,"assertEquals(u.sum, v.sum);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,265,"assertEquals(u.getSumImpl(), v.getSumImpl());"
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,75,public void testCopy() throws Exception {
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,76,UnivariateStatistic original = getUnivariateStatistic();
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,77,UnivariateStatistic copy = original.copy();
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,78,assertEquals(
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,79,"expectedValue(),"
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,80,"copy.evaluate(testArray),"
True,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/UnivariateStatisticAbstractTest.java,81,getTolerance());
