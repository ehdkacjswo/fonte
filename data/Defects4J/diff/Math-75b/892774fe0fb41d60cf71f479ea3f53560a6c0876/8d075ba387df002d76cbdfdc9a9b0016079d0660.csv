is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,26, @version $Revision: 1.12 $ $Date: 2004/06/17 21:37:05 $
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,26,* @version $Revision: 1.13 $ $Date: 2004/06/29 06:07:10 $
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,63,public void testSpecialValues() {
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,64,Product product = new Product();
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,65,assertTrue(Double.isNaN(product.getResult()));
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,66,product.increment(1);
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,67,"assertEquals(1, product.getResult(), 0);"
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,68,product.increment(Double.POSITIVE_INFINITY);
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,69,"assertEquals(Double.POSITIVE_INFINITY, product.getResult(), 0);"
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,70,product.increment(Double.NEGATIVE_INFINITY);
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,71,"assertEquals(Double.NEGATIVE_INFINITY, product.getResult(), 0);"
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,72,product.increment(Double.NaN);
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,73,assertTrue(Double.isNaN(product.getResult()));
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,74,product.increment(1);
True,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,src/test/org/apache/commons/math/stat/univariate/summary/ProductTest.java,75,assertTrue(Double.isNaN(product.getResult()));
