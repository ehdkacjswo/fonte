is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,57, <p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,60, </p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,62, <p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,63, Reference:<br/>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,64," <a href=""http://mathworld.wolfram.com/ContinuedFraction.html"">"
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,65, Continued Fraction</a>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,66, </p>
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,60,* References:
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,61,* <ul>
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,62,"* <li><a href=""http://mathworld.wolfram.com/ContinuedFraction.html"">"
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,63,* Continued Fraction</a></li>
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,64,* </ul>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,129, <p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,131, </p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,133, <p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,141, </p>
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,191,f(Math.abs((f[0][0] * f[1][1]) - (f[1][0] * f[0][1])) <
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,192,ath.abs(epsilon * f[1][0] * f[1][1])){
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,185,if (Math.abs((f[0][0] * f[1][1]) - (f[1][0] * f[0][1])) <
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,186,Math.abs(epsilon * f[1][0] * f[1][1])) {
False,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,195,f(n >= maxIterations){
True,src/java/org/apache/commons/math/ContinuedFraction.java,src/java/org/apache/commons/math/ContinuedFraction.java,189,if (n >= maxIterations) {
False,src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,97,f (p < 0.0 || p > 1.0){
True,src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,97,if (p < 0.0 || p > 1.0) {
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,57, <p>
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,58, The Chi-Squared Distribution
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,59, </p>
True,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,57,* The Chi-Squared Distribution.
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,61, <p>
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,63, {@link DistributionFactory#createChiSquareDistribution(double)}
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,64, </p>
True,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,60,* {@link DistributionFactory#createChiSquareDistribution(double)}.
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,66, <p>
False,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,71, </p>
True,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,66,* </ul>
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,57, <p>
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,66, </p>
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,68, <p>
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,75, </p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,57, <p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,58, The Exponential Distribution
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,59, </p>
True,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,57,* The Exponential Distribution.
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,61, <p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,63, {@link DistributionFactory#createExponentialDistribution(double)}
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,64, </p>
True,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,60,* {@link DistributionFactory#createExponentialDistribution(double)}.
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,66, <p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/java/org/apache/commons/math/distribution/ExponentialDistribution.java,71, </p>
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,5,* reserved.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,9,* are met:
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,17,*    distribution.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,52,* <http://www.apache.org/>.
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,9,mplements ExponentialDistribution {
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,62,implements ExponentialDistribution {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,16, @param degreesOfFreedom degrees of freedom.
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,69,* @param mean mean of this distribution.
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,18,ublic ExponentialDistributionImpl(double mean) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,19,uper();
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,71,public ExponentialDistributionImpl(double mean) {
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,72,super();
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,27,ublic void setMean(double mean) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,28,f(mean <= 0.0){
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,80,public void setMean(double mean) {
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,81,if (mean <= 0.0) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,38,ublic double getMean() {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,39,eturn mean;
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,91,public double getMean() {
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,92,return mean;
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,43, <p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,45, </p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,47, <p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,54, </p>
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,59,ublic double cummulativeProbability(double x) {
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,108,public double cummulativeProbability(double x) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,61,f(x <= 0.0){
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,110,if (x <= 0.0) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,63, else {
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,112,} else {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,76,ublic double inverseCummulativeProbability(double p){
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,125,public double inverseCummulativeProbability(double p) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,79,f(p < 0.0 || p > 1.0){
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,128,if (p < 0.0 || p > 1.0) {
False,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,81, else if(p == 1.0){
True,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,130,} else if (p == 1.0) {
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,57, <p>
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,59, </p>
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,61, <p>
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,63," {@link DistributionFactory#createFDistribution(double,double)}"
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,64, </p>
True,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,60,"* {@link DistributionFactory#createFDistribution(double,double)}."
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,66, <p>
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,67, Reference:<br/>
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,68," <a href=""http://mathworld.wolfram.com/F-Distribution.html"">"
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,69, F-Distribution</a>
False,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,70, </p>
True,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,62,* References:
True,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,63,* <ul>
True,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,64,"* <li><a href=""http://mathworld.wolfram.com/F-Distribution.html"">"
True,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,65,* F-Distribution</a></li>
True,src/java/org/apache/commons/math/distribution/FDistribution.java,src/java/org/apache/commons/math/distribution/FDistribution.java,66,* </ul>
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,60, {@link org.apache.commons.math.stat.distribution.TDistribution}.
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,60,* {@link org.apache.commons.math.stat.distribution.FDistribution}.
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,76, @param numeratorDegreesOfFreedom the degrees of freedom.
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,77, @param denominatorDegreesOfFreedom
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,76,* @param numeratorDegreesOfFreedom the numerator degrees of freedom.
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,77,* @param denominatorDegreesOfFreedom the denominator degrees of freedom.
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,80,ouble denominatorDegreesOfFreedom){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,80,double denominatorDegreesOfFreedom) {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,87, <p>
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,89, </p>
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,91, <p>
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,97, </p>
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,94,* </ul>
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,104,f(x <= 0.0){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,101,if (x <= 0.0) {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,126,rotected double getDomainLowerBound(double p){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,123,protected double getDomainLowerBound(double p) {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,139,rotected double getDomainUpperBound(double p){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,136,protected double getDomainUpperBound(double p) {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,151,rotected double getInitialDomain(double p){
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,152,eturn getDenominatorDegreesOfFreedom() / (getDenominatorDegreesOfFreedom() - 2.0);
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,148,protected double getInitialDomain(double p) {
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,149,return getDenominatorDegreesOfFreedom() /
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,150,(getDenominatorDegreesOfFreedom() - 2.0);
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,159,ublic void setNumeratorDegreesOfFreedom(double degreesOfFreedom){
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,160,f(degreesOfFreedom <= 0.0){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,157,public void setNumeratorDegreesOfFreedom(double degreesOfFreedom) {
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,158,if (degreesOfFreedom <= 0.0) {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,171,ublic double getNumeratorDegreesOfFreedom(){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,169,public double getNumeratorDegreesOfFreedom() {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,179,ublic void setDenominatorDegreesOfFreedom(double degreesOfFreedom){
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,180,f(degreesOfFreedom <= 0.0){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,177,public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) {
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,178,if (degreesOfFreedom <= 0.0) {
False,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,191,ublic double getDenominatorDegreesOfFreedom(){
True,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/java/org/apache/commons/math/distribution/FDistributionImpl.java,189,public double getDenominatorDegreesOfFreedom() {
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,57, <p>
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,58, The Gamma Distribution
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,59, </p>
True,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,57,* The Gamma Distribution.
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,61, <p>
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,63," {@link DistributionFactory#createGammaDistribution(double,double)}"
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,64, </p>
True,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,60,"* {@link DistributionFactory#createGammaDistribution(double,double)}."
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,66, <p>
False,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,71, </p>
True,src/java/org/apache/commons/math/distribution/GammaDistribution.java,src/java/org/apache/commons/math/distribution/GammaDistribution.java,66,* </ul>
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,84, <p>
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,86, </p>
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,88, <p>
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,97, </p>
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,182,f(p < .5){
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,178,if (p < .5) {
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,208,f(p < .5){
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,204,if (p < .5) {
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,57, <p>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,59, </p>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,61, <p>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,64, </p>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,66, <p>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,67, Reference:<br/>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,68," <a href=""http://mathworld.wolfram.com/Studentst-Distribution.html"">"
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,69, Student's t-Distribution</a>
False,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,70, </p>
True,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,62,* References:
True,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,63,* <ul>
True,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,64,"* <li><a href=""http://mathworld.wolfram.com/Studentst-Distribution.html"">"
True,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,65,* Student's t-Distribution</a></li>
True,src/java/org/apache/commons/math/distribution/TDistribution.java,src/java/org/apache/commons/math/distribution/TDistribution.java,66,* </ul>
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,75,ublic TDistributionImpl(double degreesOfFreedom){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,75,public TDistributionImpl(double degreesOfFreedom) {
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,85,f(degreesOfFreedom <= 0.0){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,85,if (degreesOfFreedom <= 0.0) {
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,107,f(x == 0.0){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,107,if (x == 0.0) {
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,114,f(x < 0.0){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,114,if (x < 0.0) {
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,133,rotected double getDomainLowerBound(double p){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,133,protected double getDomainLowerBound(double p) {
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,146,rotected double getDomainUpperBound(double p){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,146,protected double getDomainUpperBound(double p) {
False,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,158,rotected double getInitialDomain(double p){
True,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/java/org/apache/commons/math/distribution/TDistributionImpl.java,158,protected double getInitialDomain(double p) {
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,76, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,78, </p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,90, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,92, </p>
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,93,* @param epsilon When the absolute value of the nth item in the
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,94,*                series is less than epsilon the approximation ceases
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,95,*                to calculate further elements in the series.
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,99,"ublic static double regularizedBeta(double x, double a, double b, double epsilon) {"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,98,"public static double regularizedBeta(double x, double a, double b,"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,99,double epsilon) {
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,104, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,106, </p>
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,110,"* @param maxIterations Maximum number of ""iterations"" to complete."
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,113,"ublic static double regularizedBeta(double x, double a, double b, int maxIterations) {"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,113,"public static double regularizedBeta(double x, double a, double b,"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,114,int maxIterations) {
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,118, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,120, </p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,122, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,132, </p>
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,135,* @param epsilon When the absolute value of the nth item in the
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,136,*                series is less than epsilon the approximation ceases
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,137,*                to calculate further elements in the series.
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,138,"* @param maxIterations Maximum number of ""iterations"" to complete."
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,139,"ublic static double regularizedBeta(double x, final double a, final double b, double epsilon, int maxIterations) {"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,141,"public static double regularizedBeta(double x, final double a,"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,142,"final double b, double epsilon, int maxIterations) {"
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,158, ((a + m) * (a + b + m) * x)
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,159, ((a + (2 * m)) * (a + (2 * m) + 1.0));
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,162,-((a + m) * (a + b + m) * x)
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,163,/ ((a + (2 * m))
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,164,* (a + (2 * m) + 1.0));
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,184,"et = Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) - Math.log(a) - logBeta(a, b, epsilon, maxIterations)) * fraction.evaluate(x, epsilon, maxIterations);"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,189,ret = Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x))
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,190,"- Math.log(a) - logBeta(a, b, epsilon, maxIterations))"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,191,"* fraction.evaluate(x, epsilon, maxIterations);"
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,191, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,193, </p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,204, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,206, </p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,208, <p>
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,214, </p>
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,219,* @param epsilon When the absolute value of the nth item in the
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,220,*                series is less than epsilon the approximation ceases
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,221,*                to calculate further elements in the series.
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,222,"* @param maxIterations Maximum number of ""iterations"" to complete."
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,220,"ublic static double logBeta(double a, double b, double epsilon, int maxIterations) {"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,225,"public static double logBeta(double a, double b, double epsilon,"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,226,int maxIterations) {
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,97, <p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,99, </p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,110, <p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,112, </p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,114, <p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,128, </p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,176, <p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,178, </p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,180, <p>
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,191, </p>
