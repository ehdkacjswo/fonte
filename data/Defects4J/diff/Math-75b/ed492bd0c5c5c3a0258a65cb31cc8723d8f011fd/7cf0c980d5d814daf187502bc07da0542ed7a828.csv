is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,29, @version $Revision$ $Date$
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,29,"* @version $Revision:670469 $ $Date:2008-06-23 10:01:38 +0200 (lun., 23 juin 2008) $"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,131,double ret = Double.NaN;
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,135,f (yMin * yMax >= 0) {
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,136,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,137,"""Function values at endpoints do not have different signs."" +"
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,138,"  Endpoints: ["" + min + "","" + max + ""]"" +"
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,139,"  Values: ["" + yMin + "","" + yMax + ""]"");"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,137,double sign = yMin * yMax;
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,138,if (sign > 0) {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,139,// check if either value is close to a zero
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,140,if (Math.abs(yMin) <= functionValueAccuracy) {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,141,"setResult(min, 0);"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,142,ret = min;
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,143,} else if (Math.abs(yMax) <= functionValueAccuracy) {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,144,"setResult(max, 0);"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,145,ret = max;
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,146,} else {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,147,// neither value is close to zero and min and max do not bracket root.
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,148,throw new IllegalArgumentException
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,149,"(""Function values at endpoints do not have different signs."" +"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,150,"""  Endpoints: ["" + min + "","" + max + ""]"" +"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,151,"""  Values: ["" + yMin + "","" + yMax + ""]"");"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,153,} else if (sign < 0){
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,154,// solve using only the first endpoint as initial guess
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,155,"ret = solve(min, yMin, max, yMax, min, yMin);"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,156,} else {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,157,// either min or max is a root
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,158,if (yMin == 0.0) {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,159,ret = min;
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,160,} else {
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,161,ret = max;
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,142,/ solve using only the first endpoint as initial guess
False,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,143,"eturn solve(min, yMin, max, yMax, min, yMin);"
True,src/java/org/apache/commons/math/analysis/BrentSolver.java,src/java/org/apache/commons/math/analysis/BrentSolver.java,165,return ret;
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,37, @version $Revision$ $Date$
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,37,"* @version $Revision:670469 $ $Date:2008-06-23 10:01:38 +0200 (lun., 23 juin 2008) $"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,56,                        \Sigma_{k=0}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,56,*                        \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,74,                        \Sigma_{k=0}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,74,*                        \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,97,                        \sqrt{2/N} \Sigma_{k=0}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,97,*                        \sqrt{2/N} \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,116,                        \sqrt{2/N} \Sigma_{k=0}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,116,*                        \sqrt{2/N} \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,141,                        (2/N) \Sigma_{n=0}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,141,*                        (2/N) \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,160,                        (2/N) \Sigma_{n=0}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,160,*                        (2/N) \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,184,                        \sqrt{2/N} \Sigma_{n=0}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,184,*                        \sqrt{2/N} \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,202,                        \sqrt{2/N} \Sigma_{n=0}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,202,*                        \sqrt{2/N} \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
False,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,34, @version $Revision$ $Date$
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,34,"* @version $Revision:670469 $ $Date:2008-06-23 10:01:38 +0200 (lun., 23 juin 2008) $"
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,271,public void testRootEndpoints() throws Exception {
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,272,UnivariateRealFunction f = new SinFunction();
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,273,UnivariateRealSolver solver = new BrentSolver(f);
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,275,// endpoint is root
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,276,"double result = solver.solve(Math.PI, 4);"
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,277,"assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,279,"result = solver.solve(3, Math.PI);"
True,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,src/test/org/apache/commons/math/analysis/BrentSolverTest.java,280,"assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
