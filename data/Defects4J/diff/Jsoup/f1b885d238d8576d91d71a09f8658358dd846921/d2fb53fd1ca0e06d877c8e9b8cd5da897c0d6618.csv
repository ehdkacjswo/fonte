is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,20,mport java.io.RandomAccessFile;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,190,tatic ByteBuffer readToByteBuffer(InputStream inStream) throws IOException {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,191,"eturn readToByteBuffer(inStream, 0);"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,194,tatic ByteBuffer readFileToByteBuffer(File file) throws IOException {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,195,andomAccessFile randomAccessFile = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,196,ry {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,197,"andomAccessFile = new RandomAccessFile(file, ""r"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,198,yte[] bytes = new byte[(int) randomAccessFile.length()];
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,199,andomAccessFile.readFully(bytes);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,200,eturn ByteBuffer.wrap(bytes);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,201, finally {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,202,f (randomAccessFile != null)
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,203,andomAccessFile.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,12,mport javax.net.ssl.HostnameVerifier;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,14,mport javax.net.ssl.SSLSession;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,545,rivate boolean validateTSLCertificates = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,607,ublic boolean validateTLSCertificates() {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,608,eturn validateTSLCertificates;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,611,ublic void validateTLSCertificates(boolean value) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,612,alidateTSLCertificates = value;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,680,rivate static SSLSocketFactory sslSocketFactory;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,937, Instantiate Hostname Verifier that does nothing.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,938, This is used for connections with disabled SSL certificates validation.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,940, @return Hostname Verifier that does nothing and accepts all hostnames
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,942,rivate static HostnameVerifier getInsecureVerifier() {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,943,eturn new HostnameVerifier() {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,944,"ublic boolean verify(String urlHostName, SSLSession session) {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,945,eturn true;
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,80,"ecl = new XmlDeclaration(doc.getParser().settings().normalizeTag(el.tagName()), data.startsWith(""!""));"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,80,"decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(""!""));"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,143,"ag = Tag.valueOf(tagName, getParser().settings()); // maintains the case option of the original parse"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,143,"tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,485,"lement child = new Element(Tag.valueOf(tagName, getParser().settings()), baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,485,"Element child = new Element(Tag.valueOf(tagName, NodeUtils.parser(this).settings()), baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,498,"lement child = new Element(Tag.valueOf(tagName, getParser().settings()), baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,498,"Element child = new Element(Tag.valueOf(tagName, NodeUtils.parser(this).settings()), baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,537,"ist<Node> nodes = getParser().parseFragmentInput(html, this, baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,537,"List<Node> nodes = NodeUtils.parser(this).parseFragmentInput(html, this, baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,550,"ist<Node> nodes = getParser().parseFragmentInput(html, this, baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,550,"List<Node> nodes = NodeUtils.parser(this).parseFragmentInput(html, this, baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,736,or (int i = 0; i < elements.size(); i++) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,736,final int size = elements.size();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,737,for (int i = 0; i < size; i++) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1117,f (node != null && node instanceof Element) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1118,if (node instanceof Element) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1399,eturn getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1400,return NodeUtils.outputSettings(this).prettyPrint() ? accum.toString().trim() : accum.toString();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1402,rivate void html(StringBuilder accum) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1403,or (Node node : childNodes)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1404,ode.outerHtml(accum);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1408, {@inheritDoc}
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1412,or (Node node : childNodes)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1413,ode.outerHtml(appendable);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1405,final int size = childNodes.size();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1406,for (int i = 0; i < size; i++)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1407,childNodes.get(i).outerHtml(appendable);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1430,ublic String toString() {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1431,eturn outerHtml();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,6,mport org.jsoup.parser.HtmlTreeBuilder;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,7,mport org.jsoup.parser.Parser;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,87,ttributeKey = getParser().settings().normalizeAttribute(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,85,attributeKey = NodeUtils.parser(this).settings().normalizeAttribute(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,337,"ist<Node> nodes = getParser().parseFragmentInput(html, context, baseUri());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,335,"List<Node> nodes = NodeUtils.parser(this).parseFragmentInput(html, context, baseUri());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,350,"ist<Node> wrapChildren = getParser().parseFragmentInput(html, context, baseUri());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,348,"List<Node> wrapChildren = NodeUtils.parser(this).parseFragmentInput(html, context, baseUri());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,352,f (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,350,if (!(wrapNode instanceof Element)) // nothing to wrap with; noop
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,565,et the outer HTML of this node.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,566,return HTML
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,563,"Get the outer HTML of this node. For example, on a {@code p} element, may return {@code <p>Para</p>}."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,564,@return outer HTML
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,565,@see Element#html()
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,566,@see Element#text()
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,569,tringBuilder accum = new StringBuilder(128);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,569,StringBuilder accum = StringUtil.stringBuilder();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,575,"odeTraversor.traverse(new OuterHtmlVisitor(accum, getOutputSettings()), this);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,578,"/ if this node has no document (or parent), retrieve the default output settings"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,579,ocument.OutputSettings getOutputSettings() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,580,ocument owner = ownerDocument();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,581,"eturn owner != null ? owner.outputSettings() : (new Document("""")).outputSettings();"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,584,arser getParser() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,585,ocument doc = ownerDocument();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,586,eturn doc != null && doc.parser() != null ? doc.parser() : new Parser(new HtmlTreeBuilder());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,575,"NodeTraversor.traverse(new OuterHtmlVisitor(accum, NodeUtils.outputSettings(this)), this);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,599,* Gets this node's outer HTML.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,600,* @return outer HTML.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,601,* @see #outerHtml()
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,1,package org.jsoup.nodes;
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,3,import org.jsoup.parser.HtmlTreeBuilder;
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,4,import org.jsoup.parser.Parser;
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,7,"* Internal helpers for Nodes, to keep the actual node APIs relatively clean. A jsoup internal class, so don't use it as"
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,8,* there is no contract API).
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,10,final class NodeUtils {
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,12,"* Get the output setting for this node,  or if this node has no document (or parent), retrieve the default output"
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,13,* settings
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,15,static Document.OutputSettings outputSettings(Node node) {
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,16,Document owner = node.ownerDocument();
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,17,"return owner != null ? owner.outputSettings() : (new Document("""")).outputSettings();"
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,21,"* Get the parser that was used to make this node, or the default HTML parser if it has no parent."
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,23,static Parser parser(Node node) {
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,24,Document doc = node.ownerDocument();
True,src/main/java/org/jsoup/nodes/NodeUtils.java,src/main/java/org/jsoup/nodes/NodeUtils.java,25,return doc != null && doc.parser() != null ? doc.parser() : new Parser(new HtmlTreeBuilder());
False,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,5,mport java.io.IOException;
False,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,18,"oid outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,16,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) {"
False,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,22,"oid outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,20,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,559,oid setPendingTableCharacters(List<String> pendingTableCharacters) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,560,his.pendingTableCharacters = pendingTableCharacters;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,16,"rivate static final int DEFAULT_MAX_ERRORS = 0; // by default, error tracking is disabled."
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,259,f (!tagNames.contains(tagName))
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,260,agNames.add(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,259,tagNames.add(tagName);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,338,f (!tagNames.contains(tagName))
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,339,agNames.add(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,337,tagNames.add(tagName);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,635,f (other.value != null) return false;
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,636, else if (!value.equals(other.value)) return false;
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,637,eturn true;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,633,return other.value == null;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,634,} else return value.equals(other.value);
