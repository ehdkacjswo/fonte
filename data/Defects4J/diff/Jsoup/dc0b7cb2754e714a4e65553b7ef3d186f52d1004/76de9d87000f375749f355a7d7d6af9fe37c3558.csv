is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,32,* Determine the behavior of this connection upon receiving a 4xx or 5xx error.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,33,* @param throwExceptionOnHttpError - Set to false if you would like the Response populated on 4xx and 5xx HTTP response codes.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,34,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,36,public Connection throwExceptionOnHttpError(boolean throwExceptionOnHttpError);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,39,* Ignore content-type header when parsing the response
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,40,* @param ignoreContentType - Set to true if you would like the content type ignored on parsing the response into a Document.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,41,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,43,public Connection ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,302,* Will this request throw an IOException if a 4xx or 5xx error is returned
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,303,"* @return true if it will, false if it will populate the Response.  Default is true."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,305,public boolean throwExceptionOnHttpError();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,309,* Determine the behavior of this request upon receiving a 4xx or 5xx error response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,310,* @param throwExceptionOnHttpError - Set to false if you would like the Response populated on 4xx and 5xx HTTP response codes.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,312,public void throwExceptionOnHttpError(boolean throwExceptionOnHttpError);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,404,public void ignoreContentType(boolean ignoreContentType);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,39,rivate HttpConnection() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,38,private boolean ignoreContentType = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,40,public Connection throwExceptionOnHttpError(boolean throwExceptionOnHttpError) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,41,req.throwExceptionOnHttpError(throwExceptionOnHttpError);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,42,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,45,public Connection ignoreContentType(boolean ignoreContentType) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,46,this.ignoreContentType = ignoreContentType;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,47,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,50,private HttpConnection() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,147,res.ignoreContentType(ignoreContentType);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,286,private boolean throwExceptionOnHttpError = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,288,public boolean throwExceptionOnHttpError() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,289,return throwExceptionOnHttpError;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,292,public void throwExceptionOnHttpError(boolean throwExceptionOnHttpError) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,293,this.throwExceptionOnHttpError = throwExceptionOnHttpError;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,275,rivate Request() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,296,private Request() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,343,private boolean ignoreContentType = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,358,public void ignoreContentType(boolean ignoreContentType) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,359,this.ignoreContentType = ignoreContentType;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,359,lse
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,385,else if (req.throwExceptionOnHttpError())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,399,InputStream rawStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,374,"nStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,375,ew BufferedInputStream(new GZIPInputStream(conn.getInputStream())) :
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,376,ew BufferedInputStream(conn.getInputStream());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,401,if (status == HttpURLConnection.HTTP_OK) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,402,rawStream = conn.getInputStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,403,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,404,rawStream = conn.getErrorStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,407,"inStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,408,new BufferedInputStream(new GZIPInputStream(rawStream)) :
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,409,new BufferedInputStream(rawStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,405,"f (contentType == null || !(contentType.startsWith(""text/"") || contentType.startsWith(""application/xml"") || contentType.startsWith(""application/xhtml+xml"")))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,439,"if (!ignoreContentType && (contentType == null || !(contentType.startsWith(""text/"") || contentType.startsWith(""application/xml"") || contentType.startsWith(""application/xhtml+xml""))))"
