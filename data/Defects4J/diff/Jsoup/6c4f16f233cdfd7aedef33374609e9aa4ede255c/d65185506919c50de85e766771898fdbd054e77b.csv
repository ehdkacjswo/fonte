is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,5,import java.util.Arrays;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,13,private static final String[] booleanAttributes = {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,14,"""allowfullscreen"", ""async"", ""autofocus"", ""checked"", ""compact"", ""declare"", ""default"", ""defer"", ""disabled"","
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,15,"""formnovalidate"", ""hidden"", ""inert"", ""ismap"", ""itemscope"", ""multiple"", ""muted"", ""nohref"", ""noresize"","
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,16,"""noshade"", ""novalidate"", ""nowrap"", ""open"", ""readonly"", ""required"", ""reversed"", ""seamless"", ""selected"","
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,17,"""sortable"", ""truespeed"", ""typemustmatch"""
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,69,"eturn key + ""=\"""" + Entities.escape(value, (new Document("""")).outputSettings()) + ""\"""";"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,77,StringBuilder accum = new StringBuilder();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,78,"html(accum, (new Document("""")).outputSettings());"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,79,return accum.toString();
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,73,ccum
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,74,append(key)
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,75,"append(""=\"""")"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,76,"append(Entities.escape(value, out))"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,77,"append(""\"""");"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,83,accum.append(key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,84,if (!shouldCollapseAttribute(out)) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,85,"accum.append(""=\"""");"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,86,"Entities.escape(accum, value, out, true, false, false);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,87,"accum.append('""');"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,115,* Collapsible if it's a boolean attribute and value is empty or same as name
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,117,protected final boolean shouldCollapseAttribute(Document.OutputSettings out) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,118,"return ("""".equals(value) || value.equalsIgnoreCase(key))"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,119,&& out.syntax() == Document.OutputSettings.Syntax.html
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,120,"&& Arrays.binarySearch(booleanAttributes, key) >= 0;"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,222,* The output serialization syntax.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,224,"public enum Syntax {html, xml}"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,232,private Syntax syntax = Syntax.html;
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,243, Set the document's escape mode
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,249,"* Set the document's escape mode, which determines how characters are escaped when the output character set"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,250,* does not support a given character:- using either a named or a numbered escape.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,298,* Get the document's current output syntax.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,299,* @return current syntax
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,301,public Syntax syntax() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,302,return syntax;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,306,"* Set the document's output syntax. Either {@code html}, with empty tags and boolean attributes (etc), or"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,307,"* {@code xml}, with self-closing tags."
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,308,* @param syntax serialization syntax
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,309,"* @return the document's output settings, for chaining"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,311,public OutputSettings syntax(Syntax syntax) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,312,this.syntax = syntax;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,313,return this;
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,37,"ccum.append("" PUBLIC \"""").append(attr(""publicId"")).append(""\"""");"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,37,"accum.append("" PUBLIC \"""").append(attr(""publicId"")).append('""');"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,39,"ccum.append("" \"""").append(attr(""systemId"")).append(""\"""");"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,39,"accum.append("" \"""").append(attr(""systemId"")).append('""');"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1075,f (childNodes.isEmpty() && tag.isSelfClosing())
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1076,"ccum.append("" />"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1075,"// selfclosing includes unknown tags, isEmpty defines tags that are always empty"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1076,if (childNodes.isEmpty() && tag.isSelfClosing()) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1077,if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1078,accum.append('>');
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1079,else
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1080,"accum.append("" />""); // <img> in html, <img /> in xml"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,3,import org.jsoup.helper.StringUtil;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,19,"** Restricted entities suitable for XHTML output: lt, gt, amp, apos, and quot only. */"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,20,"/** Restricted entities suitable for XHTML output: lt, gt, amp, and quot only. */"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,74,"eturn escape(string, out.encoder(), out.escapeMode());"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,75,StringBuilder accum = new StringBuilder(string.length() * 2);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,76,"escape(accum, string, out, false, false, false);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,77,return accum.toString();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,77,"tatic String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,78,tringBuilder accum = new StringBuilder(string.length() * 2);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,79,"ap<Character, String> map = escapeMode.getMap();"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,80,"// this method is ugly, and does a lot. but other breakups cause rescanning and stringbuilder generations"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,81,"static void escape(StringBuilder accum, String string, Document.OutputSettings out,"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,82,"boolean inAttribute, boolean normaliseWhite, boolean stripLeadingWhite) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,84,boolean lastWasWhite = false;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,85,boolean reachedNonWhite = false;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,86,EscapeMode escapeMode = out.escapeMode();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,87,CharsetEncoder encoder = out.encoder();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,88,"Map<Character, String> map = escapeMode.getMap();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,82,or (int offset = 0; offset < length; ) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,83,inal int codePoint = string.codePointAt(offset);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,91,int codePoint;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,for (int offset = 0; offset < length; offset += Character.charCount(codePoint)) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,93,codePoint = string.codePointAt(offset);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,95,if (normaliseWhite) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,96,if (StringUtil.isWhitespace(codePoint)) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,97,if ((stripLeadingWhite && !reachedNonWhite) || lastWasWhite)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,98,continue;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,99,accum.append(' ');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,100,lastWasWhite = true;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,101,continue;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,102,} else {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,103,lastWasWhite = false;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,104,reachedNonWhite = true;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,88,f (map.containsKey(c))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,89,ccum.append('&').append(map.get(c)).append(';');
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,90,lse if (encoder.canEncode(c))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,91,ccum.append(c);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,lse
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,93,"ccum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,110,// html specific and required escapes:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,111,switch (c) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,112,case '&':
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,113,"accum.append(""&amp;"");"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,114,break;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,115,case 0xA0:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,116,if (escapeMode != EscapeMode.xhtml)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,117,"accum.append(""&nbsp;"");"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,118,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,119,accum.append(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,120,break;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,121,case '<':
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,122,if (!inAttribute)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,123,"accum.append(""&lt;"");"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,124,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,125,accum.append(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,126,break;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,127,case '>':
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,128,if (!inAttribute)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,129,"accum.append(""&gt;"");"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,130,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,131,accum.append(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,132,break;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,133,"case '""':"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,134,if (inAttribute)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,135,"accum.append(""&quot;"");"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,136,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,137,accum.append(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,138,break;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,139,default:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,140,if (encoder.canEncode(c))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,141,accum.append(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,142,else if (map.containsKey(c))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,143,accum.append('&').append(map.get(c)).append(';');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,144,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,145,"accum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,102,ffset += Character.charCount(codePoint);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,105,eturn accum.toString();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,126,"""apos"", 0x00027},"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,96,"tring html = Entities.escape(getWholeText(), out);"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,97,f (out.prettyPrint() && parent() instanceof Element && !Element.preserveWhitespace((Element) parent()))
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,98,"tringUtil.appendNormalisedWhitespace(accum, html, false);"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,99,lse
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,100,ccum.append(html);
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,96,boolean normaliseWhite = out.prettyPrint() && parent() instanceof Element
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,97,&& !Element.preserveWhitespace((Element) parent());
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,98,"Entities.escape(accum, getWholeText(), out, false, normaliseWhite, false);"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,233,"summary"", ""command"", ""device"""
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,233,"""summary"", ""command"", ""device"", ""area"", ""basefont"", ""bgsound"", ""menuitem"", ""param"", ""source"", ""track"""
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,237,"device"""
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,237,"""device"", ""area"", ""basefont"", ""bgsound"", ""menuitem"", ""param"", ""source"", ""track"""
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,10,* Use the {@code XmlTreeBuilder} when you want to parse XML without any of the HTML DOM rules being applied to the
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,11,* document.
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,12,"* <p>Usage example: {@code Document xmlDoc = Jsoup.parse(html, baseUrl, Parser.xmlParser());}</p>"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,21,doc.outputSettings().syntax(Document.OutputSettings.Syntax.xml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,12,import static org.jsoup.nodes.Document.OutputSettings.Syntax;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,62,"ssertEquals(""&lt; &gt; &amp; &quot; &apos; ×"", doc.body().html());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,63,"assertEquals(""&lt; &gt; &amp; \"" ' ×"", doc.body().html());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,106,@Test public void testHtmlAndXmlSyntax() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,107,"String h = ""<!DOCTYPE html><body><img async checked='checked' src='&<>\""'>&lt;&gt;&amp;&quot;<foo />bar"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,108,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,110,doc.outputSettings().syntax(Syntax.html);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,111,"assertEquals(""<!DOCTYPE html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,112,"""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,113,""" <head></head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,114,""" <body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,115,"""  <img async checked src=\""&amp;<>&quot;\"">&lt;&gt;&amp;\""\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,116,"""  <foo />bar\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,117,""" </body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,118,"""</html>"", doc.html());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,120,doc.outputSettings().syntax(Document.OutputSettings.Syntax.xml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,121,"assertEquals(""<!DOCTYPE html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,122,"""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,123,""" <head></head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,124,""" <body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,125,"""  <img async=\""\"" checked=\""checked\"" src=\""&amp;<>&quot;\"" />&lt;&gt;&amp;\""\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,126,"""  <foo />bar\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,127,""" </body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,128,"""</html>"", doc.html());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,131,@Test public void htmlParseDefaultsToHtmlOutputSyntax() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,132,"Document doc = Jsoup.parse(""x"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,133,"assertEquals(Syntax.html, doc.outputSettings().syntax());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,215,"ssertEquals(""<html><head></head><body><div title=\""Tags &amp;c.\""><img src=\""foo.png\"" /><p><!-- comment -->Hello</p><p>there</p></div></body></html>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,215,"assertEquals(""<html><head></head><body><div title=\""Tags &amp;c.\""><img src=\""foo.png\""><p><!-- comment -->Hello</p><p>there</p></div></body></html>"","
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,460,"ssertEquals(""<img src=\""foo\"" />"", img.toString());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,460,"assertEquals(""<img src=\""foo\"">"", img.toString());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,463,"ssertEquals(""<img src=\""foo\"" />"", img.toString());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,463,"assertEquals(""<img src=\""foo\"">"", img.toString());"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,6,import static org.jsoup.nodes.Document.OutputSettings;
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,7,import static org.jsoup.nodes.Entities.EscapeMode.*;
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,13,"tring escapedAscii = Entities.escape(text, Charset.forName(""ascii"").newEncoder(), Entities.EscapeMode.base);"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,14,"tring escapedAsciiFull = Entities.escape(text, Charset.forName(""ascii"").newEncoder(), Entities.EscapeMode.extended);"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,15,"tring escapedAsciiXhtml = Entities.escape(text, Charset.forName(""ascii"").newEncoder(), Entities.EscapeMode.xhtml);"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,16,"tring escapedUtfFull = Entities.escape(text, Charset.forName(""UTF-8"").newEncoder(), Entities.EscapeMode.base);"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,17,"tring escapedUtfMin = Entities.escape(text, Charset.forName(""UTF-8"").newEncoder(), Entities.EscapeMode.xhtml);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,15,"String escapedAscii = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(base));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,16,"String escapedAsciiFull = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,17,"String escapedAsciiXhtml = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(xhtml));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,18,"String escapedUtfFull = Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(base));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,19,"String escapedUtfMin = Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(xhtml));"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,22,"ssertEquals(""Hello &amp;&lt;&gt; &Aring; &aring; π 新 there &frac34; &copy;"", escapedUtfFull);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,24,"assertEquals(""Hello &amp;&lt;&gt; Å å π 新 there ¾ ©"", escapedUtfFull);"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,36,"tring escapedAscii = Entities.escape(text, Charset.forName(""ascii"").newEncoder(), Entities.EscapeMode.base);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,38,"String escapedAscii = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(base));"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,38,"tring escapedUtf = Entities.escape(text, Charset.forName(""UTF-8"").newEncoder(), Entities.EscapeMode.base);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,40,"String escapedUtf = Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(base));"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,59,"ssertEquals(""&Uuml; &uuml; &amp; &amp;"", Entities.escape(unescaped, Charset.forName(""ascii"").newEncoder(), Entities.EscapeMode.extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,61,"assertEquals(""&Uuml; &uuml; &amp; &amp;"","
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,62,"Entities.escape(unescaped, new OutputSettings().charset(""ascii"").escapeMode(extended)));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,78,"doc.outputSettings().charset(""ascii"");"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,82,"doc.outputSettings().charset(""UTF-8"");"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,83,"assertEquals(""¹²³¼½¾"", p.html());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,237,"ssertEquals(""<table> <colgroup> <col /> </colgroup><colgroup> <col /> <col /> <col /> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\""rowgroup\""> Research and development </th><td> $ 1,109 </td><td> $ 782 </td><td> $ 712 </td></tr><tr> <th scope=\""row\""> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\""rowgroup\""> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr><tr> <th scope=\""row\""> Percentage of net sales </th><td> 11.6% </td><td> 12.3% </td><td> 12.6% </td></tr></tbody></table>"", TextUtil.stripNewlines(doc.body().html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,237,"assertEquals(""<table> <colgroup> <col> </colgroup><colgroup> <col> <col> <col> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\""rowgroup\""> Research and development </th><td> $ 1,109 </td><td> $ 782 </td><td> $ 712 </td></tr><tr> <th scope=\""row\""> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\""rowgroup\""> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr><tr> <th scope=\""row\""> Percentage of net sales </th><td> 11.6% </td><td> 12.3% </td><td> 12.6% </td></tr></tbody></table>"", TextUtil.stripNewlines(doc.body().html()));"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,338,"ssertEquals(""<div id=\""1\""></div><script src=\""/foo\""></script><div id=\""2\""><img /><img /></div><a id=\""3\""></a><i></i><foo /><foo>One</foo> <hr /> hr text <hr /> hr text two"", TextUtil.stripNewlines(doc.body().html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,338,"assertEquals(""<div id=\""1\""></div><script src=\""/foo\""></script><div id=\""2\""><img><img></div><a id=\""3\""></a><i></i><foo /><foo>One</foo> <hr> hr text <hr> hr text two"", TextUtil.stripNewlines(doc.body().html()));"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,378,"ssertEquals(""<html><head><script></script><noscript></noscript></head><frameset><frame src=\""foo\"" /><frame src=\""foo\"" /></frameset></html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,378,"assertEquals(""<html><head><script></script><noscript></noscript></head><frameset><frame src=\""foo\""><frame src=\""foo\""></frameset></html>"","
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,386,"ssertEquals(""<html><head><title>One</title></head><frameset><frame /><frame /></frameset></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,386,"assertEquals(""<html><head><title>One</title></head><frameset><frame><frame></frameset></html>"", TextUtil.stripNewlines(doc.html()));"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,410,"ssertEquals(""<!DOCTYPE html><html><head></head><body>OneTwoThree<link />FourFive Six Seven </body></html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,410,"assertEquals(""<!DOCTYPE html><html><head></head><body>OneTwoThree<link>FourFive Six Seven </body></html>"","
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,465,"ssertEquals(""<html><head><noscript></noscript></head><body><img src=\""foo\"" /><p>Hello</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,465,"assertEquals(""<html><head><noscript></noscript></head><body><img src=\""foo\""><p>Hello</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,745,oc.outputSettings().escapeMode(Entities.EscapeMode.extended); // modifies output only to clarify test
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,746,"ssertEquals(StringUtil.normaliseWhitespace(""&amp; &quot; &reg; &amp;icy &amp;hopf &icy; &hopf;""), doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,745,"doc.outputSettings().escapeMode(Entities.EscapeMode.extended).charset(""ascii""); // modifies output only to clarify test"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,746,"assertEquals(""&amp; \"" &reg; &amp;icy &amp;hopf &icy; &hopf;"", doc.body().html());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,788,"ssertEquals(""<table><tbody><tr><form></form><input type=\""hidden\"" id=\""1\"" /><td><input type=\""text\"" id=\""2\"" /></td></tr><tr></tr></tbody></table>"", TextUtil.stripNewlines(doc.body().html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,788,"assertEquals(""<table><tbody><tr><form></form><input type=\""hidden\"" id=\""1\""><td><input type=\""text\"" id=\""2\""></td></tr><tr></tr></tbody></table>"", TextUtil.stripNewlines(doc.body().html()));"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,807,"ssertEquals(""<img />\n<svg>\n <image />\n</svg>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,807,"assertEquals(""<img>\n<svg>\n <image />\n</svg>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,20,import static org.jsoup.nodes.Document.OutputSettings.Syntax;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,93,"/ html will force ""<br>one</br>"" to ""<br />One<br />"". XML should be stay ""<br>one</br> -- don't recognise tag."
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,94,"// html will force ""<br>one</br>"" to logically ""<br />One<br />"". XML should be stay ""<br>one</br> -- don't recognise tag."
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,95,"ssertEquals(""<br />one\n<br />"", htmlDoc.body().html());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,96,"assertEquals(""<br>one\n<br>"", htmlDoc.body().html());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,121,@Test public void xmlParseDefaultsToHtmlOutputSyntax() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,122,"Document doc = Jsoup.parse(""x"", """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,123,"assertEquals(Syntax.xml, doc.outputSettings().syntax());"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,40,"ssertEquals(""<p><img src=\""http://example.com/\"" alt=\""Image\"" /></p><p><img /></p>"", TextUtil.stripNewlines(cleanHtml));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,40,"assertEquals(""<p><img src=\""http://example.com/\"" alt=\""Image\""></p><p><img></p>"", TextUtil.stripNewlines(cleanHtml));"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,70,"ssertEquals(""<img />"", cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,70,"assertEquals(""<img>"", cleanHtml);"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,88,"ssertEquals(""<img alt=\""\"" />"", cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,88,"assertEquals(""<img alt=\""\"">"", cleanHtml);"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,105,"ssertEquals(""<a href=\""http://example.com/foo\"" rel=\""nofollow\"">Link</a>\n<img src=\""http://example.com/bar\"" />"", clean);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,105,"assertEquals(""<a href=\""http://example.com/foo\"" rel=\""nofollow\"">Link</a>\n<img src=\""http://example.com/bar\"">"", clean);"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,111,"ssertEquals(""<a href=\""/foo\"" rel=\""nofollow\"">Link</a>\n<img src=\""/bar\"" /> \n<img />"", clean);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,111,"assertEquals(""<a href=\""/foo\"" rel=\""nofollow\"">Link</a>\n<img src=\""/bar\""> \n<img>"", clean);"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,123,"ssertEquals(""<img /> \n<img />"", dropped);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,123,"assertEquals(""<img> \n<img>"", dropped);"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,126,"ssertEquals(""<img src=\""cid:12345\"" /> \n<img src=\""data:gzzt\"" />"", preserved);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,126,"assertEquals(""<img src=\""cid:12345\""> \n<img src=\""data:gzzt\"">"", preserved);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,154,"os.charset(""ascii"");"
