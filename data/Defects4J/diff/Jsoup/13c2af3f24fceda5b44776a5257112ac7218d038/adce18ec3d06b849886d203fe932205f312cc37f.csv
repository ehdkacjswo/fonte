is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,970,f (out.prettyPrint() && (isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0)))
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,970,if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock())))
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,985,f (out.prettyPrint() && !childNodes.isEmpty() && tag.canContainBlock())
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,985,if (out.prettyPrint() && !childNodes.isEmpty() && tag.formatAsBlock())
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,78,f (out.prettyPrint() && siblingIndex() == 0 && parentNode instanceof Element && ((Element) parentNode).tag().canContainBlock() && !isBlank())
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,78,if (out.prettyPrint() && siblingIndex() == 0 && parentNode instanceof Element && ((Element) parentNode).tag().formatAsBlock() && !isBlank())
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,23,private boolean formatAsBlock = true;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,123,* Gets if this tag should be formatted as a block (or as inline)
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,124,* @return if should be formatted as block or inline
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,126,public boolean formatAsBlock() {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,127,return formatAsBlock;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,256,"reateBlock(""TITLE"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,265,"createBlock(""TITLE"").setAncestor(""HEAD"", ""BODY"").setContainDataOnly().setFormatAsInline();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,315,"reateInline(""SPAN"").setCanContainBlock(); // spec is phrasing only, practise is block"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,324,"createInline(""SPAN"").setCanContainBlock().setFormatAsInline(); // spec is phrasing only, practise is block"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,317,"reateBlock(""H1"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,318,"reateBlock(""H2"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,319,"reateBlock(""H3"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,320,"reateBlock(""H4"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,321,"reateBlock(""H5"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,322,"reateBlock(""H6"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,326,"createBlock(""H1"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,327,"createBlock(""H2"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,328,"createBlock(""H3"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,329,"createBlock(""H4"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,330,"createBlock(""H5"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,331,"createBlock(""H6"").setAncestor(""BODY"", ""HGROUP"").setExcludes(""HGROUP"", ""H1"", ""H2"", ""H3"", ""H4"", ""H5"", ""H6"").setFormatAsInline();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,364,"reateBlock(""LI"").setAncestor(""UL"", ""OL"").setOptionalClosing(); // only within OL or UL."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,373,"createBlock(""LI"").setAncestor(""UL"", ""OL"").setOptionalClosing().setFormatAsInline(); // only within OL or UL."
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,375,"reateBlock(""TH"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"");"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,376,"reateBlock(""TD"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,384,"createBlock(""TH"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,385,"createBlock(""TD"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"").setFormatAsInline();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,410,inline.formatAsBlock = false;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,431,formatAsBlock = false;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,432,return this;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,435,private Tag setFormatAsInline() {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,436,formatAsBlock = false;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,206,"ocument doc = Jsoup.parse(""<div><p>Hello</p></div>"");"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,207,"ssertEquals(""<html>\n <head></head>\n <body>\n  <div>\n   <p>Hello</p>\n  </div>\n </body>\n</html>"", doc.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,206,"Document doc = Jsoup.parse(""<title>Format test</title><div><p>Hello <span>jsoup <span>users</span></span></p><p>Good.</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,207,"assertEquals(""<html>\n <head>\n  <title>Format test</title>\n </head>\n <body>\n  <div>\n   <p>Hello <span>jsoup <span>users</span></span></p>\n   <p>Good.</p>\n  </div>\n </body>\n</html>"", doc.html());"
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,212,"ssertEquals(""<table> <colgroup> <col /> </colgroup><colgroup> <col /> <col /> <col /> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\""rowgroup\"">Research and development </th><td>$ 1,109 </td><td>$ 782 </td><td>$ 712 </td></tr><tr> <th scope=\""row\"">Percentage of net sales </th><td>3.4% </td><td>3.3% </td><td>3.7% </td></tr></tbody><tbody> <tr> <th scope=\""rowgroup\"">Selling, general, and administrative </th><td>$ 3,761 </td><td>$ 2,963 </td><td>$ 2,433 </td></tr><tr> <th scope=\""row\"">Percentage of net sales </th><td>11.6% </td><td>12.3% </td><td>12.6% </td></tr></tbody></table>"", TextUtil.stripNewlines(doc.body().html()));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,212,"assertEquals(""<table> <colgroup> <col /> </colgroup><colgroup> <col /> <col /> <col /> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\""rowgroup\""> Research and development </th><td> $ 1,109 </td><td> $ 782 </td><td> $ 712 </td></tr><tr> <th scope=\""row\""> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\""rowgroup\""> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr><tr> <th scope=\""row\""> Percentage of net sales </th><td> 11.6% </td><td> 12.3% </td><td> 12.6% </td></tr></tbody></table>"", TextUtil.stripNewlines(doc.body().html()));"
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,115,"ssertEquals(""<textarea>three</textarea>"", els.last().outerHtml());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,115,"assertEquals(""\n<textarea>three</textarea>"", els.last().outerHtml());"
