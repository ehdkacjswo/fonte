is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,24,"private static final Pattern classSplit = Pattern.compile(""\\s+"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,103,"tring id = attr(""id"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,104,"eturn id == null ? """" : id;"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,106,"return attributes.get(""id"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1000,"tring[] names = className().split(""\\s+"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1002,String[] names = classSplit.split(className());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1026,"Used by common .class selector, so perf tweaked to reduce object creation vs hitting classnames()."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1028,"Wiki: 71, 13 (5.4x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1029,"CNN: 227, 91 (2.5x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1030,"Alterslash: 59, 4 (14.8x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1031,"Jsoup: 14, 1 (14x)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1024,et<String> classNames = classNames();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1025,or (String name : classNames) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1034,"String classAttr = attributes.get(""class"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1035,"if (classAttr.equals("""") || classAttr.length() < className.length())"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1036,return false;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1038,final String[] classes = classSplit.split(classAttr);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1039,for (String name : classes) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,84,scapeMode escapeMode = out.escapeMode();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,85,harsetEncoder encoder = out.encoder();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,86,"ap<Character, String> map = escapeMode.getMap();"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,84,final EscapeMode escapeMode = out.escapeMode();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,85,final CharsetEncoder encoder = out.encoder();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,86,final CoreCharset coreCharset = CoreCharset.byName(encoder.charset().name());
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,87,"final Map<Character, String> map = escapeMode.getMap();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,138,f (encoder.canEncode(c))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,139,"if (canEncode(coreCharset, c, encoder))"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,147,f (encoder.canEncode(c))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,148,if (encoder.canEncode(c)) // uses fallback encoder for simplicity
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,161, @param string
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,162,* @param string to un-HTML-escape
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,163, @return
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,164,* @return unescaped string
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,171,"* Provides a fast-path for Encoder.canEncode, which drastically improves performance on Android post JellyBean."
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,172,"* After KitKat, the implementation of canEncode degrades to the point of being useless. For non ASCII or UTF,"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,173,* performance may be bad. We can add more encoders for common character sets that are impacted by performance
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,174,* issues on Android if required.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,176,* Benchmarks:     *
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,177,* OLD toHtml() impl v New (fastpath) in millis
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,178,"* Wiki: 1895, 16"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,179,"* CNN: 6378, 55"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,180,"* Alterslash: 3013, 28"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,181,"* Jsoup: 167, 2"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,184,"private static boolean canEncode(final CoreCharset charset, final char c, final CharsetEncoder fallback) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,185,// todo add more charset tests if impacted by Android's bad perf in canEncode
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,186,switch (charset) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,187,case ascii:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,188,return c < 0x80;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,189,case utf:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,190,return true; // real is:!(Character.isLowSurrogate(c) || Character.isHighSurrogate(c)); - but already check above
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,191,default:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,192,return fallback.canEncode(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,196,private enum CoreCharset {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,197,"ascii, utf, fallback;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,199,private static CoreCharset byName(String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,200,"if (name.equals(""US-ASCII""))"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,201,return ascii;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,202,"if (name.startsWith(""UTF-"")) // covers UTF-8, UTF-16, et al"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,203,return utf;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,204,return fallback;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,80,"if (el.hasAttr(""disabled"")) continue; // skip disabled form inputs"
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,98,"f (el.hasAttr(""checked""))"
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,99,"ata.add(HttpConnection.KeyVal.create(name, el.val()));"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,99,"if (el.hasAttr(""checked"")) {"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,100,"final String val = el.val().length() >  0 ? el.val() : ""on"";"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,101,"data.add(HttpConnection.KeyVal.create(name, val));"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,292,"ddSiblingHtml(siblingIndex(), html);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,292,"addSiblingHtml(siblingIndex, html);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,306,"arentNode.addChildren(siblingIndex(), node);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,306,"parentNode.addChildren(siblingIndex, node);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,317,"ddSiblingHtml(siblingIndex() + 1, html);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,317,"addSiblingHtml(siblingIndex + 1, html);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,331,"arentNode.addChildren(siblingIndex() + 1, node);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,331,"parentNode.addChildren(siblingIndex + 1, node);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,392,nt index = siblingIndex;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,394,"arentNode.addChildren(index, this.childNodesAsArray());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,393,"parentNode.addChildren(siblingIndex, this.childNodesAsArray());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,430,nteger index = out.siblingIndex();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,429,final int index = out.siblingIndex;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,439,nt index = out.siblingIndex();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,438,final int index = out.siblingIndex;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,501,ist<Node> siblings = parentNode.childNodes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,502,nteger index = siblingIndex();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,503,alidate.notNull(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,504,f (siblings.size() > index+1)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,505,eturn siblings.get(index+1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,500,final List<Node> siblings = parentNode.childNodes;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,501,final int index = siblingIndex+1;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,502,if (siblings.size() > index)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,503,return siblings.get(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,518,ist<Node> siblings = parentNode.childNodes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,519,nteger index = siblingIndex();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,520,alidate.notNull(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,521,f (index > 0)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,522,eturn siblings.get(index-1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,516,if (siblingIndex > 0)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,517,return parentNode.childNodes.get(siblingIndex-1);
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,10,mport org.junit.Test;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,9,import org.jsoup.nodes.Document.OutputSettings.Syntax;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,10,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,11,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,12,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,13,import static org.junit.Assert.assertNull;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,13,mport static org.jsoup.nodes.Document.OutputSettings.Syntax;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,14,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,15,import org.junit.Test;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,155,@Test public void DocumentsWithSameContentAreEqual() throws Exception {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,156,"Document docA = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,157,"Document docB = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,158,"Document docC = Jsoup.parse(""<div/>Two"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,160,"assertEquals(docA, docB);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,161,assertFalse(docA.equals(docC));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,162,"assertEquals(docA.hashCode(), docB.hashCode());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,163,assertFalse(docA.hashCode() == docC.hashCode());
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,32,"""<input name='ten' value='text' disabled>"" +"
False,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,42,"ssertEquals(""seven=on"", data.get(4).toString());"
False,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,43,"ssertEquals(""eight="", data.get(5).toString());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,43,"assertEquals(""seven=on"", data.get(4).toString()); // set"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,44,"assertEquals(""eight=on"", data.get(5).toString()); // default"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,45,"// nine should not appear, not checked checkbox"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,46,"// ten should not appear, disabled"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,118,@Test public void usesOnForCheckboxValueIfNoValueSet() {
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,119,"Document doc = Jsoup.parse(""<form><input type=checkbox checked name=foo></form>"");"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,120,"FormElement form = (FormElement) doc.select(""form"").first();"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,121,List<Connection.KeyVal> data = form.formData();
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,122,"assertEquals(""on"", data.get(0).value());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,123,"assertEquals(""foo"", data.get(0).key());"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,255,@Test public void supportsClone() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,256,"Document doc = org.jsoup.Jsoup.parse(""<div class=foo>Text</div>"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,257,"Element el = doc.select(""div"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,258,"assertTrue(el.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,260,"Element elClone = doc.clone().select(""div"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,261,"assertTrue(elClone.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,262,"assertTrue(elClone.text().equals(""Text""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,264,"el.removeClass(""foo"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,265,"el.text(""None"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,266,"assertFalse(el.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,267,"assertTrue(elClone.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,268,"assertTrue(el.text().equals(""None""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,269,"assertTrue(elClone.text().equals(""Text""));"
