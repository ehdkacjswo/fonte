is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,23,rivate Set<String> classNames;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,991,f (classNames == null) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,992,"tring[] names = className().split(""\\s+"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,993,lassNames = new LinkedHashSet<String>(Arrays.asList(names));
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,994,"lassNames.remove(""""); // if classNames() was empty, would include an empty class"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,989,"String[] names = className().split(""\\s+"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,990,Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,991,"classNames.remove(""""); // if classNames() was empty, would include an empty class"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1175,"lone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames"
