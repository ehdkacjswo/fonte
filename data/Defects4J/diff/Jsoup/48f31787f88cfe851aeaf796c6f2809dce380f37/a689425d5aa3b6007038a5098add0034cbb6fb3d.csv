is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,4,mport org.jsoup.parser.HtmlTreeBuilder;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,8,import java.net.Proxy;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,63,* Set the proxy to use for this request. Set to <code>null</code> to disable.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,64,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,65,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,67,Connection proxy(Proxy proxy);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,70,* Set the HTTP proxy to use for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,71,* @param host the proxy hostname
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,72,* @param port the proxy port
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,73,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,75,"Connection proxy(String host, int port);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,81,* @see org.jsoup.helper.HttpConnection#DEFAULT_UA
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,71, timeout is 3 seconds (3000 millis). A timeout of zero is treated as an infinite timeout.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,87,"* timeout is <b>30 seconds</b> (30,000 millis). A timeout of zero is treated as an infinite timeout."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,88,* <p>Note that a read timeout is not the same as a maximum timeout. As long as the connection is sending bytes at
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,89,"* least every <i>timeout</i> seconds (e.g. in the case of an infinite stream of data, or a slow large download), the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,90,"* read timeout will not fire. This can be mitigated by using a maximum download size (see {@link #maxBodySize(int)}),"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,91,* or interrupting the connecting thread after a max timeout.</p>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,127, Disable/enable TSL certificates validation for HTTPS requests.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,147,* Disable/enable TLS certificates validation for HTTPS requests.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,140, @param value if should validate TSL (SSL) certificates. <b>true</b> by default.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,160,* @param value if should validate TLS (SSL) certificates. <b>true</b> by default.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,155," Add an input stream as a request data paramater. For GETs, has no effect, but for POSTS this will upload the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,175,"* Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,210,"* Get the data KeyVal for this key, if any"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,211,* @param key the data key
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,212,* @return null if not set
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,214,KeyVal data(String key);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,217,"* Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,218,* encoded form key/value pairs. E.g.:
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,219,* <code><pre>Jsoup.connect(url)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,220,* .requestBody(json)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,221,"* .header(""Content-Type"", ""application/json"")"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,222,* .post();</pre></code>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,223,"* If any data key/vals are supplied, they will be sent as URL query params."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,224,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,226,Connection requestBody(String body);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,238,* Adds each of the supplied headers to the request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,239,* @param headers map of headers name {@literal ->} value pairs
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,240,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,241,* @see org.jsoup.Connection.Request#headers()
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,243,"Connection headers(Map<String,String> headers);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,459,* Get the proxy used for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,460,* @return the proxy; <code>null</code> if not enabled.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,462,Proxy proxy();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,465,* Update the proxy for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,466,* @param proxy the proxy ot use; <code>null</code> to disable.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,467,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,469,Request proxy(Proxy proxy);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,472,* Set the HTTP proxy to use for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,473,* @param host the proxy hostname
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,474,* @param port the proxy port
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,475,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,477,"Request proxy(String host, int port);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,572,"* Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,573,* encoded form key/value pairs. E.g.:
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,574,* <code><pre>Jsoup.connect(url)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,575,* .requestBody(json)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,576,"* .header(""Content-Type"", ""application/json"")"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,577,* .post();</pre></code>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,578,"* If any data key/vals are supplied, they will be sent as URL query params."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,579,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,581,Request requestBody(String body);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,584,* Get the current request body.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,585,* @return null if not set.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,587,String requestBody();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,551, Get the character set name of the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,635,"* Get the character set name of the response, derived from the content-type header."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,641,* Set / override the response character set. When the document body is parsed it will be with this charset.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,642,* @param charset to decode body as
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,643,"* @return this Response, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,645,Response charset(String charset);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,563, Parse the body of the response as a Document.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,654,* Read and parse the body of the response as a Document. If you intend to parse the same response multiple
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,655,"* times, you should {@link #bufferUp()} first."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,674,"* Read the body of the response into a local buffer, so that {@link #parse()} may be called repeatedly on the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,675,"* same connection response (otherwise, once the response is read, its InputStream will have been drained and"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,676,* may not be re-read). Calling {@link #body() } or {@link #bodyAsBytes()} has the same effect. If the requ
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,677,"* @return this response, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,679,Response bufferUp();
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,220, permitted
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,221, tags and attributes.
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,220,* permitted tags and attributes.
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,221,* <p>The HTML is treated as a body fragment; it's expected the cleaned HTML will be used within the body of an
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,222,"* existing document. If you want to clean full documents, use {@link Cleaner#clean(Document)} instead, and add"
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,223,"* structural tags (<code>html, head, body</code> etc) to the whitelist."
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,239,est if the input HTML has only tags and attributes allowed by the Whitelist. Useful for form validation. The input HTML should
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,240,"till be run through the cleaner to set up enforced attributes, and to tidy the output."
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,241,Test if the input body HTML has only tags and attributes allowed by the Whitelist. Useful for form validation.
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,242,"<p>The input HTML should still be run through the cleaner to set up enforced attributes, and to tidy the output."
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,243,<p>Assumes the HTML is a body fragment (i.e. will be used in an existing HTML document body.)
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,247,"ocument dirty = parseBodyFragment(bodyHtml, """");"
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,248,leaner cleaner = new Cleaner(whitelist);
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,249,eturn cleaner.isValid(dirty);
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,250,return new Cleaner(whitelist).isValidBodyHtml(bodyHtml);
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,1,package org.jsoup;
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,4,* A SerializationException is raised whenever serialization of a DOM element fails. This exception usually wraps an
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,5,* {@link java.io.IOException} that may be thrown due to an inaccessible output stream.
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,7,public final class SerializationException extends RuntimeException {
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,9,* Creates and initializes a new serialization exception with no error message and cause.
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,11,public SerializationException() {
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,12,super();
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,16,* Creates and initializes a new serialization exception with the given error message and no cause.
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,18,* @param message
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,19,*            the error message of the new serialization exception (may be <code>null</code>).
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,21,public SerializationException(String message) {
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,22,super(message);
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,26,* Creates and initializes a new serialization exception with the specified cause and an error message of
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,27,* <code>(cause==null ? null : cause.toString())</code> (which typically contains the class and error message of
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,28,* <code>cause</code>).
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,30,* @param cause
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,31,*            the cause of the new serialization exception (may be <code>null</code>).
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,33,public SerializationException(Throwable cause) {
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,34,super(cause);
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,38,* Creates and initializes a new serialization exception with the given error message and cause.
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,40,* @param message
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,41,*            the error message of the new serialization exception.
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,42,* @param cause
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,43,*            the cause of the new serialization exception.
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,45,"public SerializationException(String message, Throwable cause) {"
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,46,"super(message, cause);"
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,1,package org.jsoup;
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,3,import java.io.IOException;
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,5,public class UncheckedIOException extends Error {
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,6,public UncheckedIOException(IOException cause) {
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,7,super(cause);
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,10,public IOException ioException() {
True,src/main/java/org/jsoup/UncheckedIOException.java,src/main/java/org/jsoup/UncheckedIOException.java,11,return (IOException) getCause();
False,src/main/java/org/jsoup/examples/package-info.java,src/main/java/org/jsoup/examples/package-info.java,2,"ontains example programs and use of jsoup. See the <a href=""http://jsoup.org/cookbook/"">jsoup cookbook</a>."
True,src/main/java/org/jsoup/examples/package-info.java,src/main/java/org/jsoup/examples/package-info.java,2,"Contains example programs and use of jsoup. See the <a href=""https://jsoup.org/cookbook/"">jsoup cookbook</a>."
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,1,package org.jsoup.helper;
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,3,import java.util.ArrayList;
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,4,import java.util.Collection;
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,7,* Implementation of ArrayList that watches out for changes to the contents.
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,9,public abstract class ChangeNotifyingArrayList<E> extends ArrayList<E> {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,10,public ChangeNotifyingArrayList(int initialCapacity) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,11,super(initialCapacity);
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,14,public abstract void onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,16,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,17,"public E set(int index, E element) {"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,18,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,19,"return super.set(index, element);"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,22,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,23,public boolean add(E e) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,24,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,25,return super.add(e);
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,28,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,29,"public void add(int index, E element) {"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,30,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,31,"super.add(index, element);"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,34,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,35,public E remove(int index) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,36,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,37,return super.remove(index);
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,40,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,41,public boolean remove(Object o) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,42,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,43,return super.remove(o);
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,46,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,47,public void clear() {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,48,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,49,super.clear();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,52,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,53,public boolean addAll(Collection<? extends E> c) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,54,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,55,return super.addAll(c);
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,58,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,59,"public boolean addAll(int index, Collection<? extends E> c) {"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,60,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,61,"return super.addAll(index, c);"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,64,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,65,"protected void removeRange(int fromIndex, int toIndex) {"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,66,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,67,"super.removeRange(fromIndex, toIndex);"
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,70,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,71,public boolean removeAll(Collection<?> c) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,72,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,73,return super.removeAll(c);
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,76,@Override
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,77,public boolean retainAll(Collection<?> c) {
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,78,onContentsChanged();
True,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,src/main/java/org/jsoup/helper/ChangeNotifyingArrayList.java,79,return super.retainAll(c);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,3,import org.jsoup.internal.ConstrainableInputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,6,import org.jsoup.nodes.XmlDeclaration;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,8,import org.jsoup.select.Elements;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,7,mport java.io.*;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,10,import java.io.BufferedReader;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,11,import java.io.ByteArrayOutputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,12,import java.io.File;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,13,import java.io.FileInputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,14,import java.io.IOException;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,15,import java.io.InputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,16,import java.io.InputStreamReader;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,17,import java.io.OutputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,18,import java.io.RandomAccessFile;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,22,import java.util.Locale;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,14,mport java.util.Locale;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,21,"rivate static final Pattern charsetPattern = Pattern.compile(""(?i)\\bcharset=\\s*(?:\""|')?([^\\s,;\""']*)"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,32,"private static final Pattern charsetPattern = Pattern.compile(""(?i)\\bcharset=\\s*(?:[\""'])?([^\\s,;\""']*)"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,23,rivate static final int bufferSize = 0x20000; // ~130K.
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,24,rivate static final int UNICODE_BOM = 0xFEFF;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,34,private static final int firstReadBufferSize = 1024 * 5;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,35,static final int bufferSize = 1024 * 32;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,40,yteBuffer byteData = readFileToByteBuffer(in);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,41,"eturn parseByteData(byteData, charsetName, baseUri, Parser.htmlParser());"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,51,"return parseInputStream(new FileInputStream(in), charsetName, baseUri, Parser.htmlParser());"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,53,yteBuffer byteData = readToByteBuffer(in);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,54,"eturn parseByteData(byteData, charsetName, baseUri, Parser.htmlParser());"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,63,"return parseInputStream(in, charsetName, baseUri, Parser.htmlParser());"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,67,yteBuffer byteData = readToByteBuffer(in);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,68,"eturn parseByteData(byteData, charsetName, baseUri, parser);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,76,"return parseInputStream(in, charsetName, baseUri, parser);"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,85,"/ reads bytes first into a buffer, then decodes with the appropriate charset. done this way to support"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,86,/ switching the chartset midstream when a meta http-equiv tag defines the charset.
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,87,/ todo - this is getting gnarly. needs a rewrite.
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,88,"tatic Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,89,tring docData;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,93,"static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException  {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,94,if (input == null) // empty body
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,95,return new Document(baseUri);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,97,if (!(input instanceof ConstrainableInputStream))
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,98,"input = new ConstrainableInputStream(input, bufferSize, 0);"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,91,f (charsetName == null) { // determine from meta. safe parse as UTF-8
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,92,"/ look for <meta http-equiv=""Content-Type"" content=""text/html;charset=gb2312""> or HTML5 <meta charset=""gb2312"">"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,93,ocData = Charset.forName(defaultCharset).decode(byteData).toString();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,101,boolean fullyRead = false;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,103,// read the start of the stream and look for a BOM or meta charset
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,104,input.mark(firstReadBufferSize);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,105,"ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1); // -1 because we read one more to see if completed"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,106,fullyRead = input.read() == -1;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,107,input.reset();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,109,// look for BOM - overrides any other header or input
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,110,"BomCharset bomCharset = detectCharsetFromBom(firstBytes, charsetName);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,111,if (bomCharset != null) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,112,charsetName = bomCharset.charset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,113,input.skip(bomCharset.offset);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,116,if (charsetName == null) { // determine from meta. safe first parse as UTF-8
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,117,String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,95,"lement meta = doc.select(""meta[http-equiv=content-type], meta[charset]"").first();"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,96,"f (meta != null) { // if not found, will keep utf-8 as best attempt"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,97,tring foundCharset = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,98,"f (meta.hasAttr(""http-equiv"")) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,120,"// look for <meta http-equiv=""Content-Type"" content=""text/html;charset=gb2312""> or HTML5 <meta charset=""gb2312"">"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,121,"Elements metaElements = doc.select(""meta[http-equiv=content-type], meta[charset]"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,122,"String foundCharset = null; // if not found, will keep utf-8 as best attempt"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,123,for (Element meta : metaElements) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,124,"if (meta.hasAttr(""http-equiv""))"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,101,"f (foundCharset == null && meta.hasAttr(""charset"")) {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,102,ry {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,103,"f (Charset.isSupported(meta.attr(""charset""))) {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,104,"oundCharset = meta.attr(""charset"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,106, catch (IllegalCharsetNameException e) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,107,oundCharset = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,126,"if (foundCharset == null && meta.hasAttr(""charset""))"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,127,"foundCharset = meta.attr(""charset"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,128,if (foundCharset != null)
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,129,break;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,111,f (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,112,"oundCharset = foundCharset.trim().replaceAll(""[\""']"", """");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,113,harsetName = foundCharset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,114,yteData.rewind();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,115,ocData = Charset.forName(foundCharset).decode(byteData).toString();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,116,oc = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,132,// look for <?xml encoding='ISO-8859-1'?>
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,133,if (foundCharset == null && doc.childNodeSize() > 0 && doc.childNode(0) instanceof XmlDeclaration) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,134,XmlDeclaration prolog = (XmlDeclaration) doc.childNode(0);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,135,"if (prolog.name().equals(""xml""))"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,136,"foundCharset = prolog.attr(""encoding"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,138,foundCharset = validateCharset(foundCharset);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,139,if (foundCharset != null && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode. (case insensitive check here to match how validate works)
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,140,"foundCharset = foundCharset.trim().replaceAll(""[\""']"", """");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,141,charsetName = foundCharset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,142,doc = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,143,} else if (!fullyRead) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,144,doc = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,121,ocData = Charset.forName(charsetName).decode(byteData).toString();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,123,/ UTF-8 BOM indicator. takes precedence over everything else. rarely used. re-decodes incase above decoded incorrectly
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,124,f (docData.length() > 0 && docData.charAt(0) == UNICODE_BOM) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,125,yteData.rewind();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,126,ocData = Charset.forName(defaultCharset).decode(byteData).toString();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,127,ocData = docData.substring(1);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,128,harsetName = defaultCharset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,129,oc = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,132,"oc = parser.parseInput(docData, baseUri);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,150,if (charsetName == null)
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,151,charsetName = defaultCharset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,152,"BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,153,"doc = parser.parseInput(reader, baseUri);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,156,input.close();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,139, Read the input stream into a byte buffer.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,161,"* Read the input stream into a byte buffer. To deal with slow input streams, you may interrupt the thread this"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,162,* method is executing on. The data read until being interrupted will be available.
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,145,"tatic ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,168,"public static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,148,yte[] buffer = new byte[bufferSize];
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,149,yteArrayOutputStream outStream = new ByteArrayOutputStream(bufferSize);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,171,final byte[] buffer = new byte[capped && maxSize < bufferSize ? maxSize : bufferSize];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,172,final ByteArrayOutputStream outStream = new ByteArrayOutputStream(capped ? maxSize : bufferSize);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,157,f (read > remaining) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,181,if (read >= remaining) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,201,f (charset.length() == 0) return null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,202,ry {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,203,f (Charset.isSupported(charset)) return charset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,204,harset = charset.toUpperCase(Locale.ENGLISH);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,205,f (Charset.isSupported(charset)) return charset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,206, catch (IllegalCharsetNameException e) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,207,/ if our advanced charset matching fails.... we just take the default
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,208,eturn null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,225,return validateCharset(charset);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,227,return null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,230,private static String validateCharset(String cs) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,231,if (cs == null || cs.length() == 0) return null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,232,"cs = cs.trim().replaceAll(""[\""']"", """");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,233,try {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,234,if (Charset.isSupported(cs)) return cs;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,235,cs = cs.toUpperCase(Locale.ENGLISH);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,236,if (Charset.isSupported(cs)) return cs;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,237,} catch (IllegalCharsetNameException e) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,238,// if our this charset matching fails.... we just take the default
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,255,"private static BomCharset detectCharsetFromBom(final ByteBuffer byteData, final String charsetName) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,256,byteData.mark();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,257,byte[] bom = new byte[4];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,258,if (byteData.remaining() >= bom.length) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,259,byteData.get(bom);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,260,byteData.rewind();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,262,if (bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == (byte) 0xFE && bom[3] == (byte) 0xFF || // BE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,263,bom[0] == (byte) 0xFF && bom[1] == (byte) 0xFE && bom[2] == 0x00 && bom[3] == 0x00) { // LE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,264,"return new BomCharset(""UTF-32"", 0); // and I hope it's on your system"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,265,} else if (bom[0] == (byte) 0xFE && bom[1] == (byte) 0xFF || // BE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,266,bom[0] == (byte) 0xFF && bom[1] == (byte) 0xFE) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,267,"return new BomCharset(""UTF-16"", 0); // in all Javas"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,268,} else if (bom[0] == (byte) 0xEF && bom[1] == (byte) 0xBB && bom[2] == (byte) 0xBF) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,269,"return new BomCharset(""UTF-8"", 3); // in all Javas"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,270,// 16 and 32 decoders consume the BOM to determine be/le; utf-8 should be consumed here
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,272,return null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,275,private static class BomCharset {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,276,private final String charset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,277,private final int offset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,279,"public BomCharset(String charset, int offset) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,280,this.charset = charset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,281,this.offset = offset;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,1,ackage org.jsoup.helper;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,3,mport java.util.Iterator;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,4,mport java.util.LinkedList;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,5,mport java.util.ListIterator;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,8, Provides a descending iterator and other 1.6 methods to allow support on the 1.5 JRE.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,9, @param <E> Type of elements
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,11,ublic class DescendableLinkedList<E> extends LinkedList<E> {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,14, Create a new DescendableLinkedList.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,16,ublic DescendableLinkedList() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,17,uper();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,21, Add a new element to the start of the list.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,22, @param e element to add
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,24,Override
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,25,ublic void push(E e) {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,26,ddFirst(e);
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,30," Look at the last element, if there is one."
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,31," @return the last element, or null"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,33,Override
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,34,ublic E peekLast() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,35,eturn size() == 0 ? null : getLast();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,39," Remove and return the last element, if there is one"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,40," @return the last element, or null"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,42,Override
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,43,ublic E pollLast() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,44,eturn size() == 0 ? null : removeLast();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,48, Get an iterator that starts and the end of the list and works towards the start.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,49, @return an iterator that starts and the end of the list and works towards the start.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,51,Override
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,52,ublic Iterator<E> descendingIterator() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,53,eturn new DescendingIterator<E>(size());
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,56,rivate class DescendingIterator<E> implements Iterator<E> {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,57,rivate final ListIterator<E> iter;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,59,"SuppressWarnings(""unchecked"")"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,60,rivate DescendingIterator(int index) {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,61,ter = (ListIterator<E>) listIterator(index);
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,65, Check if there is another element on the list.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,66, @return if another element
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,68,ublic boolean hasNext() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,69,eturn iter.hasPrevious();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,73, Get the next element.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,74, @return the next element.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,76,ublic E next() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,77,eturn iter.previous();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,81, Remove the current element.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,83,ublic void remove() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,84,ter.remove();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,5,import org.jsoup.UncheckedIOException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,7,import org.jsoup.internal.ConstrainableInputStream;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,10,mport javax.net.ssl.*;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,11,mport java.io.*;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,12,import javax.net.ssl.HostnameVerifier;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,13,import javax.net.ssl.HttpsURLConnection;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,14,import javax.net.ssl.SSLContext;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,15,import javax.net.ssl.SSLSession;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,16,import javax.net.ssl.SSLSocketFactory;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,17,import javax.net.ssl.TrustManager;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,18,import javax.net.ssl.X509TrustManager;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,19,import java.io.BufferedWriter;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,20,import java.io.ByteArrayInputStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,21,import java.io.IOException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,22,import java.io.InputStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,23,import java.io.OutputStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,24,import java.io.OutputStreamWriter;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,25,import java.io.UnsupportedEncodingException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,27,import java.net.InetSocketAddress;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,29,import java.net.Proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,30,import java.net.URI;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,22,mport java.util.*;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,39,import java.util.ArrayList;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,40,import java.util.Collection;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,41,import java.util.LinkedHashMap;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,42,import java.util.List;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,43,import java.util.Map;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,47,import static org.jsoup.Connection.Method.HEAD;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,48,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,31,"ublic static final String  CONTENT_ENCODING = ""Content-Encoding"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,55,"public static final String CONTENT_ENCODING = ""Content-Encoding"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,57,* Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,58,"* vs in jsoup, which would otherwise default to {@code Java}. So by default, use a desktop UA."
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,60,public static final String DEFAULT_UA =
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,61,"""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,62,"private static final String USER_AGENT = ""User-Agent"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,66,"private static final int HTTP_TEMP_REDIR = 307; // http/1.1 temporary redirect, not in Java's set."
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,81,* Encodes the input URL into a safe ASCII URL string
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,82,* @param url unescaped URL
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,83,* @return escaped URL
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,49,f(url == null)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,50,eturn null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,51,"eturn url.replaceAll("" "", ""%20"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,86,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,87,URL u = new URL(url);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,88,return encodeUrl(u).toExternalForm();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,89,} catch (Exception e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,90,return url;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,94,static URL encodeUrl(URL u) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,95,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,96,"//  odd way to encode urls, but it works!"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,97,String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,98,"urlS = urlS.replaceAll("" "", ""%20"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,99,final URI uri = new URI(urlS);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,100,return new URL(uri.toASCIIString());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,101,} catch (Exception e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,102,return u;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,135,public Connection proxy(Proxy proxy) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,136,req.proxy(proxy);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,137,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,140,"public Connection proxy(String host, int port) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,141,"req.proxy(host, port);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,142,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,85,"eq.header(""User-Agent"", userAgent);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,147,"req.header(USER_AGENT, userAgent);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,231,public Connection.KeyVal data(String key) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,232,"Validate.notEmpty(key, ""Data key must not be empty"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,233,for (Connection.KeyVal keyVal : request().data()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,234,if (keyVal.key().equals(key))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,235,return keyVal;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,237,return null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,240,public Connection requestBody(String body) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,241,req.requestBody(body);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,242,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,250,"public Connection headers(Map<String,String> headers) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,251,"Validate.notNull(headers, ""Header map must not be null"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,252,"for (Map.Entry<String,String> entry : headers.entrySet()) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,253,"req.header(entry.getKey(),entry.getValue());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,255,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,240,"eaders = new LinkedHashMap<String, String>();"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,241,"ookies = new LinkedHashMap<String, String>();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,324,headers = new LinkedHashMap<>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,325,cookies = new LinkedHashMap<>();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,266,eturn getHeaderCaseInsensitive(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,350,String val = getHeaderCaseInsensitive(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,351,if (val != null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,352,// headers should be ISO8859 - but values are often actually UTF-8. Test if it looks like UTF8 and convert if so
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,353,val = fixHeaderEncoding(val);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,355,return val;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,358,private static String fixHeaderEncoding(String val) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,359,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,360,"byte[] bytes = val.getBytes(""ISO-8859-1"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,361,if (!looksLikeUtf8(bytes))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,362,return val;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,363,"return new String(bytes, ""UTF-8"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,364,} catch (UnsupportedEncodingException e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,365,// shouldn't happen as these both always exist
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,366,return val;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,370,private static boolean looksLikeUtf8(byte[] input) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,371,int i = 0;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,372,// BOM:
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,373,if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,374,&& (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,375,i = 3;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,378,int end;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,379,for (int j = input.length; i < j; ++i) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,380,int o = input[i];
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,381,if ((o & 0x80) == 0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,382,continue; // ASCII
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,385,// UTF-8 leading:
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,386,if ((o & 0xE0) == 0xC0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,387,end = i + 1;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,388,} else if ((o & 0xF0) == 0xE0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,389,end = i + 2;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,390,} else if ((o & 0xF8) == 0xF0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,391,end = i + 3;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,392,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,393,return false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,396,while (i < end) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,397,i++;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,398,o = input[i];
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,399,if ((o & 0xC0) != 0x80) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,400,return false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,404,return true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,306,alue = headers.get(name.toLowerCase());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,value = headers.get(lowerCase(name));
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,316,tring lc = name.toLowerCase();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,454,String lc = lowerCase(name);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,318,f (entry.getKey().toLowerCase().equals(lc))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,456,if (lowerCase(entry.getKey()).equals(lc))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,491,private Proxy proxy; // nullable
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,496,private String body = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,365,imeoutMilliseconds = 3000;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,505,timeoutMilliseconds = 30000; // 30 seconds
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,368,ata = new ArrayList<Connection.KeyVal>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,508,data = new ArrayList<>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,511,"headers.put(USER_AGENT, DEFAULT_UA);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,515,public Proxy proxy() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,516,return proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,519,public Request proxy(Proxy proxy) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,520,this.proxy = proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,521,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,524,"public Request proxy(String host, int port) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,525,"this.proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(host, port));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,526,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,594,public Connection.Request requestBody(String body) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,595,this.body = body;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,596,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,599,public String requestBody() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,600,return body;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,632,private InputStream bodyStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,636,private boolean inputStreamRead = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,667,final boolean methodHasBody = req.method().hasBody();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,668,final boolean hasRequestBody = req.requestBody() != null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,669,if (!methodHasBody)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,670,"Validate.isFalse(hasRequestBody, ""Cannot set a request body for HTTP method "" + req.method());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,504,f (!req.method().hasBody() && req.data().size() > 0) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,505,erialiseRequestUrl(req); // appends query string
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,506, else if (req.method().hasBody()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,674,if (req.data().size() > 0 && (!methodHasBody || hasRequestBody))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,675,serialiseRequestUrl(req);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,676,else if (methodHasBody)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,523,eq.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,524,eq.data().clear();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,693,if (status != HTTP_TEMP_REDIR) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,694,req.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,695,req.data().clear();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,696,req.requestBody(null);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,697,req.removeHeader(CONTENT_TYPE);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,529,"eq.url(StringUtil.resolve(req.url(), encodeUrl(location)));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,703,"URL redir = StringUtil.resolve(req.url(), location);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,704,req.url(encodeUrl(redir));
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,558,"f (conn.getContentLength() != 0) { // -1 means unknown, chunked. sun throws an IO exception on 500 response with no content when trying to read body"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,559,nputStream bodyStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,560,nputStream dataStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,561,ry {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,562,ataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,563,"odyStream = res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,564,ew BufferedInputStream(new GZIPInputStream(dataStream)) :
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,565,ew BufferedInputStream(dataStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,567,"es.byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,568, finally {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,569,f (bodyStream != null) bodyStream.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,570,f (dataStream != null) dataStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,733,"if (conn.getContentLength() != 0 && req.method() != HEAD) { // -1 means unknown, chunked. sun throws an IO exception on 500 response with no content when trying to read body"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,734,res.bodyStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,735,res.bodyStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,736,"if (res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip""))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,737,res.bodyStream = new GZIPInputStream(res.bodyStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,738,"res.bodyStream = new ConstrainableInputStream(res.bodyStream, DataUtil.bufferSize, req.maxBodySize());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,575, finally {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,742,} catch (IOException e){
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,746,throw e;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,765,public Response charset(String charset) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,766,this.charset = charset;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,767,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,603,"ocument doc = DataUtil.parseByteData(byteData, charset, url.toExternalForm(), req.parser());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,604,yteData.rewind();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,776,"if (byteData != null) { // bytes have been read in to the buffer, parse that"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,777,bodyStream = new ByteArrayInputStream(byteData.array());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,778,inputStreamRead = false; // ok to reparse if in bytes
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,780,"Validate.isFalse(inputStreamRead, ""Input stream already read and parsed, cannot re-read."");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,781,"Document doc = DataUtil.parseInputStream(bodyStream, charset, url.toExternalForm(), req.parser());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,783,// todo - disconnect here?
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,784,inputStreamRead = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,609,ublic String body() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,788,private void prepareByteData() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,790,if (byteData == null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,791,"Validate.isFalse(inputStreamRead, ""Request has already been read (with .parse())"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,792,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,793,"byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,794,} catch (IOException e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,795,throw new UncheckedIOException(e);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,800,public String body() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,801,prepareByteData();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,622,"alidate.isTrue(executed, ""Request must be executed (with .execute(), .get(), or .post() before getting response body"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,813,prepareByteData();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,817,@Override
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,818,public Connection.Response bufferUp() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,819,prepareByteData();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,820,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,628,ttpURLConnection conn = (HttpURLConnection) req.url().openConnection();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,825,final HttpURLConnection conn = (HttpURLConnection) (
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,826,req.proxy() == null ?
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,827,req.url().openConnection() :
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,828,req.url().openConnection(req.proxy())
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,700, catch (NoSuchAlgorithmException e) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,701,"hrow new IOException(""Can't create unsecure trust manager"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,702, catch (KeyManagementException e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,901,} catch (NoSuchAlgorithmException | KeyManagementException e) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,731,"inal LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,930,"final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<>();"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,745,inal ArrayList<String> vals = new ArrayList<String>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,944,final ArrayList<String> vals = new ArrayList<>();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,790,"/ multipart mode, for files. add the header if we see something with an inputstream, and return a non-null boundary"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,791,oolean needsMulti = false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,792,or (Connection.KeyVal keyVal : req.data()) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,793,f (keyVal.hasInputStream()) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,794,eedsMulti = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,795,reak;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,799,f (needsMulti) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,990,if (req.hasHeader(CONTENT_TYPE)) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,991,// no-op; don't add content type as already set (e.g. for requestBody())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,992,"// todo - if content type already set, we could add charset or boundary if those aren't included"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,994,else if (needsMultipart(req)) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,810,"inal BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1005,"final BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, req.postDataCharset()));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,837, else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1032,} else if (req.requestBody() != null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1033,"// data will be in query string, we're sending a plaintext body"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1034,w.write(req.requestBody());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1036,else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1084,"Validate.isFalse(keyVal.hasInputStream(), ""InputStream data not supported in URL query string."");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1099,private static boolean needsMultipart(Connection.Request req) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1100,"// multipart mode, for files. add the header if we see something with an inputstream, and return a non-null boundary"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1101,boolean needsMulti = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1102,for (Connection.KeyVal keyVal : req.data()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1103,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1104,needsMulti = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1105,break;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,1108,return needsMulti;
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,17, Join a collection of strings by a seperator
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,17,* Join a collection of strings by a separator
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,27, Join a collection of strings by a seperator
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,27,* Join a collection of strings by a separator
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,67," Tests if a string is blank: null, emtpy, or only whitespace ("" "", \r\n, \t, etc)"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,67,"* Tests if a string is blank: null, empty, or only whitespace ("" "", \r\n, \t, etc)"
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,86," @return true if only digit chars, false if empty or null or contains non-digit chrs"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,86,"* @return true if only digit chars, false if empty or null or contains non-digit chars"
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,163, @param base the existing absolulte base URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,163,* @param base the existing absolute base URL
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,4,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,16,import javax.xml.transform.TransformerException;
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,19,mport javax.xml.transform.TransformerException;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,21,import java.util.HashMap;
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,24, <p>
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,25," This class is currently <b>experimental</b>, please provide feedback on utility and any problems experienced."
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,26, </p>
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,39,//set the factory to be namespace-aware
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,40,factory.setNamespaceAware(true);
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,68,rotected class W3CBuilder implements NodeVisitor {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,69,protected static class W3CBuilder implements NodeVisitor {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,70,"private static final String xmlnsKey = ""xmlns"";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,71,"private static final String xmlnsPrefix = ""xmlns:"";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,74,"private final HashMap<String, String> namespaces = new HashMap<>(); // prefix => urn"
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,79,lement el = doc.createElement(sourceEl.tagName());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,85,String prefix = updateNamespaces(sourceEl);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,86,String namespace = namespaces.get(prefix);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,88,"Element el = doc.createElementNS(namespace, sourceEl.tagName());"
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,112,"l.setAttribute(attribute.getKey(), attribute.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,121,// valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,122,"String key = attribute.getKey().replaceAll(""[^-a-zA-Z0-9_:.]"", """");"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,123,"if (key.matches(""[a-zA-Z_:][-a-zA-Z0-9_:.]*""))"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,124,"el.setAttribute(key, attribute.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,129,* Finds any namespaces defined in this element. Returns any tag prefix.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,131,private String updateNamespaces(org.jsoup.nodes.Element el) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,132,// scan the element for namespace declarations
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,133,"// like: xmlns=""blah"" or xmlns:prefix=""blah"""
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,134,Attributes attributes = el.attributes();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,135,for (Attribute attr : attributes) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,136,String key = attr.getKey();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,137,String prefix;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,138,if (key.equals(xmlnsKey)) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,139,"prefix = """";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,140,} else if (key.startsWith(xmlnsPrefix)) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,141,prefix = key.substring(xmlnsPrefix.length());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,142,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,143,continue;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,145,"namespaces.put(prefix, attr.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,148,// get the element prefix if any
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,149,"int pos = el.tagName().indexOf("":"");"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,150,"return pos > 0 ? el.tagName().substring(0, pos) : """";"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,1,package org.jsoup.internal;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,3,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,5,import java.io.BufferedInputStream;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,6,import java.io.IOException;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,7,import java.io.InputStream;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,10,"* A jsoup internal class (so don't use it as there is no contract API) that enables constraints on an Input Stream,"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,11,"* namely a maximum read size, and the ability to Thread.interrupt() the read."
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,13,public final class ConstrainableInputStream extends BufferedInputStream {
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,14,private final boolean capped;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,15,private int remaining;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,17,"public ConstrainableInputStream(InputStream in, int bufferSize, int maxSize) {"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,18,"super(in, bufferSize);"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,19,Validate.isTrue(maxSize >= 0);
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,20,remaining = maxSize;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,21,capped = maxSize != 0;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,24,@Override
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,25,"public int read(byte[] b, int off, int len) throws IOException {"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,26,if (Thread.interrupted() || remaining < 0)
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,27,return -1;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,29,"final int read = super.read(b, off, len);"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,30,if (capped) {
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,31,remaining -= read;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,33,return read;
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,1,package org.jsoup.internal;
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,3,import java.util.Locale;
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,6,"* Util methods for normalizing strings. Jsoup internal use only, please don't depend on this API."
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,8,public final class Normalizer {
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,10,public static String lowerCase(final String input) {
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,11,return input.toLowerCase(Locale.ENGLISH);
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,14,public static String normalize(final String input) {
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,15,return lowerCase(input).trim();
True,src/main/java/org/jsoup/internal/package-info.java,src/main/java/org/jsoup/internal/package-info.java,2,* Util methods used by Jsoup. Please don't depend on the APIs implemented here as the contents may change without
True,src/main/java/org/jsoup/internal/package-info.java,src/main/java/org/jsoup/internal/package-info.java,3,* notice.
True,src/main/java/org/jsoup/internal/package-info.java,src/main/java/org/jsoup/internal/package-info.java,5,package org.jsoup.internal;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,3,import org.jsoup.SerializationException;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,6,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,25, @param key attribute key
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,27,* @param key attribute key; case is preserved.
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,30,alidate.notEmpty(key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,32,Validate.notNull(key);
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,32,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,34,this.key = key.trim();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,35,"Validate.notEmpty(key); // trimming could potentially make empty, so validate here"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,45,et the attribute key. Gets normalised as per the constructor method.
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,48,Set the attribute key; case is preserved.
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,50,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,53,this.key = key.trim();
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,78,"tml(accum, (new Document("""")).outputSettings());"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,82,try {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,83,"html(accum, (new Document("""")).outputSettings());"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,84,} catch(IOException exception) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,85,throw new SerializationException(exception);
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,82,"rotected void html(StringBuilder accum, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,90,"protected void html(Appendable accum, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,118, @param out Outputsettings
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,126,* @param out output settings
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,3,import org.jsoup.SerializationException;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,5,mport java.util.*;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,6,import java.io.IOException;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,7,import java.util.AbstractMap;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,8,import java.util.AbstractSet;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,9,import java.util.ArrayList;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,10,import java.util.Collections;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,11,import java.util.Iterator;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,12,import java.util.LinkedHashMap;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,13,import java.util.List;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,14,import java.util.Map;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,15,import java.util.Set;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,10, Attributes are treated as a map: there can be only one value associated with an attribute key.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,20,* Attributes are treated as a map: there can be only one value associated with an attribute key/name.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,13," Attribute key and value comparisons are done case insensitively, and keys are normalised to"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,14, lower-case.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,23,"* Attribute name and value comparisons are  <b>case sensitive</b>. By default for HTML, attribute names are"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,24,* normalized to lower-case on parsing. That means you should use lower-case strings when referring to attributes by
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,25,* name.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,28,param key the attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,39,@param key the (case-sensitive) attribute key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,38,ttribute attr = attributes.get(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,49,Attribute attr = attributes.get(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,50,"return attr != null ? attr.getValue() : """";"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,54,* Get an attribute's value by case-insensitive key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,55,* @param key the attribute name
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,56,* @return the first matching attribute value if set; or empty string if not set.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,58,public String getIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,59,Attribute attr = getAttributeIgnoreCase(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,63,private Attribute getAttributeIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,64,Validate.notEmpty(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,65,if (attributes == null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,66,return null;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,68,Attribute attr = attributes.get(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,69,if (attr != null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,70,return attr;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,72,for (String attrKey : attributes.keySet()) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,73,if (attrKey.equalsIgnoreCase(key))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,74,return attributes.get(attrKey);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,76,return null;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,89,"void putIgnoreCase(String key, String value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,90,Attribute oldAttr = getAttributeIgnoreCase(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,91,if (oldAttr != null && !oldAttr.getKey().equals(key)) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,92,attributes.remove(oldAttr.getKey());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,95,"put(key, value);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,71,"ttributes = new LinkedHashMap<String, Attribute>(2);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,117,attributes = new LinkedHashMap<>(2);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,76,emove an attribute by key.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,122,Remove an attribute by key. <b>Case sensitive.</b>
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,83,ttributes.remove(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,129,attributes.remove(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,133,Remove an attribute by key. <b>Case insensitive.</b>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,134,@param key attribute key to remove
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,136,public void removeIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,137,Validate.notEmpty(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,138,if (attributes == null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,139,return;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,140,for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,141,String attrKey = it.next();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,142,if (attrKey.equalsIgnoreCase(key))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,143,it.remove();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,88,param key key to check for
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,149,@param key case-sensitive key to check for
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,92,eturn attributes != null && attributes.containsKey(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,153,return attributes != null && attributes.containsKey(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,157,Tests if these attributes contain an attribute with this key.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,158,@param key key to check for
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,159,"@return true if key exists, false otherwise"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,161,public boolean hasKeyIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,162,if (attributes == null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,163,return false;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,164,for (String attrKey : attributes.keySet()) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,165,if (attrKey.equalsIgnoreCase(key))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,166,return true;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,168,return false;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,113,"ttributes = new LinkedHashMap<String, Attribute>(incoming.size());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,189,attributes = new LinkedHashMap<>(incoming.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,118,eturn asList().iterator();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,194,if (attributes == null || attributes.isEmpty()) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,195,return Collections.<Attribute>emptyList().iterator();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,198,return attributes.values().iterator();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,130,ist<Attribute> list = new ArrayList<Attribute>(attributes.size());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,210,List<Attribute> list = new ArrayList<>(attributes.size());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,229,@throws SerializationException if the HTML representation of the attributes cannot be constructed.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,152,"tml(accum, (new Document("""")).outputSettings()); // output settings a bit funky, but this html() seldom used"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,233,try {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,234,"html(accum, (new Document("""")).outputSettings()); // output settings a bit funky, but this html() seldom used"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,235,} catch (IOException e) { // ought never happen
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,236,throw new SerializationException(e);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,156,"oid html(StringBuilder accum, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,241,"void html(Appendable accum, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,207,"lone.attributes = new LinkedHashMap<String, Attribute>(attributes.size());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,292,clone.attributes = new LinkedHashMap<>(attributes.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,217,"ttributes = new LinkedHashMap<String, Attribute>(2);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,302,attributes = new LinkedHashMap<>(2);
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,3,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,32,"oid outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,34,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,41,"oid outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,43,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,3,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,42,"oid outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,44,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,46,"oid outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,48,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,5,import org.jsoup.parser.ParseSettings;
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,30,"uper(Tag.valueOf(""#root""), baseUri);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,31,"super(Tag.valueOf(""#root"", ParseSettings.htmlDefault), baseUri);"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,39,tatic public Document createShell(String baseUri) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,40,public static Document createShell(String baseUri) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,106,"eturn new Element(Tag.valueOf(tagName), this.baseUri());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,107,"return new Element(Tag.valueOf(tagName, ParseSettings.preserveCase), this.baseUri());"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,139,ist<Node> toMove = new ArrayList<Node>();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,140,List<Node> toMove = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,161,ist<Node> toMove = new ArrayList<Node>();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,162,List<Node> toMove = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,164,or (Node node : dupe.childNodes)
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,165,oMove.add(node);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,165,toMove.addAll(dupe.childNodes);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,298, <li>An exsiting element gets updated with the current charset</li>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,298,* <li>An existing element gets updated with the current charset</li>
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,335,"f (decl.attr(XmlDeclaration.DECL_KEY).equals(""xml"")) {"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,335,"if (decl.name().equals(""xml"")) {"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,357, else {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,358,/ Unsupported syntax - nothing to do yet
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,375,rivate CharsetEncoder charsetEncoder = charset.newEncoder();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,425,harsetEncoder = charset.newEncoder();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,440,eturn charsetEncoder;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,436,return charset.newEncoder();
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,3,import java.io.IOException;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,12,"public static final String PUBLIC_KEY = ""PUBLIC"";"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,13,"public static final String SYSTEM_KEY = ""SYSTEM"";"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,15,"private static final String PUB_SYS_KEY = ""pubSysKey""; // PUBLIC or SYSTEM"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,32,if (has(PUBLIC_ID)) {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,33,"attr(PUB_SYS_KEY, PUBLIC_KEY);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,35,"attr(SYSTEM_ID, systemId);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,39,* Create a new doctype element.
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,40,* @param name the doctype's name
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,41,* @param publicId the doctype's public ID
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,42,* @param systemId the doctype's system ID
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,43,* @param baseUri the doctype's base URI
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,45,"public DocumentType(String name, String pubSysKey, String publicId, String systemId, String baseUri) {"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,46,super(baseUri);
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,48,"attr(NAME, name);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,49,if (pubSysKey != null) {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,50,"attr(PUB_SYS_KEY, pubSysKey);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,52,"attr(PUBLIC_ID, publicId);"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,36,"oid outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,62,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,71,if (has(PUB_SYS_KEY))
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,72,"accum.append("" "").append(attr(PUB_SYS_KEY));"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,46,"ccum.append("" PUBLIC \"""").append(attr(PUBLIC_ID)).append('""');"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,74,"accum.append("" \"""").append(attr(PUBLIC_ID)).append('""');"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,53,"oid outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,81,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,5,import org.jsoup.parser.ParseSettings;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,7,mport org.jsoup.select.*;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,9,mport java.util.*;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,8,import org.jsoup.select.Collector;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,9,import org.jsoup.select.Elements;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,10,import org.jsoup.select.Evaluator;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,11,import org.jsoup.select.NodeTraversor;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,12,import org.jsoup.select.NodeVisitor;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,13,import org.jsoup.select.QueryParser;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,14,import org.jsoup.select.Selector;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,16,import java.io.IOException;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,17,import java.lang.ref.WeakReference;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,18,import java.util.ArrayList;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,19,import java.util.Arrays;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,20,import java.util.Collection;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,21,import java.util.Collections;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,22,import java.util.LinkedHashSet;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,23,import java.util.List;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,24,import java.util.Map;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,25,import java.util.Set;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,29,import static org.jsoup.internal.Normalizer.normalize;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,41,private WeakReference<List<Element>> shadowChildrenRef; // points to child elements shadowed from node children
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,46,"* Create a new, standalone element."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,47,* @param tag tag name
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,49,public Element(String tag) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,50,"this(Tag.valueOf(tag), """", new Attributes());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,48, @see Tag#valueOf(String)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,75,"* @see Tag#valueOf(String, ParseSettings)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,77,ag = Tag.valueOf(tagName);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,104,"tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,106,"eturn attributes.get(""id"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,133,"return attributes.getIgnoreCase(""id"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,187,eturn children().get(index);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,214,return childElementsList().get(index);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,195," @return child elements. If this element has no children, returns an"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,196, empty list.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,222,"* @return child elements. If this element has no children, returns an empty list."
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,200,"/ create on the fly rather than maintaining two lists. if gets slow, memoize, and mark dirty on change"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,201,ist<Element> elements = new ArrayList<Element>(childNodes.size());
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,202,or (Node node : childNodes) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,203,f (node instanceof Element)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,204,lements.add((Element) node);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,226,return new Elements(childElementsList());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,230,"* Maintains a shadow copy of this element's child elements. If the nodelist is changed, this cache is invalidated."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,231,* TODO - think about pulling this out as a helper as there are other shadow lists (like in Attributes) kept around.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,232,* @return a list of child elements
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,234,private List<Element> childElementsList() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,235,List<Element> children;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,236,if (shadowChildrenRef == null || (children = shadowChildrenRef.get()) == null) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,237,final int size = childNodes.size();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,238,children = new ArrayList<>(size);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,239,//noinspection ForLoopReplaceableByForEach (beacause it allocates an Iterator which is wasteful here)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,240,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,241,final Node node = childNodes.get(i);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,242,if (node instanceof Element)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,243,children.add((Element) node);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,245,shadowChildrenRef = new WeakReference<>(children);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,206,eturn new Elements(elements);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,247,return children;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,251,* Clears the cached shadow child elements.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,253,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,254,void nodelistChanged() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,255,super.nodelistChanged();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,256,shadowChildrenRef = null;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,226,ist<TextNode> textNodes = new ArrayList<TextNode>();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,276,List<TextNode> textNodes = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,244,ist<DataNode> dataNodes = new ArrayList<DataNode>();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,294,List<DataNode> dataNodes = new ArrayList<>();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,327,* Check if this element matches the given {@link Selector} CSS query.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,328,* @param cssQuery a {@link Selector} CSS query
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,329,* @return if this element matches the query
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,331,public boolean is(String cssQuery) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,332,return is(QueryParser.parse(cssQuery));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,336,* Check if this element matches the given evaluator.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,337,* @param evaluator an element evaluator
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,338,* @return if this element matches
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,340,public boolean is(Evaluator evaluator) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,341,"return evaluator.matches((Element)this.root(), this);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,341,rrayList<Node> nodes = new ArrayList<Node>(children);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,409,ArrayList<Node> nodes = new ArrayList<>(children);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,416,* Inserts the given child nodes into this element at the specified index. Current nodes will be shifted to the
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,417,"* right. The inserted nodes will be moved from their current parent. To prevent moving, copy the nodes first."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,419,"* @param index 0-based index to insert children at. Specify {@code 0} to insert at the start, {@code -1} at the"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,420,* end
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,421,* @param children child nodes to insert
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,422,"* @return this element, for chaining."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,424,"public Element insertChildren(int index, Node... children) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,425,"Validate.notNull(children, ""Children collection to be inserted must not be null."");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,426,int currentSize = childNodeSize();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,427,if (index < 0) index += currentSize +1; // roll around
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,428,"Validate.isTrue(index >= 0 && index <= currentSize, ""Insert position out of bounds."");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,430,"addChildren(index, children);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,431,return this;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,467,Validate.notNull(text);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,480,Validate.notNull(text);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,505,tringBuilder selector = new StringBuilder(tagName());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,594,// Translate HTML namespace ns:tag to CSS namespace syntax ns|tag
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,595,"String tagName = tagName().replace(':', '|');"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,596,StringBuilder selector = new StringBuilder(tagName);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,530,ist<Element> elements = parent().children();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,621,List<Element> elements = parent().childElementsList();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,549,ist<Element> siblings = parent().children();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,640,List<Element> siblings = parent().childElementsList();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,565,ist<Element> siblings = parent().children();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,656,List<Element> siblings = parent().childElementsList();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,580,ist<Element> siblings = parent().children();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,671,List<Element> siblings = parent().childElementsList();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,589,ublic Integer elementSiblingIndex() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,680,public int elementSiblingIndex() {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,591,"eturn indexInList(this, parent().children());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,682,"return indexInList(this, parent().childElementsList());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,599,ist<Element> siblings = parent().children();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,690,List<Element> siblings = parent().childElementsList();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,603,"rivate static <E extends Element> Integer indexInList(Element search, List<E> elements) {"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,604,alidate.notNull(search);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,605,alidate.notNull(elements);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,694,"private static <E extends Element> int indexInList(Element search, List<E> elements) {"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,608, element = elements.get(i);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,609,f (element == search)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,696,if (elements.get(i) == search)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,612,eturn null;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,699,return 0;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,624,agName = tagName.toLowerCase().trim();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,711,tagName = normalize(tagName);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,673,ey = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,760,key = key.trim();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,686,eyPrefix = keyPrefix.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,773,keyPrefix = keyPrefix.trim();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1001, Get the combined data of this element. Data is e.g. the inside of a {@code script} tag.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1088,* Get the combined data of this element. Data is e.g. the inside of a {@code script} tag. Note that data is NOT the
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1089,"* text of the element. Use {@link #text()} to get the text that would be visible to a user, and {@link #data()}"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1090,"* for the contents of scripts, comments, CSS styles, etc."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1103,} else if (childNode instanceof Comment) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1104,Comment comment = (Comment) childNode;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1105,sb.append(comment.getData());
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1039,et<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1132,Set<String> classNames = new LinkedHashSet<>(Arrays.asList(names));
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1062,"sed by common .class selector, so perf tweaked to reduce object creation vs hitting classnames()."
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1064,"iki: 71, 13 (5.4x)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1065,"NN: 227, 91 (2.5x)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1066,"lterslash: 59, 4 (14.8x)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1067,"soup: 14, 1 (14x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1154,// performance sensitive
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1070,"tring classAttr = attributes.get(""class"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1071,"f (classAttr.equals("""") || classAttr.length() < className.length())"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1156,"final String classAttr = attributes.getIgnoreCase(""class"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1157,final int len = classAttr.length();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1158,final int wantLen = className.length();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1160,if (len == 0 || len < wantLen) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1164,"// if both lengths are equal, only need compare the className with the attribute"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1165,if (len == wantLen) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1166,return className.equalsIgnoreCase(classAttr);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1169,"// otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1170,boolean inClass = false;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1171,int start = 0;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1172,for (int i = 0; i < len; i++) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1173,if (Character.isWhitespace(classAttr.charAt(i))) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1174,if (inClass) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1175,"// white space ends a class name, compare it with the requested one, ignore case"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1176,"if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1177,return true;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1179,inClass = false;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1181,} else {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1182,if (!inClass) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1183,// we're in a class name : keep the start of the substring
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1184,inClass = true;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1185,start = i;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1074,inal String[] classes = classSplit.split(classAttr);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1075,or (String name : classes) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1076,f (className.equalsIgnoreCase(name))
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1077,eturn true;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1190,// check the last entry
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1191,if (inClass && len - start == wantLen) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1192,"return classAttr.regionMatches(true, start, className, 0, wantLen);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1155,"oid outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1156,f (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()) )
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1157,"ndent(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1270,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1271,if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1272,if (accum instanceof StringBuilder) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1273,if (((StringBuilder) accum).length() > 0)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1274,"indent(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1275,} else {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1276,"indent(accum, depth, out);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1174,"oid outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1295,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1324,* {@inheritDoc}
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1326,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1327,public <T extends Appendable> T html(T appendable) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1328,for (Node node : childNodes)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1329,node.outerHtml(appendable);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1331,return appendable;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1214,ublic String toString() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1346,public String toString() {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1218,Override
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1219,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1220,f (this == o) return true;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1221,f (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1222,f (!super.equals(o)) return false;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1224,lement element = (Element) o;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1226,eturn tag.equals(element.tag);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1229,Override
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1230,ublic int hashCode() {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1231,nt result = super.hashCode();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1232,esult = 31 * result + (tag != null ? tag.hashCode() : 0);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1233,eturn result;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,3,import org.jsoup.SerializationException;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,5,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,6,import org.jsoup.parser.CharacterReader;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,9,import java.io.BufferedReader;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,12,import java.io.InputStreamReader;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,13,import java.nio.charset.Charset;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,9,mport java.util.*;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,15,import java.util.Arrays;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,16,import java.util.HashMap;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,18,import static org.jsoup.nodes.Entities.EscapeMode.base;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,19,import static org.jsoup.nodes.Entities.EscapeMode.extended;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,27,private static final int empty = -1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,28,"private static final String emptyName = """";"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,29,static final int codepointRadix = 36;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,30,"private static final Charset ASCII = Charset.forName(""ascii"");"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,18,"** Restricted entities suitable for XHTML output: lt, gt, amp, and quot only. */"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,19,"html(xhtmlByVal),"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,20,** Default HTML output entities. */
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,21,"ase(baseByVal),"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,22,** Complete HTML entities. */
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,23,xtended(fullByVal);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,34,"* Restricted entities suitable for XHTML output: lt, gt, amp, and quot only."
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,36,"xhtml(""entities-xhtml.properties"", 4),"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,38,* Default HTML output entities.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,40,"base(""entities-base.properties"", 106),"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,42,* Complete HTML entities.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,44,"extended(""entities-full.properties"", 2125);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,46,// table of named references to their codepoints. sorted so we can binary search. built by BuildEntities.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,47,private String[] nameKeys;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,48,private int[] codeVals; // limitation is the few references with multiple characters; those go into multipoints.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,50,// table of codepoints to named entities.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,51,private int[] codeKeys; // we don' support multicodepoints to single named value currently
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,52,private String[] nameVals;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,54,"EscapeMode(String file, int size) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,55,"load(this, file, size);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,25,"rivate Map<Character, String> map;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,58,int codepointForName(final String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,59,"int index = Arrays.binarySearch(nameKeys, name);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,60,return index >= 0 ? codeVals[index] : empty;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,27,"scapeMode(Map<Character, String> map) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,28,his.map = map;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,63,String nameForCodepoint(final int codepoint) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,64,"final int index = Arrays.binarySearch(codeKeys, codepoint);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,65,if (index >= 0) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,66,"// the results are ordered so lower case versions of same codepoint come after uppercase, and we prefer to emit lower"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,67,// (and binary search for same item with multi results is undefined
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,68,return (index < nameVals.length - 1 && codeKeys[index + 1] == codepoint) ?
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,69,nameVals[index + 1] : nameVals[index];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,71,return emptyName;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,31,"ublic Map<Character, String> getMap() {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,32,eturn map;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,74,private int size() {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,75,return nameKeys.length;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,36,"rivate static final Map<String, Character> full;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,37,"rivate static final Map<Character, String> xhtmlByVal;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,38,"rivate static final Map<String, Character> base;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,39,"rivate static final Map<Character, String> baseByVal;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,40,"rivate static final Map<Character, String> fullByVal;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,79,"private static final HashMap<String, String> multipoints = new HashMap<>(); // name -> multiple character references"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,42,rivate Entities() {}
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,81,private Entities() {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,49,ublic static boolean isNamedEntity(String name) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,50,eturn full.containsKey(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,90,public static boolean isNamedEntity(final String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,91,return extended.codepointForName(name) != empty;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,59,ublic static boolean isBaseNamedEntity(String name) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,60,eturn base.containsKey(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,101,public static boolean isBaseNamedEntity(final String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,102,return base.codepointForName(name) != empty;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,110,* @deprecated does not support characters outside the BMP or multiple character names
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,69,eturn full.get(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,113,return (char) extended.codepointForName(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,117,* Get the character(s) represented by the named entity
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,119,"* @param name entity (e.g. ""lt"" or ""amp"")"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,120,"* @return the string value of the character(s) represented by this entity, or """" if not defined"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,122,public static String getByName(String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,123,String val = multipoints.get(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,124,if (val != null)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,125,return val;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,126,int codepoint = extended.codepointForName(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,127,if (codepoint != empty)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,128,"return new String(new int[]{codepoint}, 0, 1);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,129,return emptyName;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,132,"public static int codepointsForName(final String name, final int[] codepoints) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,133,String val = multipoints.get(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,134,if (val != null) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,135,codepoints[0] = val.codePointAt(0);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,136,codepoints[1] = val.codePointAt(1);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,137,return 2;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,139,int codepoint = extended.codepointForName(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,140,if (codepoint != empty) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,141,codepoints[0] = codepoint;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,142,return 1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,144,return 0;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,74,"scape(accum, string, out, false, false, false);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,149,try {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,150,"escape(accum, string, out, false, false, false);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,151,} catch (IOException e) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,152,throw new SerializationException(e); // doesn't happen
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,79,"tatic void escape(StringBuilder accum, String string, Document.OutputSettings out,"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,80,"oolean inAttribute, boolean normaliseWhite, boolean stripLeadingWhite) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,158,"static void escape(Appendable accum, String string, Document.OutputSettings out,"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,159,"boolean inAttribute, boolean normaliseWhite, boolean stripLeadingWhite) throws IOException {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,87,"inal Map<Character, String> map = escapeMode.getMap();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,142,lse if (map.containsKey(c))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,143,ccum.append('&').append(map.get(c)).append(';');
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,145,"ccum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,221,"appendEncoded(accum, escapeMode, codePoint);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,152,"ccum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,228,"appendEncoded(accum, escapeMode, codePoint);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,233,"private static void appendEncoded(Appendable accum, EscapeMode escapeMode, int codePoint) throws IOException {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,234,final String name = escapeMode.nameForCodepoint(codePoint);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,235,if (name != emptyName) // ok for identity check
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,236,accum.append('&').append(name).append(';');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,237,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,238,"accum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,293,"private static final char[] codeDelims = {',', ';'};"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,210,/ xhtml has restricted entities
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,211,rivate static final Object[][] xhtmlArray = {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,212,"""quot"", 0x00022},"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,213,"""amp"", 0x00026},"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,214,"""lt"", 0x0003C},"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,215,"""gt"", 0x0003E}"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,218,tatic {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,219,"htmlByVal = new HashMap<Character, String>();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,220,"ase = loadEntities(""entities-base.properties"");  // most common / default"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,221,aseByVal = toCharacterKey(base);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,222,"ull = loadEntities(""entities-full.properties""); // extended and overblown."
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,223,ullByVal = toCharacterKey(full);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,225,or (Object[] entity : xhtmlArray) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,226,haracter c = Character.valueOf((char) ((Integer) entity[1]).intValue());
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,227,"htmlByVal.put(c, ((String) entity[0]));"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,295,"private static void load(EscapeMode e, String file, int size) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,296,e.nameKeys = new String[size];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,297,e.codeVals = new int[size];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,298,e.codeKeys = new int[size];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,299,e.nameVals = new String[size];
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,231,"rivate static Map<String, Character> loadEntities(String filename) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,232,roperties properties = new Properties();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,233,"ap<String, Character> entities = new HashMap<String, Character>();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,234,ry {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,235,nputStream in = Entities.class.getResourceAsStream(filename);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,236,roperties.load(in);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,237,n.close();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,238, catch (IOException e) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,239,"hrow new MissingResourceException(""Error loading entities resource: "" + e.getMessage(), ""Entities"", filename);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,301,InputStream stream = Entities.class.getResourceAsStream(file);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,302,if (stream == null)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,303,"throw new IllegalStateException(""Could not read resource "" + file + "". Make sure you copy resources for "" + Entities.class.getCanonicalName());"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,242,or (Map.Entry entry: properties.entrySet()) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,243,"haracter val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,244,tring name = (String) entry.getKey();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,245,"ntities.put(name, val);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,247,eturn entities;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,305,int i = 0;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,306,"BufferedReader input = new BufferedReader(new InputStreamReader(stream, ASCII));"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,307,CharacterReader reader = new CharacterReader(input);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,250,"rivate static Map<Character, String> toCharacterKey(Map<String, Character> inMap) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,251,"ap<Character, String> outMap = new HashMap<Character, String>();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,252,"or (Map.Entry<String, Character> entry: inMap.entrySet()) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,253,haracter character = entry.getValue();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,254,tring name = entry.getKey();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,309,while (!reader.isEmpty()) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,310,"// NotNestedLessLess=10913,824;1887"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,256,f (outMap.containsKey(character)) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,257,"/ dupe, prefer the lower case version"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,258,f (name.toLowerCase().equals(name))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,259,"utMap.put(character, name);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,312,final String name = reader.consumeTo('=');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,313,reader.advance();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,314,"final int cp1 = Integer.parseInt(reader.consumeToAny(codeDelims), codepointRadix);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,315,final char codeDelim = reader.current();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,316,reader.advance();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,317,final int cp2;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,318,"if (codeDelim == ',') {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,319,"cp2 = Integer.parseInt(reader.consumeTo(';'), codepointRadix);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,320,reader.advance();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,261,"utMap.put(character, name);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,322,cp2 = empty;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,324,String indexS = reader.consumeTo('\n');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,325,"// default git checkout on windows will add a \r there, so remove"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,326,if (indexS.charAt(indexS.length() - 1) == '\r') {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,327,"indexS = indexS.substring(0, indexS.length() - 1);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,329,"final int index = Integer.parseInt(indexS, codepointRadix);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,330,reader.advance();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,332,e.nameKeys[i] = name;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,333,e.codeVals[i] = cp1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,334,e.codeKeys[index] = cp1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,335,e.nameVals[index] = name;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,337,if (cp2 != empty) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,338,"multipoints.put(name, new String(new int[]{cp1, cp2}, 0, 2));"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,340,i++;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,264,eturn outMap;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,342,"Validate.isTrue(i == size, ""Unexpected count of entities loaded for "" + file);"
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,73,rrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,73,ArrayList<Connection.KeyVal> data = new ArrayList<>();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,3,import org.jsoup.SerializationException;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,4,import org.jsoup.helper.ChangeNotifyingArrayList;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,9,mport java.net.MalformedURLException;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,10,mport java.net.URL;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,11,import java.io.IOException;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,14,import java.util.Iterator;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,18,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,61, Get an attribute's value by its key.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,65,* Get an attribute's value by its key. <b>Case insensitive</b>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,78,f (attributes.hasKey(attributeKey))
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,79,eturn attributes.get(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,80,"lse if (attributeKey.toLowerCase().startsWith(""abs:""))"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,82,String val = attributes.getIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,83,if (val.length() > 0)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,84,return val;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,85,"else if (lowerCase(attributeKey).startsWith(""abs:""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,94," Set an attribute (key=value). If the attribute already exists, it is replaced."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,99,"* Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,100,* <b>case insensitive</b>.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,100,"ttributes.put(attributeKey, attributeValue);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,106,"attributes.putIgnoreCase(attributeKey, attributeValue);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,105, Test if this element has an attribute.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,111,* Test if this element has an attribute. <b>Case insensitive</b>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,114,"f (attributes.hasKey(key) && !absUrl(key).equals(""""))"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,120,"if (attributes.hasKeyIgnoreCase(key) && !absUrl(key).equals(""""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,117,eturn attributes.hasKey(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,123,return attributes.hasKeyIgnoreCase(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,127,ttributes.remove(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,133,attributes.removeIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,134,return this;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,138,* Clear (remove) all of the attributes in this node.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,139,"* @return this, for chaining"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,141,public Node clearAttributes() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,142,Iterator<Attribute> it = attributes.iterator();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,143,while (it.hasNext()) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,144,it.next();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,145,it.remove();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,213,ist<Node> children = new ArrayList<Node>(childNodes.size());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,232,List<Node> children = new ArrayList<>(childNodes.size());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,241,"ets this node's parent node. Node overridable by extending classes, so useful if you really just need the Node type."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,260,"Gets this node's parent node. Not overridable by extending classes, so useful if you really just need the Node type."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,268,"* Get this node's root node; that is, its topmost ancestor. If this node is the top ancestor, returns {@code this}."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,269,* @return topmost ancestor.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,271,public Node root() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,272,Node node = this;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,273,while (node.parentNode != null)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,274,node = node.parentNode;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,275,return node;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,253,f (this instanceof Document)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,254,eturn (Document) this;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,255,lse if (parentNode == null)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,256,eturn null;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,257,lse
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,258,eturn parentNode.ownerDocument();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,283,Node root = root();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,284,return (root instanceof Document) ? (Document) root : null;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,375,//noinspection ForLoopReplaceableByForEach (beacause it allocates an Iterator which is wasteful here)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,418,void nodelistChanged() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,419,// Element overrides this to clear its shadow children elements
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,433,Validate.notNull(parentNode);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,472,ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,443,nsureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,477,reindexChildren(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,446,eindexChildren(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,451,hildNodes = new ArrayList<Node>(4);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,483,childNodes = new NodeList(4);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,477,ist<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,509,List<Node> siblings = new ArrayList<>(nodes.size() - 1);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,550,rotected void outerHtml(StringBuilder accum) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,582,protected void outerHtml(Appendable accum) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,556,"eturn ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,588,Document owner = ownerDocument();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,589,"return owner != null ? owner.outputSettings() : (new Document("""")).outputSettings();"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,595,@throws IOException if appending to the given accumulator fails.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,563,"bstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,597,"abstract void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException;"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,565,"bstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,599,"abstract void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException;"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,567,Override
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,568,ublic String toString() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,602,* Write this node and its children to the given {@link Appendable}.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,604,* @param appendable the {@link Appendable} to write to.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,605,"* @return the supplied {@link Appendable}, for chaining."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,607,public <T extends Appendable> T html(T appendable) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,608,outerHtml(appendable);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,609,return appendable;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,612,public String toString() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,572,"rotected void indent(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,616,"protected void indent(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,577, Check if this node is equal to another node. A node is considered equal if its attributes and content equal the
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,578, other node; particularly its position in the tree does not influence its equality.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,621,* Check if this node is the same instance of another (object identity test).
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,624,* @see Node#hasSameValue(Object) to compare nodes by their value
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,584,f (this == o) return true;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,585,f (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,587,ode node = (Node) o;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,589,f (childNodes != null ? !childNodes.equals(node.childNodes) : node.childNodes != null) return false;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,590,eturn !(attributes != null ? !attributes.equals(node.attributes) : node.attributes != null);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,628,// implemented just so that javadoc is clear this is an identity test
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,629,return this == o;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,594," Calculates a hash code for this node, which includes iterating all its attributes, and recursing into any child"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,595," nodes. This means that a node's hashcode is based on it and its child content, and not its parent or place in the"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,596," tree. So two nodes with the same content, regardless of their position in the tree, will have the same hashcode."
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,597, @return the calculated hashcode
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,598, @see Node#equals(Object)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,633,"* Check if this node is has the same content as another node. A node is considered the same if its name, attributes and content match the"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,634,* other node; particularly its position in the tree does not influence its similarity.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,635,* @param o other object to compare to
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,636,* @return true if the content of this node is the same as the other
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,600,Override
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,601,ublic int hashCode() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,602,nt result = childNodes != null ? childNodes.hashCode() : 0;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,603,esult = 31 * result + (attributes != null ? attributes.hashCode() : 0);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,604,eturn result;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,639,public boolean hasSameValue(Object o) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,640,if (this == o) return true;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,641,if (o == null || getClass() != o.getClass()) return false;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,643,return this.outerHtml().equals(((Node) o).outerHtml());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,620,inkedList<Node> nodesToProcess = new LinkedList<Node>();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,659,LinkedList<Node> nodesToProcess = new LinkedList<>();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,653,lone.childNodes = new ArrayList<Node>(childNodes.size());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,692,clone.childNodes = new NodeList(childNodes.size());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,655,or (Node child: childNodes)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,656,lone.childNodes.add(child);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,694,clone.childNodes.addAll(childNodes);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,662,rivate StringBuilder accum;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,700,private Appendable accum;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,665,"uterHtmlVisitor(StringBuilder accum, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,703,"OuterHtmlVisitor(Appendable accum, Document.OutputSettings out) {"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,671,"ode.outerHtmlHead(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,709,try {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,710,"node.outerHtmlHead(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,711,} catch (IOException exception) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,712,throw new SerializationException(exception);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,675,"f (!node.nodeName().equals(""#text"")) // saves a void hit."
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,676,"ode.outerHtmlTail(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,717,"if (!node.nodeName().equals(""#text"")) { // saves a void hit."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,718,try {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,719,"node.outerHtmlTail(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,720,} catch (IOException exception) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,721,throw new SerializationException(exception);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,727,private final class NodeList extends ChangeNotifyingArrayList<Node> {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,728,NodeList(int initialCapacity) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,729,super(initialCapacity);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,732,public void onContentsChanged() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,733,nodelistChanged();
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,3,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,31,ublic String nodeName() {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,33,public String nodeName() {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,92,"oid outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,94,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,101,"oid outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,103,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,176,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,177,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,178,f (this == o) return true;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,179,f (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,180,f (!super.equals(o)) return false;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,182,extNode textNode = (TextNode) o;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,184,eturn !(text != null ? !text.equals(textNode.text) : textNode.text != null);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,187,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,188,ublic int hashCode() {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,189,nt result = super.hashCode();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,190,esult = 31 * result + (text != null ? text.hashCode() : 0);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,191,eturn result;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,3,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,5,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,8,"tatic final String DECL_KEY = ""declaration"";"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,12,private final String name;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,13,param data data
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,17,@param name of declaration
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,17,"ublic XmlDeclaration(String data, String baseUri, boolean isProcessingInstruction) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,21,"public XmlDeclaration(String name, String baseUri, boolean isProcessingInstruction) {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,19,"ttributes.put(DECL_KEY, data);"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,23,Validate.notNull(name);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,24,this.name = name;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,* Get the name of this declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,35,* @return name of this declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,37,public String name() {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,return name;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,32,inal String decl = attributes.get(DECL_KEY);
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,"f(decl.equals(""xml"") && attributes.size() > 1 ) {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,35,tringBuilder sb = new StringBuilder(decl);
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,36,"inal String version = attributes.get(""version"");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,f( version != null ) {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,39,"b.append("" version=\"""").append(version).append(""\"""");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,42,"inal String encoding = attributes.get(""encoding"");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,44,f( encoding != null ) {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,45,"b.append("" encoding=\"""").append(encoding).append(""\"""");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,48,eturn sb.toString();
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,50,lse {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,51,eturn attributes.get(DECL_KEY);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,46,"return attributes.html().trim(); // attr html starts with a "" """
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,55,"oid outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,49,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,50,accum
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,51,".append(""<"")"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,52,".append(isProcessingInstruction ? ""!"" : ""?"")"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,53,.append(name);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,54,"attributes.html(accum, out);"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,57,"append(""<"")"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,58,"append(isProcessingInstruction ? ""!"" : ""?"")"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,59,append(getWholeDeclaration())
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,60,"append("">"");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,56,".append(isProcessingInstruction ? ""!"" : ""?"")"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,57,".append("">"");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,63,"oid outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,60,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,3,import org.jsoup.UncheckedIOException;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,6,import java.io.IOException;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,7,import java.io.Reader;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,8,import java.io.StringReader;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,9,haracterReader consumes tokens off a string. To replace the old TokenQueue.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,13,CharacterReader consumes tokens off a string. Used internally by jsoup. API subject to changes.
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,11,inal class CharacterReader {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,15,public final class CharacterReader {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,13,rivate static final int maxCacheLen = 12;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,15,rivate final char[] input;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,16,rivate final int length;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,17,rivate int pos = 0;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,18,rivate int mark = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,17,private static final int maxStringCacheLen = 12;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,18,private static final int maxBufferLen = 1024 * 32;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,19,private static final int readAheadLimit = (int) (maxBufferLen * 0.75);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,21,private final char[] charBuf;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,22,private final Reader reader;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,23,private int bufLength;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,24,private int bufSplitPoint;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,25,private int bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,26,private int readerPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,27,private int bufMark;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,21,haracterReader(String input) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,30,"public CharacterReader(Reader input, int sz) {"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,23,his.input = input.toCharArray();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,24,his.length = this.input.length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,32,Validate.isTrue(input.markSupported());
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,33,reader = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,34,charBuf = new char[sz > maxBufferLen ? maxBufferLen : sz];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,35,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,38,public CharacterReader(Reader input) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,39,"this(input, maxBufferLen);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,27,nt pos() {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,28,eturn pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,42,public CharacterReader(String input) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,43,"this(new StringReader(input), input.length());"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,46,private void bufferUp() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,47,if (bufPos < bufSplitPoint)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,48,return;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,50,try {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,51,readerPos += bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,52,reader.skip(bufPos);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,53,reader.mark(maxBufferLen);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,54,bufLength = reader.read(charBuf);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,55,reader.reset();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,56,bufPos = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,57,bufMark = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,58,bufSplitPoint = bufLength > readAheadLimit ? readAheadLimit : bufLength;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,59,} catch (IOException e) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,60,throw new UncheckedIOException(e);
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,31,oolean isEmpty() {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,32,eturn pos >= length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,65,* Gets the current cursor position in the content.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,66,* @return current position
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,68,public int pos() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,69,return readerPos + bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,73,* Tests if all the content has been read.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,74,* @return true if nothing left to read.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,76,public boolean isEmpty() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,77,return bufPos >= bufLength;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,35,har current() {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,36,eturn pos >= length ? EOF : input[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,81,* Get the char at the current position.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,82,* @return char
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,84,public char current() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,85,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,86,return isEmpty() ? EOF : charBuf[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,40,har val = pos >= length ? EOF : input[pos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,41,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,90,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,91,char val = isEmpty() ? EOF : charBuf[bufPos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,92,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,46,os--;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,97,bufPos--;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,49,oid advance() {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,50,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,101,* Moves the current position by one.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,103,public void advance() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,104,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,54,ark = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,108,bufMark = bufPos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,58,os = mark;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,61,tring consumeAsString() {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,62,"eturn new String(input, pos++, 1);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,112,bufPos = bufMark;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,72,or (int i = pos; i < length; i++) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,73,f (c == input[i])
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,74,eturn i - pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,122,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,123,for (int i = bufPos; i < bufLength; i++) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,124,if (c == charBuf[i])
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,125,return i - bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,137,bufferUp();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,88,or (int offset = pos; offset < length; offset++) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,140,for (int offset = bufPos; offset < bufLength; offset++) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,90,f (startChar != input[offset])
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,91,hile(++offset < length && startChar != input[offset]) { /* empty */ }
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,142,if (startChar != charBuf[offset])
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,143,while(++offset < bufLength && startChar != charBuf[offset]) { /* empty */ }
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,94,f (offset < length && last <= length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,95,"or (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++) { /* empty */ }"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,146,if (offset < bufLength && last <= bufLength) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,147,"for (int j = 1; i < last && seq.charAt(j) == charBuf[i]; i++, j++) { /* empty */ }"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,97,eturn offset - pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,149,return offset - bufPos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,103,tring consumeTo(char c) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,156,* Reads characters up to the specific char.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,157,* @param c the delimiter
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,158,* @return the chars read
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,160,public String consumeTo(char c) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,106,"tring consumed = cacheString(pos, offset);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,107,os += offset;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,163,"String consumed = cacheString(charBuf, stringCache, bufPos, offset);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,164,bufPos += offset;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,117,"tring consumed = cacheString(pos, offset);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,118,os += offset;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,174,"String consumed = cacheString(charBuf, stringCache, bufPos, offset);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,175,bufPos += offset;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,125,tring consumeToAny(final char... chars) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,126,inal int start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,127,inal int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,183,* Read characters until the first of any delimiters is found.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,184,* @param chars delimiters to scan for
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,185,* @return characters read up to the matched delimiter.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,187,public String consumeToAny(final char... chars) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,188,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,189,final int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,190,final int remaining = bufLength;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,191,final char[] val = charBuf;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,129,UTER: while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,193,OUTER: while (bufPos < remaining) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,131,f (input[pos] == c)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,195,if (val[bufPos] == c)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,134,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,198,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,137,"eturn pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,201,"return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : """";"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,141,inal int start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,142,inal int remaining = length;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,143,inal char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,205,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,206,final int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,207,final int remaining = bufLength;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,208,final char[] val = charBuf;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,145,hile (pos < remaining) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,146,"f (Arrays.binarySearch(chars, val[pos]) >= 0)"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,210,while (bufPos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,211,"if (Arrays.binarySearch(chars, val[bufPos]) >= 0)"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,148,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,213,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,151,"eturn pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,216,"return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : """";"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,156,inal int start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,157,inal int remaining = length;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,158,inal char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,221,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,222,final int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,223,final int remaining = bufLength;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,224,final char[] val = charBuf;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,160,hile (pos < remaining) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,161,inal char c = val[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,226,while (bufPos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,227,final char c = val[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,164,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,230,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,167,"eturn pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,233,"return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : """";"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,172,inal int start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,173,inal int remaining = length;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,174,inal char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,238,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,239,final int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,240,final int remaining = bufLength;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,241,final char[] val = charBuf;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,176,hile (pos < remaining) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,177,inal char c = val[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,243,while (bufPos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,244,final char c = val[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,180,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,247,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,183,"eturn pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,250,"return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : """";"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,187,"tring data = cacheString(pos, length-pos);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,188,os = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,254,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,255,"String data = cacheString(charBuf, stringCache, bufPos, bufLength - bufPos);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,256,bufPos = bufLength;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,193,nt start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,194,hile (pos < length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,195,har c = input[pos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,196,f ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'))
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,197,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,261,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,262,int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,263,while (bufPos < bufLength) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,264,char c = charBuf[bufPos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,265,if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c))
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,266,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,202,"eturn cacheString(start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,271,"return cacheString(charBuf, stringCache, start, bufPos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,206,nt start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,207,hile (pos < length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,208,har c = input[pos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,209,f ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'))
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,210,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,275,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,276,int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,277,while (bufPos < bufLength) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,278,char c = charBuf[bufPos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,279,if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c))
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,280,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,215,har c = input[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,285,char c = charBuf[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,217,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,287,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,222,"eturn cacheString(start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,292,"return cacheString(charBuf, stringCache, start, bufPos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,226,nt start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,227,hile (pos < length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,228,har c = input[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,296,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,297,int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,298,while (bufPos < bufLength) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,299,char c = charBuf[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,230,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,301,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,234,"eturn cacheString(start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,305,"return cacheString(charBuf, stringCache, start, bufPos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,238,nt start = pos;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,239,hile (pos < length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,240,har c = input[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,309,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,310,int start = bufPos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,311,while (bufPos < bufLength) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,312,char c = charBuf[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,242,os++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,314,bufPos++;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,246,"eturn cacheString(start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,318,"return cacheString(charBuf, stringCache, start, bufPos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,250,eturn !isEmpty() && input[pos] == c;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,322,return !isEmpty() && charBuf[bufPos] == c;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,327,bufferUp();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,256,f (scanLength > length - pos)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,329,if (scanLength > bufLength - bufPos)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,260,f (seq.charAt(offset) != input[pos+offset])
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,333,if (seq.charAt(offset) != charBuf[bufPos +offset])
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,339,bufferUp();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,267,f (scanLength > length - pos)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,341,if (scanLength > bufLength - bufPos)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,272,har upTarget = Character.toUpperCase(input[pos + offset]);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,346,char upTarget = Character.toUpperCase(charBuf[bufPos + offset]);
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,283,har c = input[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,357,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,358,char c = charBuf[bufPos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,292,"eturn !isEmpty() && Arrays.binarySearch(seq, input[pos]) >= 0;"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,367,bufferUp();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,368,"return !isEmpty() && Arrays.binarySearch(seq, charBuf[bufPos]) >= 0;"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,298,har c = input[pos];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,299,eturn (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,374,char c = charBuf[bufPos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,375,return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c);
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,305,har c = input[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,381,char c = charBuf[bufPos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,386,bufferUp();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,311,os += seq.length();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,388,bufPos += seq.length();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,320,os += seq.length();
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,397,bufPos += seq.length();
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,336,"eturn new String(input, pos, length - pos);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,413,"return new String(charBuf, bufPos, bufLength - bufPos);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,346,"rivate String cacheString(final int start, final int count) {"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,347,inal char[] val = input;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,348,inal String[] cache = stringCache;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,423,"private static String cacheString(final char[] charBuf, final String[] stringCache, final int start, final int count) {"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,351,f (count > maxCacheLen)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,352,"eturn new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,425,if (count > maxStringCacheLen)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,426,"return new String(charBuf, start, count);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,358,ash = 31 * hash + val[offset++];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,432,hash = 31 * hash + charBuf[offset++];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,362,inal int index = hash & cache.length - 1;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,363,tring cached = cache[index];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,436,final int index = hash & stringCache.length - 1;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,437,String cached = stringCache[index];
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,366,"ached = new String(val, start, count);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,367,ache[index] = cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,440,"cached = new String(charBuf, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,441,stringCache[index] = cached;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,369,"f (rangeEquals(start, count, cached)) {"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,370,/ hit
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,443,"if (rangeEquals(charBuf, start, count, cached)) { // hit"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,373,"ached = new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,446,"cached = new String(charBuf, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,447,"stringCache[index] = cached; // update the cache, as recently used strings are more likely to show up again"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,382,"oolean rangeEquals(final int start, int count, final String cached) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,456,"static boolean rangeEquals(final char[] charBuf, final int start, int count, final String cached) {"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,384,har one[] = input;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,388,f (one[i++] != cached.charAt(j++))
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,461,if (charBuf[i++] != cached.charAt(j++))
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,469,// just used for testing
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,470,"boolean rangeEquals(final int start, final int count, final String cached) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,471,"return rangeEquals(charBuf, start, count, cached);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,5,mport org.jsoup.nodes.*;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,5,import org.jsoup.nodes.Comment;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,6,import org.jsoup.nodes.DataNode;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,7,import org.jsoup.nodes.Document;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,8,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,9,import org.jsoup.nodes.FormElement;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,10,import org.jsoup.nodes.Node;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,11,import org.jsoup.nodes.TextNode;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,14,import java.io.Reader;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,15,import java.io.StringReader;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,16,"rivate static final String[] TagsScriptStyle = new String[]{""script"", ""style""};"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,17,"ublic static final String[] TagsSearchInScope = new String[]{""applet"", ""caption"", ""html"", ""table"", ""td"", ""th"", ""marquee"", ""object""};"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,24,"private static final String[] TagsSearchInScope = new String[]{""applet"", ""caption"", ""html"", ""table"", ""td"", ""th"", ""marquee"", ""object""};"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,35,rivate boolean baseUriSetFromDoc = false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,42,private boolean baseUriSetFromDoc;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,39,rivate ArrayList<Element> formattingElements = new ArrayList<Element>(); // active (open) formatting elements
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,40,rivate List<String> pendingTableCharacters = new ArrayList<String>(); // chars in table to be shifted out
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,41,rivate Token.EndTag emptyEnd = new Token.EndTag(); // reused empty end tag
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,46,private ArrayList<Element> formattingElements; // active (open) formatting elements
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,47,private List<String> pendingTableCharacters; // chars in table to be shifted out
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,48,private Token.EndTag emptyEnd; // reused empty end tag
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,43,rivate boolean framesetOk = true; // if ok to go into frameset
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,44,rivate boolean fosterInserts = false; // if next inserts should be fostered
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,45,rivate boolean fragmentParsing = false; // if parsing a fragment of html
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,50,private boolean framesetOk; // if ok to go into frameset
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,51,private boolean fosterInserts; // if next inserts should be fostered
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,52,private boolean fragmentParsing; // if parsing a fragment of html
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,56,ParseSettings defaultSettings() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,57,return ParseSettings.htmlDefault;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,50,"ocument parse(String input, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,61,"protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,62,"super.initialiseParse(input, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,64,// this is a bit mucky. todo - probably just create new parser objects to ensure all reset.
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,66,originalState = null;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,53,"eturn super.parse(input, baseUri, errors);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,56,"ist<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,68,headElement = null;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,69,formElement = null;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,70,contextElement = null;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,71,formattingElements = new ArrayList<>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,72,pendingTableCharacters = new ArrayList<>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,73,emptyEnd = new Token.EndTag();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,74,framesetOk = true;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,75,fosterInserts = false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,76,fragmentParsing = false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,79,"List<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,59,"nitialiseParse(inputFragment, baseUri, errors);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,82,"initialiseParse(new StringReader(inputFragment), baseUri, errors, settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,83,"oot = new Element(Tag.valueOf(""html""), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,106,"root = new Element(Tag.valueOf(""html"", settings), baseUri);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,101,f (context != null && root != null)
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,124,if (context != null)
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,182,"lement el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,205,"Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,188,"lement el = new Element(Tag.valueOf(startTagName), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,211,"Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,199,ag tag = Tag.valueOf(startTag.name());
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,222,"Tag tag = Tag.valueOf(startTag.name(), settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,204,"f (tag.isSelfClosing()) tokeniser.acknowledgeSelfClosingFlag(); // if not acked, promulagates error"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,205, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,206,"/ unknown tag, remember this is self closing for output"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,207,ag.setSelfClosing();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,208,okeniser.acknowledgeSelfClosingFlag(); // not an distinct error
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,227,if (!tag.isEmpty())
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,228,"tokeniser.error(""Tag cannot be self closing; not a void tag"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,230,"else // unknown tag, remember this is self closing for output"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,231,tag.setSelfClosing();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,215,ag tag = Tag.valueOf(startTag.name());
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,237,"Tag tag = Tag.valueOf(startTag.name(), settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,518,endingTableCharacters = new ArrayList<String>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,540,pendingTableCharacters = new ArrayList<>();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,22,"ocumentType doctype = new DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,22,DocumentType doctype = new DocumentType(
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,23,"tb.settings.normalizeTag(d.getName()), d.getPubSysKey(), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri());"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,44," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,45,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,47," else if (t.isEndTag() && (StringUtil.in(t.asEndTag().name(), ""head"", ""body"", ""html"", ""br""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,48,"} else if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), ""head"", ""body"", ""html"", ""br""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,73," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,74,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,75," else if (t.isStartTag() && t.asStartTag().name().equals(""head"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,76,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""head"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,79," else if (t.isEndTag() && (StringUtil.in(t.asEndTag().name(), ""head"", ""body"", ""html"", ""br""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,80,"} else if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), ""head"", ""body"", ""html"", ""br""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,107,tring name = start.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,108,String name = start.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,142,ame = end.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,143,name = end.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,168," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,169,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,170," else if (t.isEndTag() && t.asEndTag().name().equals(""noscript"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,171,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""noscript"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,173," else if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,174,"} else if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,176," else if (t.isEndTag() && t.asEndTag().name().equals(""br"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,177,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""br"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,178," else if ((t.isStartTag() && StringUtil.in(t.asStartTag().name(), ""head"", ""noscript"")) || t.isEndTag()) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,179,"} else if ((t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), ""head"", ""noscript"")) || t.isEndTag()) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,203,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,204,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,226,"f (StringUtil.in(t.asEndTag().name(), ""body"", ""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,227,"if (StringUtil.in(t.asEndTag().normalName(), ""body"", ""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,273,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,274,// todo - refactor to a switch statement
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,275,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,467,b.tokeniser.acknowledgeSelfClosingFlag();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,541,b.tokeniser.acknowledgeSelfClosingFlag();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,546,b.tokeniser.acknowledgeSelfClosingFlag();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,558,ame = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,557,name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,611,"lement replacement = new Element(Tag.valueOf(node.nodeName()), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,610,"Element replacement = new Element(Tag.valueOf(node.nodeName(), ParseSettings.preserveCase), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,611,// case will follow the original node (so honours ParseSettings)
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,762,tring name = t.asEndTag().name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,762,String name = t.asEndTag().name(); // matches with case sensitivity if enabled
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,816,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,816,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,862,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,862,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,940,"f (t.isEndTag() && t.asEndTag().name().equals(""caption"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,940,"if (t.isEndTag() && t.asEndTag().normalName().equals(""caption"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,942,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,942,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,955,".isStartTag() && StringUtil.in(t.asStartTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,955,"t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,957,".isEndTag() && t.asEndTag().name().equals(""table""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,957,"t.isEndTag() && t.asEndTag().normalName().equals(""table""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,963," else if (t.isEndTag() && StringUtil.in(t.asEndTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,963,"} else if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,988,tring name = startTag.name();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,989,"f (name.equals(""html""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,990,"eturn tb.process(t, InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,991,"lse if (name.equals(""col""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,992,b.insertEmpty(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,993,lse
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,994,"eturn anythingElse(t, tb);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,988,switch (startTag.normalName()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,989,"case ""html"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,990,"return tb.process(t, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,991,"case ""col"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,992,tb.insertEmpty(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,993,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,994,default:
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,995,"return anythingElse(t, tb);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,998,ame = endTag.name();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,999,"f (name.equals(""colgroup"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1000,"if (endTag.normalName.equals(""colgroup"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1033,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1034,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1049,ame = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1050,name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1092,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1093,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1106,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1107,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1153,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1154,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1181,"tringUtil.in(t.asStartTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1182,"StringUtil.in(t.asStartTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1226,tring name = start.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1227,String name = start.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1230,"b.processEndTag(""option"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1231,"if (tb.currentElement().nodeName().equals(""option""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1232,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1255,ame = end.name();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1256,"f (name.equals(""optgroup"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1257,"f (tb.currentElement().nodeName().equals(""option"") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(""optgroup""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1258,"b.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1259,"f (tb.currentElement().nodeName().equals(""optgroup""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1260,b.pop();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1261,lse
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1262,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1263," else if (name.equals(""option"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1264,"f (tb.currentElement().nodeName().equals(""option""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1265,b.pop();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1266,lse
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1267,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1268," else if (name.equals(""select"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1269,f (!tb.inSelectScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1270,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1271,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1272, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1273,b.popStackToClose(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1274,b.resetInsertionMode();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1276, else
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1277,"eturn anythingElse(t, tb);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1257,name = end.normalName();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1258,switch (name) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1259,"case ""optgroup"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1260,"if (tb.currentElement().nodeName().equals(""option"") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(""optgroup""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1261,"tb.processEndTag(""option"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1262,"if (tb.currentElement().nodeName().equals(""optgroup""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1263,tb.pop();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1264,else
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1265,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1266,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1267,"case ""option"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1268,"if (tb.currentElement().nodeName().equals(""option""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1269,tb.pop();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1270,else
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1271,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1272,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1273,"case ""select"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1274,if (!tb.inSelectScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1275,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1276,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1277,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1278,tb.popStackToClose(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1279,tb.resetInsertionMode();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1281,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1282,default:
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1283,"return anythingElse(t, tb);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1296,"f (t.isStartTag() && StringUtil.in(t.asStartTag().name(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1303,"if (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1300," else if (t.isEndTag() && StringUtil.in(t.asEndTag().name(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1307,"} else if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1302,f (tb.inTableScope(t.asEndTag().name())) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1309,if (tb.inTableScope(t.asEndTag().normalName())) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1321," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1328,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1323," else if (t.isEndTag() && t.asEndTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1330,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1351,tring name = start.name();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1352,"f (name.equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1353,"eturn tb.process(start, InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1354," else if (name.equals(""frameset"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1355,b.insert(start);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1356," else if (name.equals(""frame"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1357,b.insertEmpty(start);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1358," else if (name.equals(""noframes"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1359,"eturn tb.process(start, InHead);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1360, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1361,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1362,eturn false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1358,switch (start.normalName()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1359,"case ""html"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1360,"return tb.process(start, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1361,"case ""frameset"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1362,tb.insert(start);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1363,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1364,"case ""frame"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1365,tb.insertEmpty(start);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1366,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1367,"case ""noframes"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1368,"return tb.process(start, InHead);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1369,default:
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1370,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1371,return false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1364," else if (t.isEndTag() && t.asEndTag().name().equals(""frameset"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1373,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""frameset"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1395," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1404,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1397," else if (t.isEndTag() && t.asEndTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1406,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1399," else if (t.isStartTag() && t.asStartTag().name().equals(""noframes"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1408,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""noframes"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1414," else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().name().equals(""html""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1423,"} else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(""html""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1430," else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().name().equals(""html""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1439,"} else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(""html""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1434," else if (t.isStartTag() && t.asStartTag().name().equals(""noframes"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1443,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""noframes"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1473,b.insert(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1485,tb.insert(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1480,b.insert(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1492,tb.insert(startTag);
False,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,10,lass ParseErrorList extends ArrayList<ParseError>{
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,10,public class ParseErrorList extends ArrayList<ParseError>{
False,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,27,tatic ParseErrorList noTracking() {
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,27,public static ParseErrorList noTracking() {
False,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,31,tatic ParseErrorList tracking(int maxSize) {
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,31,public static ParseErrorList tracking(int maxSize) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,1,package org.jsoup.parser;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,3,import org.jsoup.nodes.Attribute;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,4,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,6,import static org.jsoup.internal.Normalizer.lowerCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,9,"* Controls parser settings, to optionally preserve tag and/or attribute name case."
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,11,public class ParseSettings {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,13,* HTML default settings: both tag and attribute names are lower-cased during parsing.
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,15,public static final ParseSettings htmlDefault;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,17,* Preserve both tag and attribute case.
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,19,public static final ParseSettings preserveCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,21,static {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,22,"htmlDefault = new ParseSettings(false, false);"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,23,"preserveCase = new ParseSettings(true, true);"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,26,private final boolean preserveTagCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,27,private final boolean preserveAttributeCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,30,* Define parse settings.
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,31,* @param tag preserve tag case?
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,32,* @param attribute preserve attribute name case?
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,34,"public ParseSettings(boolean tag, boolean attribute) {"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,35,preserveTagCase = tag;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,36,preserveAttributeCase = attribute;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,39,String normalizeTag(String name) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,40,name = name.trim();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,41,if (!preserveTagCase)
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,42,name = lowerCase(name);
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,43,return name;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,46,String normalizeAttribute(String name) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,47,name = name.trim();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,48,if (!preserveAttributeCase)
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,49,name = lowerCase(name);
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,50,return name;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,53,Attributes normalizeAttributes(Attributes attributes) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,54,if (!preserveAttributeCase) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,55,for (Attribute attr : attributes) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,56,attr.setKey(lowerCase(attr.getKey()));
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,59,return attributes;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,7,import java.io.Reader;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,8,import java.io.StringReader;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,21,private ParseSettings settings;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,29,settings = treeBuilder.defaultSettings();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,30,"eturn treeBuilder.parse(html, baseUri, errors);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,34,"return treeBuilder.parse(new StringReader(html), baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,37,"public Document parseInput(Reader inputHtml, String baseUri) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,38,errors = isTrackErrors() ? ParseErrorList.tracking(maxErrors) : ParseErrorList.noTracking();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,39,"return treeBuilder.parse(inputHtml, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,87,public Parser settings(ParseSettings settings) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,88,this.settings = settings;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,89,return this;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,92,public ParseSettings settings() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,93,return settings;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,89,"eturn treeBuilder.parse(html, baseUri, ParseErrorList.noTracking());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,107,"return treeBuilder.parse(new StringReader(html), baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,104,"eturn treeBuilder.parseFragment(fragmentHtml, context, baseUri, ParseErrorList.noTracking());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,122,"return treeBuilder.parseFragment(fragmentHtml, context, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,126,"* Parse a fragment of HTML into a list of nodes. The context element, if supplied, supplies parsing context."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,128,* @param fragmentHtml the fragment of HTML to parse
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,129,* @param context (optional) the element that this HTML fragment is being parsed for (i.e. for inner HTML). This
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,130,* provides stack context (for implicit element creation).
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,131,"* @param baseUri base URI of document (i.e. original fetch location), for resolving relative URLs."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,132,* @param errorList list to add errors to
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,134,"* @return list of nodes parsed from the input HTML. Note that the context element, if supplied, is not modified."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,136,"public static List<Node> parseFragment(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,137,HtmlTreeBuilder treeBuilder = new HtmlTreeBuilder();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,138,"return treeBuilder.parseFragment(fragmentHtml, context, baseUri, errorList, treeBuilder.defaultSettings());"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,116,"eturn treeBuilder.parseFragment(fragmentXml, baseUri, ParseErrorList.noTracking());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,150,"return treeBuilder.parseFragment(fragmentXml, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,14,"rivate static final Map<String, Tag> tags = new HashMap<String, Tag>(); // map of known tags"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,14,"private static final Map<String, Tag> tags = new HashMap<>(); // map of known tags"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,19,rivate boolean canContainBlock = true; // Can this tag hold block level tags?
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,28,his.tagName = tagName.toLowerCase();
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,27,this.tagName = tagName;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,46,* @param settings used to control tag name sensitivity
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,49,ublic static Tag valueOf(String tagName) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,49,"public static Tag valueOf(String tagName, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,54,agName = tagName.trim().toLowerCase();
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,54,tagName = settings.normalizeTag(tagName);
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,62,ag.canContainBlock = true;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,68,"* Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,69,* <p>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,70,"* Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals()."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,71,* </p>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,73,"* @param tagName Name of tag, e.g. ""p"". <b>Case sensitive</b>."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,74,"* @return The tag, either defined or new generic."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,76,public static Tag valueOf(String tagName) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,77,"return valueOf(tagName, ParseSettings.preserveCase);"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,102,"* @deprecated No longer used, and no different result than {{@link #isBlock()}}"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,92,eturn canContainBlock;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,105,return isBlock;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,153, @return if preserve whitepace
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,166,* @return if preserve whitespace
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,188,f (canContainBlock != tag.canContainBlock) return false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,204,esult = 31 * result + (canContainBlock ? 1 : 0);
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,225,"del"", ""s"", ""dl"", ""dt"", ""dd"", ""li"", ""table"", ""caption"", ""thead"", ""tfoot"", ""tbody"", ""colgroup"", ""col"", ""tr"", ""th"","
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,236,"""del"", ""dl"", ""dt"", ""dd"", ""li"", ""table"", ""caption"", ""thead"", ""tfoot"", ""tbody"", ""colgroup"", ""col"", ""tr"", ""th"","
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,235,"data"", ""bdi"""
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,246,"""data"", ""bdi"", ""s"""
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,266,ag.canContainBlock = false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,275,ag.canContainBlock = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,8,import static org.jsoup.internal.Normalizer.lowerCase;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,37,String pubSysKey = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,49,pubSysKey = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,60,String getPubSysKey() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,61,return pubSysKey;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,79,"protected String normalName; // lc version of tag name, for case insensitive tree build"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,82,"private String pendingAttributeValueS; // try to get attr vals in one shot, vs Builder"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,91,normalName = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,94,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,95,ttribute attribute;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,96,f (hasPendingAttributeValue)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,97,"ttribute = new Attribute(pendingAttributeName, pendingAttributeValue.toString());"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,98,lse if (hasEmptyAttributeValue)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,99,"ttribute = new Attribute(pendingAttributeName, """");"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,100,lse
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,101,ttribute = new BooleanAttribute(pendingAttributeName);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,102,ttributes.put(attribute);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,107,"// the tokeniser has skipped whitespace control chars, but trimming could collapse to empty for other control codes, so verify here"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,108,pendingAttributeName = pendingAttributeName.trim();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,109,if (pendingAttributeName.length() > 0) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,110,Attribute attribute;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,111,if (hasPendingAttributeValue)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,112,"attribute = new Attribute(pendingAttributeName,"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,113,pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,114,else if (hasEmptyAttributeValue)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,115,"attribute = new Attribute(pendingAttributeName, """");"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,116,else
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,117,attribute = new BooleanAttribute(pendingAttributeName);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,118,attributes.put(attribute);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,125,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,118,inal String name() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,136,"final String name() { // preserves case, for input into Tag.valueOf (which may drop case)"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,141,"final String normalName() { // loses case, used in tree building for working out where in tree it should go"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,142,return normalName;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,147,normalName = lowerCase(name);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,163,normalName = lowerCase(tagName);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,156,endingAttributeValue.append(append);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,180,if (pendingAttributeValue.length() == 0) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,181,pendingAttributeValueS = append;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,182,} else {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,183,pendingAttributeValue.append(append);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,197,final void appendAttributeValue(int[] appendCodepoints) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,198,ensureAttributeValue();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,199,for (int codepoint : appendCodepoints) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,200,pendingAttributeValue.appendCodePoint(codepoint);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,210,"// if on second hit, we'll need to move to the builder"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,211,if (pendingAttributeValueS != null) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,212,pendingAttributeValue.append(pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,213,pendingAttributeValueS = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,236,normalName = lowerCase(tagName);
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,253," and leave "" four"" on the queue. Unbalanced openers and closers can be escaped (with \). Those escapes will be left"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,253,"* and leave "" four"" on the queue. Unbalanced openers and closers can be quoted (with ' or "") or escaped (with \). Those escapes will be left"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,265,boolean inQuote = false;
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,271,"if ((c.equals('\'') || c.equals('""')) && c != open)"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,272,inQuote = !inQuote;
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,273,if (inQuote)
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,274,continue;
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,283,"eturn (end >= 0) ? queue.substring(start, end) : """";"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,288,"final String out = (end >= 0) ? queue.substring(start, end) : """";"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,289,if (depth > 0) {// ran out of queue before seeing enough )
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,290,"Validate.fail(""Did not find balanced maker at "" + out);"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,292,return out;
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,344," Consume a CSS element selector (tag name, but | instead of : for namespaces, to not conflict with :pseudo selects)."
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,353,"* Consume a CSS element selector (tag name, but | instead of : for namespaces (or *| for wildcard namespace), to not conflict with :pseudo selects)."
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,350,"hile (!isEmpty() && (matchesWord() || matchesAny('|', '_', '-')))"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,359,"while (!isEmpty() && (matchesWord() || matchesAny(""*|"",""|"", ""_"", ""-"")))"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,19,rivate CharacterReader reader; // html input
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,20,rivate ParseErrorList errors; // errors found while tokenising
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,19,private final CharacterReader reader; // html input
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,20,private final ParseErrorList errors; // errors found while tokenising
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,36,rivate boolean selfClosingFlagAcknowledged = true;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,44,f (!selfClosingFlagAcknowledged) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,45,"rror(""Self closing flag not acknowledged"");"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,46,elfClosingFlagAcknowledged = true;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,77,f (startTag.selfClosing)
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,78,elfClosingFlagAcknowledged = false;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,96,void emit(int[] codepoints) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,97,"emit(new String(codepoints, 0, codepoints.length));"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,121,oid acknowledgeSelfClosingFlag() {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,122,elfClosingFlagAcknowledged = true;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,125,inal private char[] charRefHolder = new char[1]; // holder to not have to keep creating arrays
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,126,"har[] consumeCharacterReference(Character additionalAllowedCharacter, boolean inAttribute) {"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,117,final private int[] codepointHolder = new int[1]; // holder to not have to keep creating arrays
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,118,final private int[] multipointHolder = new int[2];
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,119,"int[] consumeCharacterReference(Character additionalAllowedCharacter, boolean inAttribute) {"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,134,inal char[] charRef = charRefHolder;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,127,final int[] codeRef = codepointHolder;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,150, catch (NumberFormatException e) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,143,} catch (NumberFormatException ignored) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,154,harRef[0] = replacementChar;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,155,eturn charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,147,codeRef[0] = replacementChar;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,148,return codeRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,159,f (charval < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,160,harRef[0] = (char) charval;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,161,eturn charRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,162, else
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,163,eturn Character.toChars(charval);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,152,codeRef[0] = charval;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,153,return codeRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,185,harRef[0] = Entities.getCharacterByName(nameRef);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,186,eturn charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,175,"int numChars = Entities.codepointsForName(nameRef, multipointHolder);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,176,if (numChars == 1) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,177,codeRef[0] = multipointHolder[0];
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,178,return codeRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,179,} else if (numChars ==2) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,180,return multipointHolder;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,181,} else {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,182,"Validate.fail(""Unexpected characters returned for "" + nameRef);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,183,return multipointHolder;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,221,eturn lastStartTag != null && tagPending.tagName.equals(lastStartTag);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,219,return lastStartTag != null && tagPending.name().equalsIgnoreCase(lastStartTag);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,245,rivate void error(String errorMsg) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,243,void error(String errorMsg) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,268,"har[] c = consumeCharacterReference(null, inAttribute);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,266,"int[] c = consumeCharacterReference(null, inAttribute);"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,271,lse
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,272,uilder.append(c);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,269,else {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,270,builder.appendCodePoint(c[0]);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,271,if (c.length == 2)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,272,builder.appendCodePoint(c[1]);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,3,import org.jsoup.nodes.DocumentType;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,36,"har[] c = t.consumeCharacterReference(null, false);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,37,f (c == null)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,38,.emit('&');
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,39,lse
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,40,.emit(c);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,41,.transition(Data);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,38,"readCharRef(t, Data);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,71,"har[] c = t.consumeCharacterReference(null, false);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,72,f (c == null)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,73,.emit('&');
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,74,lse
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,75,.emit(c);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,76,.transition(Rcdata);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,68,"readCharRef(t, Rcdata);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,81,witch (r.current()) {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,82,ase '<':
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,83,.advanceTransition(RawtextLessthanSign);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,84,reak;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,85,ase nullChar:
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,86,.error(this);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,87,.advance();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,88,.emit(replacementChar);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,89,reak;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,90,ase eof:
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,91,.emit(new Token.EOF());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,92,reak;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,93,efault:
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,94,"tring data = r.consumeToAny('<', nullChar);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,95,.emit(data);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,96,reak;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,73,"readData(t, r, this, RawtextLessthanSign);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,102,witch (r.current()) {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,103,ase '<':
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,104,.advanceTransition(ScriptDataLessthanSign);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,105,reak;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,106,ase nullChar:
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,107,.error(this);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,108,.advance();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,109,.emit(replacementChar);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,110,reak;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,111,ase eof:
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,112,.emit(new Token.EOF());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,113,reak;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,114,efault:
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,115,"tring data = r.consumeToAny('<', nullChar);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,116,.emit(data);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,117,reak;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,78,"readData(t, r, this, ScriptDataLessthanSign);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,188,tring tagName = r.consumeTagName().toLowerCase();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,148,String tagName = r.consumeTagName();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,239,.tagPending.appendTagName(Character.toLowerCase(r.current()));
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,240,.dataBuffer.append(Character.toLowerCase(r.current()));
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,199,t.tagPending.appendTagName(r.current());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,200,t.dataBuffer.append(r.current());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,252,.tagPending.appendTagName(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,212,t.tagPending.appendTagName(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,307,f (r.matchesLetter()) {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,308,.createTagPending(false);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,309,.transition(RawtextEndTagName);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,310, else {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,311,".emit(""</"");"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,312,.transition(Rawtext);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,267,"readEndTag(t, r, RawtextEndTagName, Rawtext);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,341,f (r.matchesLetter()) {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,342,.createTagPending(false);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,343,.transition(ScriptDataEndTagName);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,344, else {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,345,".emit(""</"");"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,346,.transition(ScriptData);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,295,"readEndTag(t, r, ScriptDataEndTagName, ScriptData);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,466,.dataBuffer.append(Character.toLowerCase(r.current()));
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,413,t.dataBuffer.append(r.current());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,482,.tagPending.appendTagName(Character.toLowerCase(r.current()));
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,429,t.tagPending.appendTagName(r.current());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,649,.tagPending.appendAttributeName(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,596,t.tagPending.appendAttributeName(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,783,tring value = r.consumeToAnySorted(attributeDoubleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,730,String value = r.consumeToAny(attributeDoubleValueCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,795,"har[] ref = t.consumeCharacterReference('""', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,742,"int[] ref = t.consumeCharacterReference('""', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,815,tring value = r.consumeToAnySorted(attributeSingleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,762,String value = r.consumeToAny(attributeSingleValueCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,827,"har[] ref = t.consumeCharacterReference('\'', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,774,"int[] ref = t.consumeCharacterReference('\'', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,847,"tring value = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '&', '>', nullChar, '""', '\'', '<', '=', '`');"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,794,String value = r.consumeToAnySorted(attributeValueUnquoted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,861,"har[] ref = t.consumeCharacterReference('>', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,808,"int[] ref = t.consumeCharacterReference('>', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,885,r.unconsume();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1201,.doctypePending.name.append(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1149,t.doctypePending.name.append(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1246," else if (r.matchConsumeIgnoreCase(""PUBLIC"")) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1194,} else if (r.matchConsumeIgnoreCase(DocumentType.PUBLIC_KEY)) {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1195,t.doctypePending.pubSysKey = DocumentType.PUBLIC_KEY;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1248," else if (r.matchConsumeIgnoreCase(""SYSTEM"")) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1197,} else if (r.matchConsumeIgnoreCase(DocumentType.SYSTEM_KEY)) {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1198,t.doctypePending.pubSysKey = DocumentType.SYSTEM_KEY;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1610,"private static final char[] attributeValueUnquoted = new char[]{'\t', '\n', '\r', '\f', ' ', '&', '>', nullChar, '""', '\'', '<', '=', '`'};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1620,Arrays.sort(attributeValueUnquoted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1678,.tagPending.appendTagName(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1630,t.tagPending.appendTagName(name);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1667,"private static void readData(Tokeniser t, CharacterReader r, TokeniserState current, TokeniserState advance) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1668,switch (r.current()) {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1669,case '<':
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1670,t.advanceTransition(advance);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1671,break;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1672,case nullChar:
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1673,t.error(current);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1674,r.advance();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1675,t.emit(replacementChar);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1676,break;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1677,case eof:
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1678,t.emit(new Token.EOF());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1679,break;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1680,default:
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1681,"String data = r.consumeToAny('<', nullChar); // todo - why hunt for null here? Just consumeTo'<'?"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1682,t.emit(data);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1683,break;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1687,"private static void readCharRef(Tokeniser t, TokeniserState advance) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1688,"int[] c = t.consumeCharacterReference(null, false);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1689,if (c == null)
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1690,t.emit('&');
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1691,else
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1692,t.emit(c);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1693,t.transition(advance);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1696,"private static void readEndTag(Tokeniser t, CharacterReader r, TokeniserState a, TokeniserState b) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1697,if (r.matchesLetter()) {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1698,t.createTagPending(false);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1699,t.transition(a);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1700,} else {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1701,"t.emit(""</"");"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1702,t.transition(b);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1718,.dataBuffer.append(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1709,t.dataBuffer.append(name);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,8,import java.io.Reader;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,protected ParseSettings settings;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,25,"rotected void initialiseParse(String input, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,27,abstract ParseSettings defaultSettings();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,29,"protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,34,this.settings = settings;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,37,currentToken = null;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,33,tack = new ArrayList<Element>(32);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,39,stack = new ArrayList<>(32);
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,37,"ocument parse(String input, String baseUri) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,38,"eturn parse(input, baseUri, ParseErrorList.noTracking());"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,41,"ocument parse(String input, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,42,"nitialiseParse(input, baseUri, errors);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,43,"Document parse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,44,"initialiseParse(input, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,3,import org.jsoup.Jsoup;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,7,import java.io.Reader;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,8,import java.io.StringReader;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,19,ParseSettings defaultSettings() {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,20,return ParseSettings.preserveCase;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,23,"Document parse(Reader input, String baseUri) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,24,"return parse(input, baseUri, ParseErrorList.noTracking(), ParseSettings.preserveCase);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,27,"Document parse(String input, String baseUri) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,28,"return parse(new StringReader(input), baseUri, ParseErrorList.noTracking(), ParseSettings.preserveCase);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,17,"rotected void initialiseParse(String input, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,18,"uper.initialiseParse(input, baseUri, errors);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,32,"protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,33,"super.initialiseParse(input, baseUri, errors, settings);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,55,ag tag = Tag.valueOf(startTag.name());
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,70,"Tag tag = Tag.valueOf(startTag.name(), settings);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,57,"lement el = new Element(tag, baseUri, startTag.attributes);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,72,"Element el = new Element(tag, baseUri, settings.normalizeAttributes(startTag.attributes));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,60,okeniser.acknowledgeSelfClosingFlag();
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,87,// so we do a bit of a hack and parse the data as an element to pull the attributes out
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,75,tring declaration = data.substring(1);
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,76,"nsert = new XmlDeclaration(declaration, comment.baseUri(), data.startsWith(""!""));"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,90,"Document doc = Jsoup.parse(""<"" + data.substring(1, data.length() -1) + "">"", baseUri, Parser.xmlParser());"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,91,Element el = doc.child(0);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,92,"insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), comment.baseUri(), data.startsWith(""!""));"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,93,insert.attributes().addAll(el.attributes());
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,88,"ocumentType doctypeNode = new DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,105,"DocumentType doctypeNode = new DocumentType(settings.normalizeTag(d.getName()), d.getPubSysKey(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,120,"ist<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,121,"nitialiseParse(inputFragment, baseUri, errors);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,137,"List<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,138,"initialiseParse(new StringReader(inputFragment), baseUri, errors, settings);"
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,4,mport org.jsoup.nodes.*;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,4,import org.jsoup.nodes.Attribute;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,5,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,6,import org.jsoup.nodes.DataNode;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,7,import org.jsoup.nodes.Document;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,8,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,9,import org.jsoup.nodes.Node;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,10,import org.jsoup.nodes.TextNode;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,11,import org.jsoup.parser.ParseErrorList;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,12,import org.jsoup.parser.Parser;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,17,import java.util.List;
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,54,"etermines if the input document is valid, against the whitelist. It is considered valid if all the tags and attributes"
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,55,n the input HTML are allowed by the whitelist.
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,64,"Determines if the input document <b>body</b>is valid, against the whitelist. It is considered valid if all the tags and attributes"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,65,"in the input HTML are allowed by the whitelist, and that there is no content in the <code>head</code>."
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,57,his method can be used as a validator for user input forms. An invalid document will still be cleaned successfully
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,67,This method can be used as a validator for user input. An invalid document will still be cleaned successfully
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,69,eturn numDiscarded == 0;
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,79,return numDiscarded == 0
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,80,"&& dirtyDocument.head().childNodes().size() == 0; // because we only look at the body, but we start from a shell, make sure there's nothing in the head"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,83,public boolean isValidBodyHtml(String bodyHtml) {
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,84,"Document clean = Document.createShell("""");"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,85,"Document dirty = Document.createShell("""");"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,86,ParseErrorList errorList = ParseErrorList.tracking(1);
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,87,"List<Node> nodes = Parser.parseFragment(bodyHtml, dirty.body(), """", errorList);"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,88,"dirty.body().insertChildren(0, nodes);"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,89,"int numDiscarded = copySafeNodes(dirty.body(), clean.body());"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,90,return numDiscarded == 0 && errorList.size() == 0;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,18,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,191,agNames = new HashSet<TagName>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,192,"ttributes = new HashMap<TagName, Set<AttributeKey>>();"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,193,"nforcedAttributes = new HashMap<TagName, Map<AttributeKey, AttributeValue>>();"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,194,"rotocols = new HashMap<TagName, Map<AttributeKey, Set<Protocol>>>();"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,193,tagNames = new HashSet<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,194,attributes = new HashMap<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,195,enforcedAttributes = new HashMap<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,196,protocols = new HashMap<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,248,param keys List of valid attributes for the tag
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,250,@param attributes List of valid attributes for the tag
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,251,"ublic Whitelist addAttributes(String tag, String... keys) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,253,"public Whitelist addAttributes(String tag, String... attributes) {"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,253,alidate.notNull(keys);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,254,"alidate.isTrue(keys.length > 0, ""No attributes supplied."");"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,255,Validate.notNull(attributes);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,256,"Validate.isTrue(attributes.length > 0, ""No attribute names supplied."");"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,259,et<AttributeKey> attributeSet = new HashSet<AttributeKey>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,260,or (String key : keys) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,261,Set<AttributeKey> attributeSet = new HashSet<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,262,for (String key : attributes) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,264,f (attributes.containsKey(tagName)) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,265,et<AttributeKey> currentSet = attributes.get(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,266,if (this.attributes.containsKey(tagName)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,267,Set<AttributeKey> currentSet = this.attributes.get(tagName);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,268,"ttributes.put(tagName, attributeSet);"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,270,"this.attributes.put(tagName, attributeSet);"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,285,param keys List of invalid attributes for the tag
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,287,@param attributes List of invalid attributes for the tag
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,288,"ublic Whitelist removeAttributes(String tag, String... keys) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,290,"public Whitelist removeAttributes(String tag, String... attributes) {"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,290,alidate.notNull(keys);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,291,"alidate.isTrue(keys.length > 0, ""No attributes supplied."");"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,292,Validate.notNull(attributes);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,293,"Validate.isTrue(attributes.length > 0, ""No attribute names supplied."");"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,294,et<AttributeKey> attributeSet = new HashSet<AttributeKey>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,295,or (String key : keys) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,296,Set<AttributeKey> attributeSet = new HashSet<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,297,for (String key : attributes) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,299,f(tagNames.contains(tagName) && attributes.containsKey(tagName)) { // Only look in sub-maps if tag was allowed
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,300,et<AttributeKey> currentSet = attributes.get(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,301,if(tagNames.contains(tagName) && this.attributes.containsKey(tagName)) { // Only look in sub-maps if tag was allowed
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,302,Set<AttributeKey> currentSet = this.attributes.get(tagName);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,304,ttributes.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,306,this.attributes.remove(tagName);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,307,or(TagName name: attributes.keySet()) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,308,et<AttributeKey> currentSet = attributes.get(name);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,309,for(TagName name: this.attributes.keySet()) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,310,Set<AttributeKey> currentSet = this.attributes.get(name);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,312,ttributes.remove(name);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,314,this.attributes.remove(name);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,319,"lready has the attribute set, it will be overridden."
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,321,"already has the attribute set, it will be overridden with this value."
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,326,param key   The attribute key
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,328,@param attribute   The attribute name
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,330,"ublic Whitelist addEnforcedAttribute(String tag, String key, String value) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,332,"public Whitelist addEnforcedAttribute(String tag, String attribute, String value) {"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,332,alidate.notEmpty(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,334,Validate.notEmpty(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,338,ttributeKey attrKey = AttributeKey.valueOf(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,340,AttributeKey attrKey = AttributeKey.valueOf(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,344,"ap<AttributeKey, AttributeValue> attrMap = new HashMap<AttributeKey, AttributeValue>();"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,346,"Map<AttributeKey, AttributeValue> attrMap = new HashMap<>();"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,355,param key   The attribute key
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,357,@param attribute   The attribute name
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,358,"ublic Whitelist removeEnforcedAttribute(String tag, String key) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,360,"public Whitelist removeEnforcedAttribute(String tag, String attribute) {"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,360,alidate.notEmpty(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,362,Validate.notEmpty(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,364,ttributeKey attrKey = AttributeKey.valueOf(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,366,AttributeKey attrKey = AttributeKey.valueOf(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,406,param key       Attribute key
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,408,@param attribute       Attribute name
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,410,"ublic Whitelist addProtocols(String tag, String key, String... protocols) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,412,"public Whitelist addProtocols(String tag, String attribute, String... protocols) {"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,412,alidate.notEmpty(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,414,Validate.notEmpty(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,416,ttributeKey attrKey = AttributeKey.valueOf(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,418,AttributeKey attrKey = AttributeKey.valueOf(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,423,"ttrMap = new HashMap<AttributeKey, Set<Protocol>>();"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,425,attrMap = new HashMap<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,429,rotSet = new HashSet<Protocol>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,431,protSet = new HashSet<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,441,emove allowed URL protocols for an element's URL attribute.
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,443,"Remove allowed URL protocols for an element's URL attribute. If you remove all protocols for an attribute, that"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,444,attribute will allow any protocol.
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,446,param tag       Tag the URL protocol is for
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,447,param key       Attribute key
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,448,param protocols List of invalid protocols
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,449,@param tag Tag the URL protocol is for
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,450,@param attribute Attribute name
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,451,@param removeProtocols List of invalid protocols
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,451,"ublic Whitelist removeProtocols(String tag, String key, String... protocols) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,454,"public Whitelist removeProtocols(String tag, String attribute, String... removeProtocols) {"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,453,alidate.notEmpty(key);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,454,alidate.notNull(protocols);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,456,Validate.notEmpty(attribute);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,457,Validate.notNull(removeProtocols);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,457,ttributeKey attrKey = AttributeKey.valueOf(key);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,459,f(this.protocols.containsKey(tagName)) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,460,"ap<AttributeKey, Set<Protocol>> attrMap = this.protocols.get(tagName);"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,461,f(attrMap.containsKey(attrKey)) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,462,et<Protocol> protSet = attrMap.get(attrKey);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,463,or (String protocol : protocols) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,464,alidate.notEmpty(protocol);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,465,rotocol prot = Protocol.valueOf(protocol);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,466,rotSet.remove(prot);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,460,AttributeKey attr = AttributeKey.valueOf(attribute);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,469,f(protSet.isEmpty()) { // Remove protocol set if empty
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,470,ttrMap.remove(attrKey);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,471,f(attrMap.isEmpty()) // Remove entry for tag if empty
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,472,his.protocols.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,462,// make sure that what we're removing actually exists; otherwise can open the tag to any data and that can
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,463,// be surprising
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,464,"Validate.isTrue(protocols.containsKey(tagName), ""Cannot remove a protocol that is not set."");"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,465,"Map<AttributeKey, Set<Protocol>> tagProtocols = protocols.get(tagName);"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,466,"Validate.isTrue(tagProtocols.containsKey(attr), ""Cannot remove a protocol that is not set."");"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,468,Set<Protocol> attrProtocols = tagProtocols.get(attr);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,469,for (String protocol : removeProtocols) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,470,Validate.notEmpty(protocol);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,471,attrProtocols.remove(Protocol.valueOf(protocol));
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,474,if (attrProtocols.isEmpty()) { // Remove protocol set if empty
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,475,tagProtocols.remove(attr);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,476,if (tagProtocols.isEmpty()) // Remove entry for tag if empty
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,477,protocols.remove(tagName);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,499,f (attributes.containsKey(tag)) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,500,f (attributes.get(tag).contains(key)) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,501,f (protocols.containsKey(tag)) {
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,502,"ap<AttributeKey, Set<Protocol>> attrProts = protocols.get(tag);"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,503,/ ok if not defined protocol; otherwise test
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,504,"eturn !attrProts.containsKey(key) || testValidProtocol(el, attr, attrProts.get(key));"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,505," else { // attribute found, no protocols defined, so OK"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,506,eturn true;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,502,Set<AttributeKey> okSet = attributes.get(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,503,if (okSet != null && okSet.contains(key)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,504,if (protocols.containsKey(tag)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,505,"Map<AttributeKey, Set<Protocol>> attrProts = protocols.get(tag);"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,506,// ok if not defined protocol; otherwise test
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,507,"return !attrProts.containsKey(key) || testValidProtocol(el, attr, attrProts.get(key));"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,508,"} else { // attribute found, no protocols defined, so OK"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,509,return true;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,512,// might be an enforced attribute?
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,513,"Map<AttributeKey, AttributeValue> enforcedSet = enforcedAttributes.get(tag);"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,514,if (enforcedSet != null) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,515,Attributes expect = getEnforcedAttributes(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,516,String attrKey = attr.getKey();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,517,if (expect.hasKeyIgnoreCase(attrKey)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,518,return expect.getIgnoreCase(attrKey).equals(attr.getValue());
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,536,f (value.toLowerCase().startsWith(prot)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,547,if (lowerCase(value).startsWith(prot)) {
False,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,19,valuators = new ArrayList<Evaluator>();
True,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,19,evaluators = new ArrayList<>();
True,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,80,Or(Evaluator... evaluators) { this(Arrays.asList(evaluators)); }
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,68,hecks if any of the matched elements have this attribute set.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,68,Checks if any of the matched elements have this attribute defined.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,81,"* Get the attribute value for each of the matched elements. If an element does not have this attribute, no value is"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,82,* included in the result set for that element.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,83,* @param attributeKey the attribute name to return values for. You can add the {@code abs:} prefix to the key to
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,84,"* get absolute URLs from relative URLs, e.g.: {@code doc.select(""a"").eachAttr(""abs:href"")} ."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,85,* @return a list of each element's attribute value for the attribute
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,87,public List<String> eachAttr(String attributeKey) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,88,List<String> attrs = new ArrayList<>(size());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,89,for (Element element : this) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,90,if (element.hasAttr(attributeKey))
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,91,attrs.add(element.attr(attributeKey));
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,93,return attrs;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,200,* @see #eachText()
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,213,"Test if any matched Element has any text content, that is not just whitespace."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,214,@return true if any element has non-blank text content.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,215,@see Element#hasText()
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,226,"* Get the text content of each of the matched elements. If an element has no text, then it is not included in the"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,227,* result.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,228,* @return A list of each matched element's text content.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,229,* @see Element#text()
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,230,* @see Element#hasText()
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,231,* @see #text()
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,233,public List<String> eachText() {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,234,ArrayList<String> texts = new ArrayList<>(size());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,235,for (Element el: this) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,236,if (el.hasText())
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,237,texts.add(el.text());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,239,return texts;
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,415," <code>Elements divs = doc.select(""div"").not(""#logo"");</code><br>"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,454,"* <code>Elements divs = doc.select(""div"").not("".logo"");</code><br>"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,443,lements children = select(query);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,444,eturn !children.isEmpty();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,482,Evaluator eval = QueryParser.parse(query);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,483,for (Element e : this) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,484,if (e.is(eval))
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,485,return true;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,487,return false;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,491,* Get the immediate next element sibling of each element in this list.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,492,* @return next element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,494,public Elements next() {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,495,"return siblings(null, true, false);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,499,"* Get the immediate next element sibling of each element in this list, filtered by the query."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,500,* @param query CSS query to match siblings against
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,501,* @return next element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,503,public Elements next(String query) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,504,"return siblings(query, true, false);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,508,* Get all of the following element siblings of each element in this list.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,509,* @return all following element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,511,public Elements nextAll() {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,512,"return siblings(null, true, true);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,516,"* Get all of the following element siblings of each element in this list, filtered by the query."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,517,* @param query CSS query to match siblings against
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,518,* @return all following element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,520,public Elements nextAll(String query) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,521,"return siblings(query, true, true);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,525,* Get the immediate previous element sibling of each element in this list.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,526,* @return previous element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,528,public Elements prev() {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,529,"return siblings(null, false, false);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,533,"* Get the immediate previous element sibling of each element in this list, filtered by the query."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,534,* @param query CSS query to match siblings against
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,535,* @return previous element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,537,public Elements prev(String query) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,538,"return siblings(query, false, false);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,542,* Get all of the previous element siblings of each element in this list.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,543,* @return all previous element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,545,public Elements prevAll() {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,546,"return siblings(null, false, true);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,550,"* Get all of the previous element siblings of each element in this list, filtered by the query."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,551,* @param query CSS query to match siblings against
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,552,* @return all previous element siblings.
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,554,public Elements prevAll(String query) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,555,"return siblings(query, false, true);"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,558,"private Elements siblings(String query, boolean next, boolean all) {"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,559,Elements els = new Elements();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,560,Evaluator eval = query != null? QueryParser.parse(query) : null;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,561,for (Element e : this) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,562,do {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,563,Element sib = next ? e.nextElementSibling() : e.previousElementSibling();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,564,if (sib == null) break;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,565,if (eval == null)
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,566,els.add(sib);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,567,else if (sib.is(eval))
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,568,els.add(sib);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,569,e = sib;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,570,} while (all);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,572,return els;
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,452,ashSet<Element> combo = new LinkedHashSet<Element>();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,580,HashSet<Element> combo = new LinkedHashSet<>();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,496,rrayList<FormElement> forms = new ArrayList<FormElement>();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,624,ArrayList<FormElement> forms = new ArrayList<>();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,15,import static org.jsoup.internal.Normalizer.lowerCase;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,16,import static org.jsoup.internal.Normalizer.normalize;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,45,eturn (element.tagName().equals(tagName));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,48,return (element.tagName().equalsIgnoreCase(tagName));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,51,@Override
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,52,public String toString() {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,53,"return String.format(""%s"", tagName);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,59,* Evaluator for tag name that ends with
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,61,public static final class TagEndsWith extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,62,private String tagName;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,64,public TagEndsWith(String tagName) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,65,this.tagName = tagName;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,68,@Override
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,69,"public boolean matches(Element root, Element element) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,70,return (element.tagName().endsWith(tagName));
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,127,his.keyPrefix = keyPrefix;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,152,Validate.notEmpty(keyPrefix);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,153,this.keyPrefix = lowerCase(keyPrefix);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,134,f (attribute.getKey().startsWith(keyPrefix))
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,160,if (lowerCase(attribute.getKey()).startsWith(keyPrefix))
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,197,eturn element.hasAttr(key) && element.attr(key).toLowerCase().startsWith(value); // value is lower case already
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,223,return element.hasAttr(key) && lowerCase(element.attr(key)).startsWith(value); // value is lower case already
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,217,eturn element.hasAttr(key) && element.attr(key).toLowerCase().endsWith(value); // value is lower case
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,243,return element.hasAttr(key) && lowerCase(element.attr(key)).endsWith(value); // value is lower case
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,237,eturn element.hasAttr(key) && element.attr(key).toLowerCase().contains(value); // value is lower case
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,263,return element.hasAttr(key) && lowerCase(element.attr(key)).contains(value); // value is lower case
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,255,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,281,this.key = normalize(key);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,282,his.key = key.trim().toLowerCase();
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,283,"f (value.startsWith(""\"""") && value.endsWith(""\"""")) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,308,this.key = normalize(key);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,309,"if (value.startsWith(""\"""") && value.endsWith(""\"""")"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,310,"|| value.startsWith(""'"") && value.endsWith(""'"")) {"
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,286,his.value = value.trim().toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,313,this.value = normalize(value);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,493,or (int i = 0; i < family.size(); i++) {
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,494,f (family.get(i).tag().equals(element.tag())) pos++;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,495,f (family.get(i) == element) break;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,520,for (Element el : family) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,521,if (el.tag().equals(element.tag())) pos++;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,522,if (el == element) break;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,581,or (int i = 0; i < family.size(); i++) {
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,582,f (family.get(i).tag().equals(element.tag())) pos++;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,608,for (Element el : family) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,609,if (el.tag().equals(element.tag())) pos++;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,596,or (int i = 0; i < family.size(); i++) {
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,597,ode n = family.get(i);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,598,f (!(n instanceof Comment || n instanceof XmlDeclaration || n instanceof DocumentType)) return false;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,623,for (Node n : family) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,624,if (!(n instanceof Comment || n instanceof XmlDeclaration || n instanceof DocumentType)) return false;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,628,his.searchText = searchText.toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,654,this.searchText = lowerCase(searchText);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,657,@Override
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,658,"public boolean matches(Element root, Element element) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,659,return lowerCase(element.text()).contains(searchText);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,662,@Override
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,663,public String toString() {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,664,"return String.format("":contains(%s)"", searchText);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,669,* Evaluator for matching Element (and its descendants) data
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,671,public static final class ContainsData extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,672,private String searchText;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,674,public ContainsData(String searchText) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,675,this.searchText = lowerCase(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,633,eturn (element.text().toLowerCase().contains(searchText));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,680,return lowerCase(element.data()).contains(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,638,"eturn String.format("":contains(%s"", searchText);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,685,"return String.format("":containsData(%s)"", searchText);"
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,649,his.searchText = searchText.toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,696,this.searchText = lowerCase(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,654,eturn (element.ownText().toLowerCase().contains(searchText));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,701,return lowerCase(element.ownText()).contains(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,659,"eturn String.format("":containsOwn(%s"", searchText);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,706,"return String.format("":containsOwn(%s)"", searchText);"
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,681,"eturn String.format("":matches(%s"", pattern);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,728,"return String.format("":matches(%s)"", pattern);"
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,703,"eturn String.format("":matchesOwn(%s"", pattern);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,750,"return String.format("":matchesOwn(%s)"", pattern);"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,12,import static org.jsoup.internal.Normalizer.normalize;
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,15,lass QueryParser {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,17,public class QueryParser {
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,21,rivate List<Evaluator> evals = new ArrayList<Evaluator>();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,23,private List<Evaluator> evals = new ArrayList<>();
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,38,ueryParser p = new QueryParser(query);
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,39,eturn p.parse();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,40,try {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,41,QueryParser p = new QueryParser(query);
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,42,return p.parse();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,43,} catch (IllegalArgumentException e) {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,44,throw new Selector.SelectorParseException(e.getMessage());
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,147,lse if (tq.matchesWord())
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,153,"else if (tq.matchesWord() || tq.matches(""*|""))"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,171,"else if (tq.matches("":containsData(""))"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,172,containsData();
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,209,vals.add(new Evaluator.Class(className.trim().toLowerCase()));
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,217,evals.add(new Evaluator.Class(className.trim()));
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,216,"/ namespaces: if element name is ""abc:def"", selector must be ""abc|def"", so flip:"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,217,"f (tagName.contains(""|""))"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,218,"agName = tagName.replace(""|"", "":"");"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,225,"// namespaces: wildcard match equals(tagName) or ending in "":""+tagName"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,226,"if (tagName.startsWith(""*|"")) {"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,227,"evals.add(new CombiningEvaluator.Or(new Evaluator.Tag(normalize(tagName)), new Evaluator.TagEndsWith(normalize(tagName.replace(""*|"", "":"")))));"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,228,} else {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,229,"// namespaces: if element name is ""abc:def"", selector must be ""abc|def"", so flip:"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,230,"if (tagName.contains(""|""))"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,231,"tagName = tagName.replace(""|"", "":"");"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,220,vals.add(new Evaluator.Tag(tagName.trim().toLowerCase()));
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,233,evals.add(new Evaluator.Tag(tagName.trim()));
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,275,"rivate static final Pattern NTH_AB = Pattern.compile(""((\\+|-)?(\\d+)?)n(\\s*(\\+|-)?\\s*\\d+)?"", Pattern.CASE_INSENSITIVE);"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,276,"rivate static final Pattern NTH_B  = Pattern.compile(""(\\+|-)?(\\d+)"");"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,289,"private static final Pattern NTH_AB = Pattern.compile(""(([+-])?(\\d+)?)n(\\s*([+-])?\\s*\\d+)?"", Pattern.CASE_INSENSITIVE);"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,290,"private static final Pattern NTH_B  = Pattern.compile(""([+-])?(\\d+)"");"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,279,"tring argS = tq.chompTo("")"").trim().toLowerCase();"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,293,"String argS = normalize(tq.chompTo("")""));"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,350,// pseudo selector :containsData(data)
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,351,private void containsData() {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,352,"tq.consume("":containsData"");"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,353,"String searchText = TokenQueue.unescape(tq.chompBalanced('(', ')'));"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,354,"Validate.notEmpty(searchText, "":containsData(text) query must not be empty"");"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,355,evals.add(new Evaluator.ContainsData(searchText));
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,15," A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,15,"* A selector is a chain of simple selectors, separated by combinators. Selectors are <b>case insensitive</b> (including against"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,26,* <tr><td><code>*|E</code></td><td>elements of type E in any namespace <i>ns</i></td><td><code>*|name</code> finds <code>&lt;fb:name&gt;</code> elements</td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,55,"* <tr><td><code>:containsData(<em>data</em>)</code></td><td>elements that contains the specified <em>data</em>. The contents of {@code script} and {@code style} elements, and {@code comment} nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants.</td><td><code>script:contains(jsoup)</code> finds script elements containing the data ""jsoup"".</td></tr>"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,131,rrayList<Element> elements = new ArrayList<Element>();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,132,"dentityHashMap<Element, Boolean> seenElements = new IdentityHashMap<Element, Boolean>();"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,133,ArrayList<Element> elements = new ArrayList<>();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,134,"IdentityHashMap<Element, Boolean> seenElements = new IdentityHashMap<>();"
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,1,package org.jsoup;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,3,import org.junit.rules.TestRule;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,4,import org.junit.runner.Description;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,5,import org.junit.runners.model.Statement;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,7,import java.lang.annotation.Retention;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,8,import java.lang.annotation.RetentionPolicy;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,9,import java.util.Locale;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,11,public class MultiLocaleRule implements TestRule {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,12,@Retention(RetentionPolicy.RUNTIME)
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,13,public @interface MultiLocaleTest {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,16,"public Statement apply(final Statement statement, final Description description) {"
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,17,return new Statement() {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,18,@Override
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,19,public void evaluate() throws Throwable {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,20,MultiLocaleTest annotation = description.getAnnotation(MultiLocaleTest.class);
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,21,if (annotation == null) {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,22,statement.evaluate();
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,23,return;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,26,evaluateWithLocale(Locale.ENGLISH);
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,27,"evaluateWithLocale(new Locale(""tr""));"
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,30,private void evaluateWithLocale(Locale locale) throws Throwable {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,31,Locale oldLocale = Locale.getDefault();
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,32,Locale.setDefault(locale);
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,33,try {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,34,statement.evaluate();
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,35,} finally {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,36,Locale.setDefault(oldLocale);
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,3,mport java.io.UnsupportedEncodingException;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,3,import org.jsoup.Jsoup;
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,8,mport java.nio.ByteBuffer;
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,9,mport java.nio.charset.Charset;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,8,import java.io.ByteArrayInputStream;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,9,import java.io.File;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,10,import java.io.IOException;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,11,import java.io.InputStream;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,12,import java.io.UnsupportedEncodingException;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,13,import java.nio.charset.StandardCharsets;
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,11,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,15,import static org.jsoup.integration.ParseTest.getFile;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,16,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,17,import static org.junit.Assert.assertNotSame;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,18,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,19,import static org.junit.Assert.fail;
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,32,Test public void discardsSpuriousByteOrderMark() {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,40,private InputStream stream(String data) {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,41,return new ByteArrayInputStream(data.getBytes(StandardCharsets.UTF_8));
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,44,"private InputStream stream(String data, String charset) {"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,45,try {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,46,return new ByteArrayInputStream(data.getBytes(charset));
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,47,} catch (UnsupportedEncodingException e) {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,48,fail();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,50,return null;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,53,@Test public void discardsSpuriousByteOrderMark() throws IOException {
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,34,"yteBuffer buffer = Charset.forName(""UTF-8"").encode(html);"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,35,"ocument doc = DataUtil.parseByteData(buffer, ""UTF-8"", ""http://foo.com/"", Parser.htmlParser());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,55,"Document doc = DataUtil.parseInputStream(stream(html), ""UTF-8"", ""http://foo.com/"", Parser.htmlParser());"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,39,Test public void discardsSpuriousByteOrderMarkWhenNoCharsetSet() {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,59,@Test public void discardsSpuriousByteOrderMarkWhenNoCharsetSet() throws IOException {
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,41,"yteBuffer buffer = Charset.forName(""UTF-8"").encode(html);"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,42,"ocument doc = DataUtil.parseByteData(buffer, null, ""http://foo.com/"", Parser.htmlParser());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,61,"Document doc = DataUtil.parseInputStream(stream(html), null, ""http://foo.com/"", Parser.htmlParser());"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,79,ublic void wrongMetaCharsetFallback() {
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,80,ry {
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,81,"inal byte[] input = ""<html><head><meta charset=iso-8></head><body></body></html>"".getBytes(""UTF-8"");"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,82,inal ByteBuffer inBuffer = ByteBuffer.wrap(input);
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,84,"ocument doc = DataUtil.parseByteData(inBuffer, null, ""http://example.com"", Parser.htmlParser());"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,86,"inal String expected = ""<html>\n"" +"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,87," <head>\n"" +"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,88,"  <meta charset=\""iso-8\"">\n"" +"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,89," </head>\n"" +"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,90," <body></body>\n"" +"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,91,"</html>"";"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,93,"ssertEquals(expected, doc.toString());"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,94, catch( UnsupportedEncodingException ex ) {
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,95,ail(ex.getMessage());
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,98,public void wrongMetaCharsetFallback() throws IOException {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,99,"String html = ""<html><head><meta charset=iso-8></head><body></body></html>"";"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,101,"Document doc = DataUtil.parseInputStream(stream(html), null, ""http://example.com"", Parser.htmlParser());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,103,"final String expected = ""<html>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,104,""" <head>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,105,"""  <meta charset=\""iso-8\"">\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,106,""" </head>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,107,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,108,"""</html>"";"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,110,"assertEquals(expected, doc.toString());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,113,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,114,public void secondMetaElementWithContentTypeContainsCharsetParameter() throws Exception {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,115,"String html = ""<html><head>"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,116,"""<meta http-equiv=\""Content-Type\"" content=\""text/html\"">"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,117,"""<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=euc-kr\"">"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,118,"""</head><body>한국어</body></html>"";"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,120,"Document doc = DataUtil.parseInputStream(stream(html, ""euc-kr""), null, ""http://example.com"", Parser.htmlParser());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,122,"assertEquals(""한국어"", doc.body().text());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,125,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,126,public void firstMetaElementWithCharsetShouldBeUsedForDecoding() throws Exception {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,127,"String html = ""<html><head>"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,128,"""<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=iso-8859-1\"">"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,129,"""<meta http-equiv=\""Content-Type\"" content=\""text/html; charset=koi8-u\"">"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,130,"""</head><body>Übergrößenträger</body></html>"";"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,132,"Document doc = DataUtil.parseInputStream(stream(html, ""iso-8859-1""), null, ""http://example.com"", Parser.htmlParser());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,134,"assertEquals(""Übergrößenträger"", doc.body().text());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,137,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,138,public void supportsBOMinFiles() throws IOException {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,139,// test files from http://www.i18nl10n.com/korean/utftest/
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,140,"File in = getFile(""/bomtests/bom_utf16be.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,141,"Document doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,142,"assertTrue(doc.title().contains(""UTF-16BE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,143,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,145,"in = getFile(""/bomtests/bom_utf16le.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,146,"doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,147,"assertTrue(doc.title().contains(""UTF-16LE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,148,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,150,"in = getFile(""/bomtests/bom_utf32be.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,151,"doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,152,"assertTrue(doc.title().contains(""UTF-32BE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,153,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,155,"in = getFile(""/bomtests/bom_utf32le.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,156,"doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,157,"assertTrue(doc.title().contains(""UTF-32LE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,158,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,3,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,3,import org.jsoup.Connection;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,4,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,5,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,7,import org.junit.Rule;
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,7,mport org.jsoup.Connection;
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,10,mport java.util.*;
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,11,mport java.net.URL;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,12,import java.net.URL;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,13,import java.util.ArrayList;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,14,import java.util.Collection;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,15,import java.util.Collections;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,16,import java.util.HashMap;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,17,import java.util.List;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,18,import java.util.Map;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,20,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,21,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,22,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,27,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,32,Test public void caseInsensitiveHeaders() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,44,@Test @MultiLocaleTest public void caseInsensitiveHeaders() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,54,"assertTrue(res.hasHeader(""ACCEPT-ENCODING""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,57,"assertEquals(""gzip"", res.header(""ACCEPT-ENCODING""));"
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,50,"es.header(""accept-encoding"", ""deflate"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,64,"res.removeHeader(""ACCEPT-ENCODING"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,65,"assertFalse(res.hasHeader(""Accept-Encoding""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,67,"res.header(""ACCEPT-ENCODING"", ""deflate"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,72,@Test public void headers() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,73,"Connection con = HttpConnection.connect(""http://example.com"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,74,"Map<String, String> headers = new HashMap<String, String>();"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,75,"headers.put(""content-type"", ""text/html"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,76,"headers.put(""Connection"", ""keep-alive"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,77,"headers.put(""Host"", ""http://example.com"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,78,con.headers(headers);
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,79,"assertEquals(""text/html"", con.request().header(""content-type""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,80,"assertEquals(""keep-alive"", con.request().header(""Connection""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,81,"assertEquals(""http://example.com"", con.request().header(""Host""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,136,"assertEquals(HttpConnection.DEFAULT_UA, con.request().header(""User-Agent""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,143,"assertEquals(30 * 1000, con.request().timeout());"
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,130,Test(expected=IllegalArgumentException.class) public void throwsOnOdddData() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,161,@Test(expected=IllegalArgumentException.class) public void throwsOnOddData() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,197,@Test public void requestBody() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,198,"Connection con = HttpConnection.connect(""http://example.com/"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,199,"con.requestBody(""foo"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,200,"assertEquals(""foo"", con.request().requestBody());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,203,@Test public void encodeUrl() throws MalformedURLException {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,204,"URL url1 = new URL(""http://test.com/?q=white space"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,205,URL url2 = HttpConnection.encodeUrl(url1);
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,206,"assertEquals(""http://test.com/?q=white%20space"", url2.toExternalForm());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,5,import org.jsoup.nodes.Element;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,8,import org.w3c.dom.Node;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,49,Node htmlEl = wDoc.getChildNodes().item(0);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,50,"assertEquals(null, htmlEl.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,51,"assertEquals(""html"", htmlEl.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,52,"assertEquals(""html"", htmlEl.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,58,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,59,public void namespacePreservation() throws IOException {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,60,"File in = ParseTest.getFile(""/htmltests/namespaces.xhtml"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,61,org.jsoup.nodes.Document jsoupDoc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,62,"jsoupDoc = Jsoup.parse(in, ""UTF-8"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,64,Document doc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,65,org.jsoup.helper.W3CDom jDom = new org.jsoup.helper.W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,66,doc = jDom.fromJsoup(jsoupDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,68,Node htmlEl = doc.getChildNodes().item(0);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,69,"assertEquals(""http://www.w3.org/1999/xhtml"", htmlEl.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,70,"assertEquals(""html"", htmlEl.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,71,"assertEquals(""html"", htmlEl.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,73,Node epubTitle = htmlEl.getChildNodes().item(2).getChildNodes().item(3);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,74,"assertEquals(""http://www.idpf.org/2007/ops"", epubTitle.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,75,"assertEquals(""title"", epubTitle.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,76,"assertEquals(""epub:title"", epubTitle.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,78,Node xSection = epubTitle.getNextSibling().getNextSibling();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,79,"assertEquals(""urn:test"", xSection.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,80,"assertEquals(""section"", xSection.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,81,"assertEquals(""x:section"", xSection.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,84,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,85,public void handlesInvalidAttributeNames() {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,86,"String html = ""<html><head></head><body style=\""color: red\"" \"" name\""></body></html>"";"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,87,org.jsoup.nodes.Document jsoupDoc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,88,jsoupDoc = Jsoup.parse(html);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,89,"Element body = jsoupDoc.select(""body"").first();"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,90,"assertTrue(body.hasAttr(""\"""")); // actually an attribute with key '""'. Correct per HTML5 spec, but w3c xml dom doesn't dig it"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,91,"assertTrue(body.hasAttr(""name\""""));"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,93,Document w3Doc = new W3CDom().fromJsoup(jsoupDoc);
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,167,"lement p = doc.select(""p:contains(Volt will be sold in the United States"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,167,"Element p = doc.select(""p:contains(Volt will be sold in the United States)"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,@Test
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,172,public void testLowercaseUtf8Charset() throws IOException {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,173,"File in = getFile(""/htmltests/lowercase-charset-test.html"");"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,174,"Document doc = Jsoup.parse(in, null);"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,176,"Element form = doc.select(""#form"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,177,"assertEquals(2, form.children().size());"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,178,"assertEquals(""UTF-8"", doc.outputSettings().charset().name());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,20,import java.net.ConnectException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,21,import java.net.InetSocketAddress;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,23,import java.net.Proxy;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,24,mport static org.hamcrest.core.Is.is;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,25,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,27,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,28,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,35,"// todo: rebuild these into a local Jetty test server, so not reliant on the vagaries of the internet."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,40,"public static String browserUa = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36"";"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,39,"tring url = ""http://jsoup.org""; // no trailing / to force redir"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,44,"String url = ""https://jsoup.org""; // no trailing / to force redir"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,94,"ocument doc = Jsoup.connect(""http://jsoup.org/rez/osi_logo.png"").ignoreContentType(true).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,99,"Document doc = Jsoup.connect(""https://jsoup.org/rez/osi_logo.png"").ignoreContentType(true).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,117,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,118,public void sendsRequestBodyJsonWithData() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,119,"final String body = ""{key:value}"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,120,Document doc = Jsoup.connect(echoURL)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,121,.requestBody(body)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,122,".header(""Content-Type"", ""application/json"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,123,.userAgent(browserUa)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,124,".data(""foo"", ""true"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,125,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,126,"assertEquals(""POST"", ihVal(""REQUEST_METHOD"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,127,"assertEquals(""application/json"", ihVal(""CONTENT_TYPE"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,128,"assertEquals(""foo=true"", ihVal(""QUERY_STRING"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,129,"assertEquals(body, doc.select(""th:contains(POSTDATA) ~ td"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,132,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,133,public void sendsRequestBodyJsonWithoutData() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,134,"final String body = ""{key:value}"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,135,Document doc = Jsoup.connect(echoURL)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,136,.requestBody(body)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,137,".header(""Content-Type"", ""application/json"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,138,.userAgent(browserUa)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,139,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,140,"assertEquals(""POST"", ihVal(""REQUEST_METHOD"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,141,"assertEquals(""application/json"", ihVal(""CONTENT_TYPE"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,142,"assertEquals(body, doc.select(""th:contains(POSTDATA) ~ td"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,145,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,146,public void sendsRequestBody() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,147,"final String body = ""{key:value}"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,148,Document doc = Jsoup.connect(echoURL)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,149,.requestBody(body)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,150,".header(""Content-Type"", ""text/plain"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,151,.userAgent(browserUa)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,152,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,153,"assertEquals(""POST"", ihVal(""REQUEST_METHOD"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,154,"assertEquals(""text/plain"", ihVal(""CONTENT_TYPE"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,155,"assertEquals(body, doc.select(""th:contains(POSTDATA) ~ td"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,158,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,159,public void sendsRequestBodyWithUrlParams() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,160,"final String body = ""{key:value}"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,161,Document doc = Jsoup.connect(echoURL)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,162,.requestBody(body)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,163,".data(""uname"", ""Jsoup"", ""uname"", ""Jonathan"", ""百"", ""度一下"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,164,".header(""Content-Type"", ""text/plain"") // todo - if user sets content-type, we should append postcharset"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,165,.userAgent(browserUa)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,166,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,167,"assertEquals(""POST"", ihVal(""REQUEST_METHOD"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,168,"assertEquals(""uname=Jsoup&uname=Jonathan&%E7%99%BE=%E5%BA%A6%E4%B8%80%E4%B8%8B"", ihVal(""QUERY_STRING"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,169,"assertEquals(body, ihVal(""POSTDATA"", doc));"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,157,"ssertEquals(""http://jsoup.org"", con.response().url().toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,217,"assertEquals(""https://jsoup.org/"", con.response().url().toString());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,166,"ssertEquals(""http://jsoup.org"", res.url().toExternalForm());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,226,"assertEquals(""https://jsoup.org/"", res.url().toExternalForm());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,254,ublic void ignores500NoWithContentExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,314,public void ignores500WithNoContentExceptionIfSoConfigured() throws IOException {
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,263,ublic void ignores200NoWithContentExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,323,public void ignores200WithNoContentExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,331,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,332,public void handles200WithNoContent() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,333,Connection con = Jsoup
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,334,".connect(""http://direct.infohound.net/tools/200-no-content.pl"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,335,.userAgent(browserUa);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,336,Connection.Response res = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,337,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,338,"assertEquals(200, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,340,con = Jsoup
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,341,".connect(""http://direct.infohound.net/tools/200-no-content.pl"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,342,.parser(Parser.xmlParser())
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,343,.userAgent(browserUa);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,344,res = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,345,doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,346,"assertEquals(200, res.statusCode());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,337,nt actualString = 280735;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,338,"ssertEquals(actualString, defaultRes.body().length());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,339,"ssertEquals(50 * 1024, smallRes.body().length());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,340,"ssertEquals(200 * 1024, mediumRes.body().length());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,341,"ssertEquals(actualString, largeRes.body().length());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,342,"ssertEquals(actualString, unlimitedRes.body().length());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,346,"ssertEquals(49165, smallRes.parse().text().length());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,417,"assertEquals(47200, smallRes.parse().text().length());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,392,"ssertThat(defaultRes.statusCode(), is(200));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,463,"assertEquals(defaultRes.statusCode(), 200);"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,406,"ssertThat(defaultRes.statusCode(), is(200));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,477,"assertEquals(defaultRes.statusCode(), 200);"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,468,/ todo: need to add a better way to get an existing data field
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,469,or (Connection.KeyVal keyVal : post.request().data()) {
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,470,"f (keyVal.key().equals(""_file"")) {"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,471,"eyVal.value(""check.html"");"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,472,eyVal.inputStream(stream);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,539,"Connection.KeyVal fileData = post.data(""_file"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,540,"fileData.value(""check.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,541,fileData.inputStream(stream);
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,494,"connect(""http://regex.info/exif.cgi"")"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,495,"data(""f"", thumb.getName(), new FileInputStream(thumb))"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,496,post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,561,".connect(""http://regex.info/exif.cgi"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,562,".data(""f"", thumb.getName(), new FileInputStream(thumb))"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,563,.userAgent(browserUa)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,564,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,567,"assertEquals(""1052 bytes 30 × 30"", result.select(""td:contains(Size) + td"").text());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,504,"ssertEquals(""http://jsoup.org"", doc.location());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,573,"assertEquals(""https://jsoup.org/"", doc.location());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,509,"tring url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,578,"String url = ""https://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,634,"Proxy tests. Assumes local proxy running on 8888, without system propery set (so that specifying it is required)."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,637,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,638,public void fetchViaHttpProxy() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,639,"String url = ""https://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,640,"Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(""localhost"", 8888));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,641,Document doc = Jsoup.connect(url).proxy(proxy).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,642,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,645,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,646,public void fetchViaHttpProxySetByArgument() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,647,"String url = ""https://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,648,"Document doc = Jsoup.connect(url).proxy(""localhost"", 8888).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,649,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,652,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,653,public void invalidProxyFails() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,654,boolean caught = false;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,655,"String url = ""https://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,656,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,657,"Document doc = Jsoup.connect(url).proxy(""localhost"", 8889).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,658,} catch (IOException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,659,caught = e instanceof ConnectException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,661,assertTrue(caught);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,664,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,665,public void proxyGetAndSet() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,666,"String url = ""https://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,667,"Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(""localhost"", 8889)); // invalid"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,668,final Connection con = Jsoup.connect(url).proxy(proxy);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,670,assert con.request().proxy() == proxy;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,671,con.request().proxy(null); // disable
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,672,Document doc = con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,673,"assertTrue(doc.title().contains(""jsoup"")); // would fail if actually went via proxy"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,676,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,677,public void throwsIfRequestBodyForGet() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,678,boolean caught = false;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,679,"String url = ""https://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,680,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,681,"Document doc = Jsoup.connect(url).requestBody(""fail"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,682,} catch (IllegalArgumentException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,683,caught = true;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,685,assertTrue(caught);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,688,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,689,public void canSpecifyResponseCharset() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,690,// both these docs have <80> in there as euro/control char depending on charset
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,691,"String noCharsetUrl = ""http://direct.infohound.net/tools/Windows-1252-nocharset.html"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,692,"String charsetUrl = ""http://direct.infohound.net/tools/Windows-1252-charset.html"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,694,// included in meta
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,695,Connection.Response res1 = Jsoup.connect(charsetUrl).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,696,"assertEquals(null, res1.charset()); // not set in headers"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,697,final Document doc1 = res1.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,698,"assertEquals(""windows-1252"", doc1.charset().displayName()); // but determined at parse time"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,699,"assertEquals(""Cost is €100"", doc1.select(""p"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,700,"assertTrue(doc1.text().contains(""€""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,702,"// no meta, no override"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,703,Connection.Response res2 = Jsoup.connect(noCharsetUrl).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,704,"assertEquals(null, res2.charset()); // not set in headers"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,705,final Document doc2 = res2.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,706,"assertEquals(""UTF-8"", doc2.charset().displayName()); // so defaults to utf-8"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,707,"assertEquals(""Cost is �100"", doc2.select(""p"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,708,"assertTrue(doc2.text().contains(""�""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,710,"// no meta, let's override"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,711,Connection.Response res3 = Jsoup.connect(noCharsetUrl).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,712,"assertEquals(null, res3.charset()); // not set in headers"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,713,"res3.charset(""windows-1252"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,714,"assertEquals(""windows-1252"", res3.charset()); // read back"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,715,final Document doc3 = res3.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,716,"assertEquals(""windows-1252"", doc3.charset().displayName()); // from override"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,717,"assertEquals(""Cost is €100"", doc3.select(""p"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,718,"assertTrue(doc3.text().contains(""€""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,721,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,722,public void handlesUnescapedRedirects() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,723,"// URL locations should be url safe (ascii) but are often not, so we should try to guess"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,724,"// in this case the location header is utf-8, but defined in spec as iso8859, so detect, convert, encode"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,725,"String url = ""http://direct.infohound.net/tools/302-utf.pl"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,726,"String urlEscaped = ""http://direct.infohound.net/tools/test%F0%9F%92%A9.html"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,728,Connection.Response res = Jsoup.connect(url).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,729,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,730,"assertEquals(doc.body().text(), ""\uD83D\uDCA9!"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,731,"assertEquals(doc.location(), urlEscaped);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,733,Connection.Response res2 = Jsoup.connect(url).followRedirects(false).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,734,"assertEquals(""/tools/test\uD83D\uDCA9.html"", res2.header(""Location""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,735,"// if we didn't notice it was utf8, would look like: Location: /tools/testð©.html"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,738,@Test public void handlesEscapesInRedirecct() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,739,"Document doc = Jsoup.connect(""http://infohound.net/tools/302-escaped.pl"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,740,"assertEquals(""http://infohound.net/tools/q.pl?q=one%20two"", doc.location());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,742,"doc = Jsoup.connect(""http://infohound.net/tools/302-white.pl"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,743,"assertEquals(""http://infohound.net/tools/q.pl?q=one%20two"", doc.location());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,746,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,747,public void handlesUt8fInUrl() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,748,"String url = ""http://direct.infohound.net/tools/test\uD83D\uDCA9.html"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,749,"String urlEscaped = ""http://direct.infohound.net/tools/test%F0%9F%92%A9.html"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,751,Connection.Response res = Jsoup.connect(url).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,752,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,753,"assertEquals(""\uD83D\uDCA9!"", doc.body().text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,754,"assertEquals(urlEscaped, doc.location());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,757,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,758,public void inWildUtfRedirect() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,759,"Connection.Response res = Jsoup.connect(""http://brabantn.ws/Q4F"").execute();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,760,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,761,assertEquals(
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,762,"""http://www.omroepbrabant.nl/?news/2474781303/Gestrande+ree+in+Oss+niet+verdoofd,+maar+doodgeschoten+%E2%80%98Dit+kan+gewoon+niet,+bizar%E2%80%99+[VIDEO].aspx"","
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,763,doc.location()
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,767,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,768,public void inWildUtfRedirect2() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,769,"Connection.Response res = Jsoup.connect(""https://ssl.souq.com/sa-en/2724288604627/s"").execute();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,770,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,771,assertEquals(
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,772,"""https://saudi.souq.com/sa-en/%D8%AE%D8%B2%D9%86%D8%A9-%D8%A2%D9%85%D9%86%D8%A9-3-%D8%B7%D8%A8%D9%82%D8%A7%D8%AA-%D8%A8%D9%86%D8%B8%D8%A7%D9%85-%D9%82%D9%81%D9%84-%D8%A5%D9%84%D9%83%D8%AA%D8%B1%D9%88%D9%86%D9%8A-bsd11523-6831477/i/?ctype=dsrch"","
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,773,doc.location()
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,777,"@Test public void canInterruptBodyStringRead() throws IOException, InterruptedException {"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,778,"// todo - implement in interruptable channels, so it's immediate"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,779,final String[] body = new String[1];
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,780,Thread runner = new Thread(new Runnable() {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,781,public void run() {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,782,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,783,"Connection.Response res = Jsoup.connect(""http://jsscxml.org/serverload.stream"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,784,.timeout(15 * 1000)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,785,.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,786,body[0] = res.body();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,787,} catch (IOException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,788,throw new RuntimeException(e);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,794,runner.start();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,795,Thread.sleep(1000 * 7);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,796,runner.interrupt();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,797,assertTrue(runner.isInterrupted());
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,798,runner.join();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,800,assertTrue(body[0].length() > 0);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,803,"@Test public void canInterruptDocumentRead() throws IOException, InterruptedException {"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,804,"// todo - implement in interruptable channels, so it's immediate"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,805,final String[] body = new String[1];
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,806,Thread runner = new Thread(new Runnable() {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,807,public void run() {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,808,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,809,"Connection.Response res = Jsoup.connect(""http://jsscxml.org/serverload.stream"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,810,.timeout(15 * 1000)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,811,.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,812,body[0] = res.parse().text();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,813,} catch (IOException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,814,throw new RuntimeException(e);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,820,runner.start();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,821,Thread.sleep(1000 * 7);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,822,runner.interrupt();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,823,assertTrue(runner.isInterrupted());
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,824,runner.join();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,826,assertTrue(body[0].length() > 0);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,829,@Test public void handlesEscapedRedirectUrls() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,830,"String url = ""http://www.altalex.com/documents/news/2016/12/06/questioni-civilistiche-conseguenti-alla-depenalizzazione"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,831,// sends: Location:http://shop.wki.it/shared/sso/sso.aspx?sso=&url=http%3a%2f%2fwww.altalex.com%2fsession%2fset%2f%3freturnurl%3dhttp%253a%252f%252fwww.altalex.com%253a80%252fdocuments%252fnews%252f2016%252f12%252f06%252fquestioni-civilistiche-conseguenti-alla-depenalizzazione
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,832,// then to: http://www.altalex.com/session/set/?returnurl=http%3a%2f%2fwww.altalex.com%3a80%2fdocuments%2fnews%2f2016%2f12%2f06%2fquestioni-civilistiche-conseguenti-alla-depenalizzazione&sso=RDRG6T684G4AK2E7U591UGR923
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,833,// then : http://www.altalex.com:80/documents/news/2016/12/06/questioni-civilistiche-conseguenti-alla-depenalizzazione
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,835,// bug is that jsoup goes to
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,836,// 	GET /shared/sso/sso.aspx?sso=&url=http%253a%252f%252fwww.altalex.com%252fsession%252fset%252f%253freturnurl%253dhttp%25253a%25252f%25252fwww.altalex.com%25253a80%25252fdocuments%25252fnews%25252f2016%25252f12%25252f06%25252fquestioni-civilistiche-conseguenti-alla-depenalizzazione HTTP/1.1
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,837,// i.e. double escaped
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,839,Connection.Response res = Jsoup.connect(url)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,840,".proxy(""localhost"", 8888)"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,841,.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,842,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,843,"assertEquals(200, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,846,@Test public void handlesUnicodeInQuery() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,847,"Document doc = Jsoup.connect(""https://www.google.pl/search?q=gąska"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,848,"assertEquals(""gąska - Szukaj w Google"", doc.title());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,850,"doc = Jsoup.connect(""http://mov-world.net/archiv/TV/A/%23No.Title/"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,851,"assertEquals(""Index of /archiv/TV/A/%23No.Title"", doc.title());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,854,@Test(expected=IllegalArgumentException.class) public void bodyAfterParseThrowsValidationError() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,855,Connection.Response res = Jsoup.connect(echoURL).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,856,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,857,String body = res.body();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,860,@Test public void bodyAndBytesAvailableBeforeParse() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,861,Connection.Response res = Jsoup.connect(echoURL).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,862,String body = res.body();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,863,"assertTrue(body.contains(""Environment""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,864,byte[] bytes = res.bodyAsBytes();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,865,assertTrue(bytes.length > 100);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,867,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,868,"assertTrue(doc.title().contains(""Environment""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,871,@Test(expected=IllegalArgumentException.class) public void parseParseThrowsValidates() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,872,Connection.Response res = Jsoup.connect(echoURL).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,873,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,874,"assertTrue(doc.title().contains(""Environment""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,875,Document doc2 = res.parse(); // should blow up because the response input stream has been drained
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,878,@Test public void multipleParsesOkAfterBufferUp() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,879,Connection.Response res = Jsoup.connect(echoURL).execute().bufferUp();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,881,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,882,"assertTrue(doc.title().contains(""Environment""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,884,Document doc2 = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,885,"assertTrue(doc2.title().contains(""Environment""));"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,3,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,5,import java.util.Iterator;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,7,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,8,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,9,import static org.junit.Assert.assertTrue;
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,13,Test public void html() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,18,@Test
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,19,public void html() {
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,20,"ssertTrue(a.hasKey(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,26,"assertTrue(a.hasKey(""Tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,29,"assertFalse(a.hasKey(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,30,"assertTrue(a.hasKeyIgnoreCase(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,31,"assertEquals(""There"", a.getIgnoreCase(""hEllo""));"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,25,"ssertEquals(""a&p"", a.get(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,35,"assertEquals("""", a.get(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,36,"assertEquals(""a&p"", a.get(""Tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,37,"assertEquals(""a&p"", a.getIgnoreCase(""tot""));"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,27,"ssertEquals("" tot=\""a&amp;p\"" hello=\""There\"" data-name=\""Jsoup\"""", a.html());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,39,"assertEquals("" Tot=\""a&amp;p\"" Hello=\""There\"" data-name=\""Jsoup\"""", a.html());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,43,@Test
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,44,public void testIteratorRemovable() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,45,Attributes a = new Attributes();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,46,"a.put(""Tot"", ""a&p"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,47,"a.put(""Hello"", ""There"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,48,"a.put(""data-name"", ""Jsoup"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,50,Iterator<Attribute> iterator = a.iterator();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,51,iterator.next();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,52,iterator.remove();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,53,"assertEquals(2, a.size());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,56,@Test
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,57,public void testIterator() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,58,Attributes a = new Attributes();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,59,"String[][] datas = {{""Tot"", ""raul""},"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,60,"{""Hello"", ""pismuth""},"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,61,"{""data-name"", ""Jsoup""}};"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,62,for (String[] atts : datas) {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,63,"a.put(atts[0], atts[1]);"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,66,Iterator<Attribute> iterator = a.iterator();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,67,assertTrue(iterator.hasNext());
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,68,int i = 0;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,69,for (Attribute attribute : a) {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,70,"assertEquals(datas[i][0], attribute.getKey());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,71,"assertEquals(datas[i][1], attribute.getValue());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,72,i++;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,74,"assertEquals(datas.length, i);"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,77,@Test
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,78,public void testIteratorEmpty() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,79,Attributes a = new Attributes();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,81,Iterator<Attribute> iterator = a.iterator();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,82,assertFalse(iterator.hasNext());
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,85,@Test
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,86,public void removeCaseSensitive() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,87,Attributes a = new Attributes();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,88,"a.put(""Tot"", ""a&p"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,89,"a.put(""tot"", ""one"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,90,"a.put(""Hello"", ""There"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,91,"a.put(""hello"", ""There"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,92,"a.put(""data-name"", ""Jsoup"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,94,"assertEquals(5, a.size());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,95,"a.remove(""Tot"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,96,"a.remove(""Hello"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,97,"assertEquals(3, a.size());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,98,"assertTrue(a.hasKey(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,99,"assertFalse(a.hasKey(""Tot""));"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,1,package org.jsoup.nodes;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,3,import com.google.gson.Gson;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,4,import com.google.gson.reflect.TypeToken;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,5,import org.jsoup.Connection;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,6,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,7,import org.jsoup.integration.UrlConnectTest;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,8,import org.jsoup.nodes.Entities;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,10,import java.io.File;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,11,import java.io.FileWriter;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,12,import java.io.IOException;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,13,import java.util.ArrayList;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,14,import java.util.Collections;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,15,import java.util.Comparator;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,16,import java.util.Map;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,19,"* Fetches HTML entity names from w3.org json, and outputs data files for optimized used in Entities."
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,20,"* I refuse to believe that entity names like ""NotNestedLessLess"" are valuable or useful for HTML authors. Implemented"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,21,* only to be complete.
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,23,class BuildEntities {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,24,"private static final String projectDir = ""/Users/jhy/projects/jsoup"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,26,public static void main(String[] args) throws IOException {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,27,"String url = ""https://www.w3.org/TR/2012/WD-html5-20121025/entities.json"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,28,Connection.Response res = Jsoup.connect(url)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,29,.ignoreContentType(true)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,30,.userAgent(UrlConnectTest.browserUa)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,31,.execute();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,33,Gson gson = new Gson();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,34,"Map<String, CharacterRef> input = gson.fromJson(res.body(),"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,35,"new TypeToken<Map<String, CharacterRef>>() {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,36,}.getType());
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,39,// build name sorted base and full character lists:
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,40,ArrayList<CharacterRef> base = new ArrayList<CharacterRef>();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,41,ArrayList<CharacterRef> full = new ArrayList<CharacterRef>();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,43,"for (Map.Entry<String, CharacterRef> entry : input.entrySet()) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,44,"String name = entry.getKey().substring(1); // name is like &acute or &acute; , trim &"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,45,CharacterRef ref = entry.getValue();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,46,"if (name.endsWith("";"")) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,47,"name = name.substring(0, name.length() - 1);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,48,full.add(ref);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,49,} else {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,50,base.add(ref);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,52,ref.name = name;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,54,"Collections.sort(base, byName);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,55,"Collections.sort(full, byName);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,57,// now determine code point order
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,58,ArrayList<CharacterRef> baseByCode = new ArrayList<CharacterRef>(base);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,59,ArrayList<CharacterRef> fullByCode = new ArrayList<CharacterRef>(full);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,60,"Collections.sort(baseByCode, byCode);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,61,"Collections.sort(fullByCode, byCode);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,63,// and update their codepoint index. Don't
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,64,"ArrayList<CharacterRef>[] codelists = new ArrayList[]{baseByCode, fullByCode};"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,65,for (ArrayList<CharacterRef> codelist : codelists) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,66,for (int i = 0; i < codelist.size(); i++) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,67,codelist.get(i).codeIndex = i;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,71,// now write them
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,72,"persist(""entities-full.properties"", full);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,73,"persist(""entities-base.properties"", base);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,75,"System.out.println(""Full size: "" + full.size() + "", base size: "" + base.size());"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,78,"private static void persist(String name, ArrayList<CharacterRef> refs) throws IOException {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,79,"String base = projectDir + ""/src/main/java/org/jsoup/nodes"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,80,"File file = new File(base, name);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,81,"FileWriter writer = new FileWriter(file, false);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,82,for (CharacterRef ref : refs) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,83,"writer.append(ref.toString()).append(""\n"");"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,85,writer.close();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,89,private static class CharacterRef {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,90,int[] codepoints;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,91,String name;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,92,int codeIndex;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,94,@Override
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,95,public String toString() {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,96,return name
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,98,+ d(codepoints[0])
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,99,"+ (codepoints.length > 1 ? "","" + d(codepoints[1]) : """")"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,100,"+ "";"" + d(codeIndex);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,104,private static String d(int d) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,105,"return Integer.toString(d, Entities.codepointRadix);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,108,private static class ByName implements Comparator<CharacterRef> {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,109,"public int compare(CharacterRef o1, CharacterRef o2) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,110,return o1.name.compareTo(o2.name);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,114,private static class ByCode implements Comparator<CharacterRef> {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,115,"public int compare(CharacterRef o1, CharacterRef o2) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,116,int[] c1 = o1.codepoints;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,117,int[] c2 = o2.codepoints;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,118,int first = c1[0] - c2[0];
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,119,if (first != 0)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,120,return first;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,121,"if (c1.length == 1 && c2.length == 1) { // for the same code, use the shorter name"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,122,int len = o2.name.length() - o1.name.length();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,123,if (len != 0)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,124,return len;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,125,return o1.name.compareTo(o2.name);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,127,if (c1.length == 2 && c2.length == 2)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,128,return c1[1] - c2[1];
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,129,else
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,130,return c2.length - c1.length; // pushes multi down the list so hits on singles first (don't support multi lookup by codepoint yet)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,134,private static ByName byName = new ByName();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,135,private static ByCode byCode = new ByCode();
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,3,mport java.io.ByteArrayInputStream;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,4,mport java.io.File;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,5,mport java.io.IOException;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,6,mport java.io.InputStream;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,7,mport java.nio.charset.Charset;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,6,import org.jsoup.nodes.Document.OutputSettings;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,12,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,11,import java.io.ByteArrayInputStream;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,12,import java.io.File;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,13,import java.io.IOException;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,14,import java.io.InputStream;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,15,import java.io.StringWriter;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,16,import java.nio.charset.Charset;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,18,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,19,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,20,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,21,import static org.junit.Assert.assertNull;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,22,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,149,@Test public void testHtmlAppendable() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,150,"String htmlContent = ""<html><head><title>Hello</title></head><body><p>One</p><p>Two</p></body></html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,151,Document document = Jsoup.parse(htmlContent);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,152,OutputSettings outputSettings = new OutputSettings();
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,154,outputSettings.prettyPrint(false);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,155,document.outputSettings(outputSettings);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,156,"assertEquals(htmlContent, document.html(new StringWriter()).toString());"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,159,"ssertEquals(docA, docB);"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,160,ssertFalse(docA.equals(docC));
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,161,"ssertEquals(docA.hashCode(), docB.hashCode());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,177,assertFalse(docA.equals(docB));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,178,assertTrue(docA.equals(docA));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,179,"assertEquals(docA.hashCode(), docA.hashCode());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,183,@Test public void DocumentsWithSameContentAreVerifialbe() throws Exception {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,184,"Document docA = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,185,"Document docB = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,186,"Document docC = Jsoup.parse(""<div/>Two"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,188,assertTrue(docA.hasSameValue(docB));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,189,assertFalse(docA.hasSameValue(docC));
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,288,"inal String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,315,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\""?>\n"" +"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,306,"inal String xmlCharsetISO = ""<?xml version=\""1.0\"" encoding=\"""" + charsetIso8859 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,333,"final String xmlCharsetISO = ""<?xml version=\""1.0\"" encoding=\"""" + charsetIso8859 + ""\""?>\n"" +"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,324,"inal String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,351,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\""?>\n"" +"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,348,"inal String xmlCharset = ""<?xml version=\""dontTouch\"" encoding=\""dontTouch\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,375,"final String xmlCharset = ""<?xml version=\""dontTouch\"" encoding=\""dontTouch\""?>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,3,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,4,import org.jsoup.parser.Parser;
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,44,@Test public void testRoundTrip() {
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,45,"String base = ""<!DOCTYPE html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,46,"assertEquals(""<!doctype html>"", htmlOutput(base));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,47,"assertEquals(base, xmlOutput(base));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,49,"String publicDoc = ""<!DOCTYPE html PUBLIC \""-//W3C//DTD XHTML 1.0 Transitional//EN\"" \""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"">"";"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,50,"assertEquals(publicDoc, htmlOutput(publicDoc));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,51,"assertEquals(publicDoc, xmlOutput(publicDoc));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,53,"String systemDoc = ""<!DOCTYPE html SYSTEM \""exampledtdfile.dtd\"">"";"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,54,"assertEquals(systemDoc, htmlOutput(systemDoc));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,55,"assertEquals(systemDoc, xmlOutput(systemDoc));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,57,"String legacyDoc = ""<!DOCTYPE html SYSTEM \""about:legacy-compat\"">"";"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,58,"assertEquals(legacyDoc, htmlOutput(legacyDoc));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,59,"assertEquals(legacyDoc, xmlOutput(legacyDoc));"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,62,private String htmlOutput(String in) {
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,63,DocumentType type = (DocumentType) Jsoup.parse(in).childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,64,return type.outerHtml();
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,67,private String xmlOutput(String in) {
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,68,"return Jsoup.parse(in, """", Parser.xmlParser()).childNode(0).outerHtml();"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,9,mport static org.hamcrest.CoreMatchers.equalTo;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,10,mport static org.hamcrest.CoreMatchers.not;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,11,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,10,import java.util.Collection;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,11,import java.util.HashSet;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,16,mport java.util.Set;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,15,import java.util.Set;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,17,import static org.hamcrest.CoreMatchers.equalTo;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,18,import static org.hamcrest.CoreMatchers.not;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,19,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,20,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,21,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,22,import static org.junit.Assert.assertNull;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,23,import static org.junit.Assert.assertSame;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,24,import static org.junit.Assert.assertThat;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,25,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,26,import static org.junit.Assert.fail;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,233,@Test public void testHasClassDomMethods() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,234,"Tag tag = Tag.valueOf(""a"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,235,Attributes attribs = new Attributes();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,236,"Element el = new Element(tag, """", attribs);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,238,"attribs.put(""class"", ""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,239,"boolean hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,240,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,242,"attribs.put(""class"", "" toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,243,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,244,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,246,"attribs.put(""class"", ""toto "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,247,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,248,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,250,"attribs.put(""class"", ""\ttoto "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,251,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,252,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,254,"attribs.put(""class"", ""  toto "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,255,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,256,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,258,"attribs.put(""class"", ""ab"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,259,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,260,assertFalse(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,262,"attribs.put(""class"", ""     "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,263,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,264,assertFalse(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,266,"attribs.put(""class"", ""tototo"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,267,"hasClass = el.hasClass(""toto"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,268,assertFalse(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,270,"attribs.put(""class"", ""raulpismuth  "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,271,"hasClass = el.hasClass(""raulpismuth"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,272,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,274,"attribs.put(""class"", "" abcd  raulpismuth efgh "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,275,"hasClass = el.hasClass(""raulpismuth"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,276,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,278,"attribs.put(""class"", "" abcd efgh raulpismuth"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,279,"hasClass = el.hasClass(""raulpismuth"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,280,assertTrue(hasClass);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,282,"attribs.put(""class"", "" abcd efgh raulpismuth "");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,283,"hasClass = el.hasClass(""raulpismuth"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,284,assertTrue(hasClass);
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,308,"iv.appendElement(""P"").attr(""class"", ""second"").text(""now"");"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,309,"ssertEquals(""<html><head></head><body><div id=\""1\""><p>Hello</p><p>there</p><p class=\""second\"">now</p></div></body></html>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,372,"div.appendElement(""P"").attr(""CLASS"", ""second"").text(""now"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,373,"// manually specifying tag and attributes should now preserve case, regardless of parse mode"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,374,"assertEquals(""<html><head></head><body><div id=\""1\""><p>Hello</p><p>there</p><P CLASS=\""second\"">now</P></div></body></html>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,449,@Test(expected = IllegalArgumentException.class) public void testThrowsOnAddNullText() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,450,"Document doc = Jsoup.parse(""<div id=1><p>Hello</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,451,"Element div = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,452,div.appendText(null);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,455,@Test(expected = IllegalArgumentException.class)  public void testThrowsOnPrependNullText() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,456,"Document doc = Jsoup.parse(""<div id=1><p>Hello</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,457,"Element div = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,458,div.prependText(null);
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,691,"iv2.insertChildren(0, null);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,768,"div2.insertChildren(0, (Collection<? extends Node>) null);"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,795,ublic void testHashAndEquals() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,872,public void testHashAndEqualsAndValue() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,873,// .equals and hashcode are identity. value is content.
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,826,"ssertEquals(e0, e1);"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,827,"ssertEquals(e0, e4);"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,828,"ssertEquals(e0, e5);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,905,"assertEquals(e0, e0);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,906,assertTrue(e0.hasSameValue(e1));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,907,assertTrue(e0.hasSameValue(e4));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,908,assertTrue(e0.hasSameValue(e5));
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,830,ssertFalse(e0.equals(e3));
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,831,ssertFalse(e0.equals(e6));
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,832,ssertFalse(e0.equals(e7));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,910,assertFalse(e0.hasSameValue(e2));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,911,assertFalse(e0.hasSameValue(e3));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,912,assertFalse(e0.hasSameValue(e6));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,913,assertFalse(e0.hasSameValue(e7));
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,834,"ssertEquals(e0.hashCode(), e1.hashCode());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,835,"ssertEquals(e0.hashCode(), e4.hashCode());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,836,"ssertEquals(e0.hashCode(), e5.hashCode());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,915,"assertEquals(e0.hashCode(), e0.hashCode());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,934,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,935,public void appendMustCorrectlyMoveChildrenInsideOneParentElement() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,936,"Document doc = new Document("""");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,937,"Element body = doc.appendElement(""body"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,938,"body.appendElement(""div1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,939,"body.appendElement(""div2"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,940,"final Element div3 = body.appendElement(""div3"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,941,"div3.text(""Check"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,942,"final Element div4 = body.appendElement(""div4"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,944,ArrayList<Element> toMove = new ArrayList<Element>();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,945,toMove.add(div3);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,946,toMove.add(div4);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,948,"body.insertChildren(0, toMove);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,950,"String result = doc.toString().replaceAll(""\\s+"", """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,951,"assertEquals(""<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>"", result);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,954,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,955,public void testHashcodeIsStableWithContentChanges() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,956,"Element root = new Element(Tag.valueOf(""root""), """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,958,HashSet<Element> set = new HashSet<Element>();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,959,// Add root node:
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,960,set.add(root);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,962,"root.appendChild(new Element(Tag.valueOf(""a""), """"));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,963,assertTrue(set.contains(root));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,966,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,967,public void testNamespacedElements() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,968,// Namespaces with ns:tag in HTML must be translated to ns|tag in CSS.
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,969,"String html = ""<html><body><fb:comments /></body></html>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,970,"Document doc = Jsoup.parse(html, ""http://example.com/bar/"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,971,"Elements els = doc.select(""fb|comments"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,972,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,973,"assertEquals(""html > body > fb|comments"", els.get(0).cssSelector());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,976,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,977,public void testChainedRemoveAttributes() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,978,"String html = ""<a one two three four>Text</a>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,979,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,980,"Element a = doc.select(""a"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,981,a
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,982,".removeAttr(""zero"")"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,983,".removeAttr(""one"")"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,984,".removeAttr(""two"")"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,985,".removeAttr(""three"")"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,986,".removeAttr(""four"")"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,987,".removeAttr(""five"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,988,"assertEquals(""<a>Text</a>"", a.outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,991,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,992,public void testLoopedRemoveAttributes() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,993,"String html = ""<a one two three four>Text</a><p foo>Two</p>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,994,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,995,for (Element el : doc.getAllElements()) {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,996,el.clearAttributes();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,999,"assertEquals(""<a>Text</a>\n<p>Two</p>"", doc.body().html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1002,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1003,public void testIs() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1004,"String html = ""<div><p>One <a class=big>Two</a> Three</p><p>Another</p>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1005,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1006,"Element p = doc.select(""p"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1008,"assertTrue(p.is(""p""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1009,"assertFalse(p.is(""div""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1010,"assertTrue(p.is(""p:has(a)""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1011,"assertTrue(p.is(""p:first-child""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1012,"assertFalse(p.is(""p:last-child""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1013,"assertTrue(p.is(""*""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1014,"assertTrue(p.is(""div p""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1016,"Element q = doc.select(""p"").last();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1017,"assertTrue(q.is(""p""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1018,"assertTrue(q.is(""p ~ p""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1019,"assertTrue(q.is(""p + p""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1020,"assertTrue(q.is(""p:last-child""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1021,"assertFalse(q.is(""p a""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1022,"assertFalse(q.is(""a""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1026,@Test public void elementByTagName() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1027,"Element a = new Element(""P"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1028,"assertTrue(a.tagName().equals(""P""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1031,@Test public void testChildrenElements() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1032,"String html = ""<div><p><a>One</a></p><p><a>Two</a></p>Three</div><span>Four</span><foo></foo><img>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1033,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1034,"Element div = doc.select(""div"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1035,"Element p = doc.select(""p"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1036,"Element span = doc.select(""span"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1037,"Element foo = doc.select(""foo"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1038,"Element img = doc.select(""img"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1040,Elements docChildren = div.children();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1041,"assertEquals(2, docChildren.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1042,"assertEquals(""<p><a>One</a></p>"", docChildren.get(0).outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1043,"assertEquals(""<p><a>Two</a></p>"", docChildren.get(1).outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1044,"assertEquals(3, div.childNodes().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1045,"assertEquals(""Three"", div.childNodes().get(2).outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1047,"assertEquals(1, p.children().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1048,"assertEquals(""One"", p.children().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1050,"assertEquals(0, span.children().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1051,"assertEquals(1, span.childNodes().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1052,"assertEquals(""Four"", span.childNodes().get(0).outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1054,"assertEquals(0, foo.children().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1055,"assertEquals(0, foo.childNodes().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1056,"assertEquals(0, img.children().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1057,"assertEquals(0, img.childNodes().size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1060,@Test public void testShadowElementsAreUpdated() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1061,"String html = ""<div><p><a>One</a></p><p><a>Two</a></p>Three</div><span>Four</span><foo></foo><img>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1062,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1063,"Element div = doc.select(""div"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1064,Elements els = div.children();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1065,List<Node> nodes = div.childNodes();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1067,"assertEquals(2, els.size()); // the two Ps"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1068,"assertEquals(3, nodes.size()); // the ""Three"" textnode"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1070,"Element p3 = new Element(""p"").text(""P3"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1071,"Element p4 = new Element(""p"").text(""P4"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1072,"div.insertChildren(1, p3);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1073,"div.insertChildren(3, p4);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1074,Elements els2 = div.children();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1076,// first els should not have changed
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1077,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1078,"assertEquals(4, els2.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1080,"assertEquals(""<p><a>One</a></p>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1081,"""<p>P3</p>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1082,"""<p><a>Two</a></p>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1083,"""<p>P4</p>Three"", div.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1084,"assertEquals(""P3"", els2.get(1).text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1085,"assertEquals(""P4"", els2.get(3).text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1087,"p3.after(""<span>Another</span"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1089,Elements els3 = div.children();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1090,"assertEquals(5, els3.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1091,"assertEquals(""span"", els3.get(2).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1092,"assertEquals(""Another"", els3.get(2).text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1094,"assertEquals(""<p><a>One</a></p>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1095,"""<p>P3</p>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1096,"""<span>Another</span>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1097,"""<p><a>Two</a></p>\n"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1098,"""<p>P4</p>Three"", div.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1101,@Test public void classNamesAndAttributeNameIsCaseInsensitive() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1102,"String html = ""<p Class='SomeText AnotherText'>One</p>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1103,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1104,"Element p = doc.select(""p"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1105,"assertEquals(""SomeText AnotherText"", p.className());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1106,"assertTrue(p.classNames().contains(""SomeText""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1107,"assertTrue(p.classNames().contains(""AnotherText""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1108,"assertTrue(p.hasClass(""SomeText""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1109,"assertTrue(p.hasClass(""sometext""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1110,"assertTrue(p.hasClass(""AnotherText""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1111,"assertTrue(p.hasClass(""anothertext""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1113,"Element p1 = doc.select("".SomeText"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1114,"Element p2 = doc.select("".sometext"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1115,"Element p3 = doc.select(""[class=SomeText AnotherText]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1116,"Element p4 = doc.select(""[Class=SomeText AnotherText]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1117,"Element p5 = doc.select(""[class=sometext anothertext]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1118,"Element p6 = doc.select(""[class=SomeText AnotherText]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1119,"Element p7 = doc.select(""[class^=sometext]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1120,"Element p8 = doc.select(""[class$=nothertext]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1121,"Element p9 = doc.select(""[class^=sometext]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1122,"Element p10 = doc.select(""[class$=AnotherText]"").first();"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1124,"assertEquals(""One"", p1.text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1125,"assertEquals(p1, p2);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1126,"assertEquals(p1, p3);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1127,"assertEquals(p1, p4);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1128,"assertEquals(p1, p5);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1129,"assertEquals(p1, p6);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1130,"assertEquals(p1, p7);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1131,"assertEquals(p1, p8);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1132,"assertEquals(p1, p9);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,1133,"assertEquals(p1, p10);"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,35,Test public void escapeSupplementaryCharacter(){
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,34,@Test public void escapedSupplemtary() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,35,"String text = ""\uD835\uDD59"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,36,"String escapedAscii = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(base));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,37,"assertEquals(""&#x1d559;"", escapedAscii);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,38,"String escapedAsciiFull = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,39,"assertEquals(""&hopf;"", escapedAsciiFull);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,40,"String escapedUtf= Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,41,"assertEquals(text, escapedUtf);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,44,@Test public void unescapeMultiChars() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,45,"String text = ""&NestedGreaterGreater; &nGg; &nGt; &nGtv; &Gt; &gg;""; // gg is not combo, but 8811 could conflict with NestedGreaterGreater or others"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,46,"String un = ""≫ ⋙̸ ≫⃒ ≫̸ ≫ ≫"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,47,"assertEquals(un, Entities.unescape(text));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,48,"String escaped = Entities.escape(un, new OutputSettings().charset(""ascii"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,49,"assertEquals(""&Gt; &Gg;&#x338; &Gt;&#x20d2; &Gt;&#x338; &Gt; &Gt;"", escaped);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,50,"assertEquals(un, Entities.unescape(escaped));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,53,@Test public void xhtml() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,54,"String text = ""&amp; &gt; &lt; &quot;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,55,"assertEquals(38, xhtml.codepointForName(""amp""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,56,"assertEquals(62, xhtml.codepointForName(""gt""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,57,"assertEquals(60, xhtml.codepointForName(""lt""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,58,"assertEquals(34, xhtml.codepointForName(""quot""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,60,"assertEquals(""amp"", xhtml.nameForCodepoint(38));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,61,"assertEquals(""gt"", xhtml.nameForCodepoint(62));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,62,"assertEquals(""lt"", xhtml.nameForCodepoint(60));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,63,"assertEquals(""quot"", xhtml.nameForCodepoint(34));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,66,@Test public void getByName() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,67,"assertEquals(""≫⃒"", Entities.getByName(""nGt""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,68,"assertEquals(""fj"", Entities.getByName(""fjlig""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,69,"assertEquals(""≫"", Entities.getByName(""gg""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,70,"assertEquals(""©"", Entities.getByName(""copy""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,73,@Test public void escapeSupplementaryCharacter() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,81,@Test public void notMissingMultis() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,82,"String text = ""&nparsl;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,83,"String un = ""\u2AFD\u20E5"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,84,"assertEquals(un, Entities.unescape(text));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,87,@Test public void notMissingSupplementals() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,88,"String text = ""&npolint; &qfr;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,89,"String un = ""⨔ \uD835\uDD2E""; // 𝔮"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,90,"assertEquals(un, Entities.unescape(text));"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,44,"tring text = ""Hello &amp;&LT&gt; &reg &angst; &angst &#960; &#960 &#x65B0; there &! &frac34; &copy; &COPY;"";"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,45,"ssertEquals(""Hello &<> ® Å &angst π π 新 there &! ¾ © ©"", Entities.unescape(text));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,94,"String text = ""Hello &AElig; &amp;&LT&gt; &reg &angst; &angst &#960; &#960 &#x65B0; there &! &frac34; &copy; &COPY;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,95,"assertEquals(""Hello Æ &<> ® Å &angst π π 新 there &! ¾ © ©"", Entities.unescape(text));"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,39,"tring baseUri = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,39,"String baseUri = ""https://jsoup.org"";"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,48,"ocument doc = Jsoup.parse(""<a href=/foo>Hello</a>"", ""http://jsoup.org/"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,48,"Document doc = Jsoup.parse(""<a href=/foo>Hello</a>"", ""https://jsoup.org/"");"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,51,"ssertEquals(""http://jsoup.org/foo"", a.attr(""abs:href""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,51,"assertEquals(""https://jsoup.org/foo"", a.attr(""abs:href""));"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,56,"ocument doc = Jsoup.parse(""<p><img src=\""/rez/osi_logo.png\"" /></p>"", ""http://jsoup.org/"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,56,"Document doc = Jsoup.parse(""<p><img src=\""/rez/osi_logo.png\"" /></p>"", ""https://jsoup.org/"");"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,58,"ssertEquals(""http://jsoup.org/rez/osi_logo.png"", img.attr(""abs:src""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,58,"assertEquals(""https://jsoup.org/rez/osi_logo.png"", img.attr(""abs:src""));"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,64,"ocument doc = Jsoup.parse(""<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org/'>Two</a>"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,64,"Document doc = Jsoup.parse(""<a id=1 href='/foo'>One</a> <a id=2 href='https://jsoup.org/'>Two</a>"");"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,74,"ssertEquals(""http://jsoup.org/"", two.absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,74,"assertEquals(""https://jsoup.org/"", two.absUrl(""href""));"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,119,"ocument doc = Jsoup.parse(""<a href='?foo'>One</a> <a href='bar.html?foo'>Two</a>"", ""http://jsoup.org/path/file?bar"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,119,"Document doc = Jsoup.parse(""<a href='?foo'>One</a> <a href='bar.html?foo'>Two</a>"", ""https://jsoup.org/path/file?bar"");"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,122,"ssertEquals(""http://jsoup.org/path/file?foo"", a1.absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,122,"assertEquals(""https://jsoup.org/path/file?foo"", a1.absUrl(""href""));"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,125,"ssertEquals(""http://jsoup.org/path/bar.html?foo"", a2.absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,125,"assertEquals(""https://jsoup.org/path/bar.html?foo"", a2.absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,160,@Test public void root() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,161,"Document doc = Jsoup.parse(""<div><p>Hello"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,162,"Element p = doc.select(""p"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,163,Node root = p.root();
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,164,assertTrue(doc == root);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,165,assertNull(root.parent());
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,166,assertTrue(doc.root() == doc);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,167,assertTrue(doc.root() == doc.ownerDocument());
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,169,"Element standAlone = new Element(Tag.valueOf(""p""), """");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,170,assertTrue(standAlone.parent() == null);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,171,assertTrue(standAlone.root() == standAlone);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,172,assertTrue(standAlone.ownerDocument() == null);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,293,@Test public void changingAttributeValueShouldReplaceExistingAttributeCaseInsensitive() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,294,"Document document = Jsoup.parse(""<INPUT id=\""foo\"" NAME=\""foo\"" VALUE=\""\"">"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,295,"Element inputElement = document.select(""#foo"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,297,"inputElement.attr(""value"",""bar"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,299,"assertEquals(singletonAttributes(""value"", ""bar""), getAttributesCaseInsensitive(inputElement, ""value""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,302,"private Attributes getAttributesCaseInsensitive(Element element, String attributeName) {"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,303,Attributes matches = new Attributes();
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,304,for (Attribute attribute : element.attributes()) {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,305,if (attribute.getKey().equalsIgnoreCase(attributeName)) {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,306,matches.put(attribute);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,309,return matches;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,312,"private Attributes singletonAttributes(String key, String value) {"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,313,Attributes attributes = new Attributes();
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,314,"attributes.put(key, value);"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,315,return attributes;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,9,import org.jsoup.nodes.Document;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,94,@Test public void dropsSlashFromAttributeName() {
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,95,"String html = ""<img /onerror='doMyJob'/>"";"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,96,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,97,"assertTrue(""SelfClosingStartTag ignores last character"", doc.select(""img[onerror]"").size() != 0);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,98,"assertEquals(""<img onerror=\""doMyJob\"">"", doc.body().html());"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,100,"doc = Jsoup.parse(html, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,101,"assertEquals(""<img onerror=\""doMyJob\"" />"", doc.html());"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,168,assertTrue(r.isEmpty());
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,248,@Test
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,249,public void empty() {
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,250,"CharacterReader r = new CharacterReader(""One"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,251,"assertTrue(r.matchConsume(""One""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,252,assertTrue(r.isEmpty());
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,254,"r = new CharacterReader(""Two"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,255,String two = r.consumeToEnd();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,256,"assertEquals(""Two"", two);"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,7,mport org.jsoup.nodes.*;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,7,import org.jsoup.nodes.Comment;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,8,import org.jsoup.nodes.Document;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,9,import org.jsoup.nodes.Element;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,10,import org.jsoup.nodes.Entities;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,11,import org.jsoup.nodes.FormElement;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,12,import org.jsoup.nodes.Node;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,13,import org.jsoup.nodes.TextNode;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,14,import org.jsoup.safety.Whitelist;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,16,import org.junit.Ignore;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,24,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,124,@Test public void testSelectWithOption() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,125,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,126,parser.setTrackErrors(10);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,127,"Document document = parser.parseInput(""<select><option>Option 1</option></select>"", ""http://jsoup.org"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,128,"assertEquals(0, parser.getErrors().size());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,367,@Test public void handlesKnownEmptyNoFrames() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,368,"String h = ""<html><head><noframes /><meta name=foo></head><body>One</body></html>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,369,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,370,"assertEquals(""<html><head><noframes></noframes><meta name=\""foo\""></head><body>One</body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,373,@Test public void handlesKnownEmptyStyle() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,374,"String h = ""<html><head><style /><meta name=foo></head><body>One</body></html>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,375,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,376,"assertEquals(""<html><head><style></style><meta name=\""foo\""></head><body>One</body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,379,@Test public void handlesKnownEmptyTitle() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,380,"String h = ""<html><head><title /><meta name=foo></head><body>One</body></html>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,381,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,382,"assertEquals(""<html><head><title></title><meta name=\""foo\""></head><body>One</body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,385,@Test public void handlesKnownEmptyIframe() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,386,"String h = ""<p>One</p><iframe id=1 /><p>Two"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,387,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,388,"assertEquals(""<html><head></head><body><p>One</p><iframe id=\""1\""></iframe><p>Two</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,545,@Ignore // todo: test case for https://github.com/jhy/jsoup/issues/845. Doesn't work yet.
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,546,@Test public void handlesMisnestedAInDivs() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,547,"String h = ""<a href='#1'><div><div><a href='#2'>child</a</div</div></a>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,548,"String w = ""<a href=\""#1\""></a><div><a href=\""#1\""></a><div><a href=\""#1\""></a><a href=\""#2\"">child</a></div></div>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,549,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,550,assertEquals(
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,551,"StringUtil.normaliseWhitespace(w),"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,552,StringUtil.normaliseWhitespace(doc.body().html()));
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,690,"ssertEquals(""50: Self closing flag not acknowledged"", errors.get(3).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,740,"assertEquals(""50: Tag cannot be self closing; not a void tag"", errors.get(3).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,930,@Test public void testUsingSingleQuotesInQueries() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,931,"String body = ""<body> <div class='main'>hello</div></body>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,932,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,933,"Elements main = doc.select(""div[class='main']"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,934,"assertEquals(""hello"", main.text());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,937,@Test public void testSupportsNonAsciiTags() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,938,"String body = ""<進捗推移グラフ>Yes</進捗推移グラフ><русский-тэг>Correct</<русский-тэг>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,939,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,940,"Elements els = doc.select(""進捗推移グラフ"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,941,"assertEquals(""Yes"", els.text());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,942,"els = doc.select(""русский-тэг"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,943,"assertEquals(""Correct"", els.text());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,946,@Test public void testSupportsPartiallyNonAsciiTags() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,947,"String body = ""<div>Check</divá>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,948,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,949,"Elements els = doc.select(""div"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,950,"assertEquals(""Check"", els.text());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,953,@Test public void testFragment() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,954,"// make sure when parsing a body fragment, a script tag at start goes into the body"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,955,String html =
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,956,"""<script type=\""text/javascript\"">console.log('foo');</script>\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,957,"""<div id=\""somecontent\"">some content</div>\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,958,"""<script type=\""text/javascript\"">console.log('bar');</script>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,960,Document body = Jsoup.parseBodyFragment(html);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,961,"assertEquals(""<script type=\""text/javascript\"">console.log('foo');</script> \n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,962,"""<div id=\""somecontent\"">\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,963,""" some content\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,964,"""</div> \n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,965,"""<script type=\""text/javascript\"">console.log('bar');</script>"", body.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,968,@Test public void testHtmlLowerCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,969,"String html = ""<!doctype HTML><DIV ID=1>One</DIV>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,970,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,971,"assertEquals(""<!doctype html> <html> <head></head> <body> <div id=\""1\""> One </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,974,@Test public void canPreserveTagCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,975,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,976,"parser.settings(new ParseSettings(true, false));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,977,"Document doc = parser.parseInput(""<div id=1><SPAN ID=2>"", """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,978,"assertEquals(""<html> <head></head> <body> <div id=\""1\""> <SPAN id=\""2\""></SPAN> </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,981,@Test public void canPreserveAttributeCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,982,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,983,"parser.settings(new ParseSettings(false, true));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,984,"Document doc = parser.parseInput(""<div id=1><SPAN ID=2>"", """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,985,"assertEquals(""<html> <head></head> <body> <div id=\""1\""> <span ID=\""2\""></span> </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,988,@Test public void canPreserveBothCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,989,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,990,"parser.settings(new ParseSettings(true, true));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,991,"Document doc = parser.parseInput(""<div id=1><SPAN ID=2>"", """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,992,"assertEquals(""<html> <head></head> <body> <div id=\""1\""> <SPAN ID=\""2\""></SPAN> </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,995,@Test public void handlesControlCodeInAttributeName() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,996,"Document doc = Jsoup.parse(""<p><a \06=foo>One</a><a/\06=bar><a foo\06=bar>Two</a></p>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,997,"assertEquals(""<p><a>One</a><a></a><a foo=\""bar\"">Two</a></p>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1000,@Test public void caseSensitiveParseTree() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1001,"String html = ""<r><X>A</X><y>B</y></r>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1002,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1003,parser.settings(ParseSettings.preserveCase);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1004,"Document doc = parser.parseInput(html, """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1005,"assertEquals(""<r> <X> A </X> <y> B </y> </r>"", StringUtil.normaliseWhitespace(doc.body().html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1008,@Test public void selfClosingVoidIsNotAnError() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1009,"String html = ""<p>test<br/>test<br/></p>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1010,Parser parser = Parser.htmlParser().setTrackErrors(5);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1011,"parser.parseInput(html, """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1012,"assertEquals(0, parser.getErrors().size());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1014,"assertTrue(Jsoup.isValid(html, Whitelist.basic()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1015,"String clean = Jsoup.clean(html, Whitelist.basic());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1016,"assertEquals(""<p>test<br>test<br></p>"", clean);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1019,@Test public void selfClosingOnNonvoidIsError() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1020,"String html = ""<p>test</p><div /><div>Two</div>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1021,Parser parser = Parser.htmlParser().setTrackErrors(5);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1022,"parser.parseInput(html, """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1023,"assertEquals(1, parser.getErrors().size());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1024,"assertEquals(""18: Tag cannot be self closing; not a void tag"", parser.getErrors().get(0).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1026,"assertFalse(Jsoup.isValid(html, Whitelist.relaxed()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1027,"String clean = Jsoup.clean(html, Whitelist.relaxed());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1028,"assertEquals(""<p>test</p> <div></div> <div> Two </div>"", StringUtil.normaliseWhitespace(clean));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,1,package org.jsoup.parser;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,5,import org.jsoup.nodes.Attributes;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,6,import org.junit.Rule;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,7,import org.junit.Test;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,9,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,11,public class ParserSettingsTest {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,12,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,14,@Test @MultiLocaleTest public void caseSupport() {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,15,"ParseSettings bothOn = new ParseSettings(true, true);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,16,"ParseSettings bothOff = new ParseSettings(false, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,17,"ParseSettings tagOn = new ParseSettings(true, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,18,"ParseSettings attrOn = new ParseSettings(false, true);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,20,"assertEquals(""IMG"", bothOn.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,21,"assertEquals(""ID"", bothOn.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,23,"assertEquals(""img"", bothOff.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,24,"assertEquals(""id"", bothOff.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,26,"assertEquals(""IMG"", tagOn.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,27,"assertEquals(""id"", tagOn.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,29,"assertEquals(""img"", attrOn.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,30,"assertEquals(""ID"", attrOn.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,33,@Test @MultiLocaleTest public void attributeCaseNormalization() throws Exception {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,34,"ParseSettings parseSettings = new ParseSettings(false, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,36,"String normalizedAttribute = parseSettings.normalizeAttribute(""HIDDEN"");"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,38,"assertEquals(""hidden"", normalizedAttribute);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,41,@Test @MultiLocaleTest public void attributesCaseNormalization() throws Exception {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,42,"ParseSettings parseSettings = new ParseSettings(false, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,43,Attributes attributes = new Attributes();
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,44,"attributes.put(""ITEM"", ""1"");"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,46,Attributes normalizedAttributes = parseSettings.normalizeAttributes(attributes);
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,48,"assertEquals(""item"", normalizedAttributes.asList().get(0).getKey());"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,5,import org.junit.Rule;
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,14,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,11,Test public void isCaseInsensitive() {
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,16,@Test public void isCaseSensitive() {
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,14,"ssertEquals(p1, p2);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,19,assertFalse(p1.equals(p2));
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,22,@Test @MultiLocaleTest public void canBeInsensitive() {
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,23,"Tag script1 = Tag.valueOf(""script"", ParseSettings.htmlDefault);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,24,"Tag script2 = Tag.valueOf(""SCRIPT"", ParseSettings.htmlDefault);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,25,"assertSame(script1, script2);"
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,52,"ag foo = Tag.valueOf(""foo""); // not defined"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,63,"Tag foo = Tag.valueOf(""FOO""); // not defined"
False,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,34,"okenQueue tq = new TokenQueue(""unbalanced(something(or another"");"
True,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,34,"TokenQueue tq = new TokenQueue(""unbalanced(something(or another)) else"");"
False,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,37,"ssertEquals(""something(or another"", match);"
True,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,37,"assertEquals(""something(or another)"", match);"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,9,import org.jsoup.nodes.XmlDeclaration;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,18,import java.nio.charset.Charset;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,20,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,22,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,23,import static org.junit.Assert.assertFalse;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,50,"tring xml = ""<!DOCTYPE html><!-- a comment -->One <qux />Two"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,53,"String xml = ""<!DOCTYPE HTML><!-- a comment -->One <qux />Two"";"
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,53,"ssertEquals(""<!DOCTYPE html><!-- a comment -->One <qux />Two"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,56,"assertEquals(""<!DOCTYPE HTML><!-- a comment -->One <qux />Two"","
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,106,"ssertEquals(""<?xml encoding='UTF-8' ?> <body> One </body> <!-- comment -->"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,109,"assertEquals(""<?xml encoding=\""UTF-8\""?> <body> One </body> <!-- comment -->"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,137,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,138,"public void testDetectCharsetEncodingDeclaration() throws IOException, URISyntaxException {"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,139,"File xmlFile = new File(XmlTreeBuilder.class.getResource(""/htmltests/xml-charset.xml"").toURI());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,140,InputStream inStream = new FileInputStream(xmlFile);
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,141,"Document doc = Jsoup.parse(inStream, null, ""http://example.com/"", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,142,"assertEquals(""ISO-8859-1"", doc.charset().name());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,143,"assertEquals(""<?xml version=\""1.0\"" encoding=\""ISO-8859-1\""?> <data>äöåéü</data>"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,144,TextUtil.stripNewlines(doc.html()));
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,147,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,148,public void testParseDeclarationAttributes() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,149,"String xml = ""<?xml version='1' encoding='UTF-8' something='else'?><val>One</val>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,150,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,151,XmlDeclaration decl = (XmlDeclaration) doc.childNode(0);
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,152,"assertEquals(""1"", decl.attr(""version""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,153,"assertEquals(""UTF-8"", decl.attr(""encoding""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,154,"assertEquals(""else"", decl.attr(""something""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,155,"assertEquals(""version=\""1\"" encoding=\""UTF-8\"" something=\""else\"""", decl.getWholeDeclaration());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,156,"assertEquals(""<?xml version=\""1\"" encoding=\""UTF-8\"" something=\""else\""?>"", decl.outerHtml());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,159,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,160,public void caseSensitiveDeclaration() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,161,"String xml = ""<?XML version='1' encoding='UTF-8' something='else'?>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,162,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,163,"assertEquals(""<?XML version=\""1\"" encoding=\""UTF-8\"" something=\""else\""?>"", doc.outerHtml());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,166,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,167,public void testCreatesValidProlog() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,168,"Document document = Document.createShell("""");"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,169,document.outputSettings().syntax(Syntax.xml);
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,170,"document.charset(Charset.forName(""utf-8""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,171,"assertEquals(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" +"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,172,"""<html>\n"" +"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,173,""" <head></head>\n"" +"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,174,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,175,"""</html>"", document.outerHtml());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,178,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,179,public void preservesCaseByDefault() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,180,"String xml = ""<TEST ID=1>Check</TEST>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,181,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,182,"assertEquals(""<TEST ID=\""1\"">Check</TEST>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,185,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,186,public void canNormalizeCase() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,187,"String xml = ""<TEST ID=1>Check</TEST>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,188,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser().settings(ParseSettings.htmlDefault));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,189,"assertEquals(""<test id=\""1\"">Check</test>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,9,import org.junit.Rule;
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,19,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,85,@Test @MultiLocaleTest public void whitelistedProtocolShouldBeRetained() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,86,Whitelist whitelist = Whitelist.none()
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,87,".addTags(""a"")"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,88,".addAttributes(""a"", ""href"")"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,89,".addProtocols(""a"", ""href"", ""something"");"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,91,"String cleanHtml = Jsoup.clean(""<a href=\""SOMETHING://x\""></a>"", whitelist);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,93,"assertEquals(""<a href=\""SOMETHING://x\""></a>"", TextUtil.stripNewlines(cleanHtml));"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,143,Test public void testIsValid() {
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,144,"tring ok = ""<p>Test <b><a href='http://example.com/'>OK</a></b></p>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,160,@Test public void testIsValidBodyHtml() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,161,"String ok = ""<p>Test <b><a href='http://example.com/' rel='nofollow'>OK</a></b></p>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,162,"String ok1 = ""<p>Test <b><a href='http://example.com/'>OK</a></b></p>""; // missing enforced is OK because still needs run thru cleaner"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,166,"String nok4 = ""<html><head>Foo</head><body><b>OK</b></body></html>""; // not body html"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,167,"String nok5 = ""<p>Test <b><a href='http://example.com/' rel='nofollowme'>OK</a></b></p>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,168,"String nok6 = ""<p>Test <b><a href='http://example.com/'>OK</b></p>""; // missing close tag"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,169,"String nok7 = ""</div>What"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,171,"assertTrue(Jsoup.isValid(ok1, Whitelist.basic()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,175,"assertFalse(Jsoup.isValid(nok4, Whitelist.basic()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,176,"assertFalse(Jsoup.isValid(nok5, Whitelist.basic()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,177,"assertFalse(Jsoup.isValid(nok6, Whitelist.basic()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,178,"assertFalse(Jsoup.isValid(ok, Whitelist.none()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,179,"assertFalse(Jsoup.isValid(nok7, Whitelist.basic()));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,182,@Test public void testIsValidDocument() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,183,"String ok = ""<html><head></head><body><p>Hello</p></body><html>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,184,"String nok = ""<html><head><script>woops</script><title>Hello</title></head><body><p>Hello</p></body><html>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,186,Whitelist relaxed = Whitelist.relaxed();
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,187,Cleaner cleaner = new Cleaner(relaxed);
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,188,Document okDoc = Jsoup.parse(ok);
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,189,assertTrue(cleaner.isValid(okDoc));
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,190,assertFalse(cleaner.isValid(Jsoup.parse(nok)));
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,191,assertFalse(new Cleaner(Whitelist.none()).isValid(okDoc));
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,213,"ssertEquals(""<div><p>&bernou;</p></div>"", customOut);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,253,"assertEquals(""<div><p>&Bscr;</p></div>"", customOut); // entities now prefers shorted names if aliased"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,286,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,287,public void bailsIfRemovingProtocolThatsNotSet() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,288,// a case that came up on the email list
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,289,Whitelist w = Whitelist.none();
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,291,"// note no add tag, and removing protocol without adding first"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,292,"w.addAttributes(""a"", ""href"");"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,293,"w.removeProtocols(""a"", ""href"", ""javascript""); // with no protocols enforced, this was a noop. Now validates."
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,296,@Test public void handlesControlCharactersAfterTagName() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,297,"String html = ""<a/\06>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,298,"String clean = Jsoup.clean(html, Whitelist.basic());"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,299,"assertEquals(""<a rel=\""nofollow\""></a>"", clean);"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,6,import org.jsoup.nodes.Element;
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,12,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,13,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,14,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,15,import static org.junit.Assert.assertTrue;
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,55,"ocument doc = Jsoup.parse(""<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org'>Two</a>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,58,"Document doc = Jsoup.parse(""<a id=1 href='/foo'>One</a> <a id=2 href='https://jsoup.org'>Two</a>"");"
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,71,"ocument doc = Jsoup.parse(""<a id=1 href='/foo'>One</a> <a id=2 href='http://jsoup.org'>Two</a>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,74,"Document doc = Jsoup.parse(""<a id=1 href='/foo'>One</a> <a id=2 href='https://jsoup.org'>Two</a>"");"
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,77,"ssertEquals(""http://jsoup.org"", two.attr(""abs:href""));"
False,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,78,"ssertEquals(""http://jsoup.org"", both.attr(""abs:href""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,80,"assertEquals(""https://jsoup.org"", two.attr(""abs:href""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,81,"assertEquals(""https://jsoup.org"", both.attr(""abs:href""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,98,@Test public void hasClassCaseInsensitive() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,99,"Elements els = Jsoup.parse(""<p Class=One>One <p class=Two>Two <p CLASS=THREE>THREE"").select(""p"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,100,Element one = els.get(0);
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,101,Element two = els.get(1);
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,102,Element thr = els.get(2);
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,104,"assertTrue(one.hasClass(""One""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,105,"assertTrue(one.hasClass(""ONE""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,107,"assertTrue(two.hasClass(""TWO""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,108,"assertTrue(two.hasClass(""Two""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,110,"assertTrue(thr.hasClass(""ThreE""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,111,"assertTrue(thr.hasClass(""three""));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,306,@Test public void siblings() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,307,"Document doc = Jsoup.parse(""<div><p>1<p>2<p>3<p>4<p>5<p>6</div><div><p>7<p>8<p>9<p>10<p>11<p>12</div>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,309,"Elements els = doc.select(""p:eq(3)""); // gets p4 and p10"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,310,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,312,Elements next = els.next();
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,313,"assertEquals(2, next.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,314,"assertEquals(""5"", next.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,315,"assertEquals(""11"", next.last().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,317,"assertEquals(0, els.next(""p:contains(6)"").size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,318,"final Elements nextF = els.next(""p:contains(5)"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,319,"assertEquals(1, nextF.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,320,"assertEquals(""5"", nextF.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,322,Elements nextA = els.nextAll();
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,323,"assertEquals(4, nextA.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,324,"assertEquals(""5"", nextA.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,325,"assertEquals(""12"", nextA.last().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,327,"Elements nextAF = els.nextAll(""p:contains(6)"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,328,"assertEquals(1, nextAF.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,329,"assertEquals(""6"", nextAF.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,331,Elements prev = els.prev();
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,332,"assertEquals(2, prev.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,333,"assertEquals(""3"", prev.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,334,"assertEquals(""9"", prev.last().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,336,"assertEquals(0, els.prev(""p:contains(1)"").size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,337,"final Elements prevF = els.prev(""p:contains(3)"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,338,"assertEquals(1, prevF.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,339,"assertEquals(""3"", prevF.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,341,Elements prevA = els.prevAll();
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,342,"assertEquals(6, prevA.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,343,"assertEquals(""3"", prevA.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,344,"assertEquals(""7"", prevA.last().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,346,"Elements prevAF = els.prevAll(""p:contains(1)"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,347,"assertEquals(1, prevAF.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,348,"assertEquals(""1"", prevAF.first().text());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,351,@Test public void eachText() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,352,"Document doc = Jsoup.parse(""<div><p>1<p>2<p>3<p>4<p>5<p>6</div><div><p>7<p>8<p>9<p>10<p>11<p>12<p></p></div>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,353,"List<String> divText = doc.select(""div"").eachText();"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,354,"assertEquals(2, divText.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,355,"assertEquals(""1 2 3 4 5 6"", divText.get(0));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,356,"assertEquals(""7 8 9 10 11 12"", divText.get(1));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,358,"List<String> pText = doc.select(""p"").eachText();"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,359,"Elements ps = doc.select(""p"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,360,"assertEquals(13, ps.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,361,"assertEquals(12, pText.size()); // not 13, as last doesn't have text"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,362,"assertEquals(""1"", pText.get(0));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,363,"assertEquals(""2"", pText.get(1));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,364,"assertEquals(""5"", pText.get(4));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,365,"assertEquals(""7"", pText.get(6));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,366,"assertEquals(""12"", pText.get(11));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,369,@Test public void eachAttr() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,370,Document doc = Jsoup.parse(
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,371,"""<div><a href='/foo'>1</a><a href='http://example.com/bar'>2</a><a href=''>3</a><a>4</a>"","
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,372,"""http://example.com"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,374,"List<String> hrefAttrs = doc.select(""a"").eachAttr(""href"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,375,"assertEquals(3, hrefAttrs.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,376,"assertEquals(""/foo"", hrefAttrs.get(0));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,377,"assertEquals(""http://example.com/bar"", hrefAttrs.get(1));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,378,"assertEquals("""", hrefAttrs.get(2));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,379,"assertEquals(4, doc.select(""a"").size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,381,"List<String> absAttrs = doc.select(""a"").eachAttr(""abs:href"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,382,"assertEquals(3, absAttrs.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,383,"assertEquals(3, absAttrs.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,384,"assertEquals(""http://example.com/foo"", absAttrs.get(0));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,385,"assertEquals(""http://example.com/bar"", absAttrs.get(1));"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,386,"assertEquals(""http://example.com"", absAttrs.get(2));"
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,43,@Test(expected = Selector.SelectorParseException.class) public void exceptionOnUncloseAttribute() {
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,44,"Evaluator parse = QueryParser.parse(""section > a[href=\""]"");"
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,47,@Test(expected = Selector.SelectorParseException.class)  public void testParsesSingleQuoteInContains() {
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,48,"Evaluator parse = QueryParser.parse(""p:contains(One \"" One)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,8,import org.junit.Rule;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,19,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,17,"lements els = Jsoup.parse(""<div id=1><div id=2><p>Hello</p></div></div><div id=3>"").select(""div"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,22,// should be case insensitive
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,23,"Elements els = Jsoup.parse(""<div id=1><div id=2><p>Hello</p></div></div><DIV id=3>"").select(""DIV"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,38,"lements els = Jsoup.parse(""<p id=0 class='one two'><p id=1 class='one'><p id=2 class='two'>"").select(""p.one"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,44,"Elements els = Jsoup.parse(""<p id=0 class='ONE two'><p id=1 class='one'><p id=2 class='two'>"").select(""P.One"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,50,Test public void testByAttribute() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,51,"tring h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Bam /><div title=SLAM />"" +"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,56,@Test public void testByClassCaseInsensitive() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,57,"String html = ""<p Class=foo>One <p Class=Foo>Two <p class=FOO>Three <p class=farp>Four"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,58,"Elements elsFromClass = Jsoup.parse(html).select(""P.Foo"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,59,"Elements elsFromAttr = Jsoup.parse(html).select(""p[class=foo]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,61,"assertEquals(elsFromAttr.size(), elsFromClass.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,62,"assertEquals(3, elsFromClass.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,63,"assertEquals(""Two"", elsFromClass.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,66,@Test @MultiLocaleTest public void testByAttribute() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,67,"String h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Balim /><div title=SLIM />"" +"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,58,"lements foo = doc.select(""[title=foo]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,74,"Elements foo = doc.select(""[TITLE=foo]"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,78,"ssertEquals(""Bam"", starts.last().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,94,"assertEquals(""Balim"", starts.last().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,80,"lements ends = doc.select(""[title$=am]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,96,"Elements ends = doc.select(""[title$=im]"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,82,"ssertEquals(""Bam"", ends.first().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,83,"ssertEquals(""SLAM"", ends.last().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,98,"assertEquals(""Balim"", ends.first().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,99,"assertEquals(""SLIM"", ends.last().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,85,"lements contains = doc.select(""[title*=a]"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,86,"ssertEquals(3, contains.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,87,"ssertEquals(""Bar"", contains.first().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,88,"ssertEquals(""SLAM"", contains.last().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,101,"Elements contains = doc.select(""[title*=i]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,102,"assertEquals(2, contains.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,103,"assertEquals(""Balim"", contains.first().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,104,"assertEquals(""SLIM"", contains.last().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,112,Test public void testByAttributeStarting() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,113,"ocument doc = Jsoup.parse(""<div id=1 data-name=jsoup>Hello</div><p data-val=5 id=2>There</p><p id=3>No</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,128,@Test public void testWildcardNamespacedTag() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,129,"Document doc = Jsoup.parse(""<div><abc:def id=1>Hello</abc:def></div> <abc:def class=bold id=2>There</abc:def>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,130,"Elements byTag = doc.select(""*|def"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,131,"assertEquals(2, byTag.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,132,"assertEquals(""1"", byTag.first().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,133,"assertEquals(""2"", byTag.last().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,135,"Elements byAttr = doc.select("".bold"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,136,"assertEquals(1, byAttr.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,137,"assertEquals(""2"", byAttr.last().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,139,"Elements byTagAttr = doc.select(""*|def.bold"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,140,"assertEquals(1, byTagAttr.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,141,"assertEquals(""2"", byTagAttr.last().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,143,"Elements byContains = doc.select(""*|def:contains(e)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,144,"assertEquals(2, byContains.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,145,"assertEquals(""1"", byContains.first().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,146,"assertEquals(""2"", byContains.last().id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,149,@Test @MultiLocaleTest public void testByAttributeStarting() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,150,"Document doc = Jsoup.parse(""<div id=1 ATTRIBUTE data-name=jsoup>Hello</div><p data-val=5 id=2>There</p><p id=3>No</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,160,"assertEquals(1, doc.select(""[^attrib]"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,203,"lement root = doc.getElementsByClass(""head"").first();"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,242,"Element root = doc.getElementsByClass(""HEAD"").first();"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,308,"ssertEquals(2, doc.select(""DIV"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,309,"ssertEquals(1, doc.select(""DIV[TITLE]"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,310,"ssertEquals(1, doc.select(""DIV[TITLE=BAR]"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,311,"ssertEquals(0, doc.select(""DIV[TITLE=BARBARELLA"").size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,347,"assertEquals(2, doc.select(""DiV"").size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,348,"assertEquals(1, doc.select(""DiV[TiTLE]"").size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,349,"assertEquals(1, doc.select(""DiV[TiTLE=BAR]"").size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,350,"assertEquals(0, doc.select(""DiV[TiTLE=BARBARELLA]"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,453,"lements divs2 = doc.select(""div:has([class]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,492,"Elements divs2 = doc.select(""div:has([class])"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,489,Test public void testPseudoContains() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,490,"ocument doc = Jsoup.parse(""<div><p>The Rain.</p> <p class=light>The <i>rain</i>.</p> <p>Rain, the.</p></div>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,528,@Test @MultiLocaleTest public void testPseudoContains() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,529,"Document doc = Jsoup.parse(""<div><p>The Rain.</p> <p class=light>The <i>RAIN</i>.</p> <p>Rain, the.</p></div>"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,498,"ssertEquals(""The <i>rain</i>."", ps2.last().html());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,537,"assertEquals(""The <i>RAIN</i>."", ps2.last().html());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,550,"Elements ps6 = doc.select("":contains(RAIN)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,551,"assertEquals(8, ps6.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,524,Test public void containsOwn() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,525,"ocument doc = Jsoup.parse(""<p id=1>Hello <b>there</b> now</p>"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,526,"lements ps = doc.select(""p:containsOwn(Hello now)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,566,@Test @MultiLocaleTest public void containsOwn() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,567,"Document doc = Jsoup.parse(""<p id=1>Hello <b>there</b> igor</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,568,"Elements ps = doc.select(""p:containsOwn(Hello IGOR)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,574,"Document doc2 = Jsoup.parse(""<p>Hello <b>there</b> IGOR</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,575,"assertEquals(1, doc2.select(""p:containsOwn(igor)"").size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,711,@Test public void attributeWithBrackets() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,712,"String html = ""<div data='End]'>One</div> <div data='[Another)]]'>Two</div>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,713,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,714,"assertEquals(""One"", doc.select(""div[data='End]']"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,715,"assertEquals(""Two"", doc.select(""div[data='[Another)]]']"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,716,"assertEquals(""One"", doc.select(""div[data=\""End]\""]"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,717,"assertEquals(""Two"", doc.select(""div[data=\""[Another)]]\""]"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,720,@Test @MultiLocaleTest public void containsData() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,721,"String html = ""<p>function</p><script>FUNCTION</script><style>item</style><span><!-- comments --></span>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,722,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,723,Element body = doc.body();
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,725,"Elements dataEls1 = body.select("":containsData(function)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,726,"Elements dataEls2 = body.select(""script:containsData(function)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,727,"Elements dataEls3 = body.select(""span:containsData(comments)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,728,"Elements dataEls4 = body.select("":containsData(o)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,729,"Elements dataEls5 = body.select(""style:containsData(ITEM)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,731,"assertEquals(2, dataEls1.size()); // body and script"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,732,"assertEquals(1, dataEls2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,733,"assertEquals(dataEls1.last(), dataEls2.first());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,734,"assertEquals(""<script>FUNCTION</script>"", dataEls2.outerHtml());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,735,"assertEquals(1, dataEls3.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,736,"assertEquals(""span"", dataEls3.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,737,"assertEquals(3, dataEls4.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,738,"assertEquals(""body"", dataEls4.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,739,"assertEquals(""script"", dataEls4.get(1).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,740,"assertEquals(""span"", dataEls4.get(2).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,741,"assertEquals(1, dataEls5.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,744,@Test public void containsWithQuote() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,745,"String html = ""<p>One'One</p><p>One'Two</p>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,746,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,747,"Elements els = doc.select(""p:contains(One\\'One)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,748,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,749,"assertEquals(""One'One"", els.text());"
