is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,88," Set the request timeouts (connect and read). If a timeout occurs, an IOException will be thrown. The default"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,89," timeout is <b>30 seconds</b> (30,000 millis). A timeout of zero is treated as an infinite timeout."
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,90, <p>Note that a read timeout is not the same as a maximum timeout. As long as the connection is sending bytes at
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,91," least every <i>timeout</i> seconds (e.g. in the case of an infinite stream of data, or a slow large download), the"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,92," read timeout will not fire. This can be mitigated by using a maximum download size (see {@link #maxBodySize(int)}),"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,93, or interrupting the connecting thread after a max timeout.</p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,88,"* Set the total request timeout duration. If a timeout occurs, an {@link java.net.SocketTimeoutException} will be thrown."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,89,"* <p>The default timeout is <b>30 seconds</b> (30,000 millis). A timeout of zero is treated as an infinite timeout."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,90,* <p>Note that this timeout specifies the combined maximum duration of the connection time and the time to read
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,91,* the full response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,94,* @see #maxBodySize(int)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,69,private static final int ReadTimeoutMillis = 800; // max time between reads - only throws if exceeds total request timeout
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,719,long startTime = System.nanoTime();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,777,"es.bodyStream = ConstrainableInputStream.wrap(res.bodyStream, DataUtil.bufferSize, req.maxBodySize());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,779,res.bodyStream = ConstrainableInputStream
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,780,".wrap(res.bodyStream, DataUtil.bufferSize, req.maxBodySize())"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,781,".timeout(startTime, req.timeout())"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,884,onn.setReadTimeout(req.timeout());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,889,conn.setReadTimeout(ReadTimeoutMillis);
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,9,import java.net.SocketTimeoutException;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,21,private long startTime;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,22,private long timeout = -1; // optional max time of request
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,32,startTime = System.nanoTime();
False,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,49,"/ tracks if this read was interrupted, because parse() may call twice (and we still want the thread interupt to clear)"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,53,"// interrupted latches, because parse() may call twice (and we still want the thread interupt to clear)"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,57,if (expired())
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,58,"throw new SocketTimeoutException(""Read timeout"");"
False,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,57,"inal int read = super.read(b, off, len);"
False,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,58,emaining -= read;
False,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,60,eturn read;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,63,try {
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,64,"final int read = super.read(b, off, len);"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,65,remaining -= read;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,66,return read;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,67,} catch (SocketTimeoutException e) {
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,68,return 0;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,107,"public ConstrainableInputStream timeout(long startTimeNanos, long timeoutMillis) {"
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,108,this.startTime = startTimeNanos;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,109,this.timeout = timeoutMillis * 1000000;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,110,return this;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,113,private boolean expired() {
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,114,if (timeout == -1)
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,115,return false;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,117,final long now = System.nanoTime();
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,118,final long dur = now - startTime;
True,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,src/main/java/org/jsoup/internal/ConstrainableInputStream.java,119,return (dur > timeout);
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,17,import java.net.SocketTimeoutException;
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,234,@Ignore
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,235,@Test public void totalTimeout() throws IOException {
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,236,int timeout = 3 * 1000;
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,237,long start = System.currentTimeMillis();
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,238,boolean threw = false;
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,239,try {
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,240,Jsoup.connect(SlowRider.Url).timeout(timeout).get();
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,241,} catch (SocketTimeoutException e) {
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,242,long end = System.currentTimeMillis();
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,243,long took = end - start;
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,244,"assertTrue((""Time taken was "" + took), took > timeout);"
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,245,"assertTrue((""Time taken was "" + took), took < timeout * 1.2);"
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,246,threw = true;
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,249,assertTrue(threw);
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,252,@Ignore
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,253,@Test public void slowReadOk() throws IOException {
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,254,// make sure that a slow read that is under the request timeout is still OK
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,255,Document doc = Jsoup.connect(SlowRider.Url)
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,256,".data(SlowRider.MaxTimeParam, ""2000"") // the reqest completes in 2 seconds"
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,257,.get();
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,259,"Element h1 = doc.selectFirst(""h1"");"
True,src/test/java/org/jsoup/integration/ConnectTest.java,src/test/java/org/jsoup/integration/ConnectTest.java,260,"assertEquals(""outatime"", h1.text());"
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,17,"public static String MaxTimeParam = ""maxTime"";"
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,26,int maxTime = -1;
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,27,String maxTimeP = req.getParameter(MaxTimeParam);
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,28,if (maxTimeP != null) {
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,29,maxTime = Integer.valueOf(maxTimeP);
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,32,long startTime = System.currentTimeMillis();
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,46,if (maxTime > 0 && System.currentTimeMillis() > startTime + maxTime) {
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,47,"w.println(""<h1>outatime</h1>"");"
True,src/test/java/org/jsoup/integration/servlets/SlowRider.java,src/test/java/org/jsoup/integration/servlets/SlowRider.java,48,break;
