is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,124,"& Arrays.binarySearch(booleanAttributes, key) >= 0;"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,124,&& isBooleanAttribute();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,127,protected boolean isBooleanAttribute() {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,128,"return Arrays.binarySearch(booleanAttributes, key) >= 0;"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,53,"Set a new boolean attribute, remove attribute if value is false."
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,54,@param key attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,55,@param value attribute value
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,57,"public void put(String key, boolean value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,58,if (value)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,59,put(new BooleanAttribute(key));
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,60,else
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,61,remove(key);
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,1,package org.jsoup.nodes;
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,4,* A boolean attribute that is written out without any value.
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,6,public class BooleanAttribute extends Attribute {
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,8,* Create a new boolean attribute from unencoded (raw) key.
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,9,* @param key attribute key
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,11,public BooleanAttribute(String key) {
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,12,"super(key, """");"
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,15,@Override
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,16,protected boolean isBooleanAttribute() {
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,17,return true;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,121,"* Set a boolean attribute value on this element. Setting to <code>true</code> sets the attribute value to """" and"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,122,* marks the attribute as boolean so no value is written out. Setting to <code>false</code> removes the attribute
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,123,* with the same key if it exists.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,125,* @param attributeKey the attribute key
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,126,* @param attributeValue the attribute value
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,128,* @return this element
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,130,"public Element attr(String attributeKey, boolean attributeValue) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,131,"attributes.put(attributeKey, attributeValue);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,132,return this;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,6,import org.jsoup.nodes.BooleanAttribute;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,73,private boolean hasEmptyAttributeValue = false; // distinguish boolean attribute from empty string value
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,83,hasEmptyAttributeValue = false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,93,f (!hasPendingAttributeValue)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,96,if (hasPendingAttributeValue)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,97,"attribute = new Attribute(pendingAttributeName, pendingAttributeValue.toString());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,98,else if (hasEmptyAttributeValue)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,96,"ttribute = new Attribute(pendingAttributeName, pendingAttributeValue.toString());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,101,attribute = new BooleanAttribute(pendingAttributeName);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,105,hasEmptyAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,106,hasPendingAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,169,final void setEmptyAttributeValue() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,170,hasEmptyAttributeValue = true;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,786,else
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,787,t.tagPending.setEmptyAttributeValue();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,818,else
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,819,t.tagPending.setEmptyAttributeValue();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,318,@Test public void testAddBooleanAttribute() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,319,"Element div = new Element(Tag.valueOf(""div""), """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,321,"div.attr(""true"", true);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,323,"div.attr(""false"", ""value"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,324,"div.attr(""false"", false);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,326,"assertTrue(div.hasAttr(""true""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,327,"assertEquals("""", div.attr(""true""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,329,List<Attribute> attributes = div.attributes().asList();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,330,"assertEquals(""There should be one attribute"", 1, attributes.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,331,"assertTrue(""Attribute should be boolean"", attributes.get(0) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,333,"assertFalse(div.hasAttr(""false""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,335,"assertEquals(""<div true></div>"", div.outerHtml());"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,3,import java.util.List;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,6,import org.jsoup.nodes.Attribute;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,8,import org.jsoup.nodes.BooleanAttribute;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,74,@Test public void parsesBooleanAttributes() {
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,75,"String html = ""<a normal=\""123\"" boolean empty=\""\""></a>"";"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,76,"Element el = Jsoup.parse(html).select(""a"").first();"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,78,"assertEquals(""123"", el.attr(""normal""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,79,"assertEquals("""", el.attr(""boolean""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,80,"assertEquals("""", el.attr(""empty""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,82,List<Attribute> attributes = el.attributes().asList();
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,83,"assertEquals(""There should be 3 attribute present"", 3, attributes.size());"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,85,// Assuming the list order always follows the parsed html
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,86,"assertFalse(""'normal' attribute should not be boolean"", attributes.get(0) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,87,"assertTrue(""'boolean' attribute should be boolean"", attributes.get(1) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,88,"assertFalse(""'empty' attribute should not be boolean"", attributes.get(2) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,90,"assertEquals(html, el.outerHtml());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,49,"ssertEquals(""<p =a=\""\"">One<a <p=\""\"">Something</a></p>\n"" +"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,50,"<a <p=\""\"">Else</a>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,49,"assertEquals(""<p =a>One<a <p>Something</a></p>\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,50,"""<a <p>Else</a>"", doc.body().html());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,53,"ssertEquals(""<p .....=\""\""></p>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,53,"assertEquals(""<p .....></p>"", doc.body().html());"
