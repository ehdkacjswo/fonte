is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,1,package org.jsoup.helper;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,3,import org.jsoup.nodes.Attribute;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,4,import org.jsoup.select.NodeTraversor;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,5,import org.jsoup.select.NodeVisitor;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,6,import org.w3c.dom.Comment;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,7,import org.w3c.dom.Document;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,8,import org.w3c.dom.Element;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,9,import org.w3c.dom.Text;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,11,import javax.xml.parsers.DocumentBuilder;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,12,import javax.xml.parsers.DocumentBuilderFactory;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,13,import javax.xml.parsers.ParserConfigurationException;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,14,import javax.xml.transform.Transformer;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,15,import javax.xml.transform.TransformerFactory;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,16,import javax.xml.transform.dom.DOMSource;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,17,import javax.xml.transform.stream.StreamResult;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,18,import java.io.StringWriter;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,21,"* Helper class to transform a {@link org.jsoup.nodes.Document} to a {@link org.w3c.dom.Document org.w3c.dom.Document},"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,22,* for integration with toolsets that use the W3C DOM.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,23,* <p/>
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,24,"* This class is currently <b>experimental</b>, please provide feedback on utility and any problems experienced."
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,26,public class W3CDom {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,27,protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,30,* Convert a jsoup Document to a W3C Document.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,31,* @param in jsoup doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,32,* @return w3c doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,34,public Document fromJsoup(org.jsoup.nodes.Document in) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,35,Validate.notNull(in);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,36,DocumentBuilder builder;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,37,try {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,38,builder = factory.newDocumentBuilder();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,39,Document out = builder.newDocument();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,40,"convert(in, out);"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,41,return out;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,42,} catch (ParserConfigurationException e) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,43,throw new IllegalStateException(e);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,48,"* Converts a jsoup document into the provided W3C Document. If required, you can set options on the output document"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,49,* before converting.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,50,* @param in jsoup doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,51,* @param out w3c doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,52,* @see org.jsoup.helper.W3CDom#fromJsoup(org.jsoup.nodes.Document)
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,54,"public void convert(org.jsoup.nodes.Document in, Document out) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,55,if (!StringUtil.isBlank(in.location()))
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,56,out.setDocumentURI(in.location());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,58,org.jsoup.nodes.Element rootEl = in.child(0); // skip the #root node
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,59,NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,60,traversor.traverse(rootEl);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,64,* Implements the conversion by walking the input.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,66,protected class W3CBuilder implements NodeVisitor {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,67,private final Document doc;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,68,private Element dest;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,70,public W3CBuilder(Document doc) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,71,this.doc = doc;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,74,"public void head(org.jsoup.nodes.Node source, int depth) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,75,if (source instanceof org.jsoup.nodes.Element) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,76,org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,77,Element el = doc.createElement(sourceEl.tagName());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,78,"copyAttributes(sourceEl, el);"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,79,if (dest == null) { // sets up the root
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,80,doc.appendChild(el);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,81,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,82,dest.appendChild(el);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,84,dest = el; // descend
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,85,} else if (source instanceof org.jsoup.nodes.TextNode) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,86,org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,87,Text text = doc.createTextNode(sourceText.getWholeText());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,88,dest.appendChild(text);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,89,} else if (source instanceof org.jsoup.nodes.Comment) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,90,org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,91,Comment comment = doc.createComment(sourceComment.getData());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,92,dest.appendChild(comment);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,93,} else if (source instanceof org.jsoup.nodes.DataNode) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,94,org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,95,Text node = doc.createTextNode(sourceData.getWholeData());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,96,dest.appendChild(node);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,97,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,98,// unhandled
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,102,"public void tail(org.jsoup.nodes.Node source, int depth) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,103,if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,104,dest = (Element) dest.getParentNode(); // undescend. cromulent.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,108,"private void copyAttributes(org.jsoup.nodes.Node source, Element el) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,109,for (Attribute attribute : source.attributes()) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,110,"el.setAttribute(attribute.getKey(), attribute.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,116,* Serialize a W3C document to a String.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,118,public String asString(Document doc) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,119,try {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,120,DOMSource domSource = new DOMSource(doc);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,121,StringWriter writer = new StringWriter();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,122,StreamResult result = new StreamResult(writer);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,123,TransformerFactory tf = TransformerFactory.newInstance();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,124,Transformer transformer = tf.newTransformer();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,125,"transformer.transform(domSource, result);"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,126,return writer.toString();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,127,} catch (Exception e) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,128,throw new IllegalStateException(e);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,1,package org.jsoup.helper;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,3,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,4,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,5,import org.junit.Test;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,6,import org.w3c.dom.Document;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,8,import java.io.File;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,9,import java.io.IOException;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,11,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,12,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,14,public class W3CDomTest {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,15,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,16,public void simpleConversion() {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,17,"String html = ""<html><head><title>W3c</title></head><body><p class='one' id=12>Text</p><!-- comment --><invalid>What<script>alert('!')"";"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,18,org.jsoup.nodes.Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,20,W3CDom w3c = new W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,21,Document wDoc = w3c.fromJsoup(doc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,22,String out = w3c.asString(wDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,23,assertEquals(
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,24,"""<html>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,25,"""<head>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,26,"""<META http-equiv=\""Content-Type\"" content=\""text/html; charset=UTF-8\"">\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,27,"""<title>W3c</title>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,28,"""</head>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,29,"""<body>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,30,"""<p class=\""one\"" id=\""12\"">Text</p>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,31,"""<!-- comment -->\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,32,"""<invalid>What<script>alert('!')</script>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,33,"""</invalid>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,34,"""</body>\n"" +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,35,"""</html>\n"""
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,36,", out);"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,39,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,40,public void convertsGoogle() throws IOException {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,41,"File in = ParseTest.getFile(""/htmltests/google-ipod.html"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,42,"org.jsoup.nodes.Document doc = Jsoup.parse(in, ""UTF8"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,44,W3CDom w3c = new W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,45,Document wDoc = w3c.fromJsoup(doc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,46,String out = w3c.asString(wDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,47,"assertTrue(out.contains(""ipod""));"
