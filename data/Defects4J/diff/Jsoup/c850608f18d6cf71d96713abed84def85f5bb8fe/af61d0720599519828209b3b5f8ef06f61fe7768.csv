is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,4,import org.jsoup.parser.HtmlTreeBuilder;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,7,import java.io.IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,8,import java.io.InputStream;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,9,import java.net.Proxy;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,7,mport java.util.Map;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,9,mport java.io.IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,12,import java.util.Map;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,19,* </p>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,18, or by methods in the Connection.Request object directly. All request configuration must be made before the request
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,19, is executed.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,22,* or by methods in the Connection.Request object directly. All request configuration must be made before the request is
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,23,* executed.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,24,* </p>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,26,ublic enum Method {
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,27,"ET, POST"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,31,enum Method {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,32,"GET(false), POST(true), PUT(true), DELETE(false), PATCH(true), HEAD(false), OPTIONS(false), TRACE(false);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,34,private final boolean hasBody;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,36,Method(boolean hasBody) {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,37,this.hasBody = hasBody;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,41,* Check if this HTTP method has/needs a request body
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,42,* @return if body needed
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,44,public final boolean hasBody() {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,45,return hasBody;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,35,ublic Connection url(URL url);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,54,Connection url(URL url);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,42,ublic Connection url(String url);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,61,Connection url(String url);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,64,* Set the proxy to use for this request. Set to <code>null</code> to disable.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,65,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,66,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,68,Connection proxy(Proxy proxy);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,71,* Set the HTTP proxy to use for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,72,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,73,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,75,"Connection proxy(String host, int port);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,49,ublic Connection userAgent(String userAgent);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,82,Connection userAgent(String userAgent);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,57,ublic Connection timeout(int millis);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,90,Connection timeout(int millis);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,66,ublic Connection maxBodySize(int bytes);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,99,Connection maxBodySize(int bytes);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,73,ublic Connection referrer(String referrer);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,106,Connection referrer(String referrer);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,80,ublic Connection followRedirects(boolean followRedirects);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,113,Connection followRedirects(boolean followRedirects);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,87,ublic Connection method(Method method);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,120,Connection method(Method method);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,96,ublic Connection ignoreHttpErrors(boolean ignoreHttpErrors);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,129,Connection ignoreHttpErrors(boolean ignoreHttpErrors);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,106,ublic Connection ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,139,Connection ignoreContentType(boolean ignoreContentType);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,109," Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,110, body for POSTs. A request may have multiple values of the same name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,142,* Disable/enable TSL certificates validation for HTTPS requests.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,143,* <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,144,* By default this is <b>true</b>; all
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,145,"* connections over HTTPS perform normal validation of certificates, and will abort requests if the provided"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,146,* certificate does not validate.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,147,* </p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,148,* <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,149,"* Some servers use expired, self-generated certificates; or your JDK may not"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,150,"* support SNI hosts. In which case, you may want to enable this setting."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,151,* </p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,152,* <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,153,* <b>Be careful</b> and understand why you need to disable these validations.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,154,* </p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,155,* @param value if should validate TSL (SSL) certificates. <b>true</b> by default.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,156,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,158,Connection validateTLSCertificates(boolean value);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,161,"* Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,162,* request body for POSTs. A request may have multiple values of the same name.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,115,"ublic Connection data(String key, String value);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,167,"Connection data(String key, String value);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,170,"* Add an input stream as a request data paramater. For GETs, has no effect, but for POSTS this will upload the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,171,* input stream.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,172,* @param key data key (form item name)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,173,"* @param filename the name of the file to present to the remove server. Typically just the name, not path,"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,174,* component.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,175,"* @param inputStream the input stream to upload, that you probably obtained from a {@link java.io.FileInputStream}."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,176,* You must close the InputStream in a {@code finally} block.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,177,"* @return this Connections, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,179,"Connection data(String key, String filename, InputStream inputStream);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,122,ublic Connection data(Collection<KeyVal> data);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,186,Connection data(Collection<KeyVal> data);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,129,"ublic Connection data(Map<String, String> data);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,193,"Connection data(Map<String, String> data);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,132," Add a number of request data parameters. Multiple parameters may be set at once, e.g.:"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,133," <code>.data(""name"", ""jsoup"", ""language"", ""Java"", ""language"", ""English"");</code> creates a query string like:"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,134, <code>?name=jsoup&language=Java&language=English</code>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,196,"* Add a number of request data parameters. Multiple parameters may be set at once, e.g.: <code>.data(""name"","
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,197,"* ""jsoup"", ""language"", ""Java"", ""language"", ""English"");</code> creates a query string like:"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,198,* <code>{@literal ?name=jsoup&language=Java&language=English}</code>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,138,ublic Connection data(String... keyvals);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,202,Connection data(String... keyvals);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,147,"ublic Connection header(String name, String value);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,211,"Connection header(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,155,"ublic Connection cookie(String name, String value);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,219,"Connection cookie(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,159, @param cookies map of cookie name -> value pairs
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,223,* @param cookies map of cookie name {@literal ->} value pairs
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,162,"ublic Connection cookies(Map<String, String> cookies);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,226,"Connection cookies(Map<String, String> cookies);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,165, Provide an alternate parser to use when parsing the response to a Document.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,229,"* Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,230,"* parser, unless the response content-type is XML, in which case the XML parser is used."
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,169,ublic Connection parser(Parser parser);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,234,Connection parser(Parser parser);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,237,* Sets the default post data character set for x-www-form-urlencoded post data
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,238,* @param charset character set to encode post data
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,239,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,241,Connection postDataCharset(String charset);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,180,ublic Document get() throws IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,252,Document get() throws IOException;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,191,ublic Document post() throws IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,263,Document post() throws IOException;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,202,ublic Response execute() throws IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,274,Response execute() throws IOException;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,208,ublic Request request();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,280,Request request();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,215,ublic Connection request(Request request);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,287,Connection request(Request request);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,221,ublic Response response();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,293,Response response();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,228,ublic Connection response(Response response);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,300,Connection response(Response response);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,241,ublic URL url();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,312,URL url();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,248,ublic T url(URL url);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,319,T url(URL url);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,254,ublic Method method();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,325,Method method();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,261,ublic T method(Method method);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,332,T method(Method method);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,338,* </p>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,272,ublic String header(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,344,String header(String name);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,275, Set a header. This method will overwrite any existing header with the same case insensitive name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,347,* Set a header. This method will overwrite any existing header with the same case insensitive name.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,280,"ublic T header(String name, String value);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,352,"T header(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,287,ublic boolean hasHeader(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,359,boolean hasHeader(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,362,"* Check if a header is present, with the given value"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,363,* @param name header name (case insensitive)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,364,* @param value value (case insensitive)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,365,* @return if the header and value pair are set in this req/res
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,367,"boolean hasHeaderWithValue(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,294,ublic T removeHeader(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,374,T removeHeader(String name);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,300,"ublic Map<String, String> headers();"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,380,"Map<String, String> headers();"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,387,* </p>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,310,ublic String cookie(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,391,String cookie(String name);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,318,"ublic T cookie(String name, String value);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,399,"T cookie(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,325,ublic boolean hasCookie(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,406,boolean hasCookie(String name);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,332,ublic T removeCookie(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,413,T removeCookie(String name);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,338,"ublic Map<String, String> cookies();"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,419,"Map<String, String> cookies();"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,345,ublic interface Request extends Base<Request> {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,425,interface Request extends Base<Request> {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,427,* Get the proxy used for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,428,* @return the proxy; <code>null</code> if not enabled.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,430,Proxy proxy();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,433,* Update the proxy for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,434,* @param proxy the proxy ot use; <code>null</code> to disable.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,435,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,437,Request proxy(Proxy proxy);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,440,* Set the HTTP proxy to use for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,441,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,442,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,444,"Request proxy(String host, int port);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,350,ublic int timeout();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,450,int timeout();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,357,ublic Request timeout(int millis);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,457,Request timeout(int millis);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,363,ublic int maxBodySize();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,463,int maxBodySize();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,370,ublic Request maxBodySize(int bytes);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,470,Request maxBodySize(int bytes);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,376,ublic boolean followRedirects();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,476,boolean followRedirects();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,384,ublic Request followRedirects(boolean followRedirects);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,483,Request followRedirects(boolean followRedirects);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,388, @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,487,* @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,488,* thrown.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,390,ublic boolean ignoreHttpErrors();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,490,boolean ignoreHttpErrors();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,393, Configures the request to ignore HTTP errors in the response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,394, @param ignoreHttpErrors set to true to ignore HTTP errors.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,493,* Configures the request to ignore HTTP errors in the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,494,* @param ignoreHttpErrors set to true to ignore HTTP errors.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,397,ublic Request ignoreHttpErrors(boolean ignoreHttpErrors);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,497,Request ignoreHttpErrors(boolean ignoreHttpErrors);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,401, @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,501,* @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,502,* be thrown.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,403,ublic boolean ignoreContentType();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,504,boolean ignoreContentType();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,406, Configures the request to ignore the Content-Type of the response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,407, @param ignoreContentType set to true to ignore the content type.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,507,* Configures the request to ignore the Content-Type of the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,508,* @param ignoreContentType set to true to ignore the content type.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,410,ublic Request ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,511,Request ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,514,* Get the current state of TLS (SSL) certificate validation.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,515,* @return true if TLS cert validation enabled
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,517,boolean validateTLSCertificates();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,520,* Set TLS certificate validation.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,521,* @param value set false to ignore TLS (SSL) certificates
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,523,void validateTLSCertificates(boolean value);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,417,ublic Request data(KeyVal keyval);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,530,Request data(KeyVal keyval);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,423,ublic Collection<KeyVal> data();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,536,Collection<KeyVal> data();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,430,ublic Request parser(Parser parser);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,543,Request parser(Parser parser);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,436,ublic Parser parser();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,549,Parser parser();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,552,* Sets the post data character set for x-www-form-urlencoded post data
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,553,* @param charset character set to encode post data
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,554,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,556,Request postDataCharset(String charset);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,559,* Gets the post data character set for x-www-form-urlencoded post data
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,560,* @return character set to encode post data
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,562,String postDataCharset();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,442,ublic interface Response extends Base<Response> {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,569,interface Response extends Base<Response> {
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,448,ublic int statusCode();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,575,int statusCode();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,454,ublic String statusMessage();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,581,String statusMessage();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,460,ublic String charset();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,587,String charset();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,466,ublic String contentType();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,593,String contentType();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,473,ublic Document parse() throws IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,600,Document parse() throws IOException;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,479,ublic String body();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,606,String body();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,485,ublic byte[] bodyAsBytes();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,612,byte[] bodyAsBytes();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,491,ublic interface KeyVal {
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,618,interface KeyVal {
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,498,ublic KeyVal key(String key);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,625,KeyVal key(String key);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,504,ublic String key();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,631,String key();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,511,ublic KeyVal value(String value);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,638,KeyVal value(String value);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,517,ublic String value();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,644,String value();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,647,* Add or update an input stream to this keyVal
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,648,* @param inputStream new input stream
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,649,"* @return this KeyVal, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,651,KeyVal inputStream(InputStream inputStream);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,654,"* Get the input stream associated with this keyval, if any"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,655,"* @return input stream if set, or null"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,657,InputStream inputStream();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,660,* Does this keyval have an input stream?
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,661,* @return true if this keyval does indeed have an input stream
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,663,boolean hasInputStream();
False,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,4, SerializationException is raised whenever serialization of a DOM element fails. This exception usually wraps an {@link java.io.IOException} that may be thrown due to an inaccessible
False,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,5, output stream.
False,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,7, @author Michael Schmid
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,4,* A SerializationException is raised whenever serialization of a DOM element fails. This exception usually wraps an
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,5,* {@link java.io.IOException} that may be thrown due to an inaccessible output stream.
False,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,11,rivate static final long serialVersionUID = -6182985863817230363L;
False,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,31, Creates and initializes a new serialization exception with the specified cause and an error message of <code>(cause==null ? null : cause.toString())</code> (which typically
False,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,32, contains the class and error message of <code>cause</code>).
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,26,* Creates and initializes a new serialization exception with the specified cause and an error message of
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,27,* <code>(cause==null ? null : cause.toString())</code> (which typically contains the class and error message of
True,src/main/java/org/jsoup/SerializationException.java,src/main/java/org/jsoup/SerializationException.java,28,* <code>cause</code>).
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,10,import org.jsoup.select.Elements;
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,19, <p/>
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,20,* <p>
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,22,* </p>
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,23,* <p>
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,24,"* To invoke from the command line, assuming you've downloaded the jsoup jar to your current directory:</p>"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,25,* <p><code>java -cp jsoup.jar org.jsoup.examples.HtmlToPlainText url [selector]</code></p>
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,26,"* where <i>url</i> is the URL to fetch, and <i>selector</i> is an optional CSS selector."
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,31,"private static final String userAgent = ""Mozilla/5.0 (jsoup)"";"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,32,private static final int timeout = 5 * 1000;
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,26,"alidate.isTrue(args.length == 1, ""usage: supply url to fetch"");"
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,27,tring url = args[0];
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,35,"Validate.isTrue(args.length == 1 || args.length == 2, ""usage: java -cp jsoup.jar org.jsoup.examples.HtmlToPlainText url [selector]"");"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,36,final String url = args[0];
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,37,final String selector = args.length == 2 ? args[1] : null;
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,30,ocument doc = Jsoup.connect(url).get();
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,40,Document doc = Jsoup.connect(url).userAgent(userAgent).timeout(timeout).get();
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,33,tring plainText = formatter.getPlainText(doc);
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,34,ystem.out.println(plainText);
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,44,if (selector != null) {
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,45,Elements elements = doc.select(selector); // get each element that matches the CSS selector
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,46,for (Element element : elements) {
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,47,String plainText = formatter.getPlainText(element); // format that element to plain text
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,48,System.out.println(plainText);
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,50,} else { // format the whole doc
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,51,String plainText = formatter.getPlainText(doc);
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,52,System.out.println(plainText);
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,82,"else if (name.equals(""dt""))"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,83,"append(""  "");"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,84,"else if (StringUtil.in(name, ""p"", ""h1"", ""h2"", ""h3"", ""h4"", ""h5"", ""tr""))"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,85,"append(""\n"");"
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,68,"f (name.equals(""br""))"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,91,"if (StringUtil.in(name, ""br"", ""dd"", ""dt"", ""p"", ""h1"", ""h2"", ""h3"", ""h4"", ""h5""))"
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,70,"lse if (StringUtil.in(name, ""p"", ""h1"", ""h2"", ""h3"", ""h4"", ""h5""))"
False,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,71,"ppend(""\n\n"");"
True,src/main/java/org/jsoup/examples/HtmlToPlainText.java,src/main/java/org/jsoup/examples/HtmlToPlainText.java,126,@Override
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,11,import java.util.Locale;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,12,import java.util.Random;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,13,mport java.util.Locale;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,19,ublic class DataUtil {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,20,public final class DataUtil {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,24,private static final int UNICODE_BOM = 0xFEFF;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,25,private static final char[] mimeBoundaryChars =
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,26,"""-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"".toCharArray();"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,27,static final int boundaryLength = 32;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,72,* Writes the input stream to the output stream. Doesn't close them.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,73,* @param in input stream to read from
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,74,* @param out output stream to write to
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,75,* @throws IOException on IO error
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,77,"static void crossStreams(final InputStream in, final OutputStream out) throws IOException {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,78,final byte[] buffer = new byte[bufferSize];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,79,int len;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,80,while ((len = in.read(buffer)) != -1) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,81,"out.write(buffer, 0, len);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,92,// look for BOM - overrides any other header or input
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,93,byteData.mark();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,94,byte[] bom = new byte[4];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,95,byteData.get(bom);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,96,byteData.rewind();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,97,if (bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == (byte) 0xFE && bom[3] == (byte) 0xFF || // BE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,98,bom[0] == (byte) 0xFF && bom[1] == (byte) 0xFE && bom[2] == 0x00 && bom[3] == 0x00) { // LE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,99,"charsetName = ""UTF-32""; // and I hope it's on your system"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,100,} else if (bom[0] == (byte) 0xFE && bom[1] == (byte) 0xFF || // BE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,101,bom[0] == (byte) 0xFF && bom[1] == (byte) 0xFE) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,102,"charsetName = ""UTF-16""; // in all Javas"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,103,} else if (bom[0] == (byte) 0xEF && bom[1] == (byte) 0xBB && bom[2] == (byte) 0xBF) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,104,"charsetName = ""UTF-8""; // in all Javas"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,105,byteData.position(3); // 16 and 32 decoders consume the BOM to determine be/le; utf-8 should be consumed
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,78,tring foundCharset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,114,String foundCharset = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,81,"f (foundCharset == null && meta.hasAttr(""charset"")) {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,82,ry {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,83,"f (Charset.isSupported(meta.attr(""charset""))) {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,84,"oundCharset = meta.attr(""charset"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,86, catch (IllegalCharsetNameException e) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,87,oundCharset = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,118,"if (foundCharset == null && meta.hasAttr(""charset"")) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,119,try {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,120,"if (Charset.isSupported(meta.attr(""charset""))) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,121,"foundCharset = meta.attr(""charset"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,123,} catch (IllegalCharsetNameException e) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,124,foundCharset = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,90, else {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,91,"oundCharset = meta.attr(""charset"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,106,/ UTF-8 BOM indicator. takes precedence over everything else. rarely used. re-decodes incase above decoded incorrectly
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,107,f (docData.length() > 0 && docData.charAt(0) == 65279) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,108,yteData.rewind();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,109,ocData = Charset.forName(defaultCharset).decode(byteData).toString();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,110,ocData = docData.substring(1);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,111,harsetName = defaultCharset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,112,oc = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,148,yteBuffer byteData = ByteBuffer.wrap(outStream.toByteArray());
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,149,eturn byteData;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,174,return ByteBuffer.wrap(outStream.toByteArray());
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,194,static ByteBuffer emptyByteBuffer() {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,195,return ByteBuffer.allocate(0);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,224,"* Creates a random string, suitable for use as a mime boundary"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,226,static String mimeBoundary() {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,227,final StringBuilder mime = new StringBuilder(boundaryLength);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,228,final Random rand = new Random();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,229,for (int i = 0; i < boundaryLength; i++) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,230,mime.append(mimeBoundaryChars[rand.nextInt(mimeBoundaryChars.length)]);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,232,return mime.toString();
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,9,* @param <E> Type of elements
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,24,@Override
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,33,@Override
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,42,@Override
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,51,@Override
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,3,mport org.jsoup.Connection;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,4,mport org.jsoup.HttpStatusException;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,5,mport org.jsoup.UnsupportedMimeTypeException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,3,import org.jsoup.*;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,8,import javax.net.ssl.*;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,11,mport java.net.HttpURLConnection;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,12,mport java.net.MalformedURLException;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,13,mport java.net.URL;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,14,mport java.net.URLEncoder;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,10,import java.net.*;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,13,import java.nio.charset.IllegalCharsetNameException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,14,import java.security.KeyManagementException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,15,import java.security.NoSuchAlgorithmException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,16,import java.security.cert.X509Certificate;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,26,"public static final String  CONTENT_ENCODING = ""Content-Encoding"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,27,"private static final String CONTENT_TYPE = ""Content-Type"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,28,"private static final String MULTIPART_FORM_DATA = ""multipart/form-data"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,29,"private static final String FORM_URL_ENCODED = ""application/x-www-form-urlencoded"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,50,private static String encodeMimeName(String val) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,51,if (val == null)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,52,return null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,53,"return val.replaceAll(""\"""", ""%22"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,79,public Connection proxy(Proxy proxy) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,80,req.proxy(proxy);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,81,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,84,"public Connection proxy(String host, int port) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,85,"req.proxy(host, port);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,86,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,131,public Connection validateTLSCertificates(boolean value) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,132,req.validateTLSCertificates(value);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,133,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,141,"public Connection data(String key, String filename, InputStream inputStream) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,142,"req.data(KeyVal.create(key, filename, inputStream));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,143,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,233,public Connection postDataCharset(String charset) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,234,req.postDataCharset(charset);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,235,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,289,* Test if the request has a header with this value (case insensitive).
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,291,"public boolean hasHeaderWithValue(String name, String value) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,292,return hasHeader(name) && header(name).equalsIgnoreCase(value);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,316,ublic static class Request extends Base<Connection.Request> implements Connection.Request {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,358,public static class Request extends HttpConnection.Base<Connection.Request> implements Connection.Request {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,359,private Proxy proxy; // nullable
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,367,private boolean parserDefined = false; // called parser(...) vs initialized in ctor
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,368,private boolean validateTSLCertificates = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,369,private String postDataCharset = DataUtil.defaultCharset;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,325,rivate Request() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,371,private Request() {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,330,ethod = Connection.Method.GET;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,376,method = Method.GET;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,381,public Proxy proxy() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,382,return proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,385,public Request proxy(Proxy proxy) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,386,this.proxy = proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,387,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,390,"public Request proxy(String host, int port) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,391,"this.proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(host, port));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,392,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,428,public boolean validateTLSCertificates() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,429,return validateTSLCertificates;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,432,public void validateTLSCertificates(boolean value) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,433,validateTSLCertificates = value;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,462,parserDefined = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,470,public Connection.Request postDataCharset(String charset) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,471,"Validate.notNull(charset, ""Charset must not be null"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,472,if (!Charset.isSupported(charset)) throw new IllegalCharsetNameException(charset);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,473,this.postDataCharset = charset;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,474,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,477,public String postDataCharset() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,478,return postDataCharset;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,402,ublic static class Response extends Base<Connection.Response> implements Connection.Response {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,482,public static class Response extends HttpConnection.Base<Connection.Response> implements Connection.Response {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,484,private static SSLSocketFactory sslSocketFactory;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,485,"private static final String LOCATION = ""Location"";"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,414, For example {@code application/atom+xml;charset=utf-8}.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,415," Stepping through it: start with {@code ""application/""}, follow with word"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,416," characters up to a {@code ""+xml""}, and then maybe more ({@code .*})."
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,496,"* Matches XML content types (like text/xml, application/xhtml+xml;charset=UTF8, etc)"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,418,"rivate static final Pattern xmlContentTypeRxp = Pattern.compile(""application/\\w+\\+xml.*"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,498,"private static final Pattern xmlContentTypeRxp = Pattern.compile(""(application|text)/\\w*\\+?xml.*"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,f (req.method() == Connection.Method.GET && req.data().size() > 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,524,String mimeBoundary = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,525,if (!req.method().hasBody() && req.data().size() > 0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,527,} else if (req.method().hasBody()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,528,mimeBoundary = setOutputContentType(req);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,450,f (req.method() == Connection.Method.POST)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,451,"ritePost(req.data(), conn.getOutputStream());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,534,if (conn.getDoOutput())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,535,"writePost(req, conn.getOutputStream(), mimeBoundary);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,454,oolean needsRedirect = false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,455,f (status != HttpURLConnection.HTTP_OK) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,456,f (status == HttpURLConnection.HTTP_MOVED_TEMP || status == HttpURLConnection.HTTP_MOVED_PERM || status == HttpURLConnection.HTTP_SEE_OTHER || status == HTTP_TEMP_REDIR)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,457,eedsRedirect = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,458,lse if (!req.ignoreHttpErrors())
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,459,"hrow new HttpStatusException(""HTTP error fetching URL"", status, req.url().toString());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,463,f (needsRedirect && req.followRedirects()) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,464,eq.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,465,eq.data().clear();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,540,res.req = req;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,467,"tring location = res.header(""Location"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,542,"// redirect if there's a location header (from 3xx, or 201 etc)"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,543,if (res.hasHeader(LOCATION) && req.followRedirects()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,544,if (status != HTTP_TEMP_REDIR) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,545,req.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,546,req.data().clear();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,549,String location = res.header(LOCATION);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,470,"eq.url(new URL(req.url(), encodeUrl(location)));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,552,"req.url(StringUtil.resolve(req.url(), encodeUrl(location)));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,477,es.req = req;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,559,if ((status < 200 || status >= 400) && !req.ignoreHttpErrors())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,560,"throw new HttpStatusException(""HTTP error fetching URL"", status, req.url().toString());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,484,"& !contentType.startsWith(""application/xml"")"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,490,nputStream bodyStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,491,nputStream dataStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,492,ry {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,493,ataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,494,"odyStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,495,ew BufferedInputStream(new GZIPInputStream(dataStream)) :
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,496,ew BufferedInputStream(dataStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,498,"es.byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,499,"es.charset = DataUtil.getCharsetFromContentType(res.contentType); // may be null, readInputStream deals with it"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,500, finally {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,501,f (bodyStream != null) bodyStream.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,502,f (dataStream != null) dataStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,572,// switch to the XML parser if content type is xml and not parser not explicitly set
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,573,if (contentType != null && xmlContentTypeRxp.matcher(contentType).matches()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,574,// only flip it if a HttpConnection.Request (i.e. don't presume other impls want it):
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,575,if (req instanceof HttpConnection.Request && !((Request) req).parserDefined) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,576,req.parser(Parser.xmlParser());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,580,"res.charset = DataUtil.getCharsetFromContentType(res.contentType); // may be null, readInputStream deals with it"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,581,"if (conn.getContentLength() != 0) { // -1 means unknown, chunked. sun throws an IO exception on 500 response with no content when trying to read body"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,582,InputStream bodyStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,583,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,584,bodyStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,585,"if (res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip""))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,586,bodyStream = new GZIPInputStream(bodyStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,588,"res.byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,589,} finally {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,590,if (bodyStream != null) bodyStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,592,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,593,res.byteData = DataUtil.emptyByteBuffer();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,557,ttpURLConnection conn = (HttpURLConnection) req.url().openConnection();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,648,final HttpURLConnection conn = (HttpURLConnection) (
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,649,req.proxy() == null ?
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,650,req.url().openConnection() :
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,651,req.url().openConnection(req.proxy())
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,562,f (req.method() == Method.POST)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,659,if (conn instanceof HttpsURLConnection) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,660,if (!req.validateTLSCertificates()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,661,initUnSecureTSL();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,662,((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,663,((HttpsURLConnection)conn).setHostnameVerifier(getInsecureVerifier());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,667,if (req.method().hasBody())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,678,* Instantiate Hostname Verifier that does nothing.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,679,* This is used for connections with disabled SSL certificates validation.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,682,* @return Hostname Verifier that does nothing and accepts all hostnames
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,684,private static HostnameVerifier getInsecureVerifier() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,685,return new HostnameVerifier() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,686,"public boolean verify(String urlHostName, SSLSession session) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,687,return true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,693,* Initialise Trust manager that does not validate certificate chains and
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,694,* add it to current SSLContext.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,695,* <p/>
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,696,* please not that this method will only perform action if sslSocketFactory is not yet
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,697,* instantiated.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,699,* @throws IOException
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,701,private static synchronized void initUnSecureTSL() throws IOException {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,702,if (sslSocketFactory == null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,703,// Create a trust manager that does not validate certificate chains
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,704,final TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,706,"public void checkClientTrusted(final X509Certificate[] chain, final String authType) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,709,"public void checkServerTrusted(final X509Certificate[] chain, final String authType) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,712,public X509Certificate[] getAcceptedIssuers() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,713,return null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,717,// Install the all-trusting trust manager
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,718,final SSLContext sslContext;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,719,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,720,"sslContext = SSLContext.getInstance(""SSL"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,721,"sslContext.init(null, trustAllCerts, new java.security.SecureRandom());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,722,// Create an ssl socket factory with our all-trusting manager
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,723,sslSocketFactory = sslContext.getSocketFactory();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,724,} catch (NoSuchAlgorithmException e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,725,"throw new IOException(""Can't create unsecure trust manager"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,726,} catch (KeyManagementException e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,727,"throw new IOException(""Can't create unsecure trust manager"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,574,ethod = Connection.Method.valueOf(conn.getRequestMethod());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,735,method = Method.valueOf(conn.getRequestMethod());
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,580,"ap<String, List<String>> resHeaders = conn.getHeaderFields();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,741,"Map<String, List<String>> resHeaders = createHeaderMap(conn);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,753,"private static LinkedHashMap<String, List<String>> createHeaderMap(HttpURLConnection conn) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,754,// the default sun impl of conn.getHeaderFields() returns header values out of order
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,755,"final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,756,int i = 0;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,757,while (true) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,758,final String key = conn.getHeaderFieldKey(i);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,759,final String val = conn.getHeaderField(i);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,760,if (key == null && val == null)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,761,break;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,762,i++;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,763,if (key == null || val == null)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,764,continue; // skip http1.1 line
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,766,if (headers.containsKey(key))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,767,headers.get(key).add(val);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,768,else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,769,final ArrayList<String> vals = new ArrayList<String>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,770,vals.add(val);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,771,"headers.put(key, vals);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,774,return headers;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,606,f (cookieVal == null)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,607,"ookieVal = """";"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,608,"/ ignores path, date, domain, secure et al. req'd?"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,791,"// ignores path, date, domain, validateTLSCertificates et al. req'd?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,610,f (cookieName != null && cookieName.length() > 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,793,if (cookieName.length() > 0)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,613, else { // only take the first instance of each header
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,614,f (!values.isEmpty())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,796,} else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,797,if (values.size() == 1)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,799,else if (values.size() > 1) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,800,StringBuilder accum = new StringBuilder();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,801,for (int i = 0; i < values.size(); i++) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,802,final String val = values.get(i);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,803,if (i != 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,804,"accum.append("", "");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,805,accum.append(val);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,807,"header(name, accum.toString());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,620,"rivate static void writePost(Collection<Connection.KeyVal> data, OutputStream outputStream) throws IOException {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,621,"utputStreamWriter w = new OutputStreamWriter(outputStream, DataUtil.defaultCharset);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,622,oolean first = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,623,or (Connection.KeyVal keyVal : data) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,624,f (!first)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,625,.append('&');
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,626,lse
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,627,irst = false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,629,".write(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,630,.write('=');
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,631,".write(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,813,private static String setOutputContentType(final Connection.Request req) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,814,"// multipart mode, for files. add the header if we see something with an inputstream, and return a non-null boundary"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,815,boolean needsMulti = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,816,for (Connection.KeyVal keyVal : req.data()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,817,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,818,needsMulti = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,819,break;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,822,String bound = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,823,if (needsMulti) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,824,bound = DataUtil.mimeBoundary();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,825,"req.header(CONTENT_TYPE, MULTIPART_FORM_DATA + ""; boundary="" + bound);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,826,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,827,"req.header(CONTENT_TYPE, FORM_URL_ENCODED + ""; charset="" + req.postDataCharset());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,829,return bound;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,832,"private static void writePost(final Connection.Request req, final OutputStream outputStream, final String bound) throws IOException {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,833,final Collection<Connection.KeyVal> data = req.data();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,834,"final BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,836,if (bound != null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,837,// boundary will be set if we're in multipart mode
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,838,for (Connection.KeyVal keyVal : data) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,839,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,840,w.write(bound);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,841,"w.write(""\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,842,"w.write(""Content-Disposition: form-data; name=\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,843,"w.write(encodeMimeName(keyVal.key())); // encodes "" to %22"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,844,"w.write(""\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,845,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,846,"w.write(""; filename=\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,847,w.write(encodeMimeName(keyVal.value()));
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,848,"w.write(""\""\r\nContent-Type: application/octet-stream\r\n\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,849,w.flush(); // flush
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,850,"DataUtil.crossStreams(keyVal.inputStream(), outputStream);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,851,outputStream.flush();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,852,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,853,"w.write(""\r\n\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,854,w.write(keyVal.value());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,856,"w.write(""\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,858,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,859,w.write(bound);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,860,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,861,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,862,// regular form data (application/x-www-form-urlencoded)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,863,boolean first = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,864,for (Connection.KeyVal keyVal : data) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,865,if (!first)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,866,w.append('&');
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,867,else
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,868,first = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,870,"w.write(URLEncoder.encode(keyVal.key(), req.postDataCharset()));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,871,w.write('=');
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,872,"w.write(URLEncoder.encode(keyVal.value(), req.postDataCharset()));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,926,private InputStream stream;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,686,"alidate.notEmpty(key, ""Data key must not be empty"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,687,"alidate.notNull(value, ""Data value must not be null"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,688,"eturn new KeyVal(key, value);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,929,return new KeyVal().key(key).value(value);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,691,"rivate KeyVal(String key, String value) {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,692,his.key = key;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,693,his.value = value;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,932,"public static KeyVal create(String key, String filename, InputStream stream) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,933,return new KeyVal().key(key).value(filename).inputStream(stream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,936,private KeyVal() {}
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,958,public KeyVal inputStream(InputStream inputStream) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,959,"Validate.notNull(value, ""Data input stream must not be null"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,960,this.stream = inputStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,961,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,964,public InputStream inputStream() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,965,return stream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,968,public boolean hasInputStream() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,969,return stream != null;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,3,import java.net.MalformedURLException;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,4,import java.net.URL;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,5,import java.util.Arrays;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,157,"public static boolean inSorted(String needle, String[] haystack) {"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,158,"return Arrays.binarySearch(haystack, needle) >= 0;"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,162,"* Create a new absolute URL, from a provided existing absolute URL and a relative URL component."
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,163,* @param base the existing absolulte base URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,164,"* @param relUrl the relative URL to resolve. (If it's already absolute, it will be returned)"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,165,* @return the resolved absolute URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,166,* @throws MalformedURLException if an error occurred generating the URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,168,"public static URL resolve(URL base, String relUrl) throws MalformedURLException {"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,169,"// workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,170,"if (relUrl.startsWith(""?""))"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,171,relUrl = base.getPath() + relUrl;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,172,"// workaround: //example.com + ./foo = //example.com/./foo, not //example.com/foo"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,173,if (relUrl.indexOf('.') == 0 && base.getFile().indexOf('/') != 0) {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,174,"base = new URL(base.getProtocol(), base.getHost(), base.getPort(), ""/"" + base.getFile());"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,176,"return new URL(base, relUrl);"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,180,"* Create a new absolute URL, from a provided existing absolute URL and a relative URL component."
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,181,* @param baseUrl the existing absolute base URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,182,"* @param relUrl the relative URL to resolve. (If it's already absolute, it will be returned)"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,183,"* @return an absolute URL if one was able to be generated, or the empty string if not"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,185,"public static String resolve(final String baseUrl, final String relUrl) {"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,186,URL base;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,187,try {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,188,try {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,189,base = new URL(baseUrl);
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,190,} catch (MalformedURLException e) {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,191,"// the base is unsuitable, but the attribute/rel may be abs on its own, so try that"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,192,URL abs = new URL(relUrl);
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,193,return abs.toExternalForm();
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,195,"return resolve(base, relUrl).toExternalForm();"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,196,} catch (MalformedURLException e) {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,197,"return """";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,1,package org.jsoup.helper;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,3,import org.jsoup.nodes.Attribute;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,4,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,5,import org.jsoup.select.NodeTraversor;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,6,import org.jsoup.select.NodeVisitor;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,7,import org.w3c.dom.Comment;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,8,import org.w3c.dom.Document;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,9,import org.w3c.dom.Element;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,10,import org.w3c.dom.Text;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,12,import javax.xml.parsers.DocumentBuilder;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,13,import javax.xml.parsers.DocumentBuilderFactory;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,14,import javax.xml.parsers.ParserConfigurationException;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,15,import javax.xml.transform.Transformer;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,16,import javax.xml.transform.TransformerException;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,17,import javax.xml.transform.TransformerFactory;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,18,import javax.xml.transform.dom.DOMSource;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,19,import javax.xml.transform.stream.StreamResult;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,20,import java.io.StringWriter;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,21,import java.util.HashMap;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,24,"* Helper class to transform a {@link org.jsoup.nodes.Document} to a {@link org.w3c.dom.Document org.w3c.dom.Document},"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,25,* for integration with toolsets that use the W3C DOM.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,26,* <p>
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,27,"* This class is currently <b>experimental</b>, please provide feedback on utility and any problems experienced."
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,28,* </p>
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,30,public class W3CDom {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,31,protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,34,* Convert a jsoup Document to a W3C Document.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,35,* @param in jsoup doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,36,* @return w3c doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,38,public Document fromJsoup(org.jsoup.nodes.Document in) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,39,Validate.notNull(in);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,40,DocumentBuilder builder;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,41,try {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,42,//set the factory to be namespace-aware
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,43,factory.setNamespaceAware(true);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,44,builder = factory.newDocumentBuilder();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,45,Document out = builder.newDocument();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,46,"convert(in, out);"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,47,return out;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,48,} catch (ParserConfigurationException e) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,49,throw new IllegalStateException(e);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,54,"* Converts a jsoup document into the provided W3C Document. If required, you can set options on the output document"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,55,* before converting.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,56,* @param in jsoup doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,57,* @param out w3c doc
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,58,* @see org.jsoup.helper.W3CDom#fromJsoup(org.jsoup.nodes.Document)
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,60,"public void convert(org.jsoup.nodes.Document in, Document out) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,61,if (!StringUtil.isBlank(in.location()))
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,62,out.setDocumentURI(in.location());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,64,org.jsoup.nodes.Element rootEl = in.child(0); // skip the #root node
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,65,NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,66,traversor.traverse(rootEl);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,70,* Implements the conversion by walking the input.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,72,protected static class W3CBuilder implements NodeVisitor {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,73,"private static final String xmlnsKey = ""xmlns"";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,74,"private static final String xmlnsPrefix = ""xmlns:"";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,76,private final Document doc;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,77,"private final HashMap<String, String> namespaces = new HashMap<String, String>(); // prefix => urn"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,78,private Element dest;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,80,public W3CBuilder(Document doc) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,81,this.doc = doc;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,84,"public void head(org.jsoup.nodes.Node source, int depth) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,85,if (source instanceof org.jsoup.nodes.Element) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,86,org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,88,String prefix = updateNamespaces(sourceEl);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,89,String namespace = namespaces.get(prefix);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,91,"Element el = doc.createElementNS(namespace, sourceEl.tagName());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,92,"copyAttributes(sourceEl, el);"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,93,if (dest == null) { // sets up the root
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,94,doc.appendChild(el);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,95,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,96,dest.appendChild(el);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,98,dest = el; // descend
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,99,} else if (source instanceof org.jsoup.nodes.TextNode) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,100,org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,101,Text text = doc.createTextNode(sourceText.getWholeText());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,102,dest.appendChild(text);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,103,} else if (source instanceof org.jsoup.nodes.Comment) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,104,org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,105,Comment comment = doc.createComment(sourceComment.getData());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,106,dest.appendChild(comment);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,107,} else if (source instanceof org.jsoup.nodes.DataNode) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,108,org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,109,Text node = doc.createTextNode(sourceData.getWholeData());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,110,dest.appendChild(node);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,111,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,112,// unhandled
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,116,"public void tail(org.jsoup.nodes.Node source, int depth) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,117,if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,118,dest = (Element) dest.getParentNode(); // undescend. cromulent.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,122,"private void copyAttributes(org.jsoup.nodes.Node source, Element el) {"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,123,for (Attribute attribute : source.attributes()) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,124,"el.setAttribute(attribute.getKey(), attribute.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,129,* Finds any namespaces defined in this element. Returns any tag prefix.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,131,private String updateNamespaces(org.jsoup.nodes.Element el) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,132,// scan the element for namespace declarations
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,133,"// like: xmlns=""blah"" or xmlns:prefix=""blah"""
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,134,Attributes attributes = el.attributes();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,135,for (Attribute attr : attributes) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,136,String key = attr.getKey();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,137,String prefix;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,138,if (key.equals(xmlnsKey)) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,139,"prefix = """";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,140,} else if (key.startsWith(xmlnsPrefix)) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,141,prefix = key.substring(xmlnsPrefix.length());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,142,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,143,continue;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,145,"namespaces.put(prefix, attr.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,148,// get the element prefix if any
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,149,"int pos = el.tagName().indexOf("":"");"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,150,"return pos > 0 ? el.tagName().substring(0, pos) : """";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,156,* Serialize a W3C document to a String.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,157,* @param doc Document
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,158,* @return Document as string
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,160,public String asString(Document doc) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,161,try {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,162,DOMSource domSource = new DOMSource(doc);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,163,StringWriter writer = new StringWriter();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,164,StreamResult result = new StreamResult(writer);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,165,TransformerFactory tf = TransformerFactory.newInstance();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,166,Transformer transformer = tf.newTransformer();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,167,"transformer.transform(domSource, result);"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,168,return writer.toString();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,169,} catch (TransformerException e) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,170,throw new IllegalStateException(e);
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,84,"hrow new SerializationException(String.format(""Serialization of the attribute \""%s\"" failed!"", getKey()) , exception);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,84,throw new SerializationException(exception);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,102,@Override
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,125,* @param out Outputsettings
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,126,* @return  Returns whether collapsible or not
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,127,"& Arrays.binarySearch(booleanAttributes, key) >= 0;"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,131,&& isBooleanAttribute();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,134,protected boolean isBooleanAttribute() {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,135,"return Arrays.binarySearch(booleanAttributes, key) >= 0;"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,138,f (value != null ? !value.equals(attribute.value) : attribute.value != null) return false;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,140,eturn true;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,146,return !(value != null ? !value.equals(attribute.value) : attribute.value != null);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,11, <p/>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,11,* <p>
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,13, <p/>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,13,* </p>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,14,* <p>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,17,* </p>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,55,"Set a new boolean attribute, remove attribute if value is false."
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,56,@param key attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,57,@param value attribute value
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,59,"public void put(String key, boolean value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,60,if (value)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,61,put(new BooleanAttribute(key));
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,62,else
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,63,remove(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,141,"tml(accum, (new Document("""")).outputSettings()); // output settings a bit funky, but this html() seldom used"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,155,try {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,156,"html(accum, (new Document("""")).outputSettings()); // output settings a bit funky, but this html() seldom used"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,157,} catch (IOException e) { // ought never happen
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,158,throw new SerializationException(e);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,145,"oid html(Appendable accum, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,163,"void html(Appendable accum, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,149,ry {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,150,"or (Map.Entry<String, Attribute> entry : attributes.entrySet()) {"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,151,ttribute attribute = entry.getValue();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,152,"ccum.append("" "");"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,153,"ttribute.html(accum, out);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,155, catch(IOException exception) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,156,"hrow new SerializationException(""Attribute serialization failed!"", exception);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,167,"for (Map.Entry<String, Attribute> entry : attributes.entrySet()) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,168,Attribute attribute = entry.getValue();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,169,"accum.append("" "");"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,170,"attribute.html(accum, out);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,174,@Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,180,"* Checks if these attributes are equal to another set of attributes, by comparing the two sets"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,181,* @param o attributes to compare with
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,182,* @return if both sets of attributes have the same content
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,171,f (attributes != null ? !attributes.equals(that.attributes) : that.attributes != null) return false;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,173,eturn true;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,191,return !(attributes != null ? !attributes.equals(that.attributes) : that.attributes != null);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,195,"* Calculates the hashcode of these attributes, by iterating all attributes and summing their hashcodes."
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,196,* @return calculated hashcode
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,227,@Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,243,@Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,248,@Override
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,1,package org.jsoup.nodes;
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,4,* A boolean attribute that is written out without any value.
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,6,public class BooleanAttribute extends Attribute {
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,8,* Create a new boolean attribute from unencoded (raw) key.
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,9,* @param key attribute key
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,11,public BooleanAttribute(String key) {
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,12,"super(key, """");"
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,15,@Override
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,16,protected boolean isBooleanAttribute() {
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,17,return true;
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,45,@Override
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,50,@Override
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,21,private boolean updateMetaCharset = false;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,132,ensureMetaCharsetElement();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,211, {@inheritDoc}
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,214,* Sets the charset used in this document. This method is equivalent
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,215,* to {@link OutputSettings#charset(java.nio.charset.Charset)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,216,* OutputSettings.charset(Charset)} but in addition it updates the
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,217,* charset / encoding element within the document.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,219,* <p>This enables
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,220,* {@link #updateMetaCharsetElement(boolean) meta charset update}.</p>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,222,* <p>If there's no element with charset / encoding information yet it will
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,223,* be created. Obsolete charset / encoding definitions are removed!</p>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,225,* <p><b>Elements used:</b></p>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,227,* <ul>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,228,"* <li><b>Html:</b> <i>&lt;meta charset=""CHARSET""&gt;</i></li>"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,229,"* <li><b>Xml:</b> <i>&lt;?xml version=""1.0"" encoding=""CHARSET""&gt;</i></li>"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,230,* </ul>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,232,* @param charset Charset
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,234,* @see #updateMetaCharsetElement(boolean)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,235,* @see OutputSettings#charset(java.nio.charset.Charset)
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,213,Override
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,214,ublic <T extends Appendable> T html(T appendable) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,215,/ Exclude outer wrapper tag.
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,216,or (Node node : childNodes)
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,217,ode.outerHtml(appendable);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,219,eturn appendable;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,237,public void charset(Charset charset) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,238,updateMetaCharsetElement(true);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,239,outputSettings.charset(charset);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,240,ensureMetaCharsetElement();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,244,* Returns the charset used in this document. This method is equivalent
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,245,* to {@link OutputSettings#charset()}.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,247,* @return Current Charset
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,249,* @see OutputSettings#charset()
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,251,public Charset charset() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,252,return outputSettings.charset();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,256,* Sets whether the element with charset information in this document is
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,257,* updated on changes through {@link #charset(java.nio.charset.Charset)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,258,* Document.charset(Charset)} or not.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,260,* <p>If set to <tt>false</tt> <i>(default)</i> there are no elements
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,261,* modified.</p>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,263,* @param update If <tt>true</tt> the element updated on charset
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,264,"* changes, <tt>false</tt> if not"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,266,* @see #charset(java.nio.charset.Charset)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,268,public void updateMetaCharsetElement(boolean update) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,269,this.updateMetaCharset = update;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,273,* Returns whether the element with charset information in this document is
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,274,* updated on changes through {@link #charset(java.nio.charset.Charset)
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,275,* Document.charset(Charset)} or not.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,277,* @return Returns <tt>true</tt> if the element is updated on charset
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,278,"* changes, <tt>false</tt> if not"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,280,public boolean updateMetaCharsetElement() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,281,return updateMetaCharset;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,292,* Ensures a meta charset (html) or xml declaration (xml) with the current
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,293,* encoding used. This only applies with
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,294,* {@link #updateMetaCharsetElement(boolean) updateMetaCharset} set to
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,295,"* <tt>true</tt>, otherwise this method does nothing."
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,297,* <ul>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,298,* <li>An exsiting element gets updated with the current charset</li>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,299,* <li>If there's no element yet it will be inserted</li>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,300,* <li>Obsolete elements are removed</li>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,301,* </ul>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,303,* <p><b>Elements used:</b></p>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,305,* <ul>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,306,"* <li><b>Html:</b> <i>&lt;meta charset=""CHARSET""&gt;</i></li>"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,307,"* <li><b>Xml:</b> <i>&lt;?xml version=""1.0"" encoding=""CHARSET""&gt;</i></li>"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,308,* </ul>
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,310,private void ensureMetaCharsetElement() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,311,if (updateMetaCharset) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,312,OutputSettings.Syntax syntax = outputSettings().syntax();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,314,if (syntax == OutputSettings.Syntax.html) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,315,"Element metaCharset = select(""meta[charset]"").first();"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,317,if (metaCharset != null) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,318,"metaCharset.attr(""charset"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,319,} else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,320,Element head = head();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,322,if (head != null) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,323,"head.appendElement(""meta"").attr(""charset"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,327,// Remove obsolete elements
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,328,"select(""meta[name=charset]"").remove();"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,329,} else if (syntax == OutputSettings.Syntax.xml) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,330,Node node = childNodes().get(0);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,332,if (node instanceof XmlDeclaration) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,333,XmlDeclaration decl = (XmlDeclaration) node;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,335,"if (decl.attr(XmlDeclaration.DECL_KEY).equals(""xml"")) {"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,336,"decl.attr(""encoding"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,338,"final String version = decl.attr(""version"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,340,if (version != null) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,341,"decl.attr(""version"", ""1.0"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,343,} else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,344,"decl = new XmlDeclaration(""xml"", baseUri, false);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,345,"decl.attr(""version"", ""1.0"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,346,"decl.attr(""encoding"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,348,prependChild(decl);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,350,} else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,351,"XmlDeclaration decl = new XmlDeclaration(""xml"", baseUri, false);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,352,"decl.attr(""version"", ""1.0"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,353,"decl.attr(""encoding"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,355,prependChild(decl);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,357,} else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,358,// Unsupported syntax - nothing to do yet
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,289,/ todo: this should probably update the doc's meta charset
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,376, @param indentAmount number of spaces to use for indenting each level. Must be >= 0.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,510,* @param indentAmount number of spaces to use for indenting each level. Must be {@literal >=} 0.
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,420,"oQuirks, quirks, limitedQuirks;"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,554,"noQuirks, quirks, limitedQuirks"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,432,Override
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,433,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,434,eturn super.equals(o);
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,6,mport org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,6,import org.jsoup.nodes.Document.OutputSettings.*;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,12,"private static final String NAME = ""name"";"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,13,"private static final String PUBLIC_ID = ""publicId"";"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,14,"private static final String SYSTEM_ID = ""systemId"";"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,24,"ttr(""name"", name);"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,25,"ttr(""publicId"", publicId);"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,26,"ttr(""systemId"", systemId);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,27,"attr(NAME, name);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,28,"attr(PUBLIC_ID, publicId);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,29,"attr(SYSTEM_ID, systemId);"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,36,"ccum.append(""<!DOCTYPE"");"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,37,"f (!StringUtil.isBlank(attr(""name"")))"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,38,"ccum.append("" "").append(attr(""name""));"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,39,"f (!StringUtil.isBlank(attr(""publicId"")))"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,40,"ccum.append("" PUBLIC \"""").append(attr(""publicId"")).append('""');"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,41,"f (!StringUtil.isBlank(attr(""systemId"")))"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,42,"ccum.append("" \"""").append(attr(""systemId"")).append('""');"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,39,if (out.syntax() == Syntax.html && !has(PUBLIC_ID) && !has(SYSTEM_ID)) {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,40,"// looks like a html5 doctype, go lowercase for aesthetics"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,41,"accum.append(""<!doctype"");"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,42,} else {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,43,"accum.append(""<!DOCTYPE"");"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,45,if (has(NAME))
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,46,"accum.append("" "").append(attr(NAME));"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,47,if (has(PUBLIC_ID))
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,48,"accum.append("" PUBLIC \"""").append(attr(PUBLIC_ID)).append('""');"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,49,if (has(SYSTEM_ID))
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,50,"accum.append("" \"""").append(attr(SYSTEM_ID)).append('""');"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,58,private boolean has(final String attribute) {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,59,return !StringUtil.isBlank(attr(attribute));
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,7,mport org.jsoup.select.*;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,7,import org.jsoup.select.Collector;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,8,import org.jsoup.select.Elements;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,9,import org.jsoup.select.Evaluator;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,10,import org.jsoup.select.NodeTraversor;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,11,import org.jsoup.select.NodeVisitor;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,12,import org.jsoup.select.Selector;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,10,mport java.util.*;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,15,import java.util.ArrayList;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,16,import java.util.Arrays;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,17,import java.util.Collection;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,18,import java.util.Collections;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,19,import java.util.LinkedHashSet;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,20,import java.util.List;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,21,import java.util.Map;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,22,import java.util.Set;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,24,rivate Set<String> classNames;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,37,"private static final Pattern classSplit = Pattern.compile(""\\s+"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,106,"tring id = attr(""id"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,107,"eturn id == null ? """" : id;"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,119,"return attributes.get(""id"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,134,"* Set a boolean attribute value on this element. Setting to <code>true</code> sets the attribute value to """" and"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,135,* marks the attribute as boolean so no value is written out. Setting to <code>false</code> removes the attribute
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,136,* with the same key if it exists.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,138,* @param attributeKey the attribute key
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,139,* @param attributeValue the attribute value
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,141,* @return this element
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,143,"public Element attr(String attributeKey, boolean attributeValue) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,144,"attributes.put(attributeKey, attributeValue);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,145,return this;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,163, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,190,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,193,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,177, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,205,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,207,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,195, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,224,* <p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,199, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,228,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,220, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,249,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,251,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,238, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,268,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,271,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,245, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,276,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,278,* </p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,283,* @throws Selector.SelectorParseException (unchecked) on an invalid CSS query.
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,265,ddChildren(child);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,298,// was - Node#addChildren(child). short-circuits an array create and a loop.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,299,reparentChild(child);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,300,ensureChildNodes();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,301,childNodes.add(child);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,302,child.setSiblingIndex(childNodes.size() - 1);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,374,Validate.notNull(text);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,387,Validate.notNull(text);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,450," <p/>If the element has an ID, returns #id;"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,451," otherwise returns the parent (if any) CSS selector, followed by '>',"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,489,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,490,"* If the element has an ID, returns #id;"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,491,"* otherwise returns the parent (if any) CSS selector, followed by {@literal '>'},"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,493,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,496, <p/>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,537,* <p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,539,* </p>
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,563,f (element.equals(search))
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,605,if (element == search)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,978," separated. (E.g. on <code>&lt;div class=""header gray""></code> returns, ""<code>header gray</code>"")"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1020,"* separated. (E.g. on <code>&lt;div class=""header gray""&gt;</code> returns, ""<code>header gray</code>"")"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,982,"eturn attr(""class"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1024,"return attr(""class"").trim();"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,986," Get all of the element's class names. E.g. on element {@code <div class=""header gray""}>},"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1028,"* Get all of the element's class names. E.g. on element {@code <div class=""header gray"">},"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,992,f (classNames == null) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,993,"tring[] names = className().split(""\\s+"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,994,lassNames = new LinkedHashSet<String>(Arrays.asList(names));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1034,String[] names = classSplit.split(className());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1035,Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1036,"classNames.remove(""""); // if classNames() was empty, would include an empty class"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1058,"Used by common .class selector, so perf tweaked to reduce object creation vs hitting classnames()."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1060,"Wiki: 71, 13 (5.4x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1061,"CNN: 227, 91 (2.5x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1062,"Alterslash: 59, 4 (14.8x)"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1063,"Jsoup: 14, 1 (14x)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1016,et<String> classNames = classNames();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1017,or (String name : classNames) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1066,"String classAttr = attributes.get(""class"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1067,"if (classAttr.equals("""") || classAttr.length() < className.length())"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1068,return false;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1070,final String[] classes = classSplit.split(classAttr);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1071,for (String name : classes) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1097,f (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1098,f(accum instanceof StringBuilder) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1099,f(((StringBuilder)accum).length() > 0)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1100,"ndent(accum, depth, out);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1101, else {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1102,"ndent(accum, depth, out);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1105,ccum
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1106,"append(""<"")"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1107,append(tagName());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1152,if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1153,if (accum instanceof StringBuilder) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1154,if (((StringBuilder) accum).length() > 0)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1155,"indent(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1156,} else {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1157,"indent(accum, depth, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1160,accum
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1161,".append(""<"")"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1162,.append(tagName());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1205,* {@inheritDoc}
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1207,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1208,public <T extends Appendable> T html(T appendable) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1209,for (Node node : childNodes)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1210,node.outerHtml(appendable);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1212,return appendable;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1165,Override
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1166,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1167,eturn this == o;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1170,Override
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1171,ublic int hashCode() {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1172,"/ todo: fixup, not very useful"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1173,nt result = super.hashCode();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1174,esult = 31 * result + (tag != null ? tag.hashCode() : 0);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1175,eturn result;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1180,lement clone = (Element) super.clone();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1181,"lone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1182,eturn clone;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1233,return (Element) super.clone();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,3,import org.jsoup.SerializationException;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,10,mport java.util.regex.Matcher;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,11,mport java.util.regex.Pattern;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,68, @return the Character value of the named entity (e.g. '<' or '&')
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,67,* @return the Character value of the named entity (e.g. '{@literal <}' or '{@literal &}')
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,74,"tatic String escape(String string, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,73,"static String escape(String string, Document.OutputSettings out) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,76,"scape(accum, string, out, false, false, false);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,75,try {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,76,"escape(accum, string, out, false, false, false);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,77,} catch (IOException e) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,78,throw new SerializationException(e); // doesn't happen
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,86,scapeMode escapeMode = out.escapeMode();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,87,harsetEncoder encoder = out.encoder();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,88,"ap<Character, String> map = escapeMode.getMap();"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,89,final EscapeMode escapeMode = out.escapeMode();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,90,final CharsetEncoder encoder = out.encoder();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,91,final CoreCharset coreCharset = CoreCharset.byName(encoder.charset().name());
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,"final Map<Character, String> map = escapeMode.getMap();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,119,ccum.append(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,123,"accum.append(""&#xa0;"");"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,122,f (!inAttribute)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,126,// escape when in character data or when in a xml attribue val; not needed in html attr val
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,127,if (!inAttribute || escapeMode == EscapeMode.xhtml)
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,140,f (encoder.canEncode(c))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,145,"if (canEncode(coreCharset, c, encoder))"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,149,f (encoder.canEncode(c))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,154,if (encoder.canEncode(c)) // uses fallback encoder for simplicity
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,163, @param string
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,168,* @param string to un-HTML-escape
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,165, @return
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,170,* @return unescaped string
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,177,"* Provides a fast-path for Encoder.canEncode, which drastically improves performance on Android post JellyBean."
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,178,"* After KitKat, the implementation of canEncode degrades to the point of being useless. For non ASCII or UTF,"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,179,* performance may be bad. We can add more encoders for common character sets that are impacted by performance
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,180,* issues on Android if required.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,182,* Benchmarks:     *
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,183,* OLD toHtml() impl v New (fastpath) in millis
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,184,"* Wiki: 1895, 16"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,185,"* CNN: 6378, 55"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,186,"* Alterslash: 3013, 28"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,187,"* Jsoup: 167, 2"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,190,"private static boolean canEncode(final CoreCharset charset, final char c, final CharsetEncoder fallback) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,191,// todo add more charset tests if impacted by Android's bad perf in canEncode
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,192,switch (charset) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,193,case ascii:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,194,return c < 0x80;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,195,case utf:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,196,return true; // real is:!(Character.isLowSurrogate(c) || Character.isHighSurrogate(c)); - but already check above
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,197,default:
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,198,return fallback.canEncode(c);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,202,private enum CoreCharset {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,203,"ascii, utf, fallback;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,205,private static CoreCharset byName(String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,206,"if (name.equals(""US-ASCII""))"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,207,return ascii;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,208,"if (name.startsWith(""UTF-"")) // covers UTF-8, UTF-16, et al"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,209,return utf;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,210,return fallback;
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,62,onnection con = Jsoup.connect(action)
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,62,return Jsoup.connect(action)
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,66,eturn con;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,78,"if (el.hasAttr(""disabled"")) continue; // skip disabled form inputs"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,81,"String type = el.attr(""type"");"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,85,boolean set = false;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,88,set = true;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,90,if (!set) {
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,91,"Element option = el.select(""option"").first();"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,92,if (option != null)
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,93,"data.add(HttpConnection.KeyVal.create(name, option.val()));"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,95,"} else if (""checkbox"".equalsIgnoreCase(type) || ""radio"".equalsIgnoreCase(type)) {"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,96,// only add checkbox or radio if they have the checked attribute
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,97,"if (el.hasAttr(""checked"")) {"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,98,"final String val = el.val().length() >  0 ? el.val() : ""on"";"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,99,"data.add(HttpConnection.KeyVal.create(name, val));"
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,95,Override
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,96,ublic boolean equals(Object o) {
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,97,eturn super.equals(o);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,11,mport java.net.MalformedURLException;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,12,mport java.net.URL;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,21,private static final List<Node> EMPTY_NODES = Collections.emptyList();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,38,hildNodes = new ArrayList<Node>(4);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,37,childNodes = EMPTY_NODES;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,51,hildNodes = Collections.emptyList();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,50,childNodes = EMPTY_NODES;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,63, <p/>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,62,* <p>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,66," E.g.: <blockquote><code>String url = a.attr(""abs:href"");</code></blockquote>"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,65,* </p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,66,* E.g.:
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,67,"* <blockquote><code>String url = a.attr(""abs:href"");</code></blockquote>"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,155, Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href></code> or
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,156, <code>&lt;img src></code>).
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,157, <p/>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,157,* Get an absolute URL from a URL attribute that may be relative (i.e. an <code>&lt;a href&gt;</code> or
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,158,* <code>&lt;img src&gt;</code>).
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,159,* <p>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,159, <p/>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,161,* </p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,162,* <p>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,164, <p/>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,167,* </p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,168,* <p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,171,* </p>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,177,tring relUrl = attr(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,181,RL base;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,182,ry {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,183,ry {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,184,ase = new URL(baseUri);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,185, catch (MalformedURLException e) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,186,"/ the base is unsuitable, but the attribute may be abs on its own, so try that"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,187,RL abs = new URL(relUrl);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,188,eturn abs.toExternalForm();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,190,"/ workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,191,"f (relUrl.startsWith(""?""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,192,elUrl = base.getPath() + relUrl;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,193,"RL abs = new URL(base, relUrl);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,194,eturn abs.toExternalForm();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,195, catch (MalformedURLException e) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,196,"eturn """";"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,185,"return StringUtil.resolve(baseUri, attr(attributeKey));"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,288,"ddSiblingHtml(siblingIndex(), html);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,276,"addSiblingHtml(siblingIndex, html);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,302,"arentNode.addChildren(siblingIndex(), node);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,290,"parentNode.addChildren(siblingIndex, node);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,313,"ddSiblingHtml(siblingIndex()+1, html);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,301,"addSiblingHtml(siblingIndex + 1, html);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,327,"arentNode.addChildren(siblingIndex()+1, node);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,315,"parentNode.addChildren(siblingIndex + 1, node);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,373, <p/>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,374," For example, with the input html:<br/>"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,375, {@code <div>One <span>Two <b>Three</b></span></div>}<br/>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,376, Calling {@code element.unwrap()} on the {@code span} element will result in the html:<br/>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,377, {@code <div>One Two <b>Three</b></div>}<br/>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,361,* <p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,362,"* For example, with the input html:"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,363,* </p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,364,* <p>{@code <div>One <span>Two <b>Three</b></span></div>}</p>
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,365,* Calling {@code element.unwrap()} on the {@code span} element will result in the html:
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,366,* <p>{@code <div>One Two <b>Three</b></div>}</p>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,386,nt index = siblingIndex;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,388,"arentNode.addChildren(index, this.childNodesAsArray());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,377,"parentNode.addChildren(siblingIndex, this.childNodesAsArray());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,424,nteger index = out.siblingIndex();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,413,final int index = out.siblingIndex;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,433,nt index = out.siblingIndex();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,422,final int index = out.siblingIndex;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,435,eindexChildren();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,424,reindexChildren(index);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,432,ensureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,440,ensureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,445,reindexChildren(index);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,449,protected void ensureChildNodes() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,450,if (childNodes == EMPTY_NODES) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,451,childNodes = new ArrayList<Node>(4);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,455,eindexChildren();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,458,rivate void reparentChild(Node child) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,455,protected void reparentChild(Node child) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,464,rivate void reindexChildren() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,465,or (int i = 0; i < childNodes.size(); i++) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,461,private void reindexChildren(int start) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,462,for (int i = start; i < childNodes.size(); i++) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,495,ist<Node> siblings = parentNode.childNodes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,496,nteger index = siblingIndex();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,497,alidate.notNull(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,498,f (siblings.size() > index+1)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,499,eturn siblings.get(index+1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,492,final List<Node> siblings = parentNode.childNodes;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,493,final int index = siblingIndex+1;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,494,if (siblings.size() > index)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,495,return siblings.get(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,512,ist<Node> siblings = parentNode.childNodes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,513,nteger index = siblingIndex();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,514,alidate.notNull(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,515,f (index > 0)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,516,eturn siblings.get(index-1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,508,if (siblingIndex > 0)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,509,return parentNode.childNodes.get(siblingIndex-1);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,576, Recursively serializes this node to the given {@link Appendable} and returns the resulting <code>Appendable</code> instance.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,578, @param appendable the {@link Appendable} that should hold the content of this node and all its child nodes.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,579," @return the given {@link Appendable}, now containing this node and all child nodes."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,569,* Write this node and its children to the given {@link Appendable}.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,571,* @param appendable the {@link Appendable} to write to.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,572,"* @return the supplied {@link Appendable}, for chaining."
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,582,uterHtml(appendable);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,583,eturn appendable;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,575,outerHtml(appendable);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,576,return appendable;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,588,* Check if this node is the same instance of another (object identity test).
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,589,* @param o other object to compare to
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,590,* @return true if the content of this node is the same as the other
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,591,* @see Node#hasSameValue(Object) to compare nodes by their value
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,596,f (this == o) return true;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,597,"/ todo: have nodes hold a child index, compare against that and parent (not children)"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,598,eturn false;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,595,// implemented just so that javadoc is clear this is an identity test
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,596,return this == o;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,601,Override
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,602,ublic int hashCode() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,603,nt result = parentNode != null ? parentNode.hashCode() : 0;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,604,"/ not children, or will block stack as they go back up to parent)"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,605,esult = 31 * result + (attributes != null ? attributes.hashCode() : 0);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,606,eturn result;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,600,"* Check if this node is has the same content as another node. A node is considered the same if its name, attributes and content match the"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,601,* other node; particularly its position in the tree does not influence its similarity.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,602,* @param o other object to compare to
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,603,* @return true if the content of this node is the same as the other
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,606,public boolean hasSameValue(Object o) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,607,if (this == o) return true;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,608,if (o == null || getClass() != o.getClass()) return false;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,610,Node node = (Node) o;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,611,return this.outerHtml().equals(((Node) o).outerHtml());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,676,"hrow new SerializationException(""Node head serialization failed!"", exception);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,681,throw new SerializationException(exception);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,685,"hrow new SerializationException(""Node tail serialization failed!"", exception);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,690,throw new SerializationException(exception);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,99,& !Element.preserveWhitespace((Element) parent());
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,99,&& !Element.preserveWhitespace(parent());
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,105,ublic String toString() {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,105,@Override
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,106,public String toString() {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,113,* @param baseUri Base uri
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,"rivate static final String DECL_KEY = ""declaration"";"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,"static final String DECL_KEY = ""declaration"";"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,eturn attributes.get(DECL_KEY);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,final String decl = attributes.get(DECL_KEY);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,36,"if(decl.equals(""xml"") && attributes.size() > 1 ) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,37,StringBuilder sb = new StringBuilder(decl);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,"final String version = attributes.get(""version"");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,40,if( version != null ) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,41,"sb.append("" version=\"""").append(version).append(""\"""");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,44,"final String encoding = attributes.get(""encoding"");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,46,if( encoding != null ) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,47,"sb.append("" encoding=\"""").append(encoding).append(""\"""");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,50,return sb.toString();
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,52,else {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,53,return attributes.get(DECL_KEY);
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,47,ublic String toString() {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,67,@Override
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,68,public String toString() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,5,import java.util.Arrays;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,10,lass CharacterReader {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,11,final class CharacterReader {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,13,private static final int maxCacheLen = 12;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,19,"private final String[] stringCache = new String[512]; // holds reused strings in this doc, to lessen garbage"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,88,hile(++offset < length && startChar != input[offset]);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,91,while(++offset < length && startChar != input[offset]) { /* empty */ }
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,92,"or (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,95,"for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++) { /* empty */ }"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,103,"tring consumed = new String(input, pos, offset);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,106,"String consumed = cacheString(pos, offset);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,114,"tring consumed = new String(input, pos, offset);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,117,"String consumed = cacheString(pos, offset);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,123,nt start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,126,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,127,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,128,final char[] val = input;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,125,UTER: while (pos < length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,126,or (int i = 0; i < chars.length; i++) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,127,f (input[pos] == chars[i])
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,130,OUTER: while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,131,for (char c : chars) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,132,if (val[pos] == c)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,133,"eturn pos > start ? new String(input, start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,138,"return pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,141,String consumeToAnySorted(final char... chars) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,142,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,143,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,144,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,146,while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,147,"if (Arrays.binarySearch(chars, val[pos]) >= 0)"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,148,break;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,149,pos++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,152,"return pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,155,String consumeData() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,156,"// &, <, null"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,157,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,158,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,159,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,161,while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,162,final char c = val[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,163,if (c == '&'|| c ==  '<' || c ==  TokeniserState.nullChar)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,164,break;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,165,pos++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,168,"return pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,171,String consumeTagName() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,172,"// '\t', '\n', '\r', '\f', ' ', '/', '>', nullChar"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,173,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,174,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,175,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,177,while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,178,final char c = val[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,179,if (c == '\t'|| c ==  '\n'|| c ==  '\r'|| c ==  '\f'|| c ==  ' '|| c ==  '/'|| c ==  '>'|| c ==  TokeniserState.nullChar)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,180,break;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,181,pos++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,184,"return pos > start ? cacheString(start, pos-start) : """";"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,137,"tring data = new String(input, pos, length-pos);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,188,"String data = cacheString(pos, length-pos);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,152,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,203,"return cacheString(start, pos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,172,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,223,"return cacheString(start, pos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,184,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,235,"return cacheString(start, pos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,196,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,247,"return cacheString(start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,292,boolean matchesAnySorted(char[] seq) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,293,"return !isEmpty() && Arrays.binarySearch(seq, input[pos]) >= 0;"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,245,eturn (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,300,return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,341,"* Caches short strings, as a flywheel pattern, to reduce GC load. Just for this doc, to prevent leaks."
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,342,* <p />
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,343,"* Simplistic, and on hash collisions just falls back to creating a new string, vs a full HashMap with Entry list."
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,344,"* That saves both having to create objects as hash keys, and running through the entry list, at the expense of"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,345,* some more duplicates.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,347,"private String cacheString(final int start, final int count) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,348,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,349,final String[] cache = stringCache;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,351,// limit (no cache):
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,352,if (count > maxCacheLen)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,353,"return new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,355,// calculate hash:
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,356,int hash = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,357,int offset = start;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,358,for (int i = 0; i < count; i++) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,359,hash = 31 * hash + val[offset++];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,362,// get from cache
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,363,final int index = hash & cache.length - 1;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,364,String cached = cache[index];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,366,"if (cached == null) { // miss, add"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,367,"cached = new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,368,cache[index] = cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,369,"} else { // hashcode hit, check equality"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,370,"if (rangeEquals(start, count, cached)) { // hit"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,371,return cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,372,} else { // hashcode conflict
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,373,"cached = new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,374,"cache[index] = cached; // update the cache, as recently used strings are more likely to show up again"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,377,return cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,381,* Check if the value of the provided range equals the string.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,383,"boolean rangeEquals(final int start, int count, final String cached) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,384,if (count == cached.length()) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,385,char one[] = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,386,int i = start;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,387,int j = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,388,while (count-- != 0) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,389,if (one[i++] != cached.charAt(j++))
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,390,return false;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,392,return true;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,394,return false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,3,mport org.jsoup.helper.DescendableLinkedList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,10,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,11,mport java.util.LinkedList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,17,lass HtmlTreeBuilder extends TreeBuilder {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,14,public class HtmlTreeBuilder extends TreeBuilder {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,42,rivate DescendableLinkedList<Element> formattingElements = new DescendableLinkedList<Element>(); // active (open) formatting elements
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,43,rivate List<Token.Character> pendingTableCharacters = new ArrayList<Token.Character>(); // chars in table to be shifted out
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,39,private ArrayList<Element> formattingElements = new ArrayList<Element>(); // active (open) formatting elements
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,40,private List<String> pendingTableCharacters = new ArrayList<String>(); // chars in table to be shifted out
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,41,private Token.EndTag emptyEnd = new Token.EndTag(); // reused empty end tag
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,87,tack.push(root);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,85,stack.add(root);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,103,f (context != null)
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,101,if (context != null && root != null)
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,180,okeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,178,tokeniser.emit(emptyEnd.reset().name(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,189,lement insert(String startTagName) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,187,Element insertStartTag(String startTagName) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,259,"/ todo - dev, remove validation check"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,260,"f (stack.peekLast().nodeName().equals(""td"") && !state.name().equals(""InCell""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,261,"alidate.isFalse(true, ""pop td not in cell"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,262,"f (stack.peekLast().nodeName().equals(""html""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,263,"alidate.isFalse(true, ""popping html!"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,264,eturn stack.pollLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,257,int size = stack.size();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,258,return stack.remove(size-1);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,271,escendableLinkedList<Element> getStack() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,265,ArrayList<Element> getStack() {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,279,"rivate boolean isElementInQueue(DescendableLinkedList<Element> queue, Element element) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,280,terator<Element> it = queue.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,281,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,282,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,273,"private boolean isElementInQueue(ArrayList<Element> queue, Element element) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,274,for (int pos = queue.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,275,Element next = queue.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,291,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,292,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,293,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,284,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,285,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,302,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,303,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,304,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,294,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,295,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,306,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,297,stack.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,314,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,315,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,316,lement next = it.next();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,317,f (next.nodeName().equals(elName)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,318,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,305,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,306,Element next = stack.get(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,307,stack.remove(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,308,if (next.nodeName().equals(elName))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,320, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,321,t.remove();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,327,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,328,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,329,lement next = it.next();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,330,"f (StringUtil.in(next.nodeName(), elNames)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,331,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,314,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,315,Element next = stack.get(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,316,stack.remove(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,317,"if (StringUtil.in(next.nodeName(), elNames))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,333, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,334,t.remove();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,340,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,341,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,342,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,323,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,324,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,346,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,328,stack.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,364,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,365,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,366,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,346,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,347,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,370,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,351,stack.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,376,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,377,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,378,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,357,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,358,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,380,eturn it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,360,return stack.get(pos-1);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,396,"rivate void replaceInQueue(LinkedList<Element> queue, Element out, Element in) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,376,"private void replaceInQueue(ArrayList<Element> queue, Element out, Element in) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,399,ueue.remove(i);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,400,"ueue.add(i, in);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,379,"queue.set(i, in);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,405,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,406,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,407,lement node = it.next();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,408,f (!it.hasNext()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,384,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,385,Element node = stack.get(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,386,if (pos == 0) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,416," else if ((""td"".equals(name) || ""td"".equals(name) && !last)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,394,"} else if ((""td"".equals(name) || ""th"".equals(name) && !last)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,432,private String[] specificScopeTarget = {null};
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,455,"eturn inSpecificScope(new String[]{targetName}, baseTypes, extraTypes);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,435,specificScopeTarget[0] = targetName;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,436,"return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,459,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,460,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,461,lement el = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,440,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,441,Element el = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,483,"eturn inSpecificScope(targetName, TagsSearchInScope , extras);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,463,"return inSpecificScope(targetName, TagsSearchInScope, extras);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,501,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,502,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,503,lement el = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,481,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,482,Element el = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,539,endingTableCharacters = new ArrayList<Token.Character>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,518,pendingTableCharacters = new ArrayList<String>();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,542,ist<Token.Character> getPendingTableCharacters() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,521,List<String> getPendingTableCharacters() {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,546,oid setPendingTableCharacters(List<Token.Character> pendingTableCharacters) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,525,void setPendingTableCharacters(List<String> pendingTableCharacters) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,555,Element lastFormattingElement() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,556,return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,559,Element removeLastFormattingElement() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,560,int size = formattingElements.size();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,561,if (size > 0)
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,562,return formattingElements.remove(size-1);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,563,else
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,564,return null;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,579,terator<Element> iter = formattingElements.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,580,hile (iter.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,581,lement el =  iter.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,570,for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,571,Element el = formattingElements.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,589,ter.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,579,formattingElements.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,605,nt size = formattingElements.size();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,606,f (size == 0 || formattingElements.getLast() == null || onStack(formattingElements.getLast()))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,595,Element last = lastFormattingElement();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,596,if (last == null || onStack(last))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,609,lement entry = formattingElements.getLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,599,Element entry = last;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,600,int size = formattingElements.size();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,628,lement newEl = insert(entry.nodeName()); // todo: avoid fostering here?
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,619,Element newEl = insertStartTag(entry.nodeName()); // todo: avoid fostering here?
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,633,"ormattingElements.add(pos, newEl);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,634,ormattingElements.remove(pos + 1);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,624,"formattingElements.set(pos, newEl);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,644,lement el = formattingElements.peekLast();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,645,ormattingElements.removeLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,634,Element el = removeLastFormattingElement();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,652,terator<Element> it = formattingElements.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,653,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,654,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,641,for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,642,Element next = formattingElements.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,656,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,644,formattingElements.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,667,terator<Element> it = formattingElements.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,668,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,669,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,655,for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,656,Element next = formattingElements.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,687,lement fosterParent = null;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,674,Element fosterParent;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,3,mport org.jsoup.helper.DescendableLinkedList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,7,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,8,mport java.util.LinkedList;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,6,import java.util.ArrayList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,61,"b.insert(""html"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,59,"tb.insertStartTag(""html"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,82,"b.process(new Token.StartTag(""head""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,80,"tb.processStartTag(""head"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,88,"b.process(new Token.StartTag(""head""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,86,"tb.processStartTag(""head"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,162,"b.process(new Token.EndTag(""head""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,160,"tb.processEndTag(""head"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,191,"b.process(new Token.EndTag(""noscript""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,192,eturn tb.process(t);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,189,tb.insert(new Token.Character().data(t.toString()));
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,190,return true;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,241,"b.process(new Token.StartTag(""body""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,239,"tb.processStartTag(""body"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,276,"f (name.equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,274,"if (name.equals(""a"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,275,"if (tb.getActiveFormattingElement(""a"") != null) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,276,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,277,"tb.processEndTag(""a"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,279,// still on stack?
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,280,"Element remainingA = tb.getFromStack(""a"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,281,if (remainingA != null) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,282,tb.removeFromActiveFormattingElements(remainingA);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,283,tb.removeFromStack(remainingA);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,286,tb.reconstructFormattingElements();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,287,Element a = tb.insert(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,288,tb.pushActiveFormattingElements(a);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,289,"} else if (StringUtil.inSorted(name, Constants.InBodyStartEmptyFormatters)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,290,tb.reconstructFormattingElements();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,291,tb.insertEmpty(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,292,tb.framesetOk(false);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,293,"} else if (StringUtil.inSorted(name, Constants.InBodyStartPClosers)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,294,"if (tb.inButtonScope(""p"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,295,"tb.processEndTag(""p"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,297,tb.insert(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,298,"} else if (name.equals(""span"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,299,"// same as final else, but short circuits lots of checks"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,300,tb.reconstructFormattingElements();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,301,tb.insert(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,302,"} else if (name.equals(""li"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,303,tb.framesetOk(false);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,304,ArrayList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,305,for (int i = stack.size() - 1; i > 0; i--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,306,Element el = stack.get(i);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,307,"if (el.nodeName().equals(""li"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,308,"tb.processEndTag(""li"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,309,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,311,"if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,312,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,314,"if (tb.inButtonScope(""p"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,315,"tb.processEndTag(""p"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,317,tb.insert(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,318,"} else if (name.equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,279,lement html = tb.getStack().getFirst();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,321,Element html = tb.getStack().get(0);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,284," else if (StringUtil.in(name, Constants.InBodyStartToHead)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,326,"} else if (StringUtil.inSorted(name, Constants.InBodyStartToHead)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,288,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,330,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,302,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,344,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,314,tack.removeLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,356,stack.remove(stack.size()-1);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,318," else if (StringUtil.in(name, Constants.InBodyStartPClosers)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,319,"f (tb.inButtonScope(""p"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,320,"b.process(new Token.EndTag(""p""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,322,b.insert(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,323," else if (StringUtil.in(name, Constants.Headings)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,360,"} else if (StringUtil.inSorted(name, Constants.Headings)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,325,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,362,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,327,"f (StringUtil.in(tb.currentElement().nodeName(), Constants.Headings)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,364,"if (StringUtil.inSorted(tb.currentElement().nodeName(), Constants.Headings)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,332," else if (StringUtil.in(name, Constants.InBodyStartPreListing)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,369,"} else if (StringUtil.inSorted(name, Constants.InBodyStartPreListing)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,334,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,371,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,345,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,382,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,348," else if (name.equals(""li"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,349,b.framesetOk(false);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,350,inkedList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,351,or (int i = stack.size() - 1; i > 0; i--) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,352,lement el = stack.get(i);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,353,"f (el.nodeName().equals(""li"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,354,"b.process(new Token.EndTag(""li""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,355,reak;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,357,"f (tb.isSpecial(el) && !StringUtil.in(el.nodeName(), Constants.InBodyStartLiBreakers))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,358,reak;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,360,"f (tb.inButtonScope(""p"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,361,"b.process(new Token.EndTag(""p""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,363,b.insert(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,364," else if (StringUtil.in(name, Constants.DdDt)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,385,"} else if (StringUtil.inSorted(name, Constants.DdDt)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,366,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,387,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,369,"f (StringUtil.in(el.nodeName(), Constants.DdDt)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,370,b.process(new Token.EndTag(el.nodeName()));
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,390,"if (StringUtil.inSorted(el.nodeName(), Constants.DdDt)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,391,tb.processEndTag(el.nodeName());
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,373,"f (tb.isSpecial(el) && !StringUtil.in(el.nodeName(), Constants.InBodyStartLiBreakers))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,394,"if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,377,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,398,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,382,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,403,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,390,"b.process(new Token.EndTag(""button""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,411,"tb.processEndTag(""button"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,397," else if (name.equals(""a"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,398,"f (tb.getActiveFormattingElement(""a"") != null) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,399,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,400,"b.process(new Token.EndTag(""a""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,402,/ still on stack?
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,403,"lement remainingA = tb.getFromStack(""a"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,404,f (remainingA != null) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,405,b.removeFromActiveFormattingElements(remainingA);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,406,b.removeFromStack(remainingA);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,409,b.reconstructFormattingElements();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,410,lement a = tb.insert(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,411,b.pushActiveFormattingElements(a);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,412," else if (StringUtil.in(name, Constants.Formatters)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,418,"} else if (StringUtil.inSorted(name, Constants.Formatters)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,420,"b.process(new Token.EndTag(""nobr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,426,"tb.processEndTag(""nobr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,425," else if (StringUtil.in(name, Constants.InBodyStartApplets)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,431,"} else if (StringUtil.inSorted(name, Constants.InBodyStartApplets)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,432,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,438,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,437," else if (StringUtil.in(name, Constants.InBodyStartEmptyFormatters)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,438,b.reconstructFormattingElements();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,439,b.insertEmpty(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,440,b.framesetOk(false);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,446," else if (StringUtil.in(name, Constants.InBodyStartMedia)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,448,"} else if (StringUtil.inSorted(name, Constants.InBodyStartMedia)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,450,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,452,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,466,"b.process(new Token.StartTag(""form""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,468,"tb.processStartTag(""form"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,471,"b.process(new Token.StartTag(""hr""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,472,"b.process(new Token.StartTag(""label""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,473,"tb.processStartTag(""hr"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,474,"tb.processStartTag(""label"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,478,b.process(new Token.Character(prompt));
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,480,tb.process(new Token.Character().data(prompt));
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,483,"f (!StringUtil.in(attr.getKey(), Constants.InBodyStartInputAttribs))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,485,"if (!StringUtil.inSorted(attr.getKey(), Constants.InBodyStartInputAttribs))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,487,"b.process(new Token.StartTag(""input"", inputAttribs));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,488,"b.process(new Token.EndTag(""label""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,489,"b.process(new Token.StartTag(""hr""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,490,"b.process(new Token.EndTag(""form""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,489,"tb.processStartTag(""input"", inputAttribs);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,490,"tb.processEndTag(""label"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,491,"tb.processStartTag(""hr"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,492,"tb.processEndTag(""form"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,500,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,502,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,521," else if (StringUtil.in(name, Constants.InBodyStartOptions)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,523,"} else if (StringUtil.inSorted(name, Constants.InBodyStartOptions)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,523,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,525,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,526," else if (StringUtil.in(name, Constants.InBodyStartRuby)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,528,"} else if (StringUtil.inSorted(name, Constants.InBodyStartRuby)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,545," else if (StringUtil.in(name, Constants.InBodyStartDrop)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,547,"} else if (StringUtil.inSorted(name, Constants.InBodyStartDrop)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,557,"f (name.equals(""body"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,558,"f (!tb.inScope(""body"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,559,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,560,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,561, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,562,"/ todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,563,b.transition(AfterBody);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,565," else if (name.equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,566,"oolean notIgnored = tb.process(new Token.EndTag(""body""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,567,f (notIgnored)
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,568,eturn tb.process(endTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,569," else if (StringUtil.in(name, Constants.InBodyEndClosers)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,570,f (!tb.inScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,571,/ nothing to close
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,572,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,573,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,574, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,575,b.generateImpliedEndTags();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,576,f (!tb.currentElement().nodeName().equals(name))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,577,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,578,b.popStackToClose(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,580," else if (name.equals(""form"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,581,lement currentForm = tb.getFormElement();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,582,b.setFormElement(null);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,583,f (currentForm == null || !tb.inScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,584,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,585,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,586, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,587,b.generateImpliedEndTags();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,588,f (!tb.currentElement().nodeName().equals(name))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,589,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,590,/ remove currentForm from stack. will shift anything under up.
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,591,b.removeFromStack(currentForm);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,593," else if (name.equals(""p"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,594,f (!tb.inButtonScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,595,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,596,"b.process(new Token.StartTag(name)); // if no p to close, creates an empty <p></p>"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,597,eturn tb.process(endTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,598, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,599,b.generateImpliedEndTags(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,600,f (!tb.currentElement().nodeName().equals(name))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,601,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,602,b.popStackToClose(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,604," else if (name.equals(""li"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,605,f (!tb.inListItemScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,606,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,607,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,608, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,609,b.generateImpliedEndTags(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,610,f (!tb.currentElement().nodeName().equals(name))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,611,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,612,b.popStackToClose(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,614," else if (StringUtil.in(name, Constants.DdDt)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,615,f (!tb.inScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,616,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,617,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,618, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,619,b.generateImpliedEndTags(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,620,f (!tb.currentElement().nodeName().equals(name))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,621,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,622,b.popStackToClose(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,624," else if (StringUtil.in(name, Constants.Headings)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,625,f (!tb.inScope(Constants.Headings)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,626,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,627,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,628, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,629,b.generateImpliedEndTags(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,630,f (!tb.currentElement().nodeName().equals(name))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,631,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,632,b.popStackToClose(Constants.Headings);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,634," else if (name.equals(""sarcasm"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,635,/ *sigh*
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,636,"eturn anyOtherEndTag(t, tb);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,637," else if (StringUtil.in(name, Constants.InBodyEndAdoptionFormatters)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,559,"if (StringUtil.inSorted(name, Constants.InBodyEndAdoptionFormatters)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,639,UTER:
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,657,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,578,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,681,NNER:
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,687,ontinue INNER;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,607,continue;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,689,reak INNER;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,609,break;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,707,"f (StringUtil.in(commonAncestor.nodeName(), Constants.InBodyEndTableFosters)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,627,"if (StringUtil.inSorted(commonAncestor.nodeName(), Constants.InBodyEndTableFosters)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,729," else if (StringUtil.in(name, Constants.InBodyStartApplets)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,649,"} else if (StringUtil.inSorted(name, Constants.InBodyEndClosers)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,650,if (!tb.inScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,651,// nothing to close
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,652,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,653,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,654,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,655,tb.generateImpliedEndTags();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,656,if (!tb.currentElement().nodeName().equals(name))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,657,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,658,tb.popStackToClose(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,660,"} else if (name.equals(""span"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,661,"// same as final fall through, but saves short circuit"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,662,"return anyOtherEndTag(t, tb);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,663,"} else if (name.equals(""li"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,664,if (!tb.inListItemScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,665,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,666,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,667,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,668,tb.generateImpliedEndTags(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,669,if (!tb.currentElement().nodeName().equals(name))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,670,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,671,tb.popStackToClose(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,673,"} else if (name.equals(""body"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,674,"if (!tb.inScope(""body"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,675,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,676,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,677,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,678,"// todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,679,tb.transition(AfterBody);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,681,"} else if (name.equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,682,"boolean notIgnored = tb.processEndTag(""body"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,683,if (notIgnored)
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,684,return tb.process(endTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,685,"} else if (name.equals(""form"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,686,Element currentForm = tb.getFormElement();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,687,tb.setFormElement(null);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,688,if (currentForm == null || !tb.inScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,689,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,690,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,691,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,692,tb.generateImpliedEndTags();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,693,if (!tb.currentElement().nodeName().equals(name))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,694,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,695,// remove currentForm from stack. will shift anything under up.
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,696,tb.removeFromStack(currentForm);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,698,"} else if (name.equals(""p"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,699,if (!tb.inButtonScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,700,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,701,"tb.processStartTag(name); // if no p to close, creates an empty <p></p>"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,702,return tb.process(endTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,703,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,704,tb.generateImpliedEndTags(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,705,if (!tb.currentElement().nodeName().equals(name))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,706,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,707,tb.popStackToClose(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,709,"} else if (StringUtil.inSorted(name, Constants.DdDt)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,710,if (!tb.inScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,711,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,712,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,713,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,714,tb.generateImpliedEndTags(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,715,if (!tb.currentElement().nodeName().equals(name))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,716,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,717,tb.popStackToClose(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,719,"} else if (StringUtil.inSorted(name, Constants.Headings)) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,720,if (!tb.inScope(Constants.Headings)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,721,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,722,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,723,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,724,tb.generateImpliedEndTags(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,725,if (!tb.currentElement().nodeName().equals(name))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,726,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,727,tb.popStackToClose(Constants.Headings);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,729,"} else if (name.equals(""sarcasm"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,730,// *sigh*
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,731,"return anyOtherEndTag(t, tb);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,732,"} else if (StringUtil.inSorted(name, Constants.InBodyStartApplets)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,743,"b.process(new Token.StartTag(""br""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,746,"tb.processStartTag(""br"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,760,escendableLinkedList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,761,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,762,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,763,lement node = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,763,ArrayList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,764,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,765,Element node = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,825,"b.process(new Token.StartTag(""colgroup""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,827,"tb.processStartTag(""colgroup"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,832,"b.process(new Token.StartTag(""tbody""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,834,"tb.processStartTag(""tbody"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,836,"oolean processed = tb.process(new Token.EndTag(""table""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,838,"boolean processed = tb.processEndTag(""table"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,888,oolean processed = true;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,890,boolean processed;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,908,b.getPendingTableCharacters().add(c);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,910,tb.getPendingTableCharacters().add(c.getData());
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,914,// todo - don't really like the way these table character data lists are built
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,913,or (Token.Character character : tb.getPendingTableCharacters()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,916,for (String character : tb.getPendingTableCharacters()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,919,"b.process(character, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,922,"tb.process(new Token.Character().data(character), InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,922,"b.process(character, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,925,"tb.process(new Token.Character().data(character), InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,925,b.insert(character);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,928,tb.insert(new Token.Character().data(character));
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,957,"oolean processed = tb.process(new Token.EndTag(""caption""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,960,"boolean processed = tb.processEndTag(""caption"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1019,"oolean processed = tb.process(new Token.EndTag(""colgroup""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1022,"boolean processed = tb.processEndTag(""colgroup"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1037,"b.process(new Token.StartTag(""tr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1040,"tb.processStartTag(""tr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1077,"b.process(new Token.EndTag(tb.currentElement().nodeName())); // tbody, tfoot, thead"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1080,"tb.processEndTag(tb.currentElement().nodeName()); // tbody, tfoot, thead"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1120,"b.process(new Token.EndTag(""tr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1123,"tb.processEndTag(""tr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1139,"oolean processed = tb.process(new Token.EndTag(""tr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1142,"boolean processed = tb.processEndTag(""tr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1198,"b.process(new Token.EndTag(""td""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1201,"tb.processEndTag(""td"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1200,"b.process(new Token.EndTag(""th"")); // only here if th or td in scope"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1203,"tb.processEndTag(""th""); // only here if th or td in scope"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1227,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1230,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1231,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1234,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1233,"b.process(new Token.EndTag(""optgroup""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1236,"tb.processEndTag(""optgroup"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1237,"eturn tb.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1240,"return tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1242,"b.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1245,"tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1255,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1258,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1295,"b.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1298,"tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1300,"b.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1303,"tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1454,"/ todo: this checks more than spec - ""\t"", ""\n"", ""\f"", ""\r"", "" """
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1455,or (int i = 0; i < data.length(); i++) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1456,har c = data.charAt(i);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1457,f (!StringUtil.isWhitespace(c))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1458,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1460,eturn true;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1457,return isWhitespace(data);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1462,private static boolean isWhitespace(String data) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1463,"// todo: this checks more than spec - ""\t"", ""\n"", ""\f"", ""\r"", "" """
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1464,for (int i = 0; i < data.length(); i++) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1465,char c = data.charAt(i);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1466,if (!StringUtil.isWhitespace(c))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1467,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1469,return true;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,30,"ocument doc = treeBuilder.parse(html, baseUri, errors);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,31,eturn doc;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,30,"return treeBuilder.parse(html, baseUri, errors);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,132,for (int i = nodes.length - 1; i > 0; i--) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,133,nodes[i].remove();
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,42, <p/>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,42,* <p>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,44,* </p>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,187,if (!tagName.equals(tag.tagName)) return false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,194,f (formSubmit != tag.formSubmit) return false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,195,f (!tagName.equals(tag.tagName)) return false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,197,eturn true;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,196,return formSubmit == tag.formSubmit;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,214,@Override
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,226,"td"", ""video"", ""audio"", ""canvas"", ""details"", ""menu"", ""plaintext"""
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,226,"""td"", ""video"", ""audio"", ""canvas"", ""details"", ""menu"", ""plaintext"", ""template"", ""article"", ""main"","
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,227,"""svg"", ""math"""
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,233,"summary"", ""command"", ""device"", ""area"", ""basefont"", ""bgsound"", ""menuitem"", ""param"", ""source"", ""track"""
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,234,"""summary"", ""command"", ""device"", ""area"", ""basefont"", ""bgsound"", ""menuitem"", ""param"", ""source"", ""track"","
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,235,"""data"", ""bdi"""
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,6,import org.jsoup.nodes.BooleanAttribute;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,20,tatic class Doctype extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,22,"* Reset the data represent by this token, for reuse. Prevents the need to create transfer objects for every"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,23,"* piece of data, which immediately get GCed."
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,25,abstract Token reset();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,27,static void reset(StringBuilder sb) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,28,if (sb != null) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,29,"sb.delete(0, sb.length());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,33,static final class Doctype extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,43,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,44,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,45,reset(name);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,46,reset(publicIdentifier);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,47,reset(systemIdentifier);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,48,forceQuirks = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,49,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,50,"rivate StringBuilder pendingAttributeValue; // but values are accumulated, from e.g. & in hrefs"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,72,"private StringBuilder pendingAttributeValue = new StringBuilder(); // but values are accumulated, from e.g. & in hrefs"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,73,"private String pendingAttributeValueS; // try to get attr vals in one shot, vs Builder"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,74,private boolean hasEmptyAttributeValue = false; // distinguish boolean attribute from empty string value
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,75,private boolean hasPendingAttributeValue = false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,55,oid newAttribute() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,79,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,80,Tag reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,81,tagName = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,82,pendingAttributeName = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,83,reset(pendingAttributeValue);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,84,pendingAttributeValueS = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,85,hasEmptyAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,86,hasPendingAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,87,selfClosing = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,88,attributes = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,89,return this;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,92,final void newAttribute() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,61,f (pendingAttributeValue == null)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,98,if (hasPendingAttributeValue)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,99,"attribute = new Attribute(pendingAttributeName,"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,100,pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,101,else if (hasEmptyAttributeValue)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,64,"ttribute = new Attribute(pendingAttributeName, pendingAttributeValue.toString());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,104,attribute = new BooleanAttribute(pendingAttributeName);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,68,f (pendingAttributeValue != null)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,69,"endingAttributeValue.delete(0, pendingAttributeValue.length());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,108,hasEmptyAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,109,hasPendingAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,110,reset(pendingAttributeValue);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,111,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,72,oid finaliseTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,114,final void finaliseTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,80,tring name() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,122,final String name() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,85,ag name(String name) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,127,final Tag name(String name) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,90,oolean isSelfClosing() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,132,final boolean isSelfClosing() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,95,ttributes getAttributes() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,137,final Attributes getAttributes() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,100,oid appendTagName(String append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,142,final void appendTagName(String append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,104,oid appendTagName(char append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,146,final void appendTagName(char append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,108,oid appendAttributeName(String append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,150,final void appendAttributeName(String append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,112,oid appendAttributeName(char append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,154,final void appendAttributeName(char append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,116,oid appendAttributeValue(String append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,158,final void appendAttributeValue(String append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,118,endingAttributeValue.append(append);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,160,if (pendingAttributeValue.length() == 0) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,161,pendingAttributeValueS = append;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,162,} else {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,163,pendingAttributeValue.append(append);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,121,oid appendAttributeValue(char append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,167,final void appendAttributeValue(char append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,126,oid appendAttributeValue(char[] append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,172,final void appendAttributeValue(char[] append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,177,final void setEmptyAttributeValue() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,178,hasEmptyAttributeValue = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,131,rivate final void ensureAttributeValue() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,132,f (pendingAttributeValue == null)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,133,endingAttributeValue = new StringBuilder();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,181,private void ensureAttributeValue() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,182,hasPendingAttributeValue = true;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,183,"// if on second hit, we'll need to move to the builder"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,184,if (pendingAttributeValueS != null) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,185,pendingAttributeValue.append(pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,186,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,137,tatic class StartTag extends Tag {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,191,final static class StartTag extends Tag {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,144,tartTag(String name) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,145,his();
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,146,his.tagName = name;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,198,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,199,Tag reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,200,super.reset();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,201,attributes = new Attributes();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,202,"// todo - would prefer these to be null, but need to check Element assertions"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,203,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,149,"tartTag(String name, Attributes attributes) {"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,150,his();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,206,"StartTag nameAttr(String name, Attributes attributes) {"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,209,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,164,tatic class EndTag extends Tag{
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,221,final static class EndTag extends Tag{
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,170,ndTag(String name) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,171,his();
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,172,his.tagName = name;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,181,tatic class Comment extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,233,final static class Comment extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,237,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,238,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,239,reset(data);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,240,bogus = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,241,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,199,tatic class Character extends Token {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,200,rivate final String data;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,258,final static class Character extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,259,private String data;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,202,haracter(String data) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,261,Character() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,262,super();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,266,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,267,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,268,data = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,269,return this;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,272,Character data(String data) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,274,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,217,tatic class EOF extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,287,final static class EOF extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,292,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,293,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,294,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,223,oolean isDoctype() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,298,final boolean isDoctype() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,227,octype asDoctype() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,302,final Doctype asDoctype() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,231,oolean isStartTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,306,final boolean isStartTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,235,tartTag asStartTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,310,final StartTag asStartTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,239,oolean isEndTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,314,final boolean isEndTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,243,ndTag asEndTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,318,final EndTag asEndTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,247,oolean isComment() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,322,final boolean isComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,251,omment asComment() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,326,final Comment asComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,255,oolean isCharacter() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,330,final boolean isCharacter() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,259,haracter asCharacter() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,334,final Character asCharacter() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,263,oolean isEOF() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,338,final boolean isEOF() {
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,212,"tring data = queue.substring(start, pos);"
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,213,eturn data;
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,212,"return queue.substring(start, pos);"
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,229,"tring data = queue.substring(start, pos);"
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,230,eturn data;
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,228,"return queue.substring(start, pos);"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,308,* @return Whether consuming whitespace or not
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,391,@Override
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,6,mport java.util.ArrayList;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,7,mport java.util.List;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,6,import java.util.Arrays;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,12,lass Tokeniser {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,11,final class Tokeniser {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,13,"private static final char[] notCharRefCharsSorted = new char[]{'\t', '\n', '\r', '\f', ' ', '<', '&'};"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,15,static {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,16,Arrays.sort(notCharRefCharsSorted);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,21,rivate StringBuilder charBuffer = new StringBuilder(); // buffers characters to output as one token
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,22,tringBuilder dataBuffer; // buffers data looking for </script>
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,25,private String charsString = null; // characters pending an emit. Will fall to charsBuilder if more than one
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,26,"private StringBuilder charsBuilder = new StringBuilder(1024); // buffers characters to output as one token, if more than one emit per read"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,27,StringBuilder dataBuffer = new StringBuilder(1024); // buffers data looking for </script>
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,25,oken.Doctype doctypePending; // doctype building up
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,26,oken.Comment commentPending; // comment building up
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,27,"rivate Token.StartTag lastStartTag; // the last start tag emitted, to test appropriate end tag"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,30,Token.StartTag startPending = new Token.StartTag();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,31,Token.EndTag endPending = new Token.EndTag();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,32,Token.Character charPending = new Token.Character();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,33,Token.Doctype doctypePending = new Token.Doctype(); // doctype building up
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,34,Token.Comment commentPending = new Token.Comment(); // comment building up
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,35,"private String lastStartTag; // the last start tag emitted, to test appropriate end tag"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,45,f (charBuffer.length() > 0) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,46,tring str = charBuffer.toString();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,47,"harBuffer.delete(0, charBuffer.length());"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,48,eturn new Token.Character(str);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,53,if (charsBuilder.length() > 0) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,54,String str = charsBuilder.toString();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,55,"charsBuilder.delete(0, charsBuilder.length());"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,56,charsString = null;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,57,return charPending.data(str);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,58,} else if (charsString != null) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,59,Token token = charPending.data(charsString);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,60,charsString = null;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,61,return token;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,63,astStartTag = startTag;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,76,lastStartTag = startTag.tagName;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,73,oid emit(String str) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,86,void emit(final String str) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,76,harBuffer.append(str);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,89,if (charsString == null) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,90,charsString = str;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,92,else {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,93,if (charsBuilder.length() == 0) { // switching to string builder as more than one emit before read
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,94,charsBuilder.append(charsString);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,96,charsBuilder.append(str);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,80,harBuffer.append(chars);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,101,emit(String.valueOf(chars));
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,84,harBuffer.append(c);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,105,emit(String.valueOf(c));
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,125,final private char[] charRefHolder = new char[1]; // holder to not have to keep creating arrays
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,109,"f (reader.matchesAny('\t', '\n', '\r', '\f', ' ', '<', '&'))"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,131,if (reader.matchesAnySorted(notCharRefCharsSorted))
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,134,final char[] charRef = charRefHolder;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,131,eturn new char[]{replacementChar};
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,154,charRef[0] = replacementChar;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,155,return charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,159,if (charval < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,160,charRef[0] = (char) charval;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,161,return charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,162,} else
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,157,eturn new char[]{Entities.getCharacterByName(nameRef)};
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,185,charRef[0] = Entities.getCharacterByName(nameRef);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,186,return charRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,162,agPending = start ? new Token.StartTag() : new Token.EndTag();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,191,tagPending = start ? startPending.reset() : endPending.reset();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,172,ommentPending = new Token.Comment();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,201,commentPending.reset();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,180,octypePending = new Token.Doctype();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,209,doctypePending.reset();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,188,ataBuffer = new StringBuilder();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,217,Token.reset(dataBuffer);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,192,f (lastStartTag == null)
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,193,eturn false;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,194,eturn tagPending.tagName.equals(lastStartTag.tagName);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,221,return lastStartTag != null && tagPending.tagName.equals(lastStartTag);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,200,eturn lastStartTag.tagName;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,227,return lastStartTag;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,3,import java.util.Arrays;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,25,"tring data = r.consumeToAny('&', '<', nullChar);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,27,String data = r.consumeData();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,185,"tring tagName = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '/', '>', nullChar).toLowerCase();"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,187,//String tagName = r.consumeToAnySorted(tagCharsSorted).toLowerCase();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,188,String tagName = r.consumeTagName().toLowerCase();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,222,.tagPending = new Token.EndTag(t.appropriateEndTagName());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,225,t.tagPending = t.createTagPending(false).name(t.appropriateEndTagName());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,645,"tring name = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '/', '=', '>', nullChar, '""', '\'', '<');"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,648,String name = r.consumeToAnySorted(attributeNameCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,760,t.emitTagPending();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,779,"tring value = r.consumeToAny('""', '&', nullChar);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,783,String value = r.consumeToAny(attributeDoubleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,786,else
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,787,t.tagPending.setEmptyAttributeValue();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,809,"tring value = r.consumeToAny('\'', '&', nullChar);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,815,String value = r.consumeToAny(attributeSingleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,818,else
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,819,t.tagPending.setEmptyAttributeValue();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,839,"tring value = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '&', '>', nullChar, '""', '\'', '<', '=', '`');"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,847,String value = r.consumeToAnySorted(attributeValueUnquoted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1648,rivate static final char nullChar = '\u0000';
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1656,static final char nullChar = '\u0000';
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1657,"private static final char[] attributeSingleValueCharsSorted = new char[]{'\'', '&', nullChar};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1658,"private static final char[] attributeDoubleValueCharsSorted = new char[]{'""', '&', nullChar};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1659,"private static final char[] attributeNameCharsSorted = new char[]{'\t', '\n', '\r', '\f', ' ', '/', '=', '>', nullChar, '""', '\'', '<'};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1660,"private static final char[] attributeValueUnquoted = new char[]{'\t', '\n', '\r', '\f', ' ', '&', '>', nullChar, '""', '\'', '<', '=', '`'};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1666,static {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1667,Arrays.sort(attributeSingleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1668,Arrays.sort(attributeDoubleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1669,Arrays.sort(attributeNameCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1670,Arrays.sort(attributeValueUnquoted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1657,"rivate static final void handleDataEndTag(Tokeniser t, CharacterReader r, TokeniserState elseTransition) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1677,"private static void handleDataEndTag(Tokeniser t, CharacterReader r, TokeniserState elseTransition) {"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1697,"rivate static final void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1717,"private static void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,3,mport org.jsoup.helper.DescendableLinkedList;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,4,import org.jsoup.nodes.Attributes;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,9,mport java.util.List;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,18,rotected DescendableLinkedList<Element> stack; // the stack of open elements
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,17,protected ArrayList<Element> stack; // the stack of open elements
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,private Token.StartTag start = new Token.StartTag(); // start tag to process
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,23,private Token.EndTag end  = new Token.EndTag();
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,31,tack = new DescendableLinkedList<Element>();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,33,stack = new ArrayList<Element>(32);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,51,token.reset();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,60,protected boolean processStartTag(String name) {
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,61,if (currentToken == start) { // don't recycle an in-use token
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,62,return process(new Token.StartTag().name(name));
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,64,return process(start.reset().name(name));
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,67,"public boolean processStartTag(String name, Attributes attrs) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,68,if (currentToken == start) { // don't recycle an in-use token
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,69,"return process(new Token.StartTag().nameAttr(name, attrs));"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,71,start.reset();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,72,"start.nameAttr(name, attrs);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,73,return process(start);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,76,protected boolean processEndTag(String name) {
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,77,if (currentToken == end) { // don't recycle an in-use token
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,78,return process(new Token.EndTag().name(name));
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,80,return process(end.reset().name(name));
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,58,eturn stack.getLast();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,85,int size = stack.size();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,86,return size > 0 ? stack.get(size-1) : null;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,6,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,103,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,104,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,105,lement next = it.next();
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,102,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,103,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,114,t = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,115,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,116,lement next = it.next();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,117,f (next == firstFound) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,118,t.remove();
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,112,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,113,Element next = stack.get(pos);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,114,stack.remove(pos);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,115,if (next == firstFound)
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,120, else {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,121,t.remove();
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,9,mport java.util.List;
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,14,p/>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,13,<p>
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,17,p/>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,16,</p>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,17,<p>
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,20,p/>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,20,</p>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,21,<p>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,23,</p>
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,54,p/>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,56,<p>
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,60,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,21,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,21,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,23,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,30,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,31,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,33,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,38,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,40,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,42,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,46,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,50,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,51,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,55,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,56,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,60,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,93,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,89,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,96,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,97,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,92,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,100,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,101,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,103,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,135,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,145,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,147,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,227,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,238,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,230,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,241,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,242,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,245,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,262,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,275,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,265,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,278,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,279,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,282,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,305,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,320,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,307,"code>&lt;a href=""..."" rel=""nofollow""></code>"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,322,"<code>&lt;a href=""..."" rel=""nofollow""&gt;</code>"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,323,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,362, <p />
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,378,* <p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,383,* </p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,380,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,397,<p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,382,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,399,</p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,400,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,403,</p>
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,423,p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,442,<p>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,444,</p>
False,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,9,mport java.util.List;
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,12,p/>
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,12,<p>
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,14,</p>
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,16,"ublic class Elements implements List<Element>, Cloneable {"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,17,rivate List<Element> contents;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,17,public class Elements extends ArrayList<Element> {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,20,ontents = new ArrayList<Element>();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,24,ontents = new ArrayList<Element>(initialCapacity);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,22,super(initialCapacity);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,28,ontents = new ArrayList<Element>(elements);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,26,super(elements);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,32,ontents = elements;
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,30,super(elements);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,36,his(Arrays.asList(elements));
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,34,super(Arrays.asList(elements));
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,45,lements clone;
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,46,ry {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,47,lone = (Elements) super.clone();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,48, catch (CloneNotSupportedException e) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,49,hrow new RuntimeException(e);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,51,ist<Element> elements = new ArrayList<Element>();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,52,lone.contents = elements;
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,54,or(Element e : contents)
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,55,lements.add(e.clone());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,43,Elements clone = new Elements(size());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,45,for(Element e : this)
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,46,clone.add(e.clone());
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,70,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,60,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,83,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,73,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,97,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,87,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,109,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,99,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,121,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,111,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,133,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,123,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,145,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,135,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,157,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,147,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,182,or (Element element : contents)
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,172,for (Element element : this)
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,197,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,187,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,206,or (Element element: contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,196,for (Element element: this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,221,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,211,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,237,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,227,for (Element element : this) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,241,@Override
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,263,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,254,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,276,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,267,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,289,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,280,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,302,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,293,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,315,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,306,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,328,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,319,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,345,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,336,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,354, <p/>
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,345,* <p>
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,356, <p/>
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,357," E.g. with HTML: {@code <div><font>One</font> <font><a href=""/"">Two</a></font></div>}<br/>"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,358," {@code doc.select(""font"").unwrap();}<br/>"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,359," HTML = {@code <div>One <a href=""/"">Two</a></div>}"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,347,* </p>
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,349,"* E.g. with HTML: <p>{@code <div><font>One</font> <font><a href=""/"">Two</a></font></div>}</p>"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,350,"* <p>{@code doc.select(""font"").unwrap();}</p>"
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,351,"* <p>HTML = {@code <div>One <a href=""/"">Two</a></div>}</p>"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,365,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,357,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,383,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,375,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,402,or (Element element : contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,394,for (Element element : this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,442,eturn contents.size() > index ? new Elements(get(index)) : new Elements();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,434,return size() > index ? new Elements(get(index)) : new Elements();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,461,or (Element e: contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,453,for (Element e: this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,473,eturn contents.isEmpty() ? null : contents.get(0);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,465,return isEmpty() ? null : get(0);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,481,eturn contents.isEmpty() ? null : contents.get(contents.size() - 1);
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,473,return isEmpty() ? null : get(size() - 1);
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,492,or (Element el: contents) {
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,484,for (Element el: this) {
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,505,or (Element el: contents)
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,497,for (Element el: this)
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,511,/ implements List<Element> delegates:
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,512,ublic int size() {return contents.size();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,514,ublic boolean isEmpty() {return contents.isEmpty();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,516,ublic boolean contains(Object o) {return contents.contains(o);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,518,ublic Iterator<Element> iterator() {return contents.iterator();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,520,ublic Object[] toArray() {return contents.toArray();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,522,ublic <T> T[] toArray(T[] a) {return contents.toArray(a);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,524,ublic boolean add(Element element) {return contents.add(element);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,526,ublic boolean remove(Object o) {return contents.remove(o);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,528,ublic boolean containsAll(Collection<?> c) {return contents.containsAll(c);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,530,ublic boolean addAll(Collection<? extends Element> c) {return contents.addAll(c);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,532,"ublic boolean addAll(int index, Collection<? extends Element> c) {return contents.addAll(index, c);}"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,534,ublic boolean removeAll(Collection<?> c) {return contents.removeAll(c);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,536,ublic boolean retainAll(Collection<?> c) {return contents.retainAll(c);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,538,ublic void clear() {contents.clear();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,540,ublic boolean equals(Object o) {return contents.equals(o);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,542,ublic int hashCode() {return contents.hashCode();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,544,ublic Element get(int index) {return contents.get(index);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,546,"ublic Element set(int index, Element element) {return contents.set(index, element);}"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,548,"ublic void add(int index, Element element) {contents.add(index, element);}"
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,550,ublic Element remove(int index) {return contents.remove(index);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,552,ublic int indexOf(Object o) {return contents.indexOf(o);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,554,ublic int lastIndexOf(Object o) {return contents.lastIndexOf(o);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,556,ublic ListIterator<Element> listIterator() {return contents.listIterator();}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,558,ublic ListIterator<Element> listIterator(int index) {return contents.listIterator(index);}
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,560,"ublic List<Element> subList(int fromIndex, int toIndex) {return contents.subList(fromIndex, toIndex);}"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,28,* @return Returns <tt>true</tt> if the requirements are met or
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,29,* <tt>false</tt> otherwise
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,155,eturn element.hasAttr(key) && value.equalsIgnoreCase(element.attr(key));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,157,return element.hasAttr(key) && value.equalsIgnoreCase(element.attr(key).trim());
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,281,"f (value.startsWith(""\"""") && value.endsWith(""\"""")) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,283,"if (value.startsWith(""\"""") && value.endsWith(""\"""")"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,284,"|| value.startsWith(""'"") && value.endsWith(""'"")) {"
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,305, Evaluator for matching by sibling index number (e < idx)
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,308,* Evaluator for matching by sibling index number (e {@literal <} idx)
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,325, Evaluator for matching by sibling index number (e > idx)
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,328,* Evaluator for matching by sibling index number (e {@literal >} idx)
False,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,7, <p/>
True,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,7,* <p>
True,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,9,* </p>
False,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,7, <p/>
True,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,7,* <p>
True,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,11,* </p>
False,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,20,"ublic void head(Node node, int depth);"
True,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,21,"void head(Node node, int depth);"
False,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,29,"ublic void tail(Node node, int depth);"
True,src/main/java/org/jsoup/select/NodeVisitor.java,src/main/java/org/jsoup/select/NodeVisitor.java,30,"void tail(Node node, int depth);"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,6,import java.util.ArrayList;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,7,mport java.util.LinkedHashSet;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,8,import java.util.IdentityHashMap;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,11, <p/>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,14,* <p>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,15, <p/>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,17,* </p>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,18,* <p>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,18, <p/>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,19, <table>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,21,* </p>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,22,"* <table summary="""">"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,23, <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name></code> elements</td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,26,* <tr><td><code>ns|E</code></td><td>elements of type E in the namespace <i>ns</i></td><td><code>fb|name</code> finds <code>&lt;fb:name&gt;</code> elements</td></tr>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,30," <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named ""attr"", and value starting with ""valPrefix""</td><td><code>a[href^=http:]</code></code></td></tr>"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,33,"* <tr><td><code>[attr^=valPrefix]</code></td><td>elements with an attribute named ""attr"", and value starting with ""valPrefix""</td><td><code>a[href^=http:]</code></td></tr>"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,37, <tr><td><code>E > F</code></td><td>an F direct child of E</td><td><code>ol > li</code></td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,40,* <tr><td><code>E {@literal >} F</code></td><td>an F direct child of E</td><td><code>ol {@literal >} li</code></td></tr>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,42, <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 2 cells of each row</td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,45,* <tr><td><code>:lt(<em>n</em>)</code></td><td>elements whose sibling index is less than <em>n</em></td><td><code>td:lt(3)</code> finds the first 3 cells of each row</td></tr>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,46," <tr><td><code>:not(<em>selector</em>)</code></td><td>elements that do not match the <em>selector</em>. See also {@link Elements#not(String)}</td><td><code>div:not(.logo)</code> finds all divs that do not have the ""logo"" class.<br /><code>div:not(:has(div))</code> finds divs that do not contain divs.</code></td></tr>"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,49,"* <tr><td><code>:not(<em>selector</em>)</code></td><td>elements that do not match the <em>selector</em>. See also {@link Elements#not(String)}</td><td><code>div:not(.logo)</code> finds all divs that do not have the ""logo"" class.<p><code>div:not(:has(div))</code> finds divs that do not contain divs.</p></td></tr>"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,59, <tr><td><code>:first-child</code></td><td>elements that are the first child of some other element.</td><td><code>div > p:first-child</code></td></tr>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,60, <tr><td><code>:last-child</code></td><td>elements that are the last child of some other element.</td><td><code>ol > li:last-child</code></td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,62,* <tr><td><code>:first-child</code></td><td>elements that are the first child of some other element.</td><td><code>div {@literal >} p:first-child</code></td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,63,* <tr><td><code>:last-child</code></td><td>elements that are the last child of some other element.</td><td><code>ol {@literal >} li:last-child</code></td></tr>
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,62, <tr><td><code>:last-of-type</code></td><td>elements that are the last sibling of its type in the list of children of its parent element</td><td><code>tr > td:last-of-type</code></td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,65,* <tr><td><code>:last-of-type</code></td><td>elements that are the last sibling of its type in the list of children of its parent element</td><td><code>tr {@literal >} td:last-of-type</code></td></tr>
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,89,"private Selector(Evaluator evaluator, Element root) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,90,Validate.notNull(evaluator);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,91,Validate.notNull(root);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,93,this.evaluator = evaluator;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,94,this.root = root;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,91," @return matching elements, empty if not"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,102,"* @return matching elements, empty if none"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,103,* @throws Selector.SelectorParseException (unchecked) on an invalid CSS query.
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,110,* Find elements matching selector.
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,112,* @param evaluator CSS selector
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,113,* @param root root element to descend into
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,114,"* @return matching elements, empty if none"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,116,"public static Elements select(Evaluator evaluator, Element root) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,117,"return new Selector(evaluator, root).select();"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,102," @return matching elements, empty if not"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,125,"* @return matching elements, empty if none"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,107,inkedHashSet<Element> elements = new LinkedHashSet<Element>();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,130,Evaluator evaluator = QueryParser.parse(query);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,131,ArrayList<Element> elements = new ArrayList<Element>();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,132,"IdentityHashMap<Element, Boolean> seenElements = new IdentityHashMap<Element, Boolean>();"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,133,"// dedupe elements by identity, not equality"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,110,"lements.addAll(select(query, root));"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,136,"final Elements found = select(evaluator, root);"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,137,for (Element el : found) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,138,if (!seenElements.containsKey(el)) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,139,elements.add(el);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,140,"seenElements.put(el, Boolean.TRUE);"
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,30,@Override
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,45,@Override
False,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,59,hile (parent != root) {
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,61,while (true) {
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,64,if (parent == root)
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,65,break;
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,71,@Override
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,90,@Override
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,116,@Override
True,src/main/java/org/jsoup/select/StructuralEvaluator.java,src/main/java/org/jsoup/select/StructuralEvaluator.java,135,@Override
True,src/test/java/org/jsoup/TextUtil.java,src/test/java/org/jsoup/TextUtil.java,8,"public static final String LE = String.format(""%n"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,3,import java.io.File;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,4,import java.io.IOException;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,5,import java.io.UnsupportedEncodingException;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,7,import org.jsoup.Jsoup;
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,10,mport static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,15,import static org.jsoup.integration.ParseTest.getFile;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,16,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,73,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,74,public void generatesMimeBoundaries() {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,75,String m1 = DataUtil.mimeBoundary();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,76,String m2 = DataUtil.mimeBoundary();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,78,"assertEquals(DataUtil.boundaryLength, m1.length());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,79,"assertEquals(DataUtil.boundaryLength, m2.length());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,80,"assertNotSame(m1, m2);"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,83,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,84,public void wrongMetaCharsetFallback() {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,85,try {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,86,"final byte[] input = ""<html><head><meta charset=iso-8></head><body></body></html>"".getBytes(""UTF-8"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,87,final ByteBuffer inBuffer = ByteBuffer.wrap(input);
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,89,"Document doc = DataUtil.parseByteData(inBuffer, null, ""http://example.com"", Parser.htmlParser());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,91,"final String expected = ""<html>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,92,""" <head>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,93,"""  <meta charset=\""iso-8\"">\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,94,""" </head>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,95,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,96,"""</html>"";"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,98,"assertEquals(expected, doc.toString());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,99,} catch( UnsupportedEncodingException ex ) {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,100,fail(ex.getMessage());
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,104,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,105,public void supportsBOMinFiles() throws IOException {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,106,// test files from http://www.i18nl10n.com/korean/utftest/
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,107,"File in = getFile(""/bomtests/bom_utf16be.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,108,"Document doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,109,"assertTrue(doc.title().contains(""UTF-16BE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,110,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,112,"in = getFile(""/bomtests/bom_utf16le.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,113,"doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,114,"assertTrue(doc.title().contains(""UTF-16LE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,115,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,117,"in = getFile(""/bomtests/bom_utf32be.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,118,"doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,119,"assertTrue(doc.title().contains(""UTF-32BE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,120,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,122,"in = getFile(""/bomtests/bom_utf32le.html"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,123,"doc = Jsoup.parse(in, null, ""http://example.com"");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,124,"assertTrue(doc.title().contains(""UTF-32LE""));"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,125,"assertTrue(doc.text().contains(""가각갂갃간갅""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,5,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,55,@Test public void sameHeadersCombineWithComma() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,56,"Map<String, List<String>> headers = new HashMap<String, List<String>>();"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,57,List<String> values = new ArrayList<String>();
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,58,"values.add(""no-cache"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,59,"values.add(""no-store"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,60,"headers.put(""Cache-Control"", values);"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,61,HttpConnection.Response res = new HttpConnection.Response();
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,62,res.processResponseHeaders(headers);
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,63,"assertEquals(""no-cache, no-store"", res.header(""Cache-Control""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,155,@Test public void inputStream() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,156,"Connection.KeyVal kv = HttpConnection.KeyVal.create(""file"", ""thumb.jpg"", ParseTest.inputStreamFrom(""Check""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,157,"assertEquals(""file"", kv.key());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,158,"assertEquals(""thumb.jpg"", kv.value());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,159,assertTrue(kv.hasInputStream());
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,161,"kv = HttpConnection.KeyVal.create(""one"", ""two"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,162,"assertEquals(""one"", kv.key());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,163,"assertEquals(""two"", kv.value());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,164,assertFalse(kv.hasInputStream());
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,8,import static org.jsoup.helper.StringUtil.*;
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,15,"ssertEquals("""", StringUtil.join(Arrays.<String>asList(""""), "" ""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,16,"ssertEquals(""one"", StringUtil.join(Arrays.<String>asList(""one""), "" ""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,17,"ssertEquals(""one two three"", StringUtil.join(Arrays.<String>asList(""one"", ""two"", ""three""), "" ""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,16,"assertEquals("""", StringUtil.join(Arrays.asList(""""), "" ""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,17,"assertEquals(""one"", StringUtil.join(Arrays.asList(""one""), "" ""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,18,"assertEquals(""one two three"", StringUtil.join(Arrays.asList(""one"", ""two"", ""three""), "" ""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,61,"ssertEquals("" "", StringUtil.normaliseWhitespace(""    \r \n \r\n""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,62,"ssertEquals("" hello there "", StringUtil.normaliseWhitespace(""   hello   \r \n  there    \n""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,63,"ssertEquals(""hello"", StringUtil.normaliseWhitespace(""hello""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,64,"ssertEquals(""hello there"", StringUtil.normaliseWhitespace(""hello\nthere""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,62,"assertEquals("" "", normaliseWhitespace(""    \r \n \r\n""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,63,"assertEquals("" hello there "", normaliseWhitespace(""   hello   \r \n  there    \n""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,64,"assertEquals(""hello"", normaliseWhitespace(""hello""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,65,"assertEquals(""hello there"", normaliseWhitespace(""hello\nthere""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,71,"ssertEquals(test71540charsExpectedSingleWhitespace, StringUtil.normaliseWhitespace(test71540chars));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,72,"assertEquals(test71540charsExpectedSingleWhitespace, normaliseWhitespace(test71540chars));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,77,@Test public void resolvesRelativeUrls() {
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,78,"assertEquals(""http://example.com/one/two?three"", resolve(""http://example.com"", ""./one/two?three""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,79,"assertEquals(""http://example.com/one/two?three"", resolve(""http://example.com?one"", ""./one/two?three""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,80,"assertEquals(""http://example.com/one/two?three#four"", resolve(""http://example.com"", ""./one/two?three#four""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,81,"assertEquals(""https://example.com/one"", resolve(""http://example.com/"", ""https://example.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,82,"assertEquals(""http://example.com/one/two.html"", resolve(""http://example.com/two/"", ""../one/two.html""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,83,"assertEquals(""https://example2.com/one"", resolve(""https://example.com/"", ""//example2.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,84,"assertEquals(""https://example.com:8080/one"", resolve(""https://example.com:8080"", ""./one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,85,"assertEquals(""https://example2.com/one"", resolve(""http://example.com/"", ""https://example2.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,86,"assertEquals(""https://example.com/one"", resolve(""wrong"", ""https://example.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,87,"assertEquals(""https://example.com/one"", resolve(""https://example.com/one"", """"));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,88,"assertEquals("""", resolve(""wrong"", ""also wrong""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,89,"assertEquals(""ftp://example.com/one"", resolve(""ftp://example.com/two/"", ""../one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,90,"assertEquals(""ftp://example.com/one/two.c"", resolve(""ftp://example.com/one/"", ""./two.c""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,91,"assertEquals(""ftp://example.com/one/two.c"", resolve(""ftp://example.com/one/"", ""two.c""));"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,1,package org.jsoup.helper;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,3,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,4,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,5,import org.junit.Test;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,6,import org.w3c.dom.Document;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,7,import org.w3c.dom.Node;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,9,import java.io.File;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,10,import java.io.IOException;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,12,import static org.jsoup.TextUtil.LE;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,13,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,14,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,16,public class W3CDomTest {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,17,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,18,public void simpleConversion() {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,19,"String html = ""<html><head><title>W3c</title></head><body><p class='one' id=12>Text</p><!-- comment --><invalid>What<script>alert('!')"";"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,20,org.jsoup.nodes.Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,22,W3CDom w3c = new W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,23,Document wDoc = w3c.fromJsoup(doc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,24,String out = w3c.asString(wDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,25,assertEquals(
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,26,"""<html>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,27,"""<head>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,28,"""<META http-equiv=\""Content-Type\"" content=\""text/html; charset=UTF-8\"">"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,29,"""<title>W3c</title>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,30,"""</head>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,31,"""<body>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,32,"""<p class=\""one\"" id=\""12\"">Text</p>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,33,"""<!-- comment -->"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,34,"""<invalid>What<script>alert('!')</script>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,35,"""</invalid>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,36,"""</body>"" + LE +"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,37,"""</html>"" + LE"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,38,", out);"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,41,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,42,public void convertsGoogle() throws IOException {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,43,"File in = ParseTest.getFile(""/htmltests/google-ipod.html"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,44,"org.jsoup.nodes.Document doc = Jsoup.parse(in, ""UTF8"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,46,W3CDom w3c = new W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,47,Document wDoc = w3c.fromJsoup(doc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,48,Node htmlEl = wDoc.getChildNodes().item(0);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,49,"assertEquals(null, htmlEl.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,50,"assertEquals(""html"", htmlEl.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,51,"assertEquals(""html"", htmlEl.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,53,String out = w3c.asString(wDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,54,"assertTrue(out.contains(""ipod""));"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,57,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,58,public void namespacePreservation() throws IOException {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,59,"File in = ParseTest.getFile(""/htmltests/namespaces.xhtml"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,60,org.jsoup.nodes.Document jsoupDoc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,61,"jsoupDoc = Jsoup.parse(in, ""UTF-8"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,63,Document doc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,64,org.jsoup.helper.W3CDom jDom = new org.jsoup.helper.W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,65,doc = jDom.fromJsoup(jsoupDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,67,Node htmlEl = doc.getChildNodes().item(0);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,68,"assertEquals(""http://www.w3.org/1999/xhtml"", htmlEl.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,69,"assertEquals(""html"", htmlEl.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,70,"assertEquals(""html"", htmlEl.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,72,Node epubTitle = htmlEl.getChildNodes().item(2).getChildNodes().item(3);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,73,"assertEquals(""http://www.idpf.org/2007/ops"", epubTitle.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,74,"assertEquals(""title"", epubTitle.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,75,"assertEquals(""epub:title"", epubTitle.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,77,Node xSection = epubTitle.getNextSibling().getNextSibling();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,78,"assertEquals(""urn:test"", xSection.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,79,"assertEquals(""section"", xSection.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,80,"assertEquals(""x:section"", xSection.getNodeName());"
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,ublic File getFile(String resourceName) {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,public static File getFile(String resourceName) {
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,180,rivate InputStream inputStreamFrom(String s) {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,180,public static InputStream inputStreamFrom(String s) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,7,import org.jsoup.helper.StringUtil;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,8,import org.jsoup.helper.W3CDom;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,10,import org.jsoup.nodes.FormElement;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,11,import org.jsoup.parser.HtmlTreeBuilder;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,12,import org.jsoup.parser.Parser;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,13,import org.jsoup.parser.XmlTreeBuilder;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,17,import java.io.File;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,18,import java.io.FileInputStream;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,12,mport java.net.MalformedURLException;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,13,mport java.net.URL;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,20,import java.net.*;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,16,mport static org.junit.Assert.assertEquals;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,17,mport static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,23,import static org.hamcrest.core.Is.is;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,24,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,32,"private static final String WEBSITE_WITH_INVALID_CERTIFICATE = ""https://certs.cac.washington.edu/CAtest/"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,33,"private static final String WEBSITE_WITH_SNI = ""https://jsoup.org/"";"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,29,"tring url = ""http://www.google.com""; // no trailing / to force redir"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,38,"String url = ""http://jsoup.org""; // no trailing / to force redir"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,31,"ssertTrue(doc.title().contains(""Google""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,40,"assertTrue(doc.title().contains(""jsoup""));"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,54,"tring url = ""http://jsoup.org/rez/osi_logo.png""; // not text/* but image/png, should throw"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,63,"String url = ""http://direct.jsoup.org/rez/osi_logo.png""; // not text/* but image/png, should throw"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,60,"ssertEquals(""org.jsoup.UnsupportedMimeTypeException: Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml. Mimetype=image/png, URL=http://jsoup.org/rez/osi_logo.png"", e.toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,69,"assertEquals(""org.jsoup.UnsupportedMimeTypeException: Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml. Mimetype=image/png, URL=http://direct.jsoup.org/rez/osi_logo.png"", e.toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,125,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,126,public void doesPut() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,127,Connection.Response res = Jsoup.connect(echoURL)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,128,".data(""uname"", ""Jsoup"", ""uname"", ""Jonathan"", ""百"", ""度一下"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,129,".cookie(""auth"", ""token"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,130,.method(Connection.Method.PUT)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,131,.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,133,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,134,"assertEquals(""PUT"", ihVal(""REQUEST_METHOD"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,135,"//assertEquals(""gzip"", ihVal(""HTTP_ACCEPT_ENCODING"", doc)); // current proxy removes gzip on post"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,136,"assertEquals(""auth=token"", ihVal(""HTTP_COOKIE"", doc));"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,155,"onnection con = Jsoup.connect(""http://direct.infohound.net/tools/302-rel.pl""); // to ./ - /tools/"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,179,"Connection con = Jsoup.connect(""http://direct.infohound.net/tools/302-rel.pl""); // to /tidy/"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,184,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,185,public void followsRelativeDotRedirect() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,186,"// redirects to ""./ok.html"", should resolve to http://direct.infohound.net/tools/ok.html"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,187,"Connection con = Jsoup.connect(""http://direct.infohound.net/tools/302-rel-dot.pl""); // to ./ok.html"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,188,Document doc = con.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,189,"assertTrue(doc.title().contains(""OK""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,190,"assertEquals(doc.location(), ""http://direct.infohound.net/tools/ok.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,193,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,194,public void followsRelativeDotRedirect2() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,195,"//redirects to ""esportspenedes.cat/./ep/index.php"", should resolve to ""esportspenedes.cat/ep/index.php"""
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,196,"Connection con = Jsoup.connect(""http://esportspenedes.cat"")  // note lack of trailing / - server should redir to / first, then to ./ep/...; but doesn't'"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,197,.timeout(10000);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,198,Document doc = con.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,199,"assertEquals(doc.location(), ""http://esportspenedes.cat/ep/index.php"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,242,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,243,public void ignores500tExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,244,"Connection con = Jsoup.connect(""http://direct.infohound.net/tools/500.pl"").ignoreHttpErrors(true);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,245,Connection.Response res = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,246,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,247,"assertEquals(500, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,248,"assertEquals(""Application Error"", res.statusMessage());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,249,"assertEquals(""Woops"", doc.select(""h1"").first().text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,252,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,253,public void ignores500NoWithContentExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,254,"Connection con = Jsoup.connect(""http://direct.infohound.net/tools/500-no-content.pl"").ignoreHttpErrors(true);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,255,Connection.Response res = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,256,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,257,"assertEquals(500, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,258,"assertEquals(""Application Error"", res.statusMessage());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,261,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,262,public void ignores200NoWithContentExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,263,"Connection con = Jsoup.connect(""http://direct.infohound.net/tools/200-no-content.pl"").ignoreHttpErrors(true);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,264,Connection.Response res = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,265,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,266,"assertEquals(200, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,267,"assertEquals(""All Good"", res.statusMessage());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,214,"ssertEquals(""uid=jhy; token=asdfg123"", ihVal(""HTTP_COOKIE"", doc)); // confirms that redirected hit saw cookie"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,284,"assertEquals(""token=asdfg123; uid=jhy"", ihVal(""HTTP_COOKIE"", doc)); // confirms that redirected hit saw cookie"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,241,"ssertEquals(""uid=jhy; token=asdfg123"", ihVal(""HTTP_COOKIE"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,311,"assertEquals(""token=asdfg123; uid=jhy"", ihVal(""HTTP_COOKIE"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,352,* Verify that security disabling feature works properly.
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,353,* <p/>
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,354,* 1. try to hit url with invalid certificate and evaluate that exception is thrown
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,356,* @throws Exception
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,358,@Test(expected = IOException.class)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,359,public void testUnsafeFail() throws Exception {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,360,String url = WEBSITE_WITH_INVALID_CERTIFICATE;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,361,Jsoup.connect(url).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,366,* Verify that requests to websites with SNI fail on jdk 1.6
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,367,* <p/>
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,368,* read for more details:
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,369,* http://en.wikipedia.org/wiki/Server_Name_Indication
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,371,* Test is ignored independent from others as it requires JDK 1.6
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,372,* @throws Exception
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,374,@Test(expected = IOException.class)
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,375,public void testSNIFail() throws Exception {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,376,String url = WEBSITE_WITH_SNI;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,377,Jsoup.connect(url).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,381,* Verify that requests to websites with SNI pass
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,382,* <p/>
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,383,* <b>NB!</b> this test is FAILING right now on jdk 1.6
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,385,* @throws Exception
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,387,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,388,public void testSNIPass() throws Exception {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,389,String url = WEBSITE_WITH_SNI;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,390,Connection.Response defaultRes = Jsoup.connect(url).validateTLSCertificates(false).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,391,"assertThat(defaultRes.statusCode(), is(200));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,395,* Verify that security disabling feature works properly.
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,396,* <p/>
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,397,* 1. disable security checks and call the same url to verify that content is consumed correctly
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,399,* @throws Exception
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,401,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,402,public void testUnsafePass() throws Exception {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,403,String url = WEBSITE_WITH_INVALID_CERTIFICATE;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,404,Connection.Response defaultRes = Jsoup.connect(url).validateTLSCertificates(false).execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,405,"assertThat(defaultRes.statusCode(), is(200));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,456,"* Test fetching a form, and submitting it with a file attached."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,458,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,459,public void postHtmlFile() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,460,"Document index = Jsoup.connect(""http://direct.infohound.net/tidy/"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,461,"FormElement form = index.select(""[name=tidy]"").forms().get(0);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,462,Connection post = form.submit();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,464,"File uploadFile = ParseTest.getFile(""/htmltests/google-ipod.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,465,FileInputStream stream = new FileInputStream(uploadFile);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,467,// todo: need to add a better way to get an existing data field
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,468,for (Connection.KeyVal keyVal : post.request().data()) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,469,"if (keyVal.key().equals(""_file"")) {"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,470,"keyVal.value(""check.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,471,keyVal.inputStream(stream);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,475,Connection.Response res;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,476,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,477,res = post.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,478,} finally {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,479,stream.close();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,482,Document out = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,483,"assertTrue(out.text().contains(""HTML Tidy Complete""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,487,* Tests upload of binary content to a remote service.
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,489,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,490,public void postJpeg() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,491,"File thumb = ParseTest.getFile(""/htmltests/thumb.jpg"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,492,Document result = Jsoup
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,493,".connect(""http://regex.info/exif.cgi"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,494,".data(""f"", thumb.getName(), new FileInputStream(thumb))"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,495,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,497,"assertEquals(""Baseline DCT, Huffman coding"", result.select(""td:contains(Process) + td"").text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,500,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,501,public void handles201Created() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,502,"Document doc = Jsoup.connect(""http://direct.infohound.net/tools/201.pl"").get(); // 201, location=jsoup"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,503,"assertEquals(""http://jsoup.org"", doc.location());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,506,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,507,public void fetchToW3c() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,508,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,509,Document doc = Jsoup.connect(url).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,511,W3CDom dom = new W3CDom();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,512,org.w3c.dom.Document wDoc = dom.fromJsoup(doc);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,513,"assertEquals(url, wDoc.getDocumentURI());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,514,String html = dom.asString(wDoc);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,515,"assertTrue(html.contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,518,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,519,public void fetchHandlesXml() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,520,"// should auto-detect xml and use XML parser, unless explicitly requested the html parser"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,521,"String xmlUrl = ""http://direct.infohound.net/tools/parse-xml.xml"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,522,Connection con = Jsoup.connect(xmlUrl);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,523,Document doc = con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,524,Connection.Request req = con.request();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,525,assertTrue(req.parser().getTreeBuilder() instanceof XmlTreeBuilder);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,526,"assertEquals(""<xml> <link> one </link> <table> Two </table> </xml>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,529,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,530,public void fetchHandlesXmlAsHtmlWhenParserSet() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,531,"// should auto-detect xml and use XML parser, unless explicitly requested the html parser"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,532,"String xmlUrl = ""http://direct.infohound.net/tools/parse-xml.xml"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,533,Connection con = Jsoup.connect(xmlUrl).parser(Parser.htmlParser());
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,534,Document doc = con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,535,Connection.Request req = con.request();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,536,assertTrue(req.parser().getTreeBuilder() instanceof HtmlTreeBuilder);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,537,"assertEquals(""<html> <head></head> <body> <xml> <link>one <table> Two </table> </xml> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,540,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,541,public void combinesSameHeadersWithComma() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,542,// http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,543,"String url = ""http://direct.infohound.net/tools/q.pl"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,544,Connection con = Jsoup.connect(url);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,545,con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,547,"assertEquals(""text/html"", con.response().header(""Content-Type""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,548,"assertEquals(""no-cache, no-store"", con.response().header(""Cache-Control""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,551,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,552,public void sendHeadRequest() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,553,"String url = ""http://direct.infohound.net/tools/parse-xml.xml"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,554,Connection con = Jsoup.connect(url).method(Connection.Method.HEAD);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,555,final Connection.Response response = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,556,"assertEquals(""text/xml"", response.header(""Content-Type""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,557,"assertEquals("""", response.body()); // head ought to have no body"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,558,Document doc = response.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,559,"assertEquals("""", doc.text());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,564,"Proxy tests. Assumes local proxy running on 8888, without system propery set (so that specifying it is required)."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,567,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,568,public void fetchViaHttpProxy() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,569,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,570,"Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(""localhost"", 8888));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,571,Document doc = Jsoup.connect(url).proxy(proxy).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,572,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,575,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,576,public void fetchViaHttpProxySetByArgument() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,577,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,578,"Document doc = Jsoup.connect(url).proxy(""localhost"", 8888).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,579,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,582,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,583,public void invalidProxyFails() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,584,boolean caught = false;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,585,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,586,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,587,"Document doc = Jsoup.connect(url).proxy(""localhost"", 8889).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,588,} catch (IOException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,589,caught = e instanceof ConnectException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,591,assertTrue(caught);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,594,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,595,public void proxyGetAndSet() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,596,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,597,"Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(""localhost"", 8889)); // invalid"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,598,final Connection con = Jsoup.connect(url).proxy(proxy);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,600,assert con.request().proxy() == proxy;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,601,con.request().proxy(null); // disable
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,602,Document doc = con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,603,"assertTrue(doc.title().contains(""jsoup"")); // would fail if actually went via proxy"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,3,mport java.io.File;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,4,mport java.io.IOException;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,5,mport java.io.StringWriter;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,11,mport org.junit.Test;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,7,import org.jsoup.nodes.Document.OutputSettings.Syntax;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,9,import org.junit.Test;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,11,import java.io.ByteArrayInputStream;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,12,import java.io.File;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,13,import java.io.IOException;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,14,import java.io.InputStream;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,15,import java.io.StringWriter;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,16,import java.nio.charset.Charset;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,14,mport static org.jsoup.nodes.Document.OutputSettings.Syntax;
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,15,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,18,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,19,import static org.junit.Assert.assertFalse;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,20,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,21,import static org.junit.Assert.assertNull;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,22,import static org.junit.Assert.assertTrue;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,29,"private static final String charsetUtf8 = ""UTF-8"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,30,"private static final String charsetIso8859 = ""ISO-8859-1"";"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,52,"ssertEquals(""UTF-8"", doc.outputSettings().charset().displayName());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,63,"assertEquals(""UTF-8"", doc.outputSettings().charset().name());"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,70,"ssertEquals(""<html><head><script>one</script><noscript></noscript></head><body><p>two</p><p>three</p><p>four</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,81,"assertEquals(""<html><head><script>one</script><noscript>&lt;p&gt;two</noscript></head><body><p>three</p><p>four</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,89,"ssertEquals(""<!DOCTYPE html><html><head><title>Doctype test</title></head><body></body></html>"","
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,100,"assertEquals(""<!doctype html><html><head><title>Doctype test</title></head><body></body></html>"","
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,113,"ssertEquals(""<!DOCTYPE html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,124,"assertEquals(""<!doctype html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,172,@Test public void DocumentsWithSameContentAreEqual() throws Exception {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,173,"Document docA = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,174,"Document docB = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,175,"Document docC = Jsoup.parse(""<div/>Two"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,177,assertFalse(docA.equals(docB));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,178,assertTrue(docA.equals(docA));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,179,"assertEquals(docA.hashCode(), docA.hashCode());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,180,assertFalse(docA.hashCode() == docC.hashCode());
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,183,@Test public void DocumentsWithSameContentAreVerifialbe() throws Exception {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,184,"Document docA = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,185,"Document docB = Jsoup.parse(""<div/>One"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,186,"Document docC = Jsoup.parse(""<div/>Two"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,188,assertTrue(docA.hasSameValue(docB));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,189,assertFalse(docA.hasSameValue(docC));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,192,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,193,public void testMetaCharsetUpdateUtf8() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,194,"final Document doc = createHtmlDocument(""changeThis"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,195,doc.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,196,doc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,198,"final String htmlCharsetUTF8 = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,199,""" <head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,200,"""  <meta charset=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,201,""" </head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,202,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,203,"""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,204,"assertEquals(htmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,206,"Element selectedElement = doc.select(""meta[charset]"").first();"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,207,"assertEquals(charsetUtf8, doc.charset().name());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,208,"assertEquals(charsetUtf8, selectedElement.attr(""charset""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,209,"assertEquals(doc.charset(), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,212,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,213,public void testMetaCharsetUpdateIso8859() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,214,"final Document doc = createHtmlDocument(""changeThis"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,215,doc.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,216,doc.charset(Charset.forName(charsetIso8859));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,218,"final String htmlCharsetISO = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,219,""" <head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,220,"""  <meta charset=\"""" + charsetIso8859 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,221,""" </head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,222,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,223,"""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,224,"assertEquals(htmlCharsetISO, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,226,"Element selectedElement = doc.select(""meta[charset]"").first();"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,227,"assertEquals(charsetIso8859, doc.charset().name());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,228,"assertEquals(charsetIso8859, selectedElement.attr(""charset""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,229,"assertEquals(doc.charset(), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,232,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,233,public void testMetaCharsetUpdateNoCharset() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,234,"final Document docNoCharset = Document.createShell("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,235,docNoCharset.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,236,docNoCharset.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,238,"assertEquals(charsetUtf8, docNoCharset.select(""meta[charset]"").first().attr(""charset""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,240,"final String htmlCharsetUTF8 = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,241,""" <head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,242,"""  <meta charset=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,243,""" </head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,244,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,245,"""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,246,"assertEquals(htmlCharsetUTF8, docNoCharset.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,249,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,250,public void testMetaCharsetUpdateDisabled() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,251,"final Document docDisabled = Document.createShell("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,253,"final String htmlNoCharset = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,254,""" <head></head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,255,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,256,"""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,257,"assertEquals(htmlNoCharset, docDisabled.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,258,"assertNull(docDisabled.select(""meta[charset]"").first());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,261,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,262,public void testMetaCharsetUpdateDisabledNoChanges() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,263,"final Document doc = createHtmlDocument(""dontTouch"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,265,"final String htmlCharset = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,266,""" <head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,267,"""  <meta charset=\""dontTouch\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,268,"""  <meta name=\""charset\"" content=\""dontTouch\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,269,""" </head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,270,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,271,"""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,272,"assertEquals(htmlCharset, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,274,"Element selectedElement = doc.select(""meta[charset]"").first();"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,275,assertNotNull(selectedElement);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,276,"assertEquals(""dontTouch"", selectedElement.attr(""charset""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,278,"selectedElement = doc.select(""meta[name=charset]"").first();"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,279,assertNotNull(selectedElement);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,280,"assertEquals(""dontTouch"", selectedElement.attr(""content""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,283,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,284,public void testMetaCharsetUpdateEnabledAfterCharsetChange() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,285,"final Document doc = createHtmlDocument(""dontTouch"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,286,doc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,288,"Element selectedElement = doc.select(""meta[charset]"").first();"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,289,"assertEquals(charsetUtf8, selectedElement.attr(""charset""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,290,"assertTrue(doc.select(""meta[name=charset]"").isEmpty());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,293,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,294,public void testMetaCharsetUpdateCleanup() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,295,"final Document doc = createHtmlDocument(""dontTouch"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,296,doc.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,297,doc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,299,"final String htmlCharsetUTF8 = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,300,""" <head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,301,"""  <meta charset=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,302,""" </head>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,303,""" <body></body>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,304,"""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,306,"assertEquals(htmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,309,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,310,public void testMetaCharsetUpdateXmlUtf8() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,311,"final Document doc = createXmlDocument(""1.0"", ""changeThis"", true);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,312,doc.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,313,doc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,315,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,316,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,317,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,318,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,319,"assertEquals(xmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,321,XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,322,"assertEquals(charsetUtf8, doc.charset().name());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,323,"assertEquals(charsetUtf8, selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,324,"assertEquals(doc.charset(), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,327,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,328,public void testMetaCharsetUpdateXmlIso8859() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,329,"final Document doc = createXmlDocument(""1.0"", ""changeThis"", true);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,330,doc.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,331,doc.charset(Charset.forName(charsetIso8859));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,333,"final String xmlCharsetISO = ""<?xml version=\""1.0\"" encoding=\"""" + charsetIso8859 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,334,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,335,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,336,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,337,"assertEquals(xmlCharsetISO, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,339,XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,340,"assertEquals(charsetIso8859, doc.charset().name());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,341,"assertEquals(charsetIso8859, selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,342,"assertEquals(doc.charset(), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,345,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,346,public void testMetaCharsetUpdateXmlNoCharset() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,347,"final Document doc = createXmlDocument(""1.0"", ""none"", false);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,348,doc.updateMetaCharsetElement(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,349,doc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,351,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,352,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,353,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,354,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,355,"assertEquals(xmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,357,XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,358,"assertEquals(charsetUtf8, selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,361,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,362,public void testMetaCharsetUpdateXmlDisabled() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,363,"final Document doc = createXmlDocument(""none"", ""none"", false);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,365,"final String xmlNoCharset = ""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,366,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,367,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,368,"assertEquals(xmlNoCharset, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,371,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,372,public void testMetaCharsetUpdateXmlDisabledNoChanges() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,373,"final Document doc = createXmlDocument(""dontTouch"", ""dontTouch"", true);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,375,"final String xmlCharset = ""<?xml version=\""dontTouch\"" encoding=\""dontTouch\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,376,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,377,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,378,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,379,"assertEquals(xmlCharset, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,381,XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,382,"assertEquals(""dontTouch"", selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,383,"assertEquals(""dontTouch"", selectedNode.attr(""version""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,386,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,387,public void testMetaCharsetUpdatedDisabledPerDefault() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,388,"final Document doc = createHtmlDocument(""none"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,389,assertFalse(doc.updateMetaCharsetElement());
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,392,private Document createHtmlDocument(String charset) {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,393,"final Document doc = Document.createShell("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,394,"doc.head().appendElement(""meta"").attr(""charset"", charset);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,395,"doc.head().appendElement(""meta"").attr(""name"", ""charset"").attr(""content"", charset);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,397,return doc;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,400,"private Document createXmlDocument(String version, String charset, boolean addDecl) {"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,401,"final Document doc = new Document("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,402,"doc.appendElement(""root"").text(""node"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,403,doc.outputSettings().syntax(Syntax.xml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,405,if( addDecl == true ) {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,406,"XmlDeclaration decl = new XmlDeclaration(""xml"", """", false);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,407,"decl.attr(""version"", version);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,408,"decl.attr(""encoding"", charset);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,409,doc.prependChild(decl);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,412,return doc;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,415,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,416,public void testShiftJisRoundtrip() throws Exception {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,417,String input =
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,418,"""<html>"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,419,"+   ""<head>"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,420,"+     ""<meta http-equiv=\""content-type\"" content=\""text/html; charset=Shift_JIS\"" />"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,421,"+   ""</head>"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,422,"+   ""<body>"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,423,"+     ""before&nbsp;after"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,424,"+   ""</body>"""
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,425,"+ ""</html>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,426,"InputStream is = new ByteArrayInputStream(input.getBytes(Charset.forName(""ASCII"")));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,428,"Document doc = Jsoup.parse(is, null, ""http://example.com"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,429,doc.outputSettings().escapeMode(Entities.EscapeMode.xhtml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,431,"String output = new String(doc.html().getBytes(doc.outputSettings().charset()), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,433,"assertFalse(""Should not have contained a '?'."", output.contains(""?""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,434,"assertTrue(""Should have contained a '&#xa0;' or a '&nbsp;'."","
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,435,"output.contains(""&#xa0;"") || output.contains(""&nbsp;""));"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,30,"ssertEquals(""<!DOCTYPE html>"", html5.outerHtml());"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,30,"assertEquals(""<!doctype html>"", html5.outerHtml());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,5,mport org.jsoup.helper.StringUtil;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,10,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,9,import java.util.*;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,12,mport java.util.ArrayList;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,13,mport java.util.List;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,14,mport java.util.Set;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,15,mport java.util.Map;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,11,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,115,@Test public void testGetSiblingsWithDuplicateContent() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,116,"Document doc = Jsoup.parse(""<div><p>Hello<p id=1>there<p>this<p>this<p>is<p>an<p id=last>element</div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,117,"Element p = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,118,"assertEquals(""there"", p.text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,119,"assertEquals(""Hello"", p.previousElementSibling().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,120,"assertEquals(""this"", p.nextElementSibling().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,121,"assertEquals(""this"", p.nextElementSibling().nextElementSibling().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,122,"assertEquals(""is"", p.nextElementSibling().nextElementSibling().nextElementSibling().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,123,"assertEquals(""Hello"", p.firstElementSibling().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,124,"assertEquals(""element"", p.lastElementSibling().text());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,147,@Test public void testElementSiblingIndexSameContent() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,148,"Document doc = Jsoup.parse(""<div><p>One</p>...<p>One</p>...<p>One</p>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,149,"Elements ps = doc.select(""p"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,150,assertTrue(0 == ps.get(0).elementSiblingIndex());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,151,assertTrue(1 == ps.get(1).elementSiblingIndex());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,152,assertTrue(2 == ps.get(2).elementSiblingIndex());
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,185,"ocument doc = Jsoup.parse(""<div><span class='mellow yellow'>Hello <b>Yellow</b></span></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,201,"Document doc = Jsoup.parse(""<div><span class=' mellow yellow '>Hello <b>Yellow</b></span></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,213,classes = doc.classNames();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,214,"assertEquals(0, classes.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,313,@Test public void testAddBooleanAttribute() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,314,"Element div = new Element(Tag.valueOf(""div""), """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,316,"div.attr(""true"", true);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,318,"div.attr(""false"", ""value"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,319,"div.attr(""false"", false);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,321,"assertTrue(div.hasAttr(""true""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,322,"assertEquals("""", div.attr(""true""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,324,List<Attribute> attributes = div.attributes().asList();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,325,"assertEquals(""There should be one attribute"", 1, attributes.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,326,"assertTrue(""Attribute should be boolean"", attributes.get(0) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,328,"assertFalse(div.hasAttr(""false""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,330,"assertEquals(""<div true></div>"", div.outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,378,@Test(expected = IllegalArgumentException.class) public void testThrowsOnAddNullText() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,379,"Document doc = Jsoup.parse(""<div id=1><p>Hello</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,380,"Element div = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,381,div.appendText(null);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,384,@Test(expected = IllegalArgumentException.class)  public void testThrowsOnPrependNullText() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,385,"Document doc = Jsoup.parse(""<div id=1><p>Hello</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,386,"Element div = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,387,div.prependText(null);
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,394,"ssertEquals(""<div><div class=\""head\""><div><div class=\""foo\""><p>Hello</p></div><p>What?</p></div></div><p>There</p></div>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,444,"assertEquals(""<div><div class=\""head\""><div><div class=\""foo\""><p>Hello</p></div><p>What?</p></div></div><p>There</p></div>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,764,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,765,public void testClassNames() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,766,"Document doc = Jsoup.parse(""<div class=\""c1 c2\"">C</div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,767,"Element div = doc.select(""div"").get(0);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,769,"assertEquals(""c1 c2"", div.className());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,771,final Set<String> set1 = div.classNames();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,772,final Object[] arr1 = set1.toArray();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,773,assertTrue(arr1.length==2);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,774,"assertEquals(""c1"", arr1[0]);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,775,"assertEquals(""c2"", arr1[1]);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,777,// Changes to the set should not be reflected in the Elements getters
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,778,"set1.add(""c3"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,779,assertTrue(2==div.classNames().size());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,780,"assertEquals(""c1 c2"", div.className());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,782,// Update the class names to a fresh set
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,783,final Set<String> newSet = new LinkedHashSet<String>(3);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,784,newSet.addAll(set1);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,785,"newSet.add(""c3"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,787,div.classNames(newSet);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,790,"assertEquals(""c1 c2 c3"", div.className());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,792,final Set<String> set2 = div.classNames();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,793,final Object[] arr2 = set2.toArray();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,794,assertTrue(arr2.length==3);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,795,"assertEquals(""c1"", arr2[0]);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,796,"assertEquals(""c2"", arr2[1]);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,797,"assertEquals(""c3"", arr2[2]);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,800,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,801,public void testHashAndEqualsAndValue() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,802,// .equals and hashcode are identity. value is content.
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,804,"String doc1 = ""<div id=1><p class=one>One</p><p class=one>One</p><p class=one>Two</p><p class=two>One</p></div>"" +"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,805,"""<div id=2><p class=one>One</p><p class=one>One</p><p class=one>Two</p><p class=two>One</p></div>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,807,Document doc = Jsoup.parse(doc1);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,808,"Elements els = doc.select(""p"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,811,for (Element el : els) {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,812,"System.out.println(el.hashCode() + "" - "" + el.outerHtml());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,815,"0 1534787905 - <p class=""one"">One</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,816,"1 1534787905 - <p class=""one"">One</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,817,"2 1539683239 - <p class=""one"">Two</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,818,"3 1535455211 - <p class=""two"">One</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,819,"4 1534787905 - <p class=""one"">One</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,820,"5 1534787905 - <p class=""one"">One</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,821,"6 1539683239 - <p class=""one"">Two</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,822,"7 1535455211 - <p class=""two"">One</p>"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,824,"assertEquals(8, els.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,825,Element e0 = els.get(0);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,826,Element e1 = els.get(1);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,827,Element e2 = els.get(2);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,828,Element e3 = els.get(3);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,829,Element e4 = els.get(4);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,830,Element e5 = els.get(5);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,831,Element e6 = els.get(6);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,832,Element e7 = els.get(7);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,834,"assertEquals(e0, e0);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,835,assertTrue(e0.hasSameValue(e1));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,836,assertTrue(e0.hasSameValue(e4));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,837,assertTrue(e0.hasSameValue(e5));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,838,assertFalse(e0.equals(e2));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,839,assertFalse(e0.hasSameValue(e2));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,840,assertFalse(e0.hasSameValue(e3));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,841,assertFalse(e0.hasSameValue(e6));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,842,assertFalse(e0.hasSameValue(e7));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,844,"assertEquals(e0.hashCode(), e0.hashCode());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,845,assertFalse(e0.hashCode() == (e2.hashCode()));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,846,assertFalse(e0.hashCode() == (e3).hashCode());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,847,assertFalse(e0.hashCode() == (e6).hashCode());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,848,assertFalse(e0.hashCode() == (e7).hashCode());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,851,@Test public void testRelativeUrls() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,852,"String html = ""<body><a href='./one.html'>One</a> <a href='two.html'>two</a> <a href='../three.html'>Three</a> <a href='//example2.com/four/'>Four</a> <a href='https://example2.com/five/'>Five</a>"";"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,853,"Document doc = Jsoup.parse(html, ""http://example.com/bar/"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,854,"Elements els = doc.select(""a"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,856,"assertEquals(""http://example.com/bar/one.html"", els.get(0).absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,857,"assertEquals(""http://example.com/bar/two.html"", els.get(1).absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,858,"assertEquals(""http://example.com/three.html"", els.get(2).absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,859,"assertEquals(""http://example2.com/four/"", els.get(3).absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,860,"assertEquals(""https://example2.com/five/"", els.get(4).absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,863,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,864,public void appendMustCorrectlyMoveChildrenInsideOneParentElement() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,865,"Document doc = new Document("""");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,866,"Element body = doc.appendElement(""body"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,867,"body.appendElement(""div1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,868,"body.appendElement(""div2"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,869,"final Element div3 = body.appendElement(""div3"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,870,"div3.text(""Check"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,871,"final Element div4 = body.appendElement(""div4"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,873,ArrayList<Element> toMove = new ArrayList<Element>();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,874,toMove.add(div3);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,875,toMove.add(div4);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,877,"body.insertChildren(0, toMove);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,879,"String result = doc.toString().replaceAll(""\\s+"", """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,880,"assertEquals(""<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>"", result);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,883,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,884,public void testHashcodeIsStableWithContentChanges() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,885,"Element root = new Element(Tag.valueOf(""root""), """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,887,HashSet<Element> set = new HashSet<Element>();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,888,// Add root node:
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,889,set.add(root);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,891,"root.appendChild(new Element(Tag.valueOf(""a""), """"));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,892,assertTrue(set.contains(root));
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,10,mport java.io.IOException;
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,11,mport java.nio.charset.Charset;
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,14,Test public void escape() throws IOException {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,11,@Test public void escape() {
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,19,"tring escapedUtfFull = Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(base));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,16,"String escapedUtfFull = Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(extended));"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,37,Test public void escapeSupplementaryCharacter() throws IOException{
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,34,@Test public void escapeSupplementaryCharacter() {
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,60,Test public void caseSensitive() throws IOException {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,57,@Test public void caseSensitive() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,89,@Test public void escapesGtInXmlAttributesButNotInHtml() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,90,"// https://github.com/jhy/jsoup/issues/528 - < is OK in HTML attribute values, but not in XML"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,93,"String docHtml = ""<a title='<p>One</p>'>One</a>"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,94,Document doc = Jsoup.parse(docHtml);
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,95,"Element element = doc.select(""a"").first();"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,97,doc.outputSettings().escapeMode(base);
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,98,"assertEquals(""<a title=\""<p>One</p>\"">One</a>"", element.outerHtml());"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,100,doc.outputSettings().escapeMode(xhtml);
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,101,"assertEquals(""<a title=\""&lt;p>One&lt;/p>\"">One</a>"", element.outerHtml());"
False,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,7,mport java.io.IOException;
False,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,8,mport java.util.Collection;
False,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,31,"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea></form>"";"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,29,"""<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,30,"""<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,31,"""<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,32,"""<input name='ten' value='text' disabled>"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,33,"""</form>"";"
False,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,36,"ssertEquals(4, data.size());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,38,"assertEquals(6, data.size());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,43,"assertEquals(""seven=on"", data.get(4).toString()); // set"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,44,"assertEquals(""eight=on"", data.get(5).toString()); // default"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,45,"// nine should not appear, not checked checkbox"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,46,"// ten should not appear, disabled"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,118,@Test public void usesOnForCheckboxValueIfNoValueSet() {
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,119,"Document doc = Jsoup.parse(""<form><input type=checkbox checked name=foo></form>"");"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,120,"FormElement form = (FormElement) doc.select(""form"").first();"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,121,List<Connection.KeyVal> data = form.formData();
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,122,"assertEquals(""on"", data.get(0).value());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,123,"assertEquals(""foo"", data.get(0).key());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,126,@Test public void adoptedFormsRetainInputs() {
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,127,// test for https://github.com/jhy/jsoup/issues/249
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,128,"String html = ""<html>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,129,"""<body>  \n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,130,"""  <table>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,131,"""      <form action=\""/hello.php\"" method=\""post\"">\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,132,"""      <tr><td>User:</td><td> <input type=\""text\"" name=\""user\"" /></td></tr>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,133,"""      <tr><td>Password:</td><td> <input type=\""password\"" name=\""pass\"" /></td></tr>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,134,"""      <tr><td><input type=\""submit\"" name=\""login\"" value=\""login\"" /></td></tr>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,135,"""   </form>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,136,"""  </table>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,137,"""</body>\n"" +"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,138,"""</html>"";"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,139,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,140,"FormElement form = (FormElement) doc.select(""form"").first();"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,141,List<Connection.KeyVal> data = form.formData();
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,142,"assertEquals(3, data.size());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,143,"assertEquals(""user"", data.get(0).key());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,144,"assertEquals(""pass"", data.get(1).key());"
True,src/test/java/org/jsoup/nodes/FormElementTest.java,src/test/java/org/jsoup/nodes/FormElementTest.java,145,"assertEquals(""login"", data.get(2).key());"
False,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,6,mport org.jsoup.select.Elements;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,128,@Test public void absHandlesDotFromIndex() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,129,"Document doc = Jsoup.parse(""<a href='./one/two.html'>One</a>"", ""http://example.com"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,130,"Element a1 = doc.select(""a"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,131,"assertEquals(""http://example.com/one/two.html"", a1.absUrl(""href""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,261,@Test public void supportsClone() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,262,"Document doc = org.jsoup.Jsoup.parse(""<div class=foo>Text</div>"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,263,"Element el = doc.select(""div"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,264,"assertTrue(el.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,266,"Element elClone = doc.clone().select(""div"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,267,"assertTrue(elClone.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,268,"assertTrue(elClone.text().equals(""Text""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,270,"el.removeClass(""foo"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,271,"el.text(""None"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,272,"assertFalse(el.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,273,"assertTrue(elClone.hasClass(""foo""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,274,"assertTrue(el.text().equals(""None""));"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,275,"assertTrue(elClone.text().equals(""Text""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,3,import java.util.List;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,6,import org.jsoup.nodes.Attribute;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,8,import org.jsoup.nodes.BooleanAttribute;
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,74,@Test public void parsesBooleanAttributes() {
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,75,"String html = ""<a normal=\""123\"" boolean empty=\""\""></a>"";"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,76,"Element el = Jsoup.parse(html).select(""a"").first();"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,78,"assertEquals(""123"", el.attr(""normal""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,79,"assertEquals("""", el.attr(""boolean""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,80,"assertEquals("""", el.attr(""empty""));"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,82,List<Attribute> attributes = el.attributes().asList();
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,83,"assertEquals(""There should be 3 attribute present"", 3, attributes.size());"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,85,// Assuming the list order always follows the parsed html
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,86,"assertFalse(""'normal' attribute should not be boolean"", attributes.get(0) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,87,"assertTrue(""'boolean' attribute should be boolean"", attributes.get(1) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,88,"assertFalse(""'empty' attribute should not be boolean"", attributes.get(2) instanceof BooleanAttribute);"
True,src/test/java/org/jsoup/parser/AttributeParseTest.java,src/test/java/org/jsoup/parser/AttributeParseTest.java,90,"assertEquals(html, el.outerHtml());"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,207,@Test public void cachesStrings() {
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,208,"CharacterReader r = new CharacterReader(""Check\tCheck\tCheck\tCHOKE\tA string that is longer than 16 chars"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,209,String one = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,210,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,211,String two = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,212,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,213,String three = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,214,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,215,String four = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,216,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,217,String five = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,219,"assertEquals(""Check"", one);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,220,"assertEquals(""Check"", two);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,221,"assertEquals(""Check"", three);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,222,"assertEquals(""CHOKE"", four);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,223,assertTrue(one == two);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,224,assertTrue(two == three);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,225,assertTrue(three != four);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,226,assertTrue(four != five);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,227,"assertEquals(five, ""A string that is longer than 16 chars"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,230,@Test
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,231,public void rangeEquals() {
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,232,"CharacterReader r = new CharacterReader(""Check\tCheck\tCheck\tCHOKE"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,233,"assertTrue(r.rangeEquals(0, 5, ""Check""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,234,"assertFalse(r.rangeEquals(0, 5, ""CHOKE""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,235,"assertFalse(r.rangeEquals(0, 5, ""Chec""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,237,"assertTrue(r.rangeEquals(6, 5, ""Check""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,238,"assertFalse(r.rangeEquals(6, 5, ""Chuck""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,240,"assertTrue(r.rangeEquals(12, 5, ""Check""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,241,"assertFalse(r.rangeEquals(12, 5, ""Cheeky""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,243,"assertTrue(r.rangeEquals(18, 5, ""CHOKE""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,244,"assertFalse(r.rangeEquals(18, 5, ""CHIKE""));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,6,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,11,import java.io.File;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,12,import java.io.IOException;
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,13,mport static org.junit.Assert.assertNull;
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,47,"ssertEquals(""<p =a=\""\"">One<a <p=\""\"">Something</a></p>\n"" +"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,48,"<a <p=\""\"">Else</a>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,49,"assertEquals(""<p =a>One<a <p>Something</a></p>\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,50,"""<a <p>Else</a>"", doc.body().html());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,51,"ssertEquals(""<p .....=\""\""></p>"", doc.body().html());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,53,"assertEquals(""<p .....></p>"", doc.body().html());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,418,"ssertEquals(""<!DOCTYPE html><html><head></head><body>OneTwoThree<link>FourFive Six Seven </body></html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,420,"assertEquals(""<!doctype html><html><head></head><body>OneTwoThree<link>FourFive Six Seven </body></html>"","
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,473,"ssertEquals(""<html><head><noscript></noscript></head><body><img src=\""foo\""><p>Hello</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,475,"assertEquals(""<html><head><noscript>&lt;img src=\""foo\""&gt;</noscript></head><body><p>Hello</p></body></html>"", TextUtil.stripNewlines(doc.html()));"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,520,"tring want = ""<!DOCTYPE html>\n"" +"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,522,"String want = ""<!doctype html>\n"" +"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,822,"<!DOCTYPE> <html> <head></head> <body></body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,824,"""<!doctype> <html> <head></head> <body></body> </html>"","
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,827,"<!DOCTYPE> <html> <head></head> <body> <p>Foo</p> </body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,829,"""<!doctype> <html> <head></head> <body> <p>Foo</p> </body> </html>"","
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,832,"<!DOCTYPE �> <html> <head></head> <body></body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,834,"""<!doctype �> <html> <head></head> <body></body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,838,@Test public void handlesManyChildren() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,839,// Arrange
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,840,StringBuilder longBody = new StringBuilder(500000);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,841,for (int i = 0; i < 25000; i++) {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,842,"longBody.append(i).append(""<br>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,845,// Act
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,846,long start = System.currentTimeMillis();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,847,"Document doc = Parser.parseBodyFragment(longBody.toString(), """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,849,// Assert
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,850,"assertEquals(50000, doc.body().childNodeSize());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,851,assertTrue(System.currentTimeMillis() - start < 1000);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,854,@Test
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,855,public void testInvalidTableContents() throws IOException {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,856,"File in = ParseTest.getFile(""/htmltests/table-invalid-elements.html"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,857,"Document doc = Jsoup.parse(in, ""UTF-8"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,858,doc.outputSettings().prettyPrint(true);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,859,String rendered = doc.toString();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,860,"int endOfEmail = rendered.indexOf(""Comment"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,861,"int guarantee = rendered.indexOf(""Why am I here?"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,862,"assertTrue(""Comment not found"", endOfEmail > -1);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,863,"assertTrue(""Search text not found"", guarantee > -1);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,864,"assertTrue(""Search text did not come after comment"", guarantee > endOfEmail);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,867,@Test public void testNormalisesIsIndex() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,868,"Document doc = Jsoup.parse(""<body><isindex action='/submit'></body>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,869,String html = doc.outerHtml();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,870,"assertEquals(""<form action=\""/submit\""> <hr> <label>This is a searchable index. Enter search keywords: <input name=\""isindex\""></label> <hr> </form>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,871,StringUtil.normaliseWhitespace(doc.body().html()));
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,874,@Test public void testReinsertionModeForThCelss() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,875,"String body = ""<body> <table> <tr> <th> <table><tr><td></td></tr></table> <div> <table><tr><td></td></tr></table> </div> <div></div> <div></div> <div></div> </th> </tr> </table> </body>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,876,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,877,"assertEquals(1, doc.body().children().size());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,880,@Test public void testUsingSingleQuotesInQueries() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,881,"String body = ""<body> <div class='main'>hello</div></body>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,882,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,883,"Elements main = doc.select(""div[class='main']"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,884,"assertEquals(""hello"", main.text());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,887,@Test public void testSupportsNonAsciiTags() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,888,"String body = ""<進捗推移グラフ>Yes</進捗推移グラフ><русский-тэг>Correct</<русский-тэг>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,889,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,890,"Elements els = doc.select(""進捗推移グラフ"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,891,"assertEquals(""Yes"", els.text());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,892,"els = doc.select(""русский-тэг"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,893,"assertEquals(""Correct"", els.text());"
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,7,mport org.jsoup.nodes.Element;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,21,mport static org.junit.Assert.assertEquals;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,22,mport static org.junit.Assert.assertNotSame;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,20,import static org.junit.Assert.*;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,74,ocument htmlDoc = Jsoup.connect(xmlUrl).get();
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,72,Document htmlDoc = Jsoup.connect(xmlUrl).parser(Parser.htmlParser()).get();
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,73,"Document autoXmlDoc = Jsoup.connect(xmlUrl).get(); // check connection auto detects xml, uses xml parser"
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,78,"ssertNotSame(htmlDoc, xmlDoc);"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,77,assertFalse(htmlDoc.equals(xmlDoc));
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,78,"assertEquals(xmlDoc, autoXmlDoc);"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,81,"assertEquals(0, autoXmlDoc.select(""head"").size()); // xml parser does not"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,127,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,128,public void testDoesHandleEOFInTag() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,129,"String html = ""<img src=asdf onerror=\""alert(1)\"" x="";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,130,"Document xmlDoc = Jsoup.parse(html, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,131,"assertEquals(""<img src=\""asdf\"" onerror=\""alert(1)\"" x=\""\"" />"", xmlDoc.html());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,185,@Test public void unwrapKeepsSpace() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,186,"String h = ""<p>One <span>two</span> <span>three</span> four</p>"";"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,187,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,188,"doc.select(""span"").unwrap();"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,189,"assertEquals(""<p>One two three four</p>"", doc.body().html());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,280,@Test public void classWithHyphen() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,281,"Document doc = Jsoup.parse(""<p class='tab-nav'>Check</p>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,282,"Elements els = doc.getElementsByClass(""tab-nav"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,283,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,284,"assertEquals(""Check"", els.text());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,203,"lements els = doc.select("".head p"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,203,"Element root = doc.getElementsByClass(""head"").first();"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,205,"Elements els = root.select("".head p"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,208,"lements p = doc.select(""p.first"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,210,"Elements p = root.select(""p.first"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,212,"lements empty = doc.select(""p .first""); // self, not descend, should not match"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,214,"Elements empty = root.select(""p .first""); // self, not descend, should not match"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,217,"Elements aboveRoot = root.select(""body div.head"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,218,"assertEquals(0, aboveRoot.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,239,"lements els = Jsoup.parse(h).select(""div p .first"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,244,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,245,"Element root = doc.getElementsByClass(""head"").first();"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,247,"Elements els = root.select(""div p .first"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,252,"Elements aboveRoot = root.select(""body p .first"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,253,"assertEquals(0, aboveRoot.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,633,@Test
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,634,public void selectClassWithSpace() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,635,"final String html = ""<div class=\""value\"">class without space</div>\n"""
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,636,"+ ""<div class=\""value \"">class with space</div>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,638,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,640,"Elements found = doc.select(""div[class=value ]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,641,"assertEquals(2, found.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,642,"assertEquals(""class without space"", found.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,643,"assertEquals(""class with space"", found.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,645,"found = doc.select(""div[class=\""value \""]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,646,"assertEquals(2, found.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,647,"assertEquals(""class without space"", found.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,648,"assertEquals(""class with space"", found.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,650,"found = doc.select(""div[class=\""value\\ \""]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,651,"assertEquals(0, found.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,654,@Test public void selectSameElements() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,655,"final String html = ""<div>one</div><div>one</div>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,657,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,658,"Elements els = doc.select(""div"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,659,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,661,"Elements subSelect = els.select("":contains(one)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,662,"assertEquals(2, subSelect.size());"
