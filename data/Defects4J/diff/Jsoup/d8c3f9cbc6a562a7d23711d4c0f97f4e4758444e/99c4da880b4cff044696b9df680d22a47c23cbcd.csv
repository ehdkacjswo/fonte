is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,343," @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,343,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,356,"* @return this Request, for chaining"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,357,ublic void ignoreHttpErrors(boolean ignoreHttpErrors);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,358,public Request ignoreHttpErrors(boolean ignoreHttpErrors);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,369,"* @return this Request, for chaining"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,369,ublic void ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,371,public Request ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,387,* Specify the parser to use when parsing the document.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,388,* @param parser parser to use.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,389,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,391,public Request parser(Parser parser);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,394,* Get the current parser to use when parsing the document.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,395,* @return current Parser
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,397,public Parser parser();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,423, Specify the parser to use when parsing the document.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,424, @param parser parser to use.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,426,ublic void parser(Parser parser);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,140,es.parser(parser);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,140,req.parser(parser);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,298,private Parser parser;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,306,parser = Parser.htmlParser();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,330,ublic void ignoreHttpErrors(boolean ignoreHttpErrors) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,332,public Connection.Request ignoreHttpErrors(boolean ignoreHttpErrors) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,334,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,338,ublic void ignoreContentType(boolean ignoreContentType) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,341,public Connection.Request ignoreContentType(boolean ignoreContentType) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,343,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,356,public Request parser(Parser parser) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,357,this.parser = parser;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,358,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,361,public Parser parser() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,362,return parser;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,355,rivate Parser parser = Parser.htmlParser();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,457,"ocument doc = DataUtil.parseByteData(byteData, charset, url.toExternalForm(), parser);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,469,"Document doc = DataUtil.parseByteData(byteData, charset, url.toExternalForm(), req.parser());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,463,ublic void parser(Parser parser) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,464,alidate.notNull(parser);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,465,his.parser = parser;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,4,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,25,"Validate.notNull(input, ""String input must not be null"");"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,26,"Validate.notNull(baseUri, ""BaseURI must not be null"");"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,3,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,8,import java.io.IOException;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,11,import static org.junit.Assert.assertNotSame;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,48,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,49,public void testSupplyParserToJsoupClass() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,50,"String xml = ""<doc><val>One<val>Two</val></bar>Three</doc>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,51,"Document doc = Jsoup.parse(xml, ""http://foo.com/"", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,52,"assertEquals(""<doc><val>One<val>Two</val>Three</val></doc>"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,53,TextUtil.stripNewlines(doc.html()));
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,56,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,57,public void testSupplyParserToConnection() throws IOException {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,58,"String xmlUrl = ""http://direct.infohound.net/tools/jsoup-xml-test.xml"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,60,"// parse with both xml and html parser, ensure different"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,61,Document xmlDoc = Jsoup.connect(xmlUrl).parser(Parser.xmlParser()).get();
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,62,Document htmlDoc = Jsoup.connect(xmlUrl).get();
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,64,"assertEquals(""<doc><val>One<val>Two</val>Three</val></doc>"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,65,TextUtil.stripNewlines(xmlDoc.html()));
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,66,"assertNotSame(htmlDoc, xmlDoc);"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,67,"assertEquals(1, htmlDoc.select(""head"").size()); // html parser normalises"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,68,"assertEquals(0, xmlDoc.select(""head"").size()); // xml parser does not"
