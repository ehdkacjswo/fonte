is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,5,import org.jsoup.nodes.XmlDeclaration;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,7,mport java.io.*;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,8,import java.io.ByteArrayOutputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,9,import java.io.File;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,10,import java.io.IOException;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,11,import java.io.InputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,12,import java.io.OutputStream;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,13,import java.io.RandomAccessFile;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,93,yteData.mark();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,94,yte[] bom = new byte[4];
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,95,f (byteData.remaining() >= bom.length) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,96,yteData.get(bom);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,97,yteData.rewind();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,99,f (bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == (byte) 0xFE && bom[3] == (byte) 0xFF || // BE
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,100,om[0] == (byte) 0xFF && bom[1] == (byte) 0xFE && bom[2] == 0x00 && bom[3] == 0x00) { // LE
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,101,"harsetName = ""UTF-32""; // and I hope it's on your system"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,102, else if (bom[0] == (byte) 0xFE && bom[1] == (byte) 0xFF || // BE
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,103,om[0] == (byte) 0xFF && bom[1] == (byte) 0xFE) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,104,"harsetName = ""UTF-16""; // in all Javas"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,105, else if (bom[0] == (byte) 0xEF && bom[1] == (byte) 0xBB && bom[2] == (byte) 0xBF) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,106,"harsetName = ""UTF-8""; // in all Javas"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,107,yteData.position(3); // 16 and 32 decoders consume the BOM to determine be/le; utf-8 should be consumed
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,99,"charsetName = detectCharsetFromBom(byteData, charsetName);"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,110,f (charsetName == null) { // determine from meta. safe parse as UTF-8
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,101,if (charsetName == null) { // determine from meta. safe first parse as UTF-8
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,115,"f (meta != null) { // if not found, will keep utf-8 as best attempt"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,116,tring foundCharset = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,106,"String foundCharset = null; // if not found, will keep utf-8 as best attempt"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,107,if (meta != null) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,121,ry {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,122,"f (Charset.isSupported(meta.attr(""charset""))) {"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,123,"oundCharset = meta.attr(""charset"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,125, catch (IllegalCharsetNameException e) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,126,oundCharset = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,112,"foundCharset = meta.attr(""charset"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,130,f (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,131,"oundCharset = foundCharset.trim().replaceAll(""[\""']"", """");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,132,harsetName = foundCharset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,133,yteData.rewind();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,134,ocData = Charset.forName(foundCharset).decode(byteData).toString();
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,135,oc = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,115,// look for <?xml encoding='ISO-8859-1'?>
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,116,if (foundCharset == null && doc.childNode(0) instanceof XmlDeclaration) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,117,XmlDeclaration prolog = (XmlDeclaration) doc.childNode(0);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,118,"if (prolog.name().equals(""xml"")) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,119,"foundCharset = prolog.attr(""encoding"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,122,foundCharset = validateCharset(foundCharset);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,124,if (foundCharset != null && !foundCharset.equals(defaultCharset)) { // need to re-decode
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,125,"foundCharset = foundCharset.trim().replaceAll(""[\""']"", """");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,126,charsetName = foundCharset;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,127,byteData.rewind();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,128,docData = Charset.forName(foundCharset).decode(byteData).toString();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,129,doc = null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,212,f (charset.length() == 0) return null;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,213,ry {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,214,f (Charset.isSupported(charset)) return charset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,215,harset = charset.toUpperCase(Locale.ENGLISH);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,216,f (Charset.isSupported(charset)) return charset;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,217, catch (IllegalCharsetNameException e) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,218,/ if our advanced charset matching fails.... we just take the default
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,219,eturn null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,205,return validateCharset(charset);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,207,return null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,210,private static String validateCharset(String cs) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,211,if (cs == null || cs.length() == 0) return null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,212,"cs = cs.trim().replaceAll(""[\""']"", """");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,213,try {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,214,if (Charset.isSupported(cs)) return cs;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,215,cs = cs.toUpperCase(Locale.ENGLISH);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,216,if (Charset.isSupported(cs)) return cs;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,217,} catch (IllegalCharsetNameException e) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,218,// if our this charset matching fails.... we just take the default
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,235,"private static String detectCharsetFromBom(ByteBuffer byteData, String charsetName) {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,236,byteData.mark();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,237,byte[] bom = new byte[4];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,238,if (byteData.remaining() >= bom.length) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,239,byteData.get(bom);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,240,byteData.rewind();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,242,if (bom[0] == 0x00 && bom[1] == 0x00 && bom[2] == (byte) 0xFE && bom[3] == (byte) 0xFF || // BE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,243,bom[0] == (byte) 0xFF && bom[1] == (byte) 0xFE && bom[2] == 0x00 && bom[3] == 0x00) { // LE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,244,"charsetName = ""UTF-32""; // and I hope it's on your system"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,245,} else if (bom[0] == (byte) 0xFE && bom[1] == (byte) 0xFF || // BE
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,246,bom[0] == (byte) 0xFF && bom[1] == (byte) 0xFE) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,247,"charsetName = ""UTF-16""; // in all Javas"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,248,} else if (bom[0] == (byte) 0xEF && bom[1] == (byte) 0xBB && bom[2] == (byte) 0xBF) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,249,"charsetName = ""UTF-8""; // in all Javas"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,250,byteData.position(3); // 16 and 32 decoders consume the BOM to determine be/le; utf-8 should be consumed here
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,252,return charsetName;
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,335,"f (decl.attr(XmlDeclaration.DECL_KEY).equals(""xml"")) {"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,335,"if (decl.name().equals(""xml"")) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,3,import org.jsoup.helper.Validate;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,"tatic final String DECL_KEY = ""declaration"";"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,12,private final String name;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,15,param data data
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,17,@param name of declaration
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,19,"ublic XmlDeclaration(String data, String baseUri, boolean isProcessingInstruction) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,21,"public XmlDeclaration(String name, String baseUri, boolean isProcessingInstruction) {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,21,"ttributes.put(DECL_KEY, data);"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,23,Validate.notNull(name);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,24,this.name = name;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,* Get the name of this declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,35,* @return name of this declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,37,public String name() {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,return name;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,inal String decl = attributes.get(DECL_KEY);
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,36,"f(decl.equals(""xml"") && attributes.size() > 1 ) {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,37,tringBuilder sb = new StringBuilder(decl);
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,"inal String version = attributes.get(""version"");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,40,f( version != null ) {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,41,"b.append("" version=\"""").append(version).append(""\"""");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,44,"inal String encoding = attributes.get(""encoding"");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,46,f( encoding != null ) {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,47,"b.append("" encoding=\"""").append(encoding).append(""\"""");"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,50,eturn sb.toString();
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,52,lse {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,53,eturn attributes.get(DECL_KEY);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,46,"return attributes.html().trim(); // attr html starts with a "" """
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,59,"append(""<"")"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,60,"append(isProcessingInstruction ? ""!"" : ""?"")"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,61,append(getWholeDeclaration())
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,62,"append("">"");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,51,".append(""<"")"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,52,".append(isProcessingInstruction ? ""!"" : ""?"")"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,53,.append(name);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,54,"attributes.html(accum, out);"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,55,accum
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,56,".append(isProcessingInstruction ? ""!"" : ""?"")"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,57,".append("">"");"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,3,import org.jsoup.Jsoup;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,74,// so we do a bit of a hack and parse the data as an element to pull the attributes out
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,75,tring declaration = data.substring(1);
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,76,"nsert = new XmlDeclaration(declaration, comment.baseUri(), data.startsWith(""!""));"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,77,"Document doc = Jsoup.parse(""<"" + data.substring(1, data.length() -1) + "">"", baseUri, Parser.xmlParser());"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,78,Element el = doc.child(0);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,79,"insert = new XmlDeclaration(el.tagName(), comment.baseUri(), data.startsWith(""!""));"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,80,insert.attributes().addAll(el.attributes());
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,315,"inal String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,315,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\""?>\n"" +"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,333,"inal String xmlCharsetISO = ""<?xml version=\""1.0\"" encoding=\"""" + charsetIso8859 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,333,"final String xmlCharsetISO = ""<?xml version=\""1.0\"" encoding=\"""" + charsetIso8859 + ""\""?>\n"" +"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,351,"inal String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,351,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\""?>\n"" +"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,375,"inal String xmlCharset = ""<?xml version=\""dontTouch\"" encoding=\""dontTouch\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,375,"final String xmlCharset = ""<?xml version=\""dontTouch\"" encoding=\""dontTouch\""?>\n"" +"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,9,import org.jsoup.nodes.XmlDeclaration;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,20,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,21,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,22,import static org.junit.Assert.assertFalse;
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,106,"ssertEquals(""<?xml encoding='UTF-8' ?> <body> One </body> <!-- comment -->"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,108,"assertEquals(""<?xml encoding=\""UTF-8\""?> <body> One </body> <!-- comment -->"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,136,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,137,"public void testDetectCharsetEncodingDeclaration() throws IOException, URISyntaxException {"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,138,"File xmlFile = new File(XmlTreeBuilder.class.getResource(""/htmltests/xml-charset.xml"").toURI());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,139,InputStream inStream = new FileInputStream(xmlFile);
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,140,"Document doc = Jsoup.parse(inStream, null, ""http://example.com/"", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,141,"assertEquals(""ISO-8859-1"", doc.charset().name());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,142,"assertEquals(""<?xml version=\""1.0\"" encoding=\""ISO-8859-1\""?> <data>äöåéü</data>"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,143,TextUtil.stripNewlines(doc.html()));
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,146,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,147,public void testParseDeclarationAttributes() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,148,"String xml = ""<?xml version='1' encoding='UTF-8' something='else'?><val>One</val>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,149,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,150,XmlDeclaration decl = (XmlDeclaration) doc.childNode(0);
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,151,"assertEquals(""1"", decl.attr(""version""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,152,"assertEquals(""UTF-8"", decl.attr(""encoding""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,153,"assertEquals(""else"", decl.attr(""something""));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,154,"assertEquals(""version=\""1\"" encoding=\""UTF-8\"" something=\""else\"""", decl.getWholeDeclaration());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,155,"assertEquals(""<?xml version=\""1\"" encoding=\""UTF-8\"" something=\""else\""?>"", decl.outerHtml());"
