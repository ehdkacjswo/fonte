is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,262,ddChildren(child);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,262,// was - Node#addChildren(child). short-circuits an array create and a loop.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,263,reparentChild(child);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,264,childNodes.add(child);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,265,child.setSiblingIndex(childNodes.size()-1);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,456,rivate void reparentChild(Node child) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,456,protected void reparentChild(Node child) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,5,import java.util.Arrays;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,10,lass CharacterReader {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,11,final class CharacterReader {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,13,private static final int maxCacheLen = 12;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,19,"private final String[] stringCache = new String[512]; // holds reused strings in this doc, to lessen garbage"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,103,"tring consumed = new String(input, pos, offset);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,106,"String consumed = cacheString(pos, offset);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,114,"tring consumed = new String(input, pos, offset);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,117,"String consumed = cacheString(pos, offset);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,123,nt start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,126,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,127,final int remaining = length;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,125,UTER: while (pos < length) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,126,or (int i = 0; i < chars.length; i++) {
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,127,f (input[pos] == chars[i])
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,129,OUTER: while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,130,for (char c : chars) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,131,if (input[pos] == c)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,133,"eturn pos > start ? new String(input, start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,137,"return pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,140,String consumeToAnySorted(final char... chars) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,141,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,142,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,143,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,145,while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,146,"if (Arrays.binarySearch(chars, val[pos]) >= 0)"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,147,break;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,148,pos++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,151,"return pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,154,String consumeData() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,155,"// &, <, null"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,156,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,157,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,158,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,160,while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,161,final char c = val[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,162,if (c == '&'|| c ==  '<' || c ==  TokeniserState.nullChar)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,163,break;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,164,pos++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,167,"return pos > start ? cacheString(start, pos-start) : """";"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,170,String consumeTagName() {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,171,"// '\t', '\n', '\r', '\f', ' ', '/', '>', nullChar"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,172,final int start = pos;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,173,final int remaining = length;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,174,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,176,while (pos < remaining) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,177,final char c = val[pos];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,178,if (c == '\t'|| c ==  '\n'|| c ==  '\r'|| c ==  '\f'|| c ==  ' '|| c ==  '/'|| c ==  '>'|| c ==  TokeniserState.nullChar)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,179,break;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,180,pos++;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,183,"return pos > start ? cacheString(start, pos-start) : """";"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,137,"tring data = new String(input, pos, length-pos);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,187,"String data = cacheString(pos, length-pos);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,152,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,202,"return cacheString(start, pos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,172,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,222,"return cacheString(start, pos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,184,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,234,"return cacheString(start, pos - start);"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,196,"eturn new String(input, start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,246,"return cacheString(start, pos - start);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,291,boolean matchesAnySorted(char[] seq) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,292,"return !isEmpty() && Arrays.binarySearch(seq, input[pos]) >= 0;"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,340,"* Caches short strings, as a flywheel pattern, to reduce GC load. Just for this doc, to prevent leaks."
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,341,* <p />
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,342,"* Simplistic, and on hash collisions just falls back to creating a new string, vs a full HashMap with Entry list."
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,343,"* That saves both having to create objects as hash keys, and running through the entry list, at the expense of"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,344,* some more duplicates.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,346,"private String cacheString(final int start, final int count) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,347,final char[] val = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,348,final String[] cache = stringCache;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,350,// limit (no cache):
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,351,if (count > maxCacheLen)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,352,"return new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,354,// calculate hash:
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,355,int hash = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,356,int offset = start;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,357,for (int i = 0; i < count; i++) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,358,hash = 31 * hash + val[offset++];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,361,// get from cache
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,362,final int index = hash & cache.length - 1;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,363,String cached = cache[index];
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,365,"if (cached == null) { // miss, add"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,366,"cached = new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,367,cache[index] = cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,368,"} else { // hashcode hit, check equality"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,369,"if (rangeEquals(start, count, cached)) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,370,// hit
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,371,return cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,372,} else { // hashcode conflict
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,373,"cached = new String(val, start, count);"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,376,return cached;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,380,* Check if the value of the provided range equals the string.
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,382,"boolean rangeEquals(final int start, int count, final String cached) {"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,383,if (count == cached.length()) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,384,char one[] = input;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,385,int i = start;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,386,int j = 0;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,387,while (count-- != 0) {
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,388,if (one[i++] != cached.charAt(j++))
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,389,return false;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,391,return true;
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,393,return false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,3,mport org.jsoup.helper.DescendableLinkedList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,10,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,11,mport java.util.LinkedList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,42,rivate DescendableLinkedList<Element> formattingElements = new DescendableLinkedList<Element>(); // active (open) formatting elements
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,43,rivate List<Token.Character> pendingTableCharacters = new ArrayList<Token.Character>(); // chars in table to be shifted out
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,39,private ArrayList<Element> formattingElements = new ArrayList<Element>(); // active (open) formatting elements
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,40,private List<String> pendingTableCharacters = new ArrayList<String>(); // chars in table to be shifted out
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,41,private Token.EndTag emptyEnd = new Token.EndTag(); // reused empty end tag
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,87,tack.push(root);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,85,stack.add(root);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,180,okeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,178,tokeniser.emit(emptyEnd.reset().name(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,189,lement insert(String startTagName) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,187,Element insertStartTag(String startTagName) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,259,"/ todo - dev, remove validation check"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,260,"f (stack.peekLast().nodeName().equals(""td"") && !state.name().equals(""InCell""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,261,"alidate.isFalse(true, ""pop td not in cell"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,262,"f (stack.peekLast().nodeName().equals(""html""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,263,"alidate.isFalse(true, ""popping html!"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,264,eturn stack.pollLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,257,int size = stack.size();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,258,return stack.remove(size-1);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,271,escendableLinkedList<Element> getStack() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,265,ArrayList<Element> getStack() {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,279,"rivate boolean isElementInQueue(DescendableLinkedList<Element> queue, Element element) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,280,terator<Element> it = queue.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,281,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,282,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,273,"private boolean isElementInQueue(ArrayList<Element> queue, Element element) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,274,for (int pos = queue.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,275,Element next = queue.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,291,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,292,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,293,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,284,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,285,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,302,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,303,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,304,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,294,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,295,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,306,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,297,stack.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,314,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,315,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,316,lement next = it.next();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,317,f (next.nodeName().equals(elName)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,318,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,305,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,306,Element next = stack.get(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,307,stack.remove(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,308,if (next.nodeName().equals(elName))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,320, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,321,t.remove();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,327,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,328,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,329,lement next = it.next();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,330,"f (StringUtil.in(next.nodeName(), elNames)) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,331,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,314,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,315,Element next = stack.get(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,316,stack.remove(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,317,"if (StringUtil.in(next.nodeName(), elNames))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,333, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,334,t.remove();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,340,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,341,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,342,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,323,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,324,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,346,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,328,stack.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,364,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,365,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,366,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,346,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,347,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,370,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,351,stack.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,376,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,377,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,378,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,357,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,358,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,380,eturn it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,360,return stack.get(pos-1);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,396,"rivate void replaceInQueue(LinkedList<Element> queue, Element out, Element in) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,376,"private void replaceInQueue(ArrayList<Element> queue, Element out, Element in) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,399,ueue.remove(i);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,400,"ueue.add(i, in);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,379,"queue.set(i, in);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,405,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,406,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,407,lement node = it.next();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,408,f (!it.hasNext()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,384,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,385,Element node = stack.get(pos);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,386,if (pos == 0) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,432,private String[] specificScopeTarget = {null};
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,455,"eturn inSpecificScope(new String[]{targetName}, baseTypes, extraTypes);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,435,specificScopeTarget[0] = targetName;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,436,"return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,459,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,460,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,461,lement el = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,440,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,441,Element el = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,483,"eturn inSpecificScope(targetName, TagsSearchInScope , extras);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,463,"return inSpecificScope(targetName, TagsSearchInScope, extras);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,501,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,502,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,503,lement el = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,481,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,482,Element el = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,539,endingTableCharacters = new ArrayList<Token.Character>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,518,pendingTableCharacters = new ArrayList<String>();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,542,ist<Token.Character> getPendingTableCharacters() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,521,List<String> getPendingTableCharacters() {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,546,oid setPendingTableCharacters(List<Token.Character> pendingTableCharacters) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,525,void setPendingTableCharacters(List<String> pendingTableCharacters) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,555,Element lastFormattingElement() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,556,return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,559,Element removeLastFormattingElement() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,560,int size = formattingElements.size();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,561,if (size > 0)
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,562,return formattingElements.remove(size-1);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,563,else
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,564,return null;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,579,terator<Element> iter = formattingElements.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,580,hile (iter.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,581,lement el =  iter.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,570,for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,571,Element el = formattingElements.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,589,ter.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,579,formattingElements.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,605,nt size = formattingElements.size();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,606,f (size == 0 || formattingElements.getLast() == null || onStack(formattingElements.getLast()))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,595,Element last = lastFormattingElement();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,596,if (last == null || onStack(last))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,609,lement entry = formattingElements.getLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,599,Element entry = last;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,600,int size = formattingElements.size();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,628,lement newEl = insert(entry.nodeName()); // todo: avoid fostering here?
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,619,Element newEl = insertStartTag(entry.nodeName()); // todo: avoid fostering here?
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,633,"ormattingElements.add(pos, newEl);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,634,ormattingElements.remove(pos + 1);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,624,"formattingElements.set(pos, newEl);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,644,lement el = formattingElements.peekLast();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,645,ormattingElements.removeLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,634,Element el = removeLastFormattingElement();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,652,terator<Element> it = formattingElements.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,653,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,654,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,641,for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,642,Element next = formattingElements.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,656,t.remove();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,644,formattingElements.remove(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,667,terator<Element> it = formattingElements.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,668,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,669,lement next = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,655,for (int pos = formattingElements.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,656,Element next = formattingElements.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,3,mport org.jsoup.helper.DescendableLinkedList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,7,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,8,mport java.util.LinkedList;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,6,import java.util.ArrayList;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,61,"b.insert(""html"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,59,"tb.insertStartTag(""html"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,82,"b.process(new Token.StartTag(""head""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,80,"tb.processStartTag(""head"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,88,"b.process(new Token.StartTag(""head""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,86,"tb.processStartTag(""head"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,162,"b.process(new Token.EndTag(""head""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,160,"tb.processEndTag(""head"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,191,"b.process(new Token.EndTag(""noscript""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,189,"tb.processEndTag(""noscript"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,241,"b.process(new Token.StartTag(""body""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,239,"tb.processStartTag(""body"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,279,lement html = tb.getStack().getFirst();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,277,Element html = tb.getStack().get(0);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,288,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,286,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,302,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,300,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,314,tack.removeLast();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,312,stack.remove(stack.size()-1);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,320,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,318,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,325,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,323,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,334,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,332,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,345,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,343,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,350,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,348,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,354,"b.process(new Token.EndTag(""li""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,352,"tb.processEndTag(""li"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,361,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,359,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,366,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,364,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,370,b.process(new Token.EndTag(el.nodeName()));
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,368,tb.processEndTag(el.nodeName());
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,377,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,375,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,382,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,380,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,390,"b.process(new Token.EndTag(""button""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,388,"tb.processEndTag(""button"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,400,"b.process(new Token.EndTag(""a""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,398,"tb.processEndTag(""a"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,420,"b.process(new Token.EndTag(""nobr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,418,"tb.processEndTag(""nobr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,432,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,430,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,450,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,448,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,466,"b.process(new Token.StartTag(""form""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,464,"tb.processStartTag(""form"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,471,"b.process(new Token.StartTag(""hr""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,472,"b.process(new Token.StartTag(""label""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,469,"tb.processStartTag(""hr"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,470,"tb.processStartTag(""label"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,478,b.process(new Token.Character(prompt));
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,476,tb.process(new Token.Character().data(prompt));
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,487,"b.process(new Token.StartTag(""input"", inputAttribs));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,488,"b.process(new Token.EndTag(""label""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,489,"b.process(new Token.StartTag(""hr""));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,490,"b.process(new Token.EndTag(""form""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,485,"tb.processStartTag(""input"", inputAttribs);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,486,"tb.processEndTag(""label"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,487,"tb.processStartTag(""hr"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,488,"tb.processEndTag(""form"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,500,"b.process(new Token.EndTag(""p""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,498,"tb.processEndTag(""p"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,523,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,521,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,566,"oolean notIgnored = tb.process(new Token.EndTag(""body""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,564,"boolean notIgnored = tb.processEndTag(""body"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,596,"b.process(new Token.StartTag(name)); // if no p to close, creates an empty <p></p>"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,594,"tb.processStartTag(name); // if no p to close, creates an empty <p></p>"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,657,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,655,ArrayList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,743,"b.process(new Token.StartTag(""br""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,741,"tb.processStartTag(""br"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,760,escendableLinkedList<Element> stack = tb.getStack();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,761,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,762,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,763,lement node = it.next();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,758,ArrayList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,759,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,760,Element node = stack.get(pos);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,825,"b.process(new Token.StartTag(""colgroup""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,822,"tb.processStartTag(""colgroup"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,832,"b.process(new Token.StartTag(""tbody""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,829,"tb.processStartTag(""tbody"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,836,"oolean processed = tb.process(new Token.EndTag(""table""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,833,"boolean processed = tb.processEndTag(""table"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,908,b.getPendingTableCharacters().add(c);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,905,tb.getPendingTableCharacters().add(c.getData());
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,909,// todo - don't really like the way these table character data lists are built
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,913,or (Token.Character character : tb.getPendingTableCharacters()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,911,for (String character : tb.getPendingTableCharacters()) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,919,"b.process(character, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,917,"tb.process(new Token.Character().data(character), InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,922,"b.process(character, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,920,"tb.process(new Token.Character().data(character), InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,925,b.insert(character);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,923,tb.insert(new Token.Character().data(character));
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,957,"oolean processed = tb.process(new Token.EndTag(""caption""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,955,"boolean processed = tb.processEndTag(""caption"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1019,"oolean processed = tb.process(new Token.EndTag(""colgroup""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1017,"boolean processed = tb.processEndTag(""colgroup"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1037,"b.process(new Token.StartTag(""tr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1035,"tb.processStartTag(""tr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1077,"b.process(new Token.EndTag(tb.currentElement().nodeName())); // tbody, tfoot, thead"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1075,"tb.processEndTag(tb.currentElement().nodeName()); // tbody, tfoot, thead"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1120,"b.process(new Token.EndTag(""tr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1118,"tb.processEndTag(""tr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1139,"oolean processed = tb.process(new Token.EndTag(""tr""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1137,"boolean processed = tb.processEndTag(""tr"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1198,"b.process(new Token.EndTag(""td""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1196,"tb.processEndTag(""td"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1200,"b.process(new Token.EndTag(""th"")); // only here if th or td in scope"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1198,"tb.processEndTag(""th""); // only here if th or td in scope"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1227,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1225,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1231,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1229,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1233,"b.process(new Token.EndTag(""optgroup""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1231,"tb.processEndTag(""optgroup"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1237,"eturn tb.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1235,"return tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1242,"b.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1240,"tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1255,"b.process(new Token.EndTag(""option""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1253,"tb.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1295,"b.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1293,"tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1300,"b.process(new Token.EndTag(""select""));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1298,"tb.processEndTag(""select"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1454,"/ todo: this checks more than spec - ""\t"", ""\n"", ""\f"", ""\r"", "" """
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1455,or (int i = 0; i < data.length(); i++) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1456,har c = data.charAt(i);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1457,f (!StringUtil.isWhitespace(c))
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1458,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1460,eturn true;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1452,return isWhitespace(data);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1457,private static boolean isWhitespace(String data) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1458,"// todo: this checks more than spec - ""\t"", ""\n"", ""\f"", ""\r"", "" """
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1459,for (int i = 0; i < data.length(); i++) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1460,char c = data.charAt(i);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1461,if (!StringUtil.isWhitespace(c))
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1462,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1464,return true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,20,tatic class Doctype extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,21,"* Reset the data represent by this token, for reuse. Prevents the need to create transfer objects for every"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,22,"* piece of data, which immediately get GCed."
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,24,abstract Token reset();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,26,static void reset(StringBuilder sb) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,27,if (sb != null) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,28,"sb.delete(0, sb.length());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,32,static final class Doctype extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,42,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,43,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,44,reset(name);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,45,reset(publicIdentifier);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,46,reset(systemIdentifier);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,47,forceQuirks = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,48,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,50,"rivate StringBuilder pendingAttributeValue; // but values are accumulated, from e.g. & in hrefs"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,71,"private StringBuilder pendingAttributeValue = new StringBuilder(); // but values are accumulated, from e.g. & in hrefs"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,72,private boolean hasPendingAttributeValue = false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,55,oid newAttribute() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,76,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,77,Tag reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,78,tagName = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,79,pendingAttributeName = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,80,reset(pendingAttributeValue);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,81,hasPendingAttributeValue = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,82,selfClosing = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,83,attributes = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,84,return this;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,87,final void newAttribute() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,61,f (pendingAttributeValue == null)
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,93,if (!hasPendingAttributeValue)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,68,f (pendingAttributeValue != null)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,69,"endingAttributeValue.delete(0, pendingAttributeValue.length());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,100,reset(pendingAttributeValue);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,72,oid finaliseTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,103,final void finaliseTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,80,tring name() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,111,final String name() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,85,ag name(String name) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,116,final Tag name(String name) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,90,oolean isSelfClosing() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,121,final boolean isSelfClosing() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,95,ttributes getAttributes() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,126,final Attributes getAttributes() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,100,oid appendTagName(String append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,131,final void appendTagName(String append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,104,oid appendTagName(char append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,135,final void appendTagName(char append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,108,oid appendAttributeName(String append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,139,final void appendAttributeName(String append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,112,oid appendAttributeName(char append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,143,final void appendAttributeName(char append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,116,oid appendAttributeValue(String append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,147,final void appendAttributeValue(String append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,121,oid appendAttributeValue(char append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,152,final void appendAttributeValue(char append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,126,oid appendAttributeValue(char[] append) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,157,final void appendAttributeValue(char[] append) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,131,rivate final void ensureAttributeValue() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,132,f (pendingAttributeValue == null)
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,133,endingAttributeValue = new StringBuilder();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,162,private void ensureAttributeValue() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,163,hasPendingAttributeValue = true;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,137,tatic class StartTag extends Tag {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,167,final static class StartTag extends Tag {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,144,tartTag(String name) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,145,his();
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,146,his.tagName = name;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,174,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,175,Tag reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,176,super.reset();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,177,attributes = new Attributes();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,178,"// todo - would prefer these to be null, but need to check Element assertions"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,179,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,149,"tartTag(String name, Attributes attributes) {"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,150,his();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,182,"StartTag nameAttr(String name, Attributes attributes) {"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,185,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,164,tatic class EndTag extends Tag{
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,197,final static class EndTag extends Tag{
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,170,ndTag(String name) {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,171,his();
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,172,his.tagName = name;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,181,tatic class Comment extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,209,final static class Comment extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,213,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,214,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,215,reset(data);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,216,bogus = false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,217,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,199,tatic class Character extends Token {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,200,rivate final String data;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,234,final static class Character extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,235,private String data;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,202,haracter(String data) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,237,Character() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,238,super();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,242,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,243,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,244,data = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,245,return this;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,248,Character data(String data) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,250,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,217,tatic class EOF extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,263,final static class EOF extends Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,268,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,269,Token reset() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,270,return this;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,223,oolean isDoctype() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,274,final boolean isDoctype() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,227,octype asDoctype() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,278,final Doctype asDoctype() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,231,oolean isStartTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,282,final boolean isStartTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,235,tartTag asStartTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,286,final StartTag asStartTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,239,oolean isEndTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,290,final boolean isEndTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,243,ndTag asEndTag() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,294,final EndTag asEndTag() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,247,oolean isComment() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,298,final boolean isComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,251,omment asComment() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,302,final Comment asComment() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,255,oolean isCharacter() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,306,final boolean isCharacter() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,259,haracter asCharacter() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,310,final Character asCharacter() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,263,oolean isEOF() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,314,final boolean isEOF() {
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,267,num TokenType {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,318,static enum TokenType {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,4,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,7,import java.util.Arrays;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,10,lass Tokeniser {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,12,final class Tokeniser {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,14,"private static final char[] notCharRefCharsSorted = new char[]{'\t', '\n', '\r', '\f', ' ', '<', '&'};"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,16,static {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,17,Arrays.sort(notCharRefCharsSorted);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,19,rivate StringBuilder charBuffer = new StringBuilder(); // buffers characters to output as one token
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,20,tringBuilder dataBuffer; // buffers data looking for </script>
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,26,private String charsString = null; // characters pending an emit. Will fall to charsBuilder if more than one
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,27,"private StringBuilder charsBuilder = new StringBuilder(1024); // buffers characters to output as one token, if more than one emit per read"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,28,StringBuilder dataBuffer = new StringBuilder(1024); // buffers data looking for </script>
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,23,oken.Doctype doctypePending; // doctype building up
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,24,oken.Comment commentPending; // comment building up
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,25,"rivate Token.StartTag lastStartTag; // the last start tag emitted, to test appropriate end tag"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,31,Token.StartTag startPending = new Token.StartTag();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,32,Token.EndTag endPending = new Token.EndTag();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,33,Token.Character charPending = new Token.Character();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,34,Token.Doctype doctypePending = new Token.Doctype(); // doctype building up
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,35,Token.Comment commentPending = new Token.Comment(); // comment building up
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,36,"private String lastStartTag; // the last start tag emitted, to test appropriate end tag"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,43,f (charBuffer.length() > 0) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,44,tring str = charBuffer.toString();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,45,"harBuffer.delete(0, charBuffer.length());"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,46,eturn new Token.Character(str);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,54,if (charsBuilder.length() > 0) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,55,String str = charsBuilder.toString();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,56,"charsBuilder.delete(0, charsBuilder.length());"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,57,charsString = null;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,58,return charPending.data(str);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,59,} else if (charsString != null) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,60,Token token = charPending.data(charsString);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,61,charsString = null;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,62,return token;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,61,astStartTag = startTag;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,77,lastStartTag = startTag.tagName;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,71,oid emit(String str) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,87,void emit(final String str) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,74,harBuffer.append(str);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,90,if (charsString == null) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,91,charsString = str;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,93,else {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,94,if (charsBuilder.length() == 0) { // switching to string builder as more than one emit before read
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,95,charsBuilder.append(charsString);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,97,charsBuilder.append(str);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,78,harBuffer.append(chars);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,102,emit(String.valueOf(chars));
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,82,harBuffer.append(c);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,106,emit(String.valueOf(c));
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,126,final private char[] charRefHolder = new char[1]; // holder to not have to keep creating arrays
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,107,"f (reader.matchesAny('\t', '\n', '\r', '\f', ' ', '<', '&'))"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,132,if (reader.matchesAnySorted(notCharRefCharsSorted))
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,135,final char[] charRef = charRefHolder;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,129,eturn new char[]{replacementChar};
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,155,charRef[0] = replacementChar;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,156,return charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,160,if (charval < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,161,charRef[0] = (char) charval;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,162,return charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,163,} else
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,155,eturn new char[]{Entities.getCharacterByName(nameRef)};
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,186,charRef[0] = Entities.getCharacterByName(nameRef);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,187,return charRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,160,agPending = start ? new Token.StartTag() : new Token.EndTag();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,192,tagPending = start ? startPending.reset() : endPending.reset();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,170,ommentPending = new Token.Comment();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,202,commentPending.reset();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,178,octypePending = new Token.Doctype();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,210,doctypePending.reset();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,186,ataBuffer = new StringBuilder();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,218,Token.reset(dataBuffer);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,190,f (lastStartTag == null)
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,191,eturn false;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,192,eturn tagPending.tagName.equals(lastStartTag.tagName);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,222,return lastStartTag != null && tagPending.tagName.equals(lastStartTag);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,198,eturn lastStartTag.tagName;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,228,return lastStartTag;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,3,import java.util.Arrays;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,25,"tring data = r.consumeToAny('&', '<', nullChar);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,27,String data = r.consumeData();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,185,"tring tagName = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '/', '>', nullChar).toLowerCase();"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,187,//String tagName = r.consumeToAnySorted(tagCharsSorted).toLowerCase();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,188,String tagName = r.consumeTagName().toLowerCase();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,222,.tagPending = new Token.EndTag(t.appropriateEndTagName());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,225,t.tagPending = t.createTagPending(false).name(t.appropriateEndTagName());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,645,"tring name = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '/', '=', '>', nullChar, '""', '\'', '<');"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,648,String name = r.consumeToAnySorted(attributeNameCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,779,"tring value = r.consumeToAny('""', '&', nullChar);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,782,String value = r.consumeToAnySorted(attributeDoubleValueCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,809,"tring value = r.consumeToAny('\'', '&', nullChar);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,812,String value = r.consumeToAnySorted(attributeSingleValueCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1648,rivate static final char nullChar = '\u0000';
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1651,static final char nullChar = '\u0000';
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1652,"private static final char[] attributeSingleValueCharsSorted = new char[]{'\'', '&', nullChar};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1653,"private static final char[] attributeDoubleValueCharsSorted = new char[]{'""', '&', nullChar};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1654,"private static final char[] attributeNameCharsSorted = new char[]{'\t', '\n', '\r', '\f', ' ', '/', '=', '>', nullChar, '""', '\'', '<'};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1660,static {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1661,Arrays.sort(attributeSingleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1662,Arrays.sort(attributeDoubleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1663,Arrays.sort(attributeNameCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1657,"rivate static final void handleDataEndTag(Tokeniser t, CharacterReader r, TokeniserState elseTransition) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1670,"private static void handleDataEndTag(Tokeniser t, CharacterReader r, TokeniserState elseTransition) {"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1697,"rivate static final void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1710,"private static void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,3,mport org.jsoup.helper.DescendableLinkedList;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,4,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,8,import java.util.ArrayList;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,16,rotected DescendableLinkedList<Element> stack; // the stack of open elements
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,17,protected ArrayList<Element> stack; // the stack of open elements
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,private Token.StartTag start = new Token.StartTag(); // start tag to process
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,23,private Token.EndTag end  = new Token.EndTag();
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,29,tack = new DescendableLinkedList<Element>();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,33,stack = new ArrayList<Element>(32);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,51,token.reset();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,60,protected boolean processStartTag(String name) {
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,61,return process(start.reset().name(name));
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,64,"public boolean processStartTag(String name, Attributes attrs) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,65,start.reset();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,66,"start.nameAttr(name, attrs);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,67,return process(start);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,70,protected boolean processEndTag(String name) {
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,71,return process(end.reset().name(name));
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,56,eturn stack.getLast();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,76,int size = stack.size();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,77,return size > 0 ? stack.get(size-1) : null;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,6,mport java.util.Iterator;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,103,terator<Element> it = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,104,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,105,lement next = it.next();
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,102,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,103,Element next = stack.get(pos);
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,114,t = stack.descendingIterator();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,115,hile (it.hasNext()) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,116,lement next = it.next();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,117,f (next == firstFound) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,118,t.remove();
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,112,for (int pos = stack.size() -1; pos >= 0; pos--) {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,113,Element next = stack.get(pos);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,114,stack.remove(pos);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,115,if (next == firstFound)
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,120, else {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,121,t.remove();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,207,@Test public void cachesStrings() {
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,208,"CharacterReader r = new CharacterReader(""Check\tCheck\tCheck\tCHOKE\tA string that is longer than 16 chars"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,209,String one = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,210,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,211,String two = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,212,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,213,String three = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,214,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,215,String four = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,216,r.consume();
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,217,String five = r.consumeTo('\t');
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,219,"assertEquals(""Check"", one);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,220,"assertEquals(""Check"", two);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,221,"assertEquals(""Check"", three);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,222,"assertEquals(""CHOKE"", four);"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,223,assertTrue(one == two);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,224,assertTrue(two == three);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,225,assertTrue(three != four);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,226,assertTrue(four != five);
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,227,"assertEquals(five, ""A string that is longer than 16 chars"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,230,@Test
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,231,public void rangeEquals() {
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,232,"CharacterReader r = new CharacterReader(""Check\tCheck\tCheck\tCHOKE"");"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,233,"assertTrue(r.rangeEquals(0, 5, ""Check""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,234,"assertFalse(r.rangeEquals(0, 5, ""CHOKE""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,235,"assertFalse(r.rangeEquals(0, 5, ""Chec""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,237,"assertTrue(r.rangeEquals(6, 5, ""Check""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,238,"assertFalse(r.rangeEquals(6, 5, ""Chuck""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,240,"assertTrue(r.rangeEquals(12, 5, ""Check""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,241,"assertFalse(r.rangeEquals(12, 5, ""Cheeky""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,243,"assertTrue(r.rangeEquals(18, 5, ""CHOKE""));"
True,src/test/java/org/jsoup/parser/CharacterReaderTest.java,src/test/java/org/jsoup/parser/CharacterReaderTest.java,244,"assertFalse(r.rangeEquals(18, 5, ""CHIKE""));"
