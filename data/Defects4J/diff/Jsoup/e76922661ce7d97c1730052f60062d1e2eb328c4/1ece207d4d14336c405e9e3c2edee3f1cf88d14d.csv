is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,151,witch (r.consume()) {
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,151,char c = r.consume();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,152,switch (c) {
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,172,"/ no default, as covered with above consumeToAny"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,173,break;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,174,default: // buffer underrun
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,175,t.tagPending.appendTagName(c);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,630,"/ no default, as covered in consumeToAny"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,633,break;
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,634,default: // buffer underrun
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,635,t.tagPending.appendAttributeName(c);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,4,import org.jsoup.nodes.Attribute;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,6,import org.jsoup.nodes.Element;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,7,import org.jsoup.select.Elements;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,10,import static org.jsoup.parser.CharacterReader.maxBufferLen;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,11,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,12,import static org.junit.Assert.assertNotNull;
False,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,21,inal int charsToFillBuffer = CharacterReader.maxBufferLen - preamble.length();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,27,final int charsToFillBuffer = maxBufferLen - preamble.length();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,44,@Test public void handleSuperLargeTagNames() {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,45,"// unlikely, but valid. so who knows."
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,47,StringBuilder sb = new StringBuilder(maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,48,do {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,49,"sb.append(""LargeTagName"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,50,} while (sb.length() < maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,51,String tag = sb.toString();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,52,"String html = ""<"" + tag + "">One</"" + tag + "">"";"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,54,"Document doc = Parser.htmlParser().settings(ParseSettings.preserveCase).parseInput(html, """");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,55,Elements els = doc.select(tag);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,56,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,57,Element el = els.first();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,58,assertNotNull(el);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,59,"assertEquals(""One"", el.text());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,60,"assertEquals(tag, el.tagName());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,63,@Test public void handleSuperLargeAttributeName() {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,64,StringBuilder sb = new StringBuilder(maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,65,do {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,66,"sb.append(""LargAttributeName"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,67,} while (sb.length() < maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,68,String attrName = sb.toString();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,69,"String html = ""<p "" + attrName + ""=foo>One</p>"";"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,71,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,72,Elements els = doc.getElementsByAttribute(attrName);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,73,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,74,Element el = els.first();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,75,assertNotNull(el);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,76,"assertEquals(""One"", el.text());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,77,Attribute attribute = el.attributes().asList().get(0);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,78,"assertEquals(attrName.toLowerCase(), attribute.getKey());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,79,"assertEquals(""foo"", attribute.getValue());"
