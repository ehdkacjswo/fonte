is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,160,"* @throws java.net.MalformedURLException if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,161,* @throws HttpStatusException if the response is not OK and HTTP response errors are not ignored
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,162,* @throws UnsupportedMimeTypeException if the response mime type is not supported and those errors are not ignored
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,163,* @throws java.net.SocketTimeoutException if the connection times out
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,171,"* @throws java.net.MalformedURLException if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,172,* @throws HttpStatusException if the response is not OK and HTTP response errors are not ignored
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,173,* @throws UnsupportedMimeTypeException if the response mime type is not supported and those errors are not ignored
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,174,* @throws java.net.SocketTimeoutException if the connection times out
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,182,"* @throws java.net.MalformedURLException if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,183,* @throws HttpStatusException if the response is not OK and HTTP response errors are not ignored
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,184,* @throws UnsupportedMimeTypeException if the response mime type is not supported and those errors are not ignored
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,185,* @throws java.net.SocketTimeoutException if the connection times out
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,1,package org.jsoup;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,3,import java.io.IOException;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,6,* Signals that a HTTP request resulted in a not OK HTTP response.
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,8,public class HttpStatusException extends IOException {
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,9,private int statusCode;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,10,private String url;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,12,"public HttpStatusException(String message, int statusCode, String url) {"
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,13,super(message);
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,14,this.statusCode = statusCode;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,15,this.url = url;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,18,public int getStatusCode() {
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,19,return statusCode;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,22,public String getUrl() {
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,23,return url;
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,26,@Override
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,27,public String toString() {
True,src/main/java/org/jsoup/HttpStatusException.java,src/main/java/org/jsoup/HttpStatusException.java,28,"return super.toString() + "". Status="" + statusCode + "", URL="" + url;"
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,172,"throws IOException If the final server response != 200 OK (redirects are followed), or if there's an error reading"
False,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,173,he response stream.
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,172,"@throws java.net.MalformedURLException if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed"
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,173,@throws HttpStatusException if the response is not OK and HTTP response errors are not ignored
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,174,@throws UnsupportedMimeTypeException if the response mime type is not supported and those errors are not ignored
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,175,@throws java.net.SocketTimeoutException if the connection times out
True,src/main/java/org/jsoup/Jsoup.java,src/main/java/org/jsoup/Jsoup.java,176,@throws IOException if a connection or read error occurs
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,1,package org.jsoup;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,3,import java.io.IOException;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,6,* Signals that a HTTP response returned a mime type that is not supported.
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,8,public class UnsupportedMimeTypeException extends IOException {
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,9,private String mimeType;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,10,private String url;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,12,"public UnsupportedMimeTypeException(String message, String mimeType, String url) {"
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,13,super(message);
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,14,this.mimeType = mimeType;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,15,this.url = url;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,18,public String getMimeType() {
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,19,return mimeType;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,22,public String getUrl() {
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,23,return url;
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,26,@Override
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,27,public String toString() {
True,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,src/main/java/org/jsoup/UnsupportedMimeTypeException.java,28,"return super.toString() + "". Mimetype="" + mimeType + "", URL=""+url;"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,4,import org.jsoup.HttpStatusException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,5,import org.jsoup.UnsupportedMimeTypeException;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,397,alidate
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,398,"isTrue(protocol.equals(""http"") || protocol.equals(""https""), ""Only http & https protocols supported"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,399,"if (!protocol.equals(""http"") && !protocol.equals(""https""))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,400,"throw new MalformedURLException(""Only http & https protocols supported"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,404,onn.connect();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,405,f (req.method() == Connection.Method.POST)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,406,"ritePost(req.data(), conn.getOutputStream());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,408,nt status = conn.getResponseCode();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,409,oolean needsRedirect = false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,410,f (status != HttpURLConnection.HTTP_OK) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,411,f (status == HttpURLConnection.HTTP_MOVED_TEMP || status == HttpURLConnection.HTTP_MOVED_PERM || status == HttpURLConnection.HTTP_SEE_OTHER)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,412,eedsRedirect = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,413,lse if (!req.ignoreHttpErrors())
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,414,"hrow new IOException(status + "" error loading URL "" + req.url().toString());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,416,esponse res = new Response(previousResponse);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,417,"es.setupFromConnection(conn, previousResponse);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,418,f (needsRedirect && req.followRedirects()) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,419,eq.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,420,eq.data().clear();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,421,"eq.url(new URL(req.url(), res.header(""Location"")));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,422,"or (Map.Entry<String, String> cookie : res.cookies.entrySet()) { // add response cookies to request (for e.g. login posts)"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,423,"eq.cookie(cookie.getKey(), cookie.getValue());"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,425,"eturn execute(req, res);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,427,es.req = req;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,429,"/ check that we can handle the returned content type; if not, abort before fetching it"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,430,tring contentType = res.contentType();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,431,"f (contentType != null && !req.ignoreContentType() && (!(contentType.startsWith(""text/"") || contentType.startsWith(""application/xml"") || contentType.startsWith(""application/xhtml+xml""))))"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,432,"hrow new IOException(String.format(""Unhandled content type \""%s\"" on URL %s. Must be text/*, application/xml, or application/xhtml+xml"","
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,433,"ontentType, req.url().toString()));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,435,nputStream bodyStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,436,nputStream dataStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,406,Response res;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,438,ataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,439,"odyStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,440,ew BufferedInputStream(new GZIPInputStream(dataStream)) :
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,441,ew BufferedInputStream(dataStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,443,es.byteData = DataUtil.readToByteBuffer(bodyStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,"es.charset = DataUtil.getCharsetFromContentType(res.contentType); // may be null, readInputStream deals with it"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,408,conn.connect();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,409,if (req.method() == Connection.Method.POST)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,410,"writePost(req.data(), conn.getOutputStream());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,412,int status = conn.getResponseCode();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,413,boolean needsRedirect = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,414,if (status != HttpURLConnection.HTTP_OK) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,415,if (status == HttpURLConnection.HTTP_MOVED_TEMP || status == HttpURLConnection.HTTP_MOVED_PERM || status == HttpURLConnection.HTTP_SEE_OTHER)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,416,needsRedirect = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,417,else if (!req.ignoreHttpErrors())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,418,"throw new HttpStatusException(""HTTP error fetching URL"", status, req.url().toString());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,420,res = new Response(previousResponse);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,421,"res.setupFromConnection(conn, previousResponse);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,422,if (needsRedirect && req.followRedirects()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,423,req.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,424,req.data().clear();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,425,"req.url(new URL(req.url(), res.header(""Location"")));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,426,"for (Map.Entry<String, String> cookie : res.cookies.entrySet()) { // add response cookies to request (for e.g. login posts)"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,427,"req.cookie(cookie.getKey(), cookie.getValue());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,429,"return execute(req, res);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,431,res.req = req;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,433,"// check that we can handle the returned content type; if not, abort before fetching it"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,434,String contentType = res.contentType();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,435,"if (contentType != null && !req.ignoreContentType() && (!(contentType.startsWith(""text/"") || contentType.startsWith(""application/xml"") || contentType.startsWith(""application/xhtml+xml""))))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,436,"throw new UnsupportedMimeTypeException(""Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml"","
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,437,"contentType, req.url().toString());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,439,InputStream bodyStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,440,InputStream dataStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,441,try {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,442,dataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,443,"bodyStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,new BufferedInputStream(new GZIPInputStream(dataStream)) :
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,445,new BufferedInputStream(dataStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,447,res.byteData = DataUtil.readToByteBuffer(bodyStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,448,"res.charset = DataUtil.getCharsetFromContentType(res.contentType); // may be null, readInputStream deals with it"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,449,} finally {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,450,if (bodyStream != null) bodyStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,451,if (dataStream != null) dataStream.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,446,f (bodyStream != null) bodyStream.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,447,f (dataStream != null) dataStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,454,"// per Java's documentation, this is not necessary, and precludes keepalives. However in practise,"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,455,// connection errors will not be released quickly enough and can cause a too many open files error.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,456,conn.disconnect();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,3,import org.jsoup.HttpStatusException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,4,import org.jsoup.UnsupportedMimeTypeException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,12,import java.net.MalformedURLException;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,18,Ignore // ignored by default so tests don't require network access. comment out to enable.
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,21,//@Ignore // ignored by default so tests don't require network access. comment out to enable.
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,34,"ssertEquals(""GB2312"", doc.outputSettings().charset().displayName());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,35,"ssertEquals(""GB2312"", res.charset());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,37,"assertEquals(""GBK"", doc.outputSettings().charset().displayName());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,38,"assertEquals(""GBK"", res.charset());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,37,"ssertEquals(""text/html;charset=gb2312"", res.contentType());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,40,"assertEquals(""text/html;charset=gbk"", res.contentType());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,49,} catch (UnsupportedMimeTypeException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,50,threw = true;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,51,"assertEquals(""org.jsoup.UnsupportedMimeTypeException: Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml. Mimetype=image/png, URL=http://jsoup.org/rez/osi_logo.png"", e.toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,52,"assertEquals(url, e.getUrl());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,53,"assertEquals(""image/png"", e.getMimeType());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,56,assertTrue(threw);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,59,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,60,public void exceptOnUnsupportedProtocol(){
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,61,"String url = ""file://etc/passwd"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,62,boolean threw = false;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,63,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,64,Document doc = Jsoup.connect(url).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,65,} catch (MalformedURLException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,67,"assertEquals(""java.net.MalformedURLException: Only http & https protocols supported"", e.toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,68,} catch (IOException e) {
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,124,"onnection con = Jsoup.connect(""http://infohound.net/tools/404"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,145,"String url = ""http://direct.infohound.net/tools/404"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,146,Connection con = Jsoup.connect(url);
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,128, catch (IOException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,150,} catch (HttpStatusException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,152,"assertEquals(""org.jsoup.HttpStatusException: HTTP error fetching URL. Status=404, URL=http://direct.infohound.net/tools/404"", e.toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,153,"assertEquals(url, e.getUrl());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,154,"assertEquals(404, e.getStatusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,155,} catch (IOException e) {
