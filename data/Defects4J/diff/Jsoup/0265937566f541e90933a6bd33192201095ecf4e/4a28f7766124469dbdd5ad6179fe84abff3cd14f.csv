is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,181,f (charset.isEmpty()) return null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,181,if (charset.length() == 0) return null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,25,"private static final int HTTP_TEMP_REDIR = 307; // http/1.1 temporary redirect, not in Java's set."
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,446,f (status == HttpURLConnection.HTTP_MOVED_TEMP || status == HttpURLConnection.HTTP_MOVED_PERM || status == HttpURLConnection.HTTP_SEE_OTHER)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,448,if (status == HttpURLConnection.HTTP_MOVED_TEMP || status == HttpURLConnection.HTTP_MOVED_PERM || status == HttpURLConnection.HTTP_SEE_OTHER || status == HTTP_TEMP_REDIR)
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,22,alidate.notEmpty(name);
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,35,"ccum.append(""<!DOCTYPE "").append(attr(""name""));"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,34,"accum.append(""<!DOCTYPE"");"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,35,"if (!StringUtil.isBlank(attr(""name"")))"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,36,"accum.append("" "").append(attr(""name""));"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,184,ist<Element> elements = new ArrayList<Element>();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,184,List<Element> elements = new ArrayList<Element>(childNodes.size());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,448,* Get a CSS selector that will uniquely select this element.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,449,"* <p/>If the element has an ID, returns #id;"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,450,"* otherwise returns the parent (if any) CSS selector, followed by '>',"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,451,* followed by a unique selector for the element (tag.class.class:nth-child(n)).
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,453,* @return the CSS Path that can be used to retrieve the element in a selector.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,455,public String cssSelector() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,456,if (id().length() > 0)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,457,"return ""#"" + id();"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,459,StringBuilder selector = new StringBuilder(tagName());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,460,"String classes = StringUtil.join(classNames(), ""."");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,461,if (classes.length() > 0)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,462,selector.append('.').append(classes);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,464,"if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,465,return selector.toString();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,467,"selector.insert(0, "" > "");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,468,if (parent().select(selector.toString()).size() > 1)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,469,selector.append(String.format(
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,470,""":nth-child(%d)"", elementSiblingIndex() + 1));"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,472,return parent().cssSelector() + selector.toString();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,809, Gets the combined text of this element and all its children.
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,837,* Gets the combined text of this element and all its children. Whitespace is normalized and trimmed.
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,811," For example, given HTML {@code <p>Hello <b>there</b> now!</p>}, {@code p.text()} returns {@code ""Hello there now!""}"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,839,"* For example, given HTML {@code <p>Hello  <b>there</b> now! </p>}, {@code p.text()} returns {@code ""Hello there now!""}"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,54,baseUriSetFromDoc = false;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,81,alidate.isFalse(tagName.length() == 0);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,81,Validate.isFalse(tagName == null || tagName.length() == 0);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,198,if (lastStartTag == null)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,199,return null;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,219," else if (r.matchesLetter() && !r.containsIgnoreCase(""</"" + t.appropriateEndTagName())) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,219,"} else if (r.matchesLetter() && t.appropriateEndTagName() != null && !r.containsIgnoreCase(""</"" + t.appropriateEndTagName())) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1140,// note: fall through to > case
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1141,case '>': // catch invalid <!DOCTYPE>
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1142,t.error(this);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1171,t.createDoctypePending();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,80,"l, p, pre, q, small, strike, strong, sub, sup, u, ul</code>, and appropriate attributes."
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,80,"ol, p, pre, q, small, span, strike, strong, sub, sup, u, ul</code>, and appropriate attributes."
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,93,"i"", ""li"", ""ol"", ""p"", ""pre"", ""q"", ""small"", ""strike"", ""strong"", ""sub"","
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,93,"""i"", ""li"", ""ol"", ""p"", ""pre"", ""q"", ""small"", ""span"", ""strike"", ""strong"", ""sub"","
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,125,"ode, col, colgroup, dd, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, strike, strong, sub,"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,125,"code, col, colgroup, dd, div, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, span, strike, strong, sub,"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,137,"i"", ""img"", ""li"", ""ol"", ""p"", ""pre"", ""q"", ""small"", ""strike"", ""strong"","
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,137,"""i"", ""img"", ""li"", ""ol"", ""p"", ""pre"", ""q"", ""small"", ""span"", ""strike"", ""strong"","
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,11," list of {@link Element Elements}, with methods that act on every element in the list."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,11,"A list of {@link Element}s, with methods that act on every element in the list."
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,13,"o get an Elements object, use the {@link Element#select(String)} method."
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,13,"To get an {@code Elements} object, use the {@link Element#select(String)} method."
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,500, @return a list of FormElements pulled from the matched elements. The list will be empty if the elements contain
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,500,* @return a list of {@link FormElement}s pulled from the matched elements. The list will be empty if the elements contain
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,281,"if (value.startsWith(""\"""") && value.endsWith(""\"""")) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,282,"value = value.substring(1, value.length()-1);"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,29,"* <tr><td><code>[attr=&quot;val&quot;]</code></td><td>elements with an attribute named ""attr"", and value equal to ""val""</td><td><code>span[hello=""Cleveland""][goodbye=""Columbus""]</code>, <code>a[rel=&quot;nofollow&quot;]</code></td></tr>"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,127,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,128,public void followsNewTempRedirect() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,129,"Connection con = Jsoup.connect(""http://direct.infohound.net/tools/307.pl""); // http://jsoup.org"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,130,Document doc = con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,131,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,132,"assertEquals(""http://jsoup.org"", con.response().url().toString());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,320,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,321,public void baseHrefCorrectAfterHttpEquiv() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,322,// https://github.com/jhy/jsoup/issues/440
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,323,"Connection.Response res = Jsoup.connect(""http://direct.infohound.net/tools/charset-base.html"").execute();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,324,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,325,"assertEquals(""http://example.com/foo.jpg"", doc.select(""img"").first().absUrl(""src""));"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,13,Test(expected = IllegalArgumentException.class)
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,14,ublic void constructorValidationThrowsExceptionOnBlankName() {
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,13,@Test
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,14,public void constructorValidationOkWithBlankName() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,373,@Test public void testSetHtmlTitle() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,374,"Document doc = Jsoup.parse(""<html><head id=2><title id=1></title></head></html>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,376,"Element title = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,377,"title.html(""good"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,378,"assertEquals(""good"", title.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,379,"title.html(""<i>bad</i>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,380,"assertEquals(""&lt;i&gt;bad&lt;/i&gt;"", title.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,382,"Element head = doc.getElementById(""2"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,383,"head.html(""<title><i>bad</i></title>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,384,"assertEquals(""<title>&lt;i&gt;bad&lt;/i&gt;</title>"", head.html());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,698,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,699,public void testCssPath() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,700,"Document doc = Jsoup.parse(""<div id=\""id1\"">A</div><div>B</div><div class=\""c1 c2\"">C</div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,701,"Element divA = doc.select(""div"").get(0);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,702,"Element divB = doc.select(""div"").get(1);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,703,"Element divC = doc.select(""div"").get(2);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,704,"assertEquals(divA.cssSelector(), ""#id1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,705,"assertEquals(divB.cssSelector(), ""html > body > div:nth-child(2)"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,706,"assertEquals(divC.cssSelector(), ""html > body > div.c1.c2"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,708,assertTrue(divA == doc.select(divA.cssSelector()).first());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,709,assertTrue(divB == doc.select(divB.cssSelector()).first());
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,710,assertTrue(divC == doc.select(divC.cssSelector()).first());
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,280,@Test public void handlesProtocolRelativeUrl() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,281,"String base = ""https://example.com/"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,282,"String html = ""<img src='//example.net/img.jpg'>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,283,"Document doc = Jsoup.parse(html, base);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,284,"Element el = doc.select(""img"").first();"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,285,"assertEquals(""https://example.net/img.jpg"", el.absUrl(""src""));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,818,@Test public void handlesInvalidDoctypes() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,819,// would previously throw invalid name exception on empty doctype
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,820,"Document doc = Jsoup.parse(""<!DOCTYPE>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,821,assertEquals(
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,822,"""<!DOCTYPE> <html> <head></head> <body></body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,823,StringUtil.normaliseWhitespace(doc.outerHtml()));
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,825,"doc = Jsoup.parse(""<!DOCTYPE><html><p>Foo</p></html>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,826,assertEquals(
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,827,"""<!DOCTYPE> <html> <head></head> <body> <p>Foo</p> </body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,828,StringUtil.normaliseWhitespace(doc.outerHtml()));
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,830,"doc = Jsoup.parse(""<!DOCTYPE \u0000>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,831,assertEquals(
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,832,"""<!DOCTYPE �> <html> <head></head> <body></body> </html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,833,StringUtil.normaliseWhitespace(doc.outerHtml()));
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,51,"tring h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Bam /><div title=SLAM /><div />"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,51,"String h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Bam /><div title=SLAM />"" +"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,52,"""<div data-name='with spaces'/>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,61,"Elements foo2 = doc.select(""[title=\""foo\""]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,62,"assertEquals(1, foo2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,64,"Elements foo3 = doc.select(""[title=\""Foo\""]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,65,"assertEquals(1, foo3.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,67,"Elements dataName = doc.select(""[data-name=\""with spaces\""]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,68,"assertEquals(1, dataName.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,69,"assertEquals(""with spaces"", dataName.first().attr(""data-name""));"
