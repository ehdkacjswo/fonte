is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,32, Determine the behavior of this connection upon receiving a 4xx or 5xx error.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,33, @param throwExceptionOnHttpError - Set to false if you would like the Response populated on 4xx and 5xx HTTP response codes.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,34," @return this Connection, for chaining"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,36,ublic Connection throwExceptionOnHttpError(boolean throwExceptionOnHttpError);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,39, Ignore content-type header when parsing the response
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,40, @param ignoreContentType - Set to true if you would like the content type ignored on parsing the response into a Document.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,41," @return this Connection, for chaining"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,43,ublic Connection ignoreContentType(boolean ignoreContentType);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,82,"* Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,83,"* default this is <b>false</b>; an IOException is thrown if an error is encountered. If set to <b>true</b>, the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,84,"* response is populated with the error body, and the status message will reflect the error."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,85,* @param ignoreHttpErrors - false (default) if HTTP errors should be ignored.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,86,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,88,public Connection ignoreHttpErrors(boolean ignoreHttpErrors);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,91,"* Ignore the document's Content-Type when parsing the response. By default this is <b>false</b>, an unrecognised"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,92,* content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,93,"* a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,94,* @param ignoreContentType set to true if you would like the content type ignored on parsing the response into a
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,95,* Document.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,96,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,98,public Connection ignoreContentType(boolean ignoreContentType);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,302, Will this request throw an IOException if a 4xx or 5xx error is returned
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,303," @return true if it will, false if it will populate the Response.  Default is true."
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,305,ublic boolean throwExceptionOnHttpError();
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,309, Determine the behavior of this request upon receiving a 4xx or 5xx error response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,310, @param throwExceptionOnHttpError - Set to false if you would like the Response populated on 4xx and 5xx HTTP response codes.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,312,ublic void throwExceptionOnHttpError(boolean throwExceptionOnHttpError);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,333,* Get the current ignoreHttpErrors configuration.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,334,* @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,336,public boolean ignoreHttpErrors();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,339,* Configures the request to ignore HTTP errors in the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,340,* @param ignoreHttpErrors set to true to ignore HTTP errors.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,342,public void ignoreHttpErrors(boolean ignoreHttpErrors);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,345,* Get the current ignoreContentType configuration.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,346,* @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,348,public boolean ignoreContentType();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,351,* Configures the request to ignore the Content-Type of the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,352,* @param ignoreContentType set to true to ignore the contenet type.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,354,public void ignoreContentType(boolean ignoreContentType);
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,404,ublic void ignoreContentType(boolean ignoreContentType);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,15,mport java.util.regex.Matcher;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,16,mport java.util.regex.Pattern;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,38,rivate boolean ignoreContentType = false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,40,ublic Connection throwExceptionOnHttpError(boolean throwExceptionOnHttpError) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,41,eq.throwExceptionOnHttpError(throwExceptionOnHttpError);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,42,eturn this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,45,ublic Connection ignoreContentType(boolean ignoreContentType) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,46,his.ignoreContentType = ignoreContentType;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,47,eturn this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,84,public Connection ignoreHttpErrors(boolean ignoreHttpErrors) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,85,req.ignoreHttpErrors(ignoreHttpErrors);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,86,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,89,public Connection ignoreContentType(boolean ignoreContentType) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,90,req.ignoreContentType(ignoreContentType);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,91,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,147,es.ignoreContentType(ignoreContentType);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,286,rivate boolean throwExceptionOnHttpError = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,288,ublic boolean throwExceptionOnHttpError() {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,289,eturn throwExceptionOnHttpError;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,292,ublic void throwExceptionOnHttpError(boolean throwExceptionOnHttpError) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,293,his.throwExceptionOnHttpError = throwExceptionOnHttpError;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,282,private boolean ignoreHttpErrors = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,283,private boolean ignoreContentType = false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,296,rivate Request() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,285,private Request() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,312,public boolean ignoreHttpErrors() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,313,return ignoreHttpErrors;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,316,public void ignoreHttpErrors(boolean ignoreHttpErrors) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,317,this.ignoreHttpErrors = ignoreHttpErrors;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,320,public boolean ignoreContentType() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,321,return ignoreContentType;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,324,public void ignoreContentType(boolean ignoreContentType) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,325,this.ignoreContentType = ignoreContentType;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,343,rivate boolean ignoreContentType = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,348,private Connection.Request req;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,358,ublic void ignoreContentType(boolean ignoreContentType) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,359,his.ignoreContentType = ignoreContentType;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,385,lse if (req.throwExceptionOnHttpError())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,386,else if (!req.ignoreHttpErrors())
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,398,res.req = req;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,398,nputStream inStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,399,nputStream rawStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,400,InputStream bodyStream = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,401,InputStream dataStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,401,f (status == HttpURLConnection.HTTP_OK) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,402,awStream = conn.getInputStream();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,403, else {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,404,awStream = conn.getErrorStream();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,407,"nStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,408,ew BufferedInputStream(new GZIPInputStream(rawStream)) :
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,409,ew BufferedInputStream(rawStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,403,dataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,404,//dataStream = status == HttpURLConnection.HTTP_OK ? conn.getInputStream() : conn.getErrorStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,405,"bodyStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,406,new BufferedInputStream(new GZIPInputStream(dataStream)) :
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,407,new BufferedInputStream(dataStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,411,es.byteData = DataUtil.readToByteBuffer(inStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,409,res.byteData = DataUtil.readToByteBuffer(bodyStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,414,f (inStream != null) inStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,412,if (bodyStream != null) bodyStream.close();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,413,if (dataStream != null) dataStream.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,439,"f (!ignoreContentType && (contentType == null || !(contentType.startsWith(""text/"") || contentType.startsWith(""application/xml"") || contentType.startsWith(""application/xhtml+xml""))))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,438,"if (!req.ignoreContentType() && (contentType == null || !(contentType.startsWith(""text/"") || contentType.startsWith(""application/xml"") || contentType.startsWith(""application/xhtml+xml""))))"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,51,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,52,public void ignoresContentTypeIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,53,"Document doc = Jsoup.connect(""http://jsoup.org/rez/osi_logo.png"").ignoreContentType(true).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,54,"assertEquals("""", doc.title()); // this will cause an ugly parse tree"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,59,"ssertEquals(""gzip"", ihVal(""HTTP_ACCEPT_ENCODING"", doc));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,65,"//assertEquals(""gzip"", ihVal(""HTTP_ACCEPT_ENCODING"", doc)); // current proxy removes gzip on post"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,123,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,124,public void ignoresExceptionIfSoConfigured() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,125,"Connection con = Jsoup.connect(""http://infohound.net/tools/404"").ignoreHttpErrors(true);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,126,Connection.Response res = con.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,127,Document doc = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,128,"assertEquals(404, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,129,"assertEquals(""Not Found"", doc.select(""h1"").first().text());"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,121,ssert(res.statusCode() == 302);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,136,"assertEquals(302, res.statusCode());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,137,"assertEquals(""http://jsoup.org"", res.header(""Location""));"
