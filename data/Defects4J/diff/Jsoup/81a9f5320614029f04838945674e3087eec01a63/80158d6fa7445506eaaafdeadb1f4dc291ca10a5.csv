is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,368,"tring prot = protocol.toString() + "":"";"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,368,String prot = protocol.toString();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,370,"if (prot.equals(""#"")) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,371,if (isValidAnchor(value)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,372,return true;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,373,} else {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,374,continue;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,378,"prot += "":"";"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,387,private boolean isValidAnchor(String value) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,388,"return value.startsWith(""#"") && !value.matches("".*\\s.*"");"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,79,@Test public void testCleanAnchorProtocol() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,80,"String validAnchor = ""<a href=\""#valid\"">Valid anchor</a>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,81,"String invalidAnchor = ""<a href=\""#anchor with spaces\"">Invalid anchor</a>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,83,// A Whitelist that does not allow anchors will strip them out.
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,84,"String cleanHtml = Jsoup.clean(validAnchor, Whitelist.relaxed());"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,85,"assertEquals(""<a>Valid anchor</a>"", cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,87,"cleanHtml = Jsoup.clean(invalidAnchor, Whitelist.relaxed());"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,88,"assertEquals(""<a>Invalid anchor</a>"", cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,90,// A Whitelist that allows them will keep them.
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,91,"Whitelist relaxedWithAnchor = Whitelist.relaxed().addProtocols(""a"", ""href"", ""#"");"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,93,"cleanHtml = Jsoup.clean(validAnchor, relaxedWithAnchor);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,94,"assertEquals(validAnchor, cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,96,// An invalid anchor is never valid.
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,97,"cleanHtml = Jsoup.clean(invalidAnchor, relaxedWithAnchor);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,98,"assertEquals(""<a>Invalid anchor</a>"", cleanHtml);"
