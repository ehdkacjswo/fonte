is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,132,ensureMetaCharset();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,237,"lement metaCharset = select(""meta[charset]"").first();"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,239,OutputSettings.Syntax syntax = outputSettings().syntax();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,239,f( metaCharset != null ) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,240,"etaCharset.attr(""charset"", outputSettings.charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,241,if( syntax == OutputSettings.Syntax.html ) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,242,"Element metaCharset = select(""meta[charset]"").first();"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,244,if( metaCharset != null ) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,245,"metaCharset.attr(""charset"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,247,else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,248,Element head = head();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,250,if( head != null ) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,251,"head.appendElement(""meta"").attr(""charset"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,255,// Remove obsolete elements
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,256,"select(""meta[name=charset]"").remove();"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,242,lse {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,243,lement head = head();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,258,else if( syntax == OutputSettings.Syntax.xml ) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,259,Node node = childNodes().get(0);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,245,f( head != null ) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,246,"ead.appendElement(""meta"").attr(""charset"", outputSettings.charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,261,if( node instanceof XmlDeclaration ) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,262,XmlDeclaration decl = (XmlDeclaration) node;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,264,"if( decl.attr(XmlDeclaration.DECL_KEY).equals(""xml"") ) {"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,265,"decl.attr(""encoding"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,267,"final String version = decl.attr(""version"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,269,if( version != null ) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,270,"decl.attr(""version"", ""1.0"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,273,else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,274,"decl = new XmlDeclaration(""xml"", baseUri, false);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,275,"decl.attr(""version"", ""1.0"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,276,"decl.attr(""encoding"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,278,prependChild(decl);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,281,else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,282,"XmlDeclaration decl = new XmlDeclaration(""xml"", baseUri, false);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,283,"decl.attr(""version"", ""1.0"");"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,284,"decl.attr(""encoding"", charset().displayName());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,286,prependChild(decl);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,250,/ Remove obsolete elements
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,251,"elect(""meta[name=charset]"").remove();"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,289,else {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,290,// Unsupported syntax - nothing to do yet
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,8,"rivate static final String DECL_KEY = ""declaration"";"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,8,"static final String DECL_KEY = ""declaration"";"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,32,eturn attributes.get(DECL_KEY);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,32,final String decl = attributes.get(DECL_KEY);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,"if( decl.equals(""xml"") == true && attributes.size() > 1 ) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,35,StringBuilder sb = new StringBuilder(decl);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,36,"final String version = attributes.get(""version"");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,if( version != null ) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,39,"sb.append("" version=\"""").append(version).append(""\"""");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,42,"final String encoding = attributes.get(""encoding"");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,44,if( encoding != null ) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,45,"sb.append("" encoding=\"""").append(encoding).append(""\"""");"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,48,return sb.toString();
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,50,else {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,51,return attributes.get(DECL_KEY);
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,195,oc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,195,docNoCharset.charset(Charset.forName(charsetUtf8));
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,197,"ssertEquals(charsetUtf8, doc.select(""meta[charset]"").first().attr(""charset""));"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,198,"ssertEquals(htmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,197,"assertEquals(charsetUtf8, docNoCharset.select(""meta[charset]"").first().attr(""charset""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,198,"assertEquals(htmlCharsetUTF8, docNoCharset.toString());"
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,233,oc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,233,docDisabled.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,247,docCleanup.charset(Charset.forName(charsetUtf8));
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,248,"ssertEquals(htmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,249,"assertEquals(htmlCharsetUTF8, docCleanup.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,252,@Test
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,253,public void testMetaCharsetUpdateXml() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,254,// Existing encoding definition
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,255,"final Document doc = new Document("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,256,"doc.appendElement(""root"").text(""node"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,257,doc.outputSettings().syntax(Syntax.xml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,258,doc.updateMetaCharset(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,260,"XmlDeclaration decl = new XmlDeclaration(""xml"", """", false);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,261,"decl.attr(""version"", ""1.0"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,262,"decl.attr(""encoding"", ""changeThis"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,263,doc.prependChild(decl);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,265,"final String charsetUtf8 = ""UTF-8"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,266,doc.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,268,Node declNode = doc.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,269,assertTrue(declNode instanceof XmlDeclaration);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,270,XmlDeclaration selectedNode = (XmlDeclaration) declNode;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,272,"final String xmlCharsetUTF8 = ""<?xml version=\""1.0\"" encoding=\"""" + charsetUtf8 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,273,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,274,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,275,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,277,assertNotNull(declNode);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,278,"assertEquals(charsetUtf8, doc.charset().displayName());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,279,"assertEquals(charsetUtf8, selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,280,"assertEquals(""1.0"", selectedNode.attr(""version""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,281,"assertEquals(xmlCharsetUTF8, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,282,"assertEquals(doc.charset(), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,284,"final String charsetIso8859 = ""ISO-8859-1"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,285,doc.charset(Charset.forName(charsetIso8859));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,287,declNode = doc.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,288,assertTrue(declNode instanceof XmlDeclaration);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,289,selectedNode = (XmlDeclaration) declNode;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,291,"final String xmlCharsetISO = ""<?xml version=\""1.0\"" encoding=\"""" + charsetIso8859 + ""\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,292,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,293,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,294,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,296,assertNotNull(declNode);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,297,"assertEquals(charsetIso8859, doc.charset().displayName());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,298,"assertEquals(charsetIso8859, selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,299,"assertEquals(""1.0"", selectedNode.attr(""version""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,300,"assertEquals(xmlCharsetISO, doc.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,301,"assertEquals(doc.charset(), doc.outputSettings().charset());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,304,// No encoding definition
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,305,"final Document docNoCharset = new Document("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,306,"docNoCharset.appendElement(""root"").text(""node"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,307,docNoCharset.outputSettings().syntax(Syntax.xml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,308,docNoCharset.updateMetaCharset(true);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,309,docNoCharset.charset(Charset.forName(charsetUtf8));
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,311,declNode = docNoCharset.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,312,assertTrue(declNode instanceof XmlDeclaration);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,313,selectedNode = (XmlDeclaration) declNode;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,315,"assertEquals(charsetUtf8, selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,316,"assertEquals(xmlCharsetUTF8, docNoCharset.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,319,// Disabled update of encoding definition
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,320,"final Document docDisabled = new Document("""");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,321,"docDisabled.appendElement(""root"").text(""node"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,322,docDisabled.outputSettings().syntax(Syntax.xml);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,323,assertFalse(docDisabled.updateMetaCharset());
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,325,"final String xmlNoCharset = ""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,326,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,327,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,329,"assertEquals(xmlNoCharset, docDisabled.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,331,"decl = new XmlDeclaration(""xml"", """", false);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,332,"decl.attr(""version"", ""dontTouch"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,333,"decl.attr(""encoding"", ""dontTouch"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,334,docDisabled.prependChild(decl);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,336,"final String xmlCharset = ""<?xml version=\""dontTouch\"" encoding=\""dontTouch\"">\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,337,"""<root>\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,338,""" node\n"" +"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,339,"""</root>"";"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,341,"assertEquals(xmlCharset, docDisabled.toString());"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,343,declNode = docDisabled.childNode(0);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,344,assertTrue(declNode instanceof XmlDeclaration);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,345,selectedNode = (XmlDeclaration) declNode;
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,347,"assertEquals(""dontTouch"", selectedNode.attr(""encoding""));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,348,"assertEquals(""dontTouch"", selectedNode.attr(""version""));"
