is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,1,ackage org.jsoup.helper;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,3,mport java.util.Iterator;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,4,mport java.util.LinkedList;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,5,mport java.util.ListIterator;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,8, Provides a descending iterator and other 1.6 methods to allow support on the 1.5 JRE.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,9, @param <E> Type of elements
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,11,ublic class DescendableLinkedList<E> extends LinkedList<E> {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,14, Create a new DescendableLinkedList.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,16,ublic DescendableLinkedList() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,17,uper();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,21, Add a new element to the start of the list.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,22, @param e element to add
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,24,ublic void push(E e) {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,25,ddFirst(e);
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,29," Look at the last element, if there is one."
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,30," @return the last element, or null"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,32,ublic E peekLast() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,33,eturn size() == 0 ? null : getLast();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,37," Remove and return the last element, if there is one"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,38," @return the last element, or null"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,40,ublic E pollLast() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,41,eturn size() == 0 ? null : removeLast();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,45, Get an iterator that starts and the end of the list and works towards the start.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,46, @return an iterator that starts and the end of the list and works towards the start.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,48,ublic Iterator<E> descendingIterator() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,49,eturn new DescendingIterator<E>(size());
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,52,rivate class DescendingIterator<E> implements Iterator<E> {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,53,rivate final ListIterator<E> iter;
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,55,"SuppressWarnings(""unchecked"")"
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,56,rivate DescendingIterator(int index) {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,57,ter = (ListIterator<E>) listIterator(index);
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,61, Check if there is another element on the list.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,62, @return if another element
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,64,ublic boolean hasNext() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,65,eturn iter.hasPrevious();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,69, Get the next element.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,70, @return the next element.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,72,ublic E next() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,73,eturn iter.previous();
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,77, Remove the current element.
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,79,ublic void remove() {
False,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,80,ter.remove();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,296,"eaders = new LinkedHashMap<String, String>();"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,297,"ookies = new LinkedHashMap<String, String>();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,296,headers = new LinkedHashMap<>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,297,cookies = new LinkedHashMap<>();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,480,ata = new ArrayList<Connection.KeyVal>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,480,data = new ArrayList<>();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,851, catch (NoSuchAlgorithmException e) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,852,"hrow new IOException(""Can't create unsecure trust manager"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,853, catch (KeyManagementException e) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,851,} catch (NoSuchAlgorithmException | KeyManagementException e) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,882,"inal LinkedHashMap<String, List<String>> headers = new LinkedHashMap<String, List<String>>();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,880,"final LinkedHashMap<String, List<String>> headers = new LinkedHashMap<>();"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,896,inal ArrayList<String> vals = new ArrayList<String>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,894,final ArrayList<String> vals = new ArrayList<>();
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,74,"rivate final HashMap<String, String> namespaces = new HashMap<String, String>(); // prefix => urn"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,74,"private final HashMap<String, String> namespaces = new HashMap<>(); // prefix => urn"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,103,"ttributes = new LinkedHashMap<String, Attribute>(2);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,103,attributes = new LinkedHashMap<>(2);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,175,"ttributes = new LinkedHashMap<String, Attribute>(incoming.size());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,175,attributes = new LinkedHashMap<>(incoming.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,196,ist<Attribute> list = new ArrayList<Attribute>(attributes.size());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,196,List<Attribute> list = new ArrayList<>(attributes.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,278,"lone.attributes = new LinkedHashMap<String, Attribute>(attributes.size());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,278,clone.attributes = new LinkedHashMap<>(attributes.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,288,"ttributes = new LinkedHashMap<String, Attribute>(2);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,288,attributes = new LinkedHashMap<>(2);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,140,ist<Node> toMove = new ArrayList<Node>();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,140,List<Node> toMove = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,162,ist<Node> toMove = new ArrayList<Node>();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,162,List<Node> toMove = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,238,hildren = new ArrayList<Element>(size);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,238,children = new ArrayList<>(size);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,239,//noinspection ForLoopReplaceableByForEach (beacause it allocates an Iterator which is wasteful here)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,244,hadowChildrenRef = new WeakReference<List<Element>>(children);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,245,shadowChildrenRef = new WeakReference<>(children);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,275,ist<TextNode> textNodes = new ArrayList<TextNode>();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,276,List<TextNode> textNodes = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,293,ist<DataNode> dataNodes = new ArrayList<DataNode>();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,294,List<DataNode> dataNodes = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,389,rrayList<Node> nodes = new ArrayList<Node>(children);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,390,ArrayList<Node> nodes = new ArrayList<>(children);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1112,et<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1113,Set<String> classNames = new LinkedHashSet<>(Arrays.asList(names));
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,77,"rivate static final HashMap<String, String> multipoints = new HashMap<String, String>(); // name -> multiple character references"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,77,"private static final HashMap<String, String> multipoints = new HashMap<>(); // name -> multiple character references"
False,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,73,rrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,73,ArrayList<Connection.KeyVal> data = new ArrayList<>();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,231,ist<Node> children = new ArrayList<Node>(childNodes.size());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,231,List<Node> children = new ArrayList<>(childNodes.size());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,374,//noinspection ForLoopReplaceableByForEach (beacause it allocates an Iterator which is wasteful here)
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,507,ist<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,508,List<Node> siblings = new ArrayList<>(nodes.size() - 1);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,657,inkedList<Node> nodesToProcess = new LinkedList<Node>();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,658,LinkedList<Node> nodesToProcess = new LinkedList<>();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,22,"ublic static final String[] TagsSearchInScope = new String[]{""applet"", ""caption"", ""html"", ""table"", ""td"", ""th"", ""marquee"", ""object""};"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,22,"private static final String[] TagsSearchInScope = new String[]{""applet"", ""caption"", ""html"", ""table"", ""td"", ""th"", ""marquee"", ""object""};"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,69,ormattingElements = new ArrayList<Element>();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,70,endingTableCharacters = new ArrayList<String>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,69,formattingElements = new ArrayList<>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,70,pendingTableCharacters = new ArrayList<>();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,539,endingTableCharacters = new ArrayList<String>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,539,pendingTableCharacters = new ArrayList<>();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,274,// todo - refactor to a switch statement
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,990,tring name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,991,"f (name.equals(""html""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,992,"eturn tb.process(t, InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,993,"lse if (name.equals(""col""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,994,b.insertEmpty(startTag);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,995,lse
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,996,"eturn anythingElse(t, tb);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,991,switch (startTag.normalName()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,992,"case ""html"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,993,"return tb.process(t, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,994,"case ""col"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,995,tb.insertEmpty(startTag);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,996,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,997,default:
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,998,"return anythingElse(t, tb);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1000,ame = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1001,"f (name.equals(""colgroup"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1003,"if (endTag.normalName.equals(""colgroup"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1259,"f (name.equals(""optgroup"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1260,"f (tb.currentElement().nodeName().equals(""option"") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(""optgroup""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1261,"b.processEndTag(""option"");"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1262,"f (tb.currentElement().nodeName().equals(""optgroup""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1263,b.pop();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1264,lse
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1265,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1266," else if (name.equals(""option"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1267,"f (tb.currentElement().nodeName().equals(""option""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1268,b.pop();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1269,lse
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1270,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1271," else if (name.equals(""select"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1272,f (!tb.inSelectScope(name)) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1273,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1274,eturn false;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1275, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1276,b.popStackToClose(name);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1277,b.resetInsertionMode();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1279, else
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1280,"eturn anythingElse(t, tb);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1261,switch (name) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1262,"case ""optgroup"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1263,"if (tb.currentElement().nodeName().equals(""option"") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(""optgroup""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1264,"tb.processEndTag(""option"");"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1265,"if (tb.currentElement().nodeName().equals(""optgroup""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1266,tb.pop();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1267,else
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1268,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1269,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1270,"case ""option"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1271,"if (tb.currentElement().nodeName().equals(""option""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1272,tb.pop();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1273,else
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1274,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1275,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1276,"case ""select"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1277,if (!tb.inSelectScope(name)) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1278,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1279,return false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1280,} else {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1281,tb.popStackToClose(name);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1282,tb.resetInsertionMode();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1284,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1285,default:
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1286,"return anythingElse(t, tb);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1354,tring name = start.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1355,"f (name.equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1356,"eturn tb.process(start, InBody);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1357," else if (name.equals(""frameset"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1358,b.insert(start);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1359," else if (name.equals(""frame"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1360,b.insertEmpty(start);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1361," else if (name.equals(""noframes"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1362,"eturn tb.process(start, InHead);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1363, else {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1364,b.error(this);
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1365,eturn false;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1361,switch (start.normalName()) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1362,"case ""html"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1363,"return tb.process(start, InBody);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1364,"case ""frameset"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1365,tb.insert(start);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1366,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1367,"case ""frame"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1368,tb.insertEmpty(start);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1369,break;
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1370,"case ""noframes"":"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1371,"return tb.process(start, InHead);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1372,default:
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1373,tb.error(this);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1374,return false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,14,"rivate static final Map<String, Tag> tags = new HashMap<String, Tag>(); // map of known tags"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,14,"private static final Map<String, Tag> tags = new HashMap<>(); // map of known tags"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,38,tack = new ArrayList<Element>(32);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,38,stack = new ArrayList<>(32);
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,193,agNames = new HashSet<TagName>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,194,"ttributes = new HashMap<TagName, Set<AttributeKey>>();"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,195,"nforcedAttributes = new HashMap<TagName, Map<AttributeKey, AttributeValue>>();"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,196,"rotocols = new HashMap<TagName, Map<AttributeKey, Set<Protocol>>>();"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,193,tagNames = new HashSet<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,194,attributes = new HashMap<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,195,enforcedAttributes = new HashMap<>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,196,protocols = new HashMap<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,261,et<AttributeKey> attributeSet = new HashSet<AttributeKey>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,261,Set<AttributeKey> attributeSet = new HashSet<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,296,et<AttributeKey> attributeSet = new HashSet<AttributeKey>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,296,Set<AttributeKey> attributeSet = new HashSet<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,346,"ap<AttributeKey, AttributeValue> attrMap = new HashMap<AttributeKey, AttributeValue>();"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,346,"Map<AttributeKey, AttributeValue> attrMap = new HashMap<>();"
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,425,"ttrMap = new HashMap<AttributeKey, Set<Protocol>>();"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,425,attrMap = new HashMap<>();
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,431,rotSet = new HashSet<Protocol>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,431,protSet = new HashSet<>();
False,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,19,valuators = new ArrayList<Evaluator>();
True,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,19,evaluators = new ArrayList<>();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,88,ist<String> attrs = new ArrayList<String>(size());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,88,List<String> attrs = new ArrayList<>(size());
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,234,rrayList<String> texts = new ArrayList<String>(size());
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,234,ArrayList<String> texts = new ArrayList<>(size());
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,580,ashSet<Element> combo = new LinkedHashSet<Element>();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,580,HashSet<Element> combo = new LinkedHashSet<>();
False,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,624,rrayList<FormElement> forms = new ArrayList<FormElement>();
True,src/main/java/org/jsoup/select/Elements.java,src/main/java/org/jsoup/select/Elements.java,624,ArrayList<FormElement> forms = new ArrayList<>();
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,23,rivate List<Evaluator> evals = new ArrayList<Evaluator>();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,23,private List<Evaluator> evals = new ArrayList<>();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,133,rrayList<Element> elements = new ArrayList<Element>();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,134,"dentityHashMap<Element, Boolean> seenElements = new IdentityHashMap<Element, Boolean>();"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,133,ArrayList<Element> elements = new ArrayList<>();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,134,"IdentityHashMap<Element, Boolean> seenElements = new IdentityHashMap<>();"
