is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,6,import org.jsoup.parser.Parser;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,21,private Parser parser; // the parser used to parse this document
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,46,doc.parser = doc.parser();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,581,* Get the parser that was used to parse this document.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,582,* @return the parser
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,584,public Parser parser() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,585,return parser;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,589,* Set the parser used to create this document. This parser is then used when further parsing within this document
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,590,* is required.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,591,* @param parser the configured parser to use when further parsing is required for this document.
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,592,"* @return this document, for chaining."
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,594,public Document parser(Parser parser) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,595,this.parser = parser;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,596,return this;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,7,mport org.jsoup.parser.Parser;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,144,"ag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,143,"tag = Tag.valueOf(tagName, getParser().settings()); // maintains the case option of the original parse"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,486,"lement child = new Element(Tag.valueOf(tagName), baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,485,"Element child = new Element(Tag.valueOf(tagName, getParser().settings()), baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,499,"lement child = new Element(Tag.valueOf(tagName), baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,498,"Element child = new Element(Tag.valueOf(tagName, getParser().settings()), baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,539,"ist<Node> nodes = Parser.parseFragment(html, this, baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,537,"List<Node> nodes = getParser().parseFragmentInput(html, this, baseUri());"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,553,"ist<Node> nodes = Parser.parseFragment(html, this, baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,550,"List<Node> nodes = getParser().parseFragmentInput(html, this, baseUri());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,6,import org.jsoup.parser.HtmlTreeBuilder;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,80, <b>case insensitive</b>.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,81,* <b>case insensitive</b>. The key will be set with case sensitivity as set in the parser settings.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,87,attributeKey = getParser().settings().normalizeAttribute(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,335,"ist<Node> nodes = Parser.parseFragment(html, context, baseUri());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,337,"List<Node> nodes = getParser().parseFragmentInput(html, context, baseUri());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,348,"ist<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,350,"List<Node> wrapChildren = getParser().parseFragmentInput(html, context, baseUri());"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,584,Parser getParser() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,585,Document doc = ownerDocument();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,586,return doc != null && doc.parser() != null ? doc.parser() : new Parser(new HtmlTreeBuilder());
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,64,"rotected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,65,"uper.initialiseParse(input, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,64,"protected void initialiseParse(Reader input, String baseUri, Parser parser) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,65,"super.initialiseParse(input, baseUri, parser);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,82,"ist<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,82,"List<Node> parseFragment(String inputFragment, Element context, String baseUri, Parser parser) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,85,"nitialiseParse(new StringReader(inputFragment), baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,85,"initialiseParse(new StringReader(inputFragment), baseUri, parser);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,193,f (errors.canAddError())
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,194,"rrors.add(new ParseError(reader.pos(), ""Unexpected token [%s] when in state [%s]"", currentToken.tokenType(), state));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,193,if (parser.getErrors().canAddError())
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,194,"parser.getErrors().add(new ParseError(reader.pos(), ""Unexpected token [%s] when in state [%s]"", currentToken.tokenType(), state));"
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,38,tring normalizeTag(String name) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,38,public String normalizeTag(String name) {
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,45,tring normalizeAttribute(String name) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,45,public String normalizeAttribute(String name) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,19,rivate int maxErrors = DEFAULT_MAX_ERRORS;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,29,errors = ParseErrorList.noTracking();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,33,rrors = isTrackErrors() ? ParseErrorList.tracking(maxErrors) : ParseErrorList.noTracking();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,34,"eturn treeBuilder.parse(new StringReader(html), baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,33,"return treeBuilder.parse(new StringReader(html), baseUri, this);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,38,rrors = isTrackErrors() ? ParseErrorList.tracking(maxErrors) : ParseErrorList.noTracking();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,39,"eturn treeBuilder.parse(inputHtml, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,37,"return treeBuilder.parse(inputHtml, baseUri, this);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,40,"public List<Node> parseFragmentInput(String fragment, Element context, String baseUri) {"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,41,"return treeBuilder.parseFragment(fragment, context, baseUri, this);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,59,treeBuilder.parser = this;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,66,eturn maxErrors > 0;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,68,return errors.getMaxSize() > 0;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,75,his.maxErrors = maxErrors;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,77,errors = maxErrors > 0 ? ParseErrorList.tracking(maxErrors) : ParseErrorList.noTracking();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,83,ublic List<ParseError> getErrors() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,85,public ParseErrorList getErrors() {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,107,"eturn treeBuilder.parse(new StringReader(html), baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,109,"return treeBuilder.parse(new StringReader(html), baseUri, new Parser(treeBuilder));"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,122,"eturn treeBuilder.parseFragment(fragmentHtml, context, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,124,"return treeBuilder.parseFragment(fragmentHtml, context, baseUri, new Parser(treeBuilder));"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,138,"eturn treeBuilder.parseFragment(fragmentHtml, context, baseUri, errorList, treeBuilder.defaultSettings());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,140,Parser parser = new Parser(treeBuilder);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,141,parser.errors = errorList;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,142,"return treeBuilder.parseFragment(fragmentHtml, context, baseUri, parser);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,150,"eturn treeBuilder.parseFragment(fragmentXml, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,154,"return treeBuilder.parseFragment(fragmentXml, baseUri, new Parser(treeBuilder));"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,7,import org.jsoup.nodes.Node;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,11,import java.util.List;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,17,protected Parser parser;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,21,rotected ParseErrorList errors; // null when not tracking errors
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,29,"rotected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,30,"protected void initialiseParse(Reader input, String baseUri, Parser parser) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,34,his.settings = settings;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,35,doc.parser(parser);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,36,this.parser = parser;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,37,settings = parser.settings();
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,36,his.errors = errors;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,38,"okeniser = new Tokeniser(reader, errors);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,40,"tokeniser = new Tokeniser(reader, parser.getErrors());"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,43,"ocument parse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,44,"nitialiseParse(input, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,45,"Document parse(Reader input, String baseUri, Parser parser) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,46,"initialiseParse(input, baseUri, parser);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,51,"abstract List<Node> parseFragment(String inputFragment, Element context, String baseUri, Parser parser);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,5,mport org.jsoup.nodes.*;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,5,import org.jsoup.nodes.CDataNode;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,6,import org.jsoup.nodes.Comment;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,7,import org.jsoup.nodes.Document;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,8,import org.jsoup.nodes.DocumentType;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,9,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,10,import org.jsoup.nodes.Node;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,11,import org.jsoup.nodes.TextNode;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,12,import org.jsoup.nodes.XmlDeclaration;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,23,"ocument parse(Reader input, String baseUri) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,24,"eturn parse(input, baseUri, ParseErrorList.noTracking(), ParseSettings.preserveCase);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,30,@Override
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,31,"protected void initialiseParse(Reader input, String baseUri, Parser parser) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,32,"super.initialiseParse(input, baseUri, parser);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,33,stack.add(doc); // place the document onto the stack. differs from HtmlTreeBuilder (not on stack)
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,34,doc.outputSettings().syntax(Document.OutputSettings.Syntax.xml);
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,27,"ocument parse(String input, String baseUri) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,28,"eturn parse(new StringReader(input), baseUri, ParseErrorList.noTracking(), ParseSettings.preserveCase);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,37,"Document parse(Reader input, String baseUri) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,38,"return parse(input, baseUri, new Parser(this));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,31,Override
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,32,"rotected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,33,"uper.initialiseParse(input, baseUri, errors, settings);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,34,tack.add(doc); // place the document onto the stack. differs from HtmlTreeBuilder (not on stack)
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,35,oc.outputSettings().syntax(Document.OutputSettings.Syntax.xml);
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,41,"Document parse(String input, String baseUri) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,42,"return parse(new StringReader(input), baseUri, new Parser(this));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,140,"ist<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,141,"nitialiseParse(new StringReader(inputFragment), baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,148,"List<Node> parseFragment(String inputFragment, String baseUri, Parser parser) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,149,"initialiseParse(new StringReader(inputFragment), baseUri, parser);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,154,"List<Node> parseFragment(String inputFragment, Element context, String baseUri, Parser parser) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,155,"return parseFragment(inputFragment, baseUri, parser);"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,387,"/ manually specifying tag and attributes should now preserve case, regardless of parse mode"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,388,"ssertEquals(""<html><head></head><body><div id=\""1\""><p>Hello</p><p>there</p><P CLASS=\""second\"">now</P></div></body></html>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,387,// manually specifying tag and attributes should maintain case based on parser settings
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,388,"assertEquals(""<html><head></head><body><div id=\""1\""><p>Hello</p><p>there</p><p class=\""second\"">now</p></div></body></html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1066,"Element div = doc.selectFirst(""#1"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1067,"div.after(""<TaG>One</TaG>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1068,"assertEquals(""<tag>One</tag>"", TextUtil.stripNewlines(div.nextElementSibling().outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1077,"Element div = doc.selectFirst(""#1"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1078,"div.after(""<TaG ID=one>One</TaG>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1079,"assertEquals(""<TaG id=\""one\"">One</TaG>"", TextUtil.stripNewlines(div.nextElementSibling().outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1088,"Element div = doc.selectFirst(""#1"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1089,"div.after(""<TaG ID=one>One</TaG>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1090,"assertEquals(""<tag ID=\""one\"">One</tag>"", TextUtil.stripNewlines(div.nextElementSibling().outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1099,"Element div = doc.selectFirst(""#1"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1100,"div.after(""<TaG ID=one>One</TaG>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,1101,"assertEquals(""<TaG ID=\""one\"">One</TaG>"", TextUtil.stripNewlines(div.nextElementSibling().outerHtml()));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,12,import org.jsoup.select.Elements;
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,188,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,189,public void appendPreservesCaseByDefault() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,190,"String xml = ""<One>One</One>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,191,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,192,"Elements one = doc.select(""One"");"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,193,"one.append(""<Two ID=2>Two</Two>"");"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,194,"assertEquals(""<One>One<Two ID=\""2\"">Two</Two></One>"", TextUtil.stripNewlines(doc.html()));"
