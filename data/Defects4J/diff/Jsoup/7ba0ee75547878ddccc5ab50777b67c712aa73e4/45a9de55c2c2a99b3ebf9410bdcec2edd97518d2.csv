is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,22,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,415,alue = headers.get(name.toLowerCase());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,416,value = headers.get(lowerCase(name));
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,425,tring lc = name.toLowerCase();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,426,String lc = lowerCase(name);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,427,f (entry.getKey().toLowerCase().equals(lc))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,428,if (lowerCase(entry.getKey()).equals(lc))
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,1,package org.jsoup.internal;
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,3,import java.util.Locale;
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,5,public class Normalizer {
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,6,public static String lowerCase(String input) {
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,7,return input.toLowerCase(Locale.ENGLISH);
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,10,public static String normalize(String input) {
True,src/main/java/org/jsoup/internal/Normalizer.java,src/main/java/org/jsoup/internal/Normalizer.java,11,return lowerCase(input).trim();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,29,import static org.jsoup.internal.Normalizer.normalize;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,691,agName = tagName.toLowerCase().trim();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,693,tagName = normalize(tagName);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,18,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,83,"lse if (attributeKey.toLowerCase().startsWith(""abs:""))"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,85,"else if (lowerCase(attributeKey).startsWith(""abs:""))"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,6,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,40,ame = name.toLowerCase();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,42,name = lowerCase(name);
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,47,ame = name.toLowerCase();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,49,name = lowerCase(name);
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,54,ttr.setKey(attr.getKey().toLowerCase());
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,56,attr.setKey(lowerCase(attr.getKey()));
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,8,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,145,ormalName = name.toLowerCase();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,147,normalName = lowerCase(name);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,161,ormalName = tagName.toLowerCase();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,163,normalName = lowerCase(tagName);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,234,ormalName = tagName.toLowerCase();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,236,normalName = lowerCase(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,18,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,545,f (value.toLowerCase().startsWith(prot)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,547,if (lowerCase(value).startsWith(prot)) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,15,import static org.jsoup.internal.Normalizer.lowerCase;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,16,import static org.jsoup.internal.Normalizer.normalize;
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,150,his.keyPrefix = keyPrefix.toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,153,this.keyPrefix = lowerCase(keyPrefix);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,157,f (attribute.getKey().toLowerCase().startsWith(keyPrefix))
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,160,if (lowerCase(attribute.getKey()).startsWith(keyPrefix))
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,220,eturn element.hasAttr(key) && element.attr(key).toLowerCase().startsWith(value); // value is lower case already
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,223,return element.hasAttr(key) && lowerCase(element.attr(key)).startsWith(value); // value is lower case already
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,240,eturn element.hasAttr(key) && element.attr(key).toLowerCase().endsWith(value); // value is lower case
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,243,return element.hasAttr(key) && lowerCase(element.attr(key)).endsWith(value); // value is lower case
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,260,eturn element.hasAttr(key) && element.attr(key).toLowerCase().contains(value); // value is lower case
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,263,return element.hasAttr(key) && lowerCase(element.attr(key)).contains(value); // value is lower case
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,278,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,281,this.key = normalize(key);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,305,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,308,this.key = normalize(key);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,310,his.value = value.trim().toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,313,this.value = normalize(value);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,651,his.searchText = searchText.toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,654,this.searchText = lowerCase(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,656,eturn (element.text().toLowerCase().contains(searchText));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,659,return lowerCase(element.text()).contains(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,672,his.searchText = searchText.toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,675,this.searchText = lowerCase(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,677,eturn (element.data().toLowerCase().contains(searchText));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,680,return lowerCase(element.data()).contains(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,693,his.searchText = searchText.toLowerCase();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,696,this.searchText = lowerCase(searchText);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,698,eturn (element.ownText().toLowerCase().contains(searchText));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,701,return lowerCase(element.ownText()).contains(searchText);
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,12,import static org.jsoup.internal.Normalizer.normalize;
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,225,"vals.add(new CombiningEvaluator.Or(new Evaluator.Tag(tagName.trim().toLowerCase()), new Evaluator.TagEndsWith(tagName.replace(""*|"", "":"").trim().toLowerCase())));"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,227,"evals.add(new CombiningEvaluator.Or(new Evaluator.Tag(normalize(tagName)), new Evaluator.TagEndsWith(normalize(tagName.replace(""*|"", "":"")))));"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,291,"tring argS = tq.chompTo("")"").trim().toLowerCase();"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,293,"String argS = normalize(tq.chompTo("")""));"
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,1,package org.jsoup;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,3,import org.junit.rules.TestRule;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,4,import org.junit.runner.Description;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,5,import org.junit.runners.model.Statement;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,7,import java.lang.annotation.Retention;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,8,import java.lang.annotation.RetentionPolicy;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,9,import java.util.Locale;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,11,public class MultiLocaleRule implements TestRule {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,12,@Retention(RetentionPolicy.RUNTIME)
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,13,public @interface MultiLocaleTest {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,16,"public Statement apply(final Statement statement, final Description description) {"
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,17,return new Statement() {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,18,@Override
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,19,public void evaluate() throws Throwable {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,20,MultiLocaleTest annotation = description.getAnnotation(MultiLocaleTest.class);
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,21,if (annotation == null) {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,22,statement.evaluate();
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,23,return;
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,26,evaluateWithLocale(Locale.ENGLISH);
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,27,"evaluateWithLocale(new Locale(""tr""));"
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,30,private void evaluateWithLocale(Locale locale) throws Throwable {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,31,Locale oldLocale = Locale.getDefault();
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,32,Locale.setDefault(locale);
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,33,try {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,34,statement.evaluate();
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,35,} finally {
True,src/test/java/org/jsoup/MultiLocaleRule.java,src/test/java/org/jsoup/MultiLocaleRule.java,36,Locale.setDefault(oldLocale);
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,5,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,6,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,8,import org.junit.Rule;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,20,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,32,Test public void caseInsensitiveHeaders() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,37,@Test @MultiLocaleTest public void caseInsensitiveHeaders() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,47,"assertTrue(res.hasHeader(""ACCEPT-ENCODING""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,50,"assertEquals(""gzip"", res.header(""ACCEPT-ENCODING""));"
False,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,50,"es.header(""accept-encoding"", ""deflate"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,57,"res.removeHeader(""ACCEPT-ENCODING"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,58,"assertFalse(res.hasHeader(""Accept-Encoding""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,60,"res.header(""ACCEPT-ENCODING"", ""deflate"");"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,5,import org.jsoup.nodes.Attributes;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,6,import org.junit.Rule;
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,7,Test
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,8,ublic void caseSupport() {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,12,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,14,@Test @MultiLocaleTest public void caseSupport() {
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,14,"ssertEquals(""FOO"", bothOn.normalizeTag(""FOO""));"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,15,"ssertEquals(""FOO"", bothOn.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,20,"assertEquals(""IMG"", bothOn.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,21,"assertEquals(""ID"", bothOn.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,23,"assertEquals(""img"", bothOff.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,24,"assertEquals(""id"", bothOff.normalizeAttribute(""ID""));"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,17,"ssertEquals(""foo"", bothOff.normalizeTag(""FOO""));"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,18,"ssertEquals(""foo"", bothOff.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,26,"assertEquals(""IMG"", tagOn.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,27,"assertEquals(""id"", tagOn.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,29,"assertEquals(""img"", attrOn.normalizeTag(""IMG""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,30,"assertEquals(""ID"", attrOn.normalizeAttribute(""ID""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,33,@Test @MultiLocaleTest public void attributeCaseNormalization() throws Exception {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,34,"ParseSettings parseSettings = new ParseSettings(false, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,36,"String normalizedAttribute = parseSettings.normalizeAttribute(""HIDDEN"");"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,38,"assertEquals(""hidden"", normalizedAttribute);"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,20,"ssertEquals(""FOO"", tagOn.normalizeTag(""FOO""));"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,21,"ssertEquals(""foo"", tagOn.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,41,@Test @MultiLocaleTest public void attributesCaseNormalization() throws Exception {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,42,"ParseSettings parseSettings = new ParseSettings(false, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,43,Attributes attributes = new Attributes();
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,44,"attributes.put(""ITEM"", ""1"");"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,23,"ssertEquals(""foo"", attrOn.normalizeTag(""FOO""));"
False,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,24,"ssertEquals(""FOO"", attrOn.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,46,Attributes normalizedAttributes = parseSettings.normalizeAttributes(attributes);
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,48,"assertEquals(""item"", normalizedAttributes.asList().get(0).getKey());"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,5,import org.junit.Rule;
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,14,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,17,Test public void canBeInsensitive() {
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,18,"ag p1 = Tag.valueOf(""P"", ParseSettings.htmlDefault);"
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,19,"ag p2 = Tag.valueOf(""p"", ParseSettings.htmlDefault);"
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,20,"ssertEquals(p1, p2);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,22,@Test @MultiLocaleTest public void canBeInsensitive() {
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,23,"Tag script1 = Tag.valueOf(""script"", ParseSettings.htmlDefault);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,24,"Tag script2 = Tag.valueOf(""SCRIPT"", ParseSettings.htmlDefault);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,25,"assertSame(script1, script2);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,6,mport org.jsoup.nodes.Element;
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,9,import org.junit.Rule;
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,19,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,85,@Test @MultiLocaleTest public void whitelistedProtocolShouldBeRetained() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,86,Whitelist whitelist = Whitelist.none()
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,87,".addTags(""a"")"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,88,".addAttributes(""a"", ""href"")"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,89,".addProtocols(""a"", ""href"", ""something"");"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,91,"String cleanHtml = Jsoup.clean(""<a href=\""SOMETHING://x\""></a>"", whitelist);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,93,"assertEquals(""<a href=\""SOMETHING://x\""></a>"", TextUtil.stripNewlines(cleanHtml));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,3,import org.jsoup.MultiLocaleRule;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,4,import org.jsoup.MultiLocaleRule.MultiLocaleTest;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,8,import org.junit.Rule;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,19,@Rule public MultiLocaleRule rule = new MultiLocaleRule();
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,61,Test public void testByAttribute() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,62,"tring h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Bam /><div title=SLAM />"" +"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,66,@Test @MultiLocaleTest public void testByAttribute() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,67,"String h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Balim /><div title=SLIM />"" +"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,89,"ssertEquals(""Bam"", starts.last().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,94,"assertEquals(""Balim"", starts.last().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,91,"lements ends = doc.select(""[title$=am]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,96,"Elements ends = doc.select(""[title$=im]"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,93,"ssertEquals(""Bam"", ends.first().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,94,"ssertEquals(""SLAM"", ends.last().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,98,"assertEquals(""Balim"", ends.first().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,99,"assertEquals(""SLIM"", ends.last().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,96,"lements contains = doc.select(""[title*=a]"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,97,"ssertEquals(3, contains.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,98,"ssertEquals(""Bar"", contains.first().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,99,"ssertEquals(""SLAM"", contains.last().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,101,"Elements contains = doc.select(""[title*=i]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,102,"assertEquals(2, contains.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,103,"assertEquals(""Balim"", contains.first().attr(""title""));"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,104,"assertEquals(""SLIM"", contains.last().attr(""title""));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,144,Test public void testByAttributeStarting() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,145,"ocument doc = Jsoup.parse(""<div id=1 data-name=jsoup>Hello</div><p data-val=5 id=2>There</p><p id=3>No</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,149,@Test @MultiLocaleTest public void testByAttributeStarting() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,150,"Document doc = Jsoup.parse(""<div id=1 ATTRIBUTE data-name=jsoup>Hello</div><p data-val=5 id=2>There</p><p id=3>No</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,160,"assertEquals(1, doc.select(""[^attrib]"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,521,Test public void testPseudoContains() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,522,"ocument doc = Jsoup.parse(""<div><p>The Rain.</p> <p class=light>The <i>rain</i>.</p> <p>Rain, the.</p></div>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,528,@Test @MultiLocaleTest public void testPseudoContains() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,529,"Document doc = Jsoup.parse(""<div><p>The Rain.</p> <p class=light>The <i>RAIN</i>.</p> <p>Rain, the.</p></div>"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,530,"ssertEquals(""The <i>rain</i>."", ps2.last().html());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,537,"assertEquals(""The <i>RAIN</i>."", ps2.last().html());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,550,"Elements ps6 = doc.select("":contains(RAIN)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,551,"assertEquals(8, ps6.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,556,Test public void containsOwn() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,557,"ocument doc = Jsoup.parse(""<p id=1>Hello <b>there</b> now</p>"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,558,"lements ps = doc.select(""p:containsOwn(Hello now)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,566,@Test @MultiLocaleTest public void containsOwn() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,567,"Document doc = Jsoup.parse(""<p id=1>Hello <b>there</b> igor</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,568,"Elements ps = doc.select(""p:containsOwn(Hello IGOR)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,574,"Document doc2 = Jsoup.parse(""<p>Hello <b>there</b> IGOR</p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,575,"assertEquals(1, doc2.select(""p:containsOwn(igor)"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,706,Test public void containsData() {
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,707,"tring html = ""<p>jsoup</p><script>jsoup</script><span><!-- comments --></span>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,720,@Test @MultiLocaleTest public void containsData() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,721,"String html = ""<p>function</p><script>FUNCTION</script><style>item</style><span><!-- comments --></span>"";"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,711,"lements dataEls1 = body.select("":containsData(jsoup)"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,712,"lements dataEls2 = body.select(""script:containsData(jsoup)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,725,"Elements dataEls1 = body.select("":containsData(function)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,726,"Elements dataEls2 = body.select(""script:containsData(function)"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,714,"lements dataEls4 = body.select("":containsData(s)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,728,"Elements dataEls4 = body.select("":containsData(o)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,729,"Elements dataEls5 = body.select(""style:containsData(ITEM)"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,719,"ssertEquals(""<script>jsoup</script>"", dataEls2.outerHtml());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,734,"assertEquals(""<script>FUNCTION</script>"", dataEls2.outerHtml());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,741,"assertEquals(1, dataEls5.size());"
