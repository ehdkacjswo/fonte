is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,1,package org.jsoup.nodes;
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,3,import org.jsoup.parser.Tag;
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,5,import java.io.IOException;
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,8,"* Represents a {@link TextNode} as an {@link Element}, to enable text nodes to be selected with"
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,9,* the {@link org.jsoup.select.Selector} {@code :matchText} syntax.
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,11,public class PseudoTextElement extends Element {
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,13,"public PseudoTextElement(Tag tag, String baseUri, Attributes attributes) {"
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,14,"super(tag, baseUri, attributes);"
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,17,@Override
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,18,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,21,@Override
True,src/main/java/org/jsoup/nodes/PseudoTextElement.java,src/main/java/org/jsoup/nodes/PseudoTextElement.java,22,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,9,import org.jsoup.nodes.PseudoTextElement;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,10,import org.jsoup.nodes.TextNode;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,756,public static final class MatchText extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,758,@Override
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,759,"public boolean matches(Element root, Element element) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,760,if (element instanceof PseudoTextElement)
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,761,return true;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,763,List<TextNode> textNodes = element.textNodes();
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,764,for (TextNode textNode : textNodes) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,765,PseudoTextElement pel = new PseudoTextElement(
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,766,"org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes());"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,767,textNode.replaceWith(pel);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,768,pel.appendChild(textNode);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,770,return false;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,773,@Override
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,774,public String toString() {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,775,"return "":matchText"";"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,3,import org.jsoup.helper.StringUtil;
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,4,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,5,import org.jsoup.parser.TokenQueue;
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,8,mport org.jsoup.helper.StringUtil;
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,9,mport org.jsoup.helper.Validate;
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,10,mport org.jsoup.parser.TokenQueue;
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,203,"else if (tq.matchChomp("":matchText""))"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,204,evals.add(new Evaluator.MatchText());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,57,"* <tr><td><code>:matchText</code></td><td>treats text nodes as elements, and so allows you to match against and select text nodes.<p><b>Note</b> that using this selector will modify the DOM, so you may want to {@code clone} your document before using.</td><td>{@code p:matchText:firstChild} with input {@code <p>One<br />Two</p>} will return one {@link org.jsoup.nodes.PseudoTextElement} with text ""{@code One}"".</td></tr>"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,770,@Test public void textAsElements() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,771,"String html = ""<p>One<br>Two</p>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,772,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,773,String origHtml = doc.html();
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,775,"Elements one = doc.select(""p:matchText:first-child"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,776,"assertEquals(""One"", one.first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,778,"Elements two = doc.select(""p:matchText:last-child"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,779,"assertEquals(""Two"", two.first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,781,"assertEquals(origHtml, doc.html());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,783,"assertEquals(""Two"", doc.select(""p:matchText + br + *"").text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,786,@Test public void splitOnBr() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,787,"String html = ""<div><p>One<br>Two<br>Three</p></div>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,788,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,790,"Elements els = doc.select(""p:matchText"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,791,"assertEquals(3, els.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,792,"assertEquals(""One"", els.get(0).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,793,"assertEquals(""Two"", els.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,794,"assertEquals(""Three"", els.get(2).toString());"
