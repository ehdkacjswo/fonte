is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,83,or (int pos = 0; pos < string.length(); pos++) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,84,haracter c = string.charAt(pos);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,85,f (map.containsKey(c))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,86,ccum.append('&').append(map.get(c)).append(';');
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,87,lse if (encoder.canEncode(c))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,88,ccum.append(c.charValue());
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,83,"//@see ""http://stackoverflow.com/questions/1527856/how-can-i-iterate-through-the-unicode-codepoints-of-a-java-string"""
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,84,final int length = string.length();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,85,for (int offset = 0; offset < length; ) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,86,final int codePoint = string.codePointAt(offset);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,87,char[] chars = Character.toChars(codePoint);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,89,if (chars.length==1 && map.containsKey(chars[0]))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,90,accum.append('&').append(map.get(chars[0])).append(';');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,91,else if (encoder.canEncode(new String(chars)))
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,accum.append(new String(chars));
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,90,"ccum.append(""&#"").append((int) c).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,94,"accum.append(""&#"").append(codePoint).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,96,offset += Character.charCount(codePoint);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,100,"haracter consumeCharacterReference(Character additionalAllowedCharacter, boolean inAttribute) {"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,100,"char[] consumeCharacterReference(Character additionalAllowedCharacter, boolean inAttribute) {"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,127,eturn replacementChar;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,127,return new char[]{replacementChar};
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,131,eturn (char) charval;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,131,return Character.toChars(charval);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,153,eturn Entities.getCharacterByName(nameRef);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,153,return new char[]{Entities.getCharacterByName(nameRef)};
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,235,"haracter c = consumeCharacterReference(null, inAttribute);"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,236,f (c == null)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,235,"char[] c = consumeCharacterReference(null, inAttribute);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,236,if (c == null || c.length==0)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,34,"haracter c = t.consumeCharacterReference(null, false);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,35,f (c == null)
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,34,"char[] c = t.consumeCharacterReference(null, false);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,35,if (c == null||c.length==0)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,38,.emit(c);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,38,t.emit(new String(c));
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,69,"haracter c = t.consumeCharacterReference(null, false);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,70,f (c == null)
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,69,"char[] c = t.consumeCharacterReference(null, false);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,70,if (c == null||c.length==0)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,73,.emit(c);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,73,t.emit(new String(c));
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,209,"/ no default, as covered with above consumeToAny"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,209,"// no default, as covered with above consumeToAny"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,835,"/ no default, as covered in consumeToAny"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,835,"// no default, as covered in consumeToAny"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,944,"haracter ref = t.consumeCharacterReference('""', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,945,f (ref != null)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,946,.tagPending.appendAttributeValue(ref);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,944,"char[] ref = t.consumeCharacterReference('""', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,945,if (ref != null && ref.length>0)
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,946,t.tagPending.appendAttributeValue(new String(ref));
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,974,"haracter ref = t.consumeCharacterReference('\'', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,975,f (ref != null)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,976,.tagPending.appendAttributeValue(ref);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,974,"char[] ref = t.consumeCharacterReference('""', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,975,if (ref != null && ref.length>0)
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,976,t.tagPending.appendAttributeValue(new String(ref));
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1008,"haracter ref = t.consumeCharacterReference('>', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1009,f (ref != null)
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1010,.tagPending.appendAttributeValue(ref);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1008,"char[] ref = t.consumeCharacterReference('""', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1009,if (ref != null && ref.length>0)
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1010,t.tagPending.appendAttributeValue(new String(ref));
False,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,3,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,5,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,14,@Test public void testWithSupplementaryCharacterInAttributeKeyAndValue() {
True,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,15,String s = new String(Character.toChars(135361));
True,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,16,"Attribute attr = new Attribute(s, ""A"" + s + ""B"");"
True,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,17,"assertEquals(s + ""=\""A"" + s + ""B\"""", attr.html());"
True,src/test/java/org/jsoup/nodes/AttributeTest.java,src/test/java/org/jsoup/nodes/AttributeTest.java,18,"assertEquals(attr.html(), attr.toString());"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,25,@Test public void escapeSupplementaryCharacter(){
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,26,String text = new String(Character.toChars(135361));
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,27,"String escapedAscii = Entities.escape(text, Charset.forName(""ascii"").newEncoder(), Entities.EscapeMode.base);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,28,"assertEquals(""&#135361;"", escapedAscii);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,29,"String escapedUtf = Entities.escape(text, Charset.forName(""UTF-8"").newEncoder(), Entities.EscapeMode.base);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,30,"assertEquals(text, escapedUtf);"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,70,@Test public void testWithSupplementaryCharacter(){
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,71,Document doc = Jsoup.parse(new String(Character.toChars(135361)));
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,72,TextNode t = doc.body().textNodes().get(0);
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,73,"assertEquals(new String(Character.toChars(135361)), t.outerHtml().trim());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,10,ests that the selector selects correctly.
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,12,"author Jonathan Hedley, jonathan@hedley.net */"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,11,* Tests that the selector selects correctly.
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,13,"* @author Jonathan Hedley, jonathan@hedley.net"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,604,@Test public void selectSupplementaryCharacter() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,605,String s = new String(Character.toChars(135361));
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,606,"Document doc = Jsoup.parse(""<div k"" + s + ""='"" + s + ""'>^"" + s +""$/div>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,607,"assertEquals(""div"", doc.select(""div[k"" + s + ""]"").first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,608,"assertEquals(""div"", doc.select(""div:containsOwn("" + s + "")"").first().tagName());"
