is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,48,"<tr><td><code>:not(<em>selector</em>)</code></td><td>elements that do not match the <em>selector</em></td><code>div:not(.logo)</code> finds all divs that do not have the ""logo"" class</td></tr>"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,110,"} else if (tq.matches("":has("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,111,elements.addAll(root.getAllElements());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,183,"} else if (tq.matches("":not("")) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,184,return not();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,308,// :not(selector)
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,309,private Elements not() {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,310,"tq.consume("":not"");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,311,"String subQuery = tq.chompBalanced('(', ')');"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,312,"Validate.notEmpty(subQuery, "":not(selector) subselect must not be empty"");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,314,"return filterOut(root.getAllElements(), select(subQuery, root));"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,408,// exclude set. package open so that Elements can implement .not() selector.
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,409,"static Elements filterOut(Collection<Element> elements, Collection<Element> outs) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,410,Elements output = new Elements();
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,411,for (Element el: elements) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,412,boolean found = false;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,413,for (Element out: outs) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,414,if (el.equals(out)) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,415,found = true;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,416,break;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,419,if (!found)
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,420,output.add(el);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,422,return output;
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,423,"Elements els1 = doc.body().select("":has(p)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,424,"assertEquals(3, els1.size()); // body, div, dib"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,425,"assertEquals(""body"", els1.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,426,"assertEquals(""0"", els1.get(1).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,427,"assertEquals(""2"", els1.get(2).id());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,542,@Test public void notParas() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,543,"Document doc = Jsoup.parse(""<p id=1>One</p> <p>Two</p> <p><span>Three</span></p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,545,"Elements el1 = doc.select(""p:not([id=1])"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,546,"assertEquals(2, el1.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,547,"assertEquals(""Two"", el1.first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,548,"assertEquals(""Three"", el1.last().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,550,"Elements el2 = doc.select(""p:not(:has(span))"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,551,"assertEquals(2, el2.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,552,"assertEquals(""One"", el2.first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,553,"assertEquals(""Two"", el2.last().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,556,@Test public void notAll() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,557,"Document doc = Jsoup.parse(""<p>Two</p> <p><span>Three</span></p>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,559,"Elements el1 = doc.body().select("":not(p)""); // should just be the span"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,560,"assertEquals(2, el1.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,561,"assertEquals(""body"", el1.first().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,562,"assertEquals(""span"", el1.last().tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,565,@Test public void notClass() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,566,"Document doc = Jsoup.parse(""<div class=left>One</div><div class=right id=1><p>Two</p></div>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,568,"Elements el1 = doc.select(""div:not(.left)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,569,"assertEquals(1, el1.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,570,"assertEquals(""1"", el1.first().id());"
