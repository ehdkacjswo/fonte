is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,2,* Copyright 2011 The Apache Software Foundation.
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,6,* You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,13,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,14,* limitations under the License.
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,16,package org.apache.commons.math.optimization;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,18,import java.util.Arrays;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,19,import junit.framework.Assert;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,20,import org.apache.commons.math.MathRuntimeException;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,21,import org.apache.commons.math.TestUtils;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,22,import org.apache.commons.math.analysis.DifferentiableMultivariateRealFunction;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,23,import org.apache.commons.math.analysis.MultivariateRealFunction;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,24,import org.apache.commons.math.analysis.MultivariateVectorialFunction;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,25,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,26,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,27,import org.apache.commons.math.optimization.direct.BOBYQAOptimizer;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,28,import org.apache.commons.math.optimization.direct.PowellOptimizer;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,29,import org.apache.commons.math.optimization.general.AbstractScalarDifferentiableOptimizer;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,30,import org.apache.commons.math.optimization.general.ConjugateGradientFormula;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,31,import org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,32,import org.apache.commons.math.util.FastMath;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,33,import org.junit.Test;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,36,* an ever growing set of tests from NIST
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,37,* http://www.itl.nist.gov/div898/strd/nls/nls_main.shtml
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,38,* @author gregs
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,40,public class BatteryNISTTest {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,42,public static double[] lanczosNIST = {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,43,"2.5134, 0.00000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,44,"2.0443, 5.00000e-2,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,45,"1.6684, 1.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,46,"1.3664, 1.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,47,"1.1232, 2.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,48,"0.9269, 2.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,49,"0.7679, 3.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,50,"0.6389, 3.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,51,"0.5338, 4.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,52,"0.4479, 4.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,53,"0.3776, 5.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,54,"0.3197, 5.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,55,"0.2720, 6.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,56,"0.2325, 6.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,57,"0.1997, 7.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,58,"0.1723, 7.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,59,"0.1493, 8.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,60,"0.1301, 8.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,61,"0.1138, 9.00000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,62,"0.1000, 9.50000e-1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,63,"0.0883, 1.00000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,64,"0.0783, 1.05000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,65,"0.0698, 1.10000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,66,"0.0624, 1.15000};"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,67,/* the lanzcos objective function -------------------------------*/
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,68,"private final nistMVRF lanczosObjectFunc = new nistMVRF(lanczosNIST, 1, 24, 6) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,70,@Override
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,71,"protected double partialDeriv(double[] point, int idx) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,72,"double cy, cx, r, ret = 0.0, d;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,73,"int ptr = 0, ptr1;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,74,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,75,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,76,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,77,ptr1 = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,78,d = 0.0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,79,for (int j = 0; j < 3; j++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,80,d += point[ptr1++] * FastMath.exp(-cx * point[ptr1++]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,82,r = cy - d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,83,if (idx == 0) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,84,ret -= (2.0 * r) * FastMath.exp(-cx * point[1]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,85,} else if (idx == 1) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,86,ret += (2.0 * r) * FastMath.exp(-cx * point[1]) * cx * point[0];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,87,} else if (idx == 2) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,88,ret -= (2.0 * r) * FastMath.exp(-cx * point[3]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,89,} else if (idx == 3) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,90,ret += (2.0 * r) * FastMath.exp(-cx * point[3]) * cx * point[2];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,91,} else if (idx == 4) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,92,ret -= (2.0 * r) * FastMath.exp(-cx * point[5]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,93,} else {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,94,ret += (2.0 * r) * FastMath.exp(-cx * point[5]) * cx * point[4];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,97,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,100,public double value(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,101,"double ret = 0.0, err, d, cx, cy;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,102,"int ptr = 0, ptr1 = 0;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,103,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,104,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,105,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,106,d = 0.0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,107,ptr1 = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,108,for (int j = 0; j < 3; j++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,109,d += point[ptr1++] * FastMath.exp(-cx * point[ptr1++]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,111,err = cy - d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,112,ret += err * err;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,114,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,117,@Override
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,118,protected double[] getGradient(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,119,"Arrays.fill(gradient, 0.0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,120,"double cy, cx, r, d = 0;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,121,"int ptr = 0, ptr1;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,122,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,123,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,124,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,125,ptr1 = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,126,d = 0.0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,127,for (int j = 0; j < 3; j++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,128,d += point[ptr1++] * FastMath.exp(-cx * point[ptr1++]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,130,r = cy - d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,131,gradient[0] -= (2.0 * r) * FastMath.exp(-cx * point[1]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,132,gradient[1] += (2.0 * r) * FastMath.exp(-cx * point[1]) * cx * point[0];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,134,gradient[2] -= (2.0 * r) * FastMath.exp(-cx * point[3]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,135,gradient[3] += (2.0 * r) * FastMath.exp(-cx * point[3]) * cx * point[2];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,137,gradient[4] -= (2.0 * r) * FastMath.exp(-cx * point[5]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,138,gradient[5] += (2.0 * r) * FastMath.exp(-cx * point[5]) * cx * point[4];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,140,return this.gradient;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,144,/* chwirut1 data ------------------------*/
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,145,public static double[] chwirut1NIST = {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,146,"92.9000, 0.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,147,"78.7000, 0.6250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,148,"64.2000, 0.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,149,"64.9000, 0.8750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,150,"57.1000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,151,"43.3000, 1.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,152,"31.1000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,153,"23.6000, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,154,"31.0500, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,155,"23.7750, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,156,"17.7375, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,157,"13.8000, 3.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,158,"11.5875, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,159,"9.4125, 4.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,160,"7.7250, 4.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,161,"7.3500, 5.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,162,"8.0250, 5.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,163,"90.6000, 0.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,164,"76.9000, 0.6250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,165,"71.6000, 0.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,166,"63.6000, 0.8750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,167,"54.0000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,168,"39.2000, 1.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,169,"29.3000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,170,"21.4000, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,171,"29.1750, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,172,"22.1250, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,173,"17.5125, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,174,"14.2500, 3.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,175,"9.4500, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,176,"9.1500, 4.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,177,"7.9125, 4.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,178,"8.4750, 5.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,179,"6.1125, 5.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,180,"80.0000, 0.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,181,"79.0000, 0.6250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,182,"63.8000, 0.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,183,"57.2000, 0.8750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,184,"53.2000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,185,"42.5000, 1.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,186,"26.8000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,187,"20.4000, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,188,"26.8500, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,189,"21.0000, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,190,"16.4625, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,191,"12.5250, 3.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,192,"10.5375, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,193,"8.5875, 4.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,194,"7.1250, 4.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,195,"6.1125, 5.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,196,"5.9625, 5.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,197,"74.1000, 0.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,198,"67.3000, 0.6250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,199,"60.8000, 0.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,200,"55.5000, 0.8750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,201,"50.3000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,202,"41.0000, 1.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,203,"29.4000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,204,"20.4000, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,205,"29.3625, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,206,"21.1500, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,207,"16.7625, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,208,"13.2000, 3.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,209,"10.8750, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,210,"8.1750, 4.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,211,"7.3500, 4.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,212,"5.9625, 5.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,213,"5.6250, 5.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,214,"81.5000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,215,"62.4000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,216,"32.5000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,217,"12.4100, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,218,"13.1200, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,219,"15.5600, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,220,"5.6300, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,221,"78.0000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,222,"59.9000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,223,"33.2000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,224,"13.8400, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,225,"12.7500, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,226,"14.6200, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,227,"3.9400, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,228,"76.8000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,229,"61.0000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,230,"32.9000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,231,"13.8700, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,232,"11.8100, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,233,"13.3100, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,234,"5.4400, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,235,"78.0000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,236,"63.5000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,237,"33.8000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,238,"12.5600, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,239,"5.6300, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,240,"12.7500, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,241,"13.1200, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,242,"5.4400, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,243,"76.8000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,244,"60.0000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,245,"47.8000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,246,"32.0000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,247,"22.2000, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,248,"22.5700, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,249,"18.8200, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,250,"13.9500, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,251,"11.2500, 4.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,252,"9.0000, 5.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,253,"6.6700, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,254,"75.8000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,255,"62.0000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,256,"48.8000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,257,"35.2000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,258,"20.0000, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,259,"20.3200, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,260,"19.3100, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,261,"12.7500, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,262,"10.4200, 4.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,263,"7.3100, 5.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,264,"7.4200, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,265,"70.5000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,266,"59.5000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,267,"48.5000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,268,"35.8000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,269,"21.0000, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,270,"21.6700, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,271,"21.0000, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,272,"15.6400, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,273,"8.1700, 4.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,274,"8.5500, 5.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,275,"10.1200, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,276,"78.0000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,277,"66.0000, .6250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,278,"62.0000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,279,"58.0000, .8750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,280,"47.7000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,281,"37.8000, 1.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,282,"20.2000, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,283,"21.0700, 2.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,284,"13.8700, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,285,"9.6700, 3.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,286,"7.7600, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,287,"5.4400, 4.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,288,"4.8700, 4.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,289,"4.0100, 5.2500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,290,"3.7500, 5.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,291,"24.1900, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,292,"25.7600, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,293,"18.0700, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,294,"11.8100, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,295,"12.0700, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,296,"16.1200, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,297,"70.8000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,298,"54.7000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,299,"48.0000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,300,"39.8000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,301,"29.8000, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,302,"23.7000, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,303,"29.6200, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,304,"23.8100, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,305,"17.7000, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,306,"11.5500, 4.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,307,"12.0700, 5.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,308,"8.7400, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,309,"80.7000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,310,"61.3000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,311,"47.5000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,312,"29.0000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,313,"24.0000, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,314,"17.7000, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,315,"24.5600, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,316,"18.6700, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,317,"16.2400, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,318,"8.7400, 4.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,319,"7.8700, 5.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,320,"8.5100, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,321,"66.7000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,322,"59.2000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,323,"40.8000, 1.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,324,"30.7000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,325,"25.7000, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,326,"16.3000, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,327,"25.9900, 2.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,328,"16.9500, 2.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,329,"13.3500, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,330,"8.6200, 4.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,331,"7.2000, 5.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,332,"6.6400, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,333,"13.6900, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,334,"81.0000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,335,"64.5000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,336,"35.5000, 1.5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,337,"13.3100, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,338,"4.8700, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,339,"12.9400, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,340,"5.0600, 6.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,341,"15.1900, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,342,"14.6200, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,343,"15.6400, 3.0000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,344,"25.5000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,345,"25.9500, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,346,"81.7000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,347,"61.6000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,348,"29.8000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,349,"29.8100, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,350,"17.1700, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,351,"10.3900, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,352,"28.4000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,353,"28.6900, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,354,"81.3000, .5000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,355,"60.9000, .7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,356,"16.6500, 2.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,357,"10.0500, 3.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,358,"28.9000, 1.7500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,359,"28.9500, 1.7500"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,362,/* the chwirut1 objective function */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,363,"private final nistMVRF chwirut1ObjectFunc = new chwirut(chwirut1NIST, 1, 214, 3);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,365,//http://www.itl.nist.gov/div898/strd/nls/data/LINKS/DATA/Chwirut2.dat
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,366,public static double[] chwirut2NIST = {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,367,"92.9000, 0.500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,368,"57.1000, 1.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,369,"31.0500, 1.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,370,"11.5875, 3.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,371,"8.0250, 5.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,372,"63.6000, 0.875,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,373,"21.4000, 2.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,374,"14.2500, 3.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,375,"8.4750, 5.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,376,"63.8000, 0.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,377,"26.8000, 1.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,378,"16.4625, 2.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,379,"7.1250, 4.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,380,"67.3000, 0.625,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,381,"41.0000, 1.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,382,"21.1500, 2.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,383,"8.1750, 4.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,384,"81.5000, .500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,385,"13.1200, 3.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,386,"59.9000, .750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,387,"14.6200, 3.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,388,"32.9000, 1.500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,389,"5.4400, 6.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,390,"12.5600, 3.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,391,"5.4400, 6.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,392,"32.0000, 1.500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,393,"13.9500, 3.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,394,"75.8000, .500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,395,"20.0000, 2.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,396,"10.4200, 4.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,397,"59.5000, .750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,398,"21.6700, 2.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,399,"8.5500, 5.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,400,"62.0000, .750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,401,"20.2000, 2.250,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,402,"7.7600, 3.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,403,"3.7500, 5.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,404,"11.8100, 3.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,405,"54.7000, .750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,406,"23.7000, 2.500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,407,"11.5500, 4.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,408,"61.3000, .750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,409,"17.7000, 2.500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,410,"8.7400, 4.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,411,"59.2000, .750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,412,"16.3000, 2.500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,413,"8.6200, 4.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,414,"81.0000, .500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,415,"4.8700, 6.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,416,"14.6200, 3.000,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,417,"81.7000, .500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,418,"17.1700, 2.750,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,419,"81.3000, .500,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,420,"28.9000, 1.750"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,423,/* the chwirut 2 objective --------------------------------------------------*/
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,424,"private final nistMVRF chwirut2ObjectFunc = new chwirut(chwirut2NIST, 1, 54, 3);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,426,//http://www.itl.nist.gov/div898/strd/nls/data/LINKS/DATA/Misra1a.dat
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,427,//y               x
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,428,private static double[] misra1aNIST = {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,429,"10.07, 77.6,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,430,"14.73, 114.9,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,431,"17.94, 141.1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,432,"23.93, 190.8,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,433,"29.61, 239.9,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,434,"35.18, 289.0,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,435,"40.02, 332.8,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,436,"44.82, 378.4,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,437,"50.76, 434.8,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,438,"55.05, 477.3,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,439,"61.01, 536.8,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,440,"66.40, 593.1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,441,"75.47, 689.1,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,442,"81.78, 760.0"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,445,/* the misra1a objective function */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,446,"private final nistMVRF misra1aObjectFunc = new nistMVRF(misra1aNIST, 1, 14, 2) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,448,@Override
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,449,"protected double partialDeriv(double[] point, int idx) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,450,"double cy, cx, r, ret = 0.0;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,451,int ptr = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,452,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,453,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,454,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,455,r = cy - point[0] * (1.0 - FastMath.exp(-cx * point[1]));
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,456,if (idx == 0) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,457,ret -= (2.0 * r) * (1.0 - FastMath.exp(-cx * point[1]));
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,458,} else {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,459,ret -= (2.0 * r) * cx * point[0] * FastMath.exp(-cx * point[1]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,462,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,465,public double value(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,466,"double ret = 0.0, err;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,467,int ptr = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,468,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,469,err = data[ptr++] - point[0] * (1.0 - FastMath.exp(-data[ptr++] * point[1]));
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,470,ret += err * err;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,472,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,475,@Override
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,476,protected double[] getGradient(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,477,"Arrays.fill(gradient, 0.0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,478,"double cy, cx, r;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,479,int ptr = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,480,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,481,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,482,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,483,r = cy - point[0] * (1.0 - FastMath.exp(-cx * point[1]));
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,484,gradient[0] -= (2.0 * r) * (1.0 - FastMath.exp(-cx * point[1]));
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,485,gradient[1] -= (2.0 * r) * cx * point[0] * FastMath.exp(-cx * point[1]);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,487,return this.gradient;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,490,"private static double[] correctParamMisra1a = {2.3894212918e2, 5.5015643181E-4};"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,491,"private static double[] correctParamChwirut2 = {1.6657666537e-1, 5.1653291286e-3, 1.2150007096e-2};"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,492,"private static double[] correctParamChwirut1 = {1.9027818370e-1, 6.1314004477e-3, 1.0530908399e-2};"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,493,"private static double[] correctParamLanczos = {8.6816414977e-2, 9.5498101505e-01, 8.4400777463E-01, 2.9515951832, 1.5825685901, 4.9863565084};"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,495,@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,496,public void lanczosTest() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,497,//first check to see that the NIST Object function is being replicated correctly
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,498,double obj = this.lanczosObjectFunc.value(correctParamLanczos);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,499,"Assert.assertEquals(1.6117193594E-08, obj, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,501,double[] grad = this.lanczosObjectFunc.getGradient(correctParamLanczos);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,502,double[] grad2 = new double[6];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,503,"grad2[0] = this.lanczosObjectFunc.partialDeriv(correctParamLanczos, 0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,504,"grad2[1] = this.lanczosObjectFunc.partialDeriv(correctParamLanczos, 1);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,505,"grad2[2] = this.lanczosObjectFunc.partialDeriv(correctParamLanczos, 2);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,506,"grad2[3] = this.lanczosObjectFunc.partialDeriv(correctParamLanczos, 3);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,507,"grad2[4] = this.lanczosObjectFunc.partialDeriv(correctParamLanczos, 4);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,508,"grad2[5] = this.lanczosObjectFunc.partialDeriv(correctParamLanczos, 5);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,509,"TestUtils.assertEquals(""Grads..."", grad, grad2, 1.0e-12);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,511,"double[] n_grad = this.getGradient(lanczosObjectFunc, correctParamLanczos, 1.0e-5);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,512,"//System.out.println(""g = "" + grad[0] + "" ng = "" + n_grad[0]);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,513,"//System.out.println(""g = "" + grad[1] + "" ng = "" + n_grad[1]);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,514,"if (FastMath.abs(grad[0] - n_grad[0]) > FastMath.max(1.0e-6, 1.0e-6 * (grad[0] + n_grad[0]) / 2.0)) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,515,"Assert.fail(""Check gradient at 1"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,517,"if (FastMath.abs(grad[1] - n_grad[1]) > FastMath.max(1.0e-6, 1.0e-6 * (grad[1] + n_grad[1]) / 2.0)) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,518,"Assert.fail(""Check gradient at 2"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,520,"if (FastMath.abs(grad[2] - n_grad[2]) > FastMath.max(1.0e-6, 1.0e-6 * (grad[2] + n_grad[2]) / 2.0)) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,521,"Assert.fail(""Check gradient at 2"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,523,"if (FastMath.abs(grad[3] - n_grad[3]) > FastMath.max(1.0e-6, 1.0e-6 * (grad[3] + n_grad[3]) / 2.0)) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,524,"Assert.fail(""Check gradient at 2"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,526,"if (FastMath.abs(grad[4] - n_grad[4]) > FastMath.max(1.0e-6, 1.0e-6 * (grad[4] + n_grad[4]) / 2.0)) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,527,"Assert.fail(""Check gradient at 2"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,529,"if (FastMath.abs(grad[5] - n_grad[5]) > FastMath.max(1.0e-6, 1.0e-6 * (grad[5] + n_grad[5]) / 2.0)) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,530,"Assert.fail(""Check gradient at 2"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,532,return;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,535,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,536,public void lanczos_BOBYQA() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,537,"double[] bobyqa = run(new BOBYQAOptimizer(10),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,538,"lanczosObjectFunc, new double[]{1.2,0.3,5.6,5.5,6.5,7.6});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,539,"TestUtils.assertEquals(correctParamLanczos, bobyqa, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,542,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,543,public void lanczosTest_cgPolakRibiere() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,544,"double[] cgPolakRibiere = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,545,"lanczosObjectFunc, new double[]{1.2,0.3,5.6,5.5,6.5,7.6});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,546,"TestUtils.assertEquals(correctParamLanczos, cgPolakRibiere, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,549,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,550,public void lanczosTest_cgPolakRibiere2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,551,"double[] cgPolakRibiere2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,552,"lanczosObjectFunc, new double[]{0.5,0.7,3.6,4.2,4,6.3});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,553,"TestUtils.assertEquals(correctParamLanczos, cgPolakRibiere2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,556,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,557,public void lanczosTest_cgFletcherReeves() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,558,"double[] cgFletcherReeves = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,559,"lanczosObjectFunc, new double[]{1.2,0.3,5.6,5.5,6.5,7.6});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,560,"TestUtils.assertEquals(correctParamLanczos, cgFletcherReeves, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,563,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,564,public void lanczosTest_cgFletcherReeves2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,565,"double[] cgFletcherReeves2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,566,"lanczosObjectFunc, new double[]{0.5,0.7,3.6,4.2,4,6.3});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,567,"TestUtils.assertEquals(correctParamLanczos, cgFletcherReeves2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,570,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,571,public void lanczosTest_powell() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,572,"double[] resPowell = run(new PowellOptimizer(1.0e-8, 1.0e-8), lanczosObjectFunc,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,573,"new double[]{1.2,0.3,5.6,5.5,6.5,7.6});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,574,"TestUtils.assertEquals(correctParamLanczos, resPowell, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,577,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,578,public void lanczosTest_powell2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,579,"double[] resPowell2 = run(new PowellOptimizer(1.0e-8, 1.0e-8), lanczosObjectFunc,"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,580,"new double[]{0.5,0.7,3.6,4.2,4,6.3});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,581,"TestUtils.assertEquals(correctParamLanczos, resPowell2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,584,@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,585,public void chwirut1Test() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,586,//first check to see that the NIST Object function is being replicated correctly
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,587,double obj = this.chwirut1ObjectFunc.value(correctParamChwirut1);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,588,"Assert.assertEquals(2.3844771393e3, obj, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,590,double[] grad = this.chwirut1ObjectFunc.getGradient(correctParamChwirut1);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,591,double[] grad2 = new double[3];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,592,"grad2[0] = this.chwirut1ObjectFunc.partialDeriv(correctParamChwirut1, 0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,593,"grad2[1] = this.chwirut1ObjectFunc.partialDeriv(correctParamChwirut1, 1);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,594,"grad2[2] = this.chwirut1ObjectFunc.partialDeriv(correctParamChwirut1, 2);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,595,"TestUtils.assertEquals(""Grads..."", grad, grad2, 1.0e-12);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,596,return;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,599,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,600,public void chwirut1_BOBYQA() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,601,"double[] bobyqa = run(new BOBYQAOptimizer(5),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,602,"chwirut1ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,603,"TestUtils.assertEquals(correctParamChwirut1, bobyqa, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,606,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,607,public void chwirut1Test_cgPolakRibiere() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,608,"double[] cgPolakRibiere = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,609,"chwirut1ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,610,"TestUtils.assertEquals(correctParamChwirut1, cgPolakRibiere, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,613,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,614,public void chwirut1Test_cgPolakRibiere2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,615,"double[] cgPolakRibiere2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,616,"chwirut1ObjectFunc, new double[]{0.15, 0.008, 0.01});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,617,"TestUtils.assertEquals(correctParamChwirut1, cgPolakRibiere2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,620,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,621,public void chwirut1Test_cgFletcherReeves() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,622,"double[] cgFletcherReeves = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,623,"chwirut1ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,624,"TestUtils.assertEquals(correctParamChwirut1, cgFletcherReeves, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,627,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,628,public void chwirut1Test_cgFletcherReeves2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,629,"double[] cgFletcherReeves2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,630,"chwirut1ObjectFunc, new double[]{0.15, 0.008, 0.01});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,631,"TestUtils.assertEquals(correctParamChwirut1, cgFletcherReeves2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,634,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,635,public void chwirut1Test_powell() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,636,"double[] resPowell = run(new PowellOptimizer(1.0e-8, 1.0e-8), chwirut1ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,637,"TestUtils.assertEquals(correctParamChwirut1, resPowell, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,640,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,641,public void chwirut1Test_powell2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,642,"double[] resPowell2 = run(new PowellOptimizer(1.0e-8, 1.0e-8), chwirut1ObjectFunc, new double[]{0.15, 0.08, 0.01});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,643,"TestUtils.assertEquals(correctParamChwirut1, resPowell2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,646,@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,647,public void chwirut2Test() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,648,//first check to see that the NIST Object function is being replicated correctly
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,649,double obj = this.chwirut2ObjectFunc.value(correctParamChwirut2);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,650,"Assert.assertEquals(5.1304802941e02, obj, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,652,double[] grad = this.chwirut2ObjectFunc.getGradient(correctParamChwirut2);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,653,double[] grad2 = new double[3];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,654,"grad2[0] = this.chwirut2ObjectFunc.partialDeriv(correctParamChwirut2, 0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,655,"grad2[1] = this.chwirut2ObjectFunc.partialDeriv(correctParamChwirut2, 1);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,656,"grad2[2] = this.chwirut2ObjectFunc.partialDeriv(correctParamChwirut2, 2);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,657,"TestUtils.assertEquals(""Grads..."", grad, grad2, 1.0e-12);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,658,return;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,661,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,662,public void chwirut2_BOBYQA() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,663,"double[] bobyqa = run(new BOBYQAOptimizer(5),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,664,"chwirut2ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,665,"TestUtils.assertEquals(correctParamChwirut2, bobyqa, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,668,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,669,public void chwirut2Test_cgPolakRibiere() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,670,"double[] cgPolakRibiere = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,671,"chwirut2ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,672,"TestUtils.assertEquals(correctParamChwirut2, cgPolakRibiere, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,675,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,676,public void chwirut2Test_cgPolakRibiere2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,677,"double[] cgPolakRibiere2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,678,"chwirut2ObjectFunc, new double[]{0.15, 0.008, 0.01});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,679,"TestUtils.assertEquals(correctParamChwirut2, cgPolakRibiere2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,682,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,683,public void chwirut2Test_cgFletcherReeves() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,684,"double[] cgFletcherReeves = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,685,"chwirut2ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,686,"TestUtils.assertEquals(correctParamChwirut2, cgFletcherReeves, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,689,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,690,public void chwirut2Test_cgFletcherReeves2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,691,"double[] cgFletcherReeves2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,692,"chwirut2ObjectFunc, new double[]{0.15, 0.008, 0.01});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,693,"TestUtils.assertEquals(correctParamChwirut2, cgFletcherReeves2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,696,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,697,public void chwirut2Test_powell() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,698,"double[] resPowell = run(new PowellOptimizer(1.0e-8, 1.0e-8), chwirut2ObjectFunc, new double[]{0.1, 0.01, 0.02});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,699,"TestUtils.assertEquals(correctParamChwirut2, resPowell, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,702,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,703,public void chwirut2Test_powell2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,704,"double[] resPowell2 = run(new PowellOptimizer(1.0e-8, 1.0e-8), chwirut2ObjectFunc, new double[]{0.15, 0.08, 0.01});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,705,"TestUtils.assertEquals(correctParamChwirut2, resPowell2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,708,@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,709,public void misra1aTest() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,710,//first check to see that the NIST Object function is being replicated correctly
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,711,double obj = this.misra1aObjectFunc.value(correctParamMisra1a);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,712,"Assert.assertEquals(1.2455138894e-01, obj, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,714,double[] grad = this.misra1aObjectFunc.getGradient(correctParamMisra1a);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,715,double[] grad2 = new double[2];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,716,"grad2[0] = this.misra1aObjectFunc.partialDeriv(correctParamMisra1a, 0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,717,"grad2[1] = this.misra1aObjectFunc.partialDeriv(correctParamMisra1a, 1);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,719,"TestUtils.assertEquals(""Grads..."", grad, grad2, 1.0e-12);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,721,"//        double[] n_grad = this.getGradient(misra1aObjectFunc, correctParamMisra1a, 1.0e-5);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,722,"//        System.out.println(""g = "" + grad[0] + "" ng = "" + n_grad[0]);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,723,"//        System.out.println(""g = "" + grad[1] + "" ng = "" + n_grad[1]);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,724,"//        if( FastMath.abs(grad[0] - n_grad[0] ) > FastMath.max(1.0e-6, 1.0e-6 * (grad[0]+n_grad[0])/2.0) ){"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,725,"//            Assert.fail(""Check gradient at 1"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,727,"//        if( FastMath.abs(grad[1] - n_grad[1] ) > FastMath.max(1.0e-6, 1.0e-6 * (grad[1]+n_grad[1])/2.0) ){"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,728,"//            Assert.fail(""Check gradient at 2"");"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,730,return;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,733,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,734,public void misra1a_BOBYQA() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,735,"double[] bobyqa = run(new BOBYQAOptimizer(4),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,736,"misra1aObjectFunc, new double[]{500.0, 0.0001});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,737,"TestUtils.assertEquals(correctParamMisra1a, bobyqa, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,740,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,741,public void misra1aTest_cgPolakRibiere() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,742,"double[] cgPolakRibiere = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,743,"misra1aObjectFunc, new double[]{500.0, 0.0001});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,744,"TestUtils.assertEquals(correctParamMisra1a, cgPolakRibiere, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,747,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,748,public void misra1aTest_cgPolakRibiere2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,749,"double[] cgPolakRibiere2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.POLAK_RIBIERE),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,750,"misra1aObjectFunc, new double[]{250.0, 0.0005});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,751,"TestUtils.assertEquals(correctParamMisra1a, cgPolakRibiere2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,754,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,755,public void misra1aTest_cgFletcherReeves() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,756,"double[] cgFletcherReeves = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,757,"misra1aObjectFunc, new double[]{500.0, 0.0001});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,758,"TestUtils.assertEquals(correctParamMisra1a, cgFletcherReeves, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,761,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,762,public void misra1aTest_cgFletcherReeves2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,763,"double[] cgFletcherReeves2 = run(new NonLinearConjugateGradientOptimizer(ConjugateGradientFormula.FLETCHER_REEVES),"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,764,"misra1aObjectFunc, new double[]{250.0, 0.0005});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,765,"TestUtils.assertEquals(correctParamMisra1a, cgFletcherReeves2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,768,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,769,public void misra1aTest_powell() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,770,"double[] resPowell = run(new PowellOptimizer(1.0e-8, 1.0e-8), misra1aObjectFunc, new double[]{500.0, 0.0001});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,771,"TestUtils.assertEquals(correctParamMisra1a, resPowell, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,774,//@Test
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,775,public void misra1aTest_powell2() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,776,"double[] resPowell2 = run(new PowellOptimizer(1.0e-8, 1.0e-8), misra1aObjectFunc, new double[]{250.0, 0.0005});"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,777,"TestUtils.assertEquals(correctParamMisra1a, resPowell2, 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,780,/* numerical gradients */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,781,"private double[] getGradient(nistMVRF func, double[] xo, double eps) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,782,double[] ret = new double[func.getNumberOfParameters()];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,783,for (int i = 0; i < ret.length; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,784,final double tmp = xo[i];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,785,xo[i] += eps;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,786,ret[i] = func.value(xo);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,787,xo[i] = tmp - eps;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,788,ret[i] -= func.value(xo);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,789,ret[i] /= (2.0 * eps);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,790,xo[i] = tmp;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,792,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,795,/* generic test runner */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,796,"private double[] run(MultivariateRealOptimizer optim, DifferentiableMultivariateRealFunction func, double[] start) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,797,"return (optim.optimize(1000000, func, GoalType.MINIMIZE, start).getPointRef());"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,799,/* generic test runner for AbstractScalarDifferentiableOptimizer */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,800,"private double[] run(AbstractScalarDifferentiableOptimizer optim, DifferentiableMultivariateRealFunction func, double[] start) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,801,"return (optim.optimize(1000000, func, GoalType.MINIMIZE, start).getPointRef());"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,804,/* base objective function class for these tests */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,805,private abstract static class nistMVRF implements DifferentiableMultivariateRealFunction {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,806,protected final MultivariateRealFunction[] mrf;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,807,protected final MultivariateVectorialFunction mvf = new MultivariateVectorialFunction() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,809,public double[] value(double[] point) throws IllegalArgumentException {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,810,return getGradient(point);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,813,protected double[] gradient;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,814,protected double[] data;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,815,protected int nvars;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,816,protected int nobs;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,817,protected int nparams;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,819,public int getNumberOfParameters() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,820,return nparams;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,823,"public nistMVRF(double[] data, int nvars, int nobs, int nparams) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,824,if ((nvars + 1) * nobs != data.length) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,825,throw MathRuntimeException.createIllegalArgumentException(
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,826,"LocalizedFormats.INVALID_REGRESSION_ARRAY, data.length, nobs, nvars);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,828,this.nobs = nobs;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,829,this.nvars = nvars;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,830,this.gradient = new double[nparams];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,831,this.nparams = nparams;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,832,this.data = data;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,833,mrf = new MultivariateRealFunction[nvars];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,834,for (int i = 0; i < nvars; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,835,final int idx = i;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,836,mrf[i] = new MultivariateRealFunction() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,838,private int myIdx = idx;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,840,public double value(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,841,"return partialDeriv(point, myIdx);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,847,public MultivariateVectorialFunction gradient() {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,848,return mvf;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,851,public MultivariateRealFunction partialDerivative(int k) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,852,return mrf[k];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,855,"protected abstract double partialDeriv(double[] point, int idx);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,857,protected abstract double[] getGradient(double[] point);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,860,/* since there are multiple chwirut tests create an object       */
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,861,private static class chwirut extends nistMVRF {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,863,"public chwirut(double[] data, int nvars, int nobs, int nparams) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,864,"super(data, nvars, nobs, nparams);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,867,@Override
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,868,"protected double partialDeriv(double[] point, int idx) {"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,869,"double cy, cx, r, ret = 0.0, d;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,870,int ptr = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,871,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,872,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,873,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,874,d = (point[1] + point[2] * cx);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,875,r = cy - FastMath.exp(-cx * point[0]) / d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,876,if (idx == 0) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,877,ret -= (2.0 * r * r) * cx;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,878,} else if (idx == 1) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,879,ret += (2.0 * r * r) / d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,880,} else {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,881,ret += (2.0 * r * r) * cx / d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,884,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,887,public double value(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,888,"double ret = 0.0, err, cx, cy;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,889,int ptr = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,890,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,891,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,892,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,893,err = cy - (FastMath.exp(-cx * point[0]) / (point[1] + point[2] * cx));
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,894,ret += err * err;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,896,return (ret);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,899,@Override
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,900,protected double[] getGradient(double[] point) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,901,"Arrays.fill(gradient, 0.0);"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,902,"double cy, cx, r, d;"
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,903,int ptr = 0;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,904,for (int i = 0; i < this.nobs; i++) {
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,905,cy = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,906,cx = data[ptr++];
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,907,d = (point[1] + point[2] * cx);
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,908,r = cy - FastMath.exp(-cx * point[0]) / d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,909,gradient[0] -= (2.0 * r * r) * cx;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,910,gradient[1] += (2.0 * r * r) / d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,911,gradient[2] += (2.0 * r * r) * cx / d;
True,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java,913,return this.gradient;
