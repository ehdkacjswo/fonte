is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,74,// org.apache.commons.math.analysis.interpolation.SplineInterpolator
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,75,// org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm
False,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,130," ""Number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4},"" +"
False,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,131," final a value={5}, final b value={6}, f(a)={7}, f(b)={8}"","
False,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,132,"Nombre d''it\u00e9rations = {0}, it\u00e9rations maximum = {1}, valeur initiale = {2},"" +"
False,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,133," borne inf\u00e9rieure = {3}, borne sup\u00e9rieure = {4},"" +"
False,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,134," valeur a finale = {5}, valeur b finale = {6}, f(a) = {7}, f(b) = {8}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,132,"{ ""function is null"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,133,"""la fonction est nulle"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,134,"{ ""bad value for maximum iterations number: {0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,135,"""valeur invalide pour le nombre maximal d''it\u00e9rations : {0}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,136,"{ ""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,137,"""param\u00e8tres d''encadrement invalides : borne inf\u00e9rieure = {0}, valeur initiale = {1}, borne sup\u00e9rieure = {2}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,138,"{ ""number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4},"" +"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,139,""" final a value={5}, final b value={6}, f(a)={7}, f(b)={8}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,140,"""nombre d''it\u00e9rations = {0}, it\u00e9rations maximum = {1}, valeur initiale = {2},"" +"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,141,""" borne inf\u00e9rieure = {3}, borne sup\u00e9rieure = {4},"" +"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,142,""" valeur a finale = {5}, valeur b finale = {6}, f(a) = {7}, f(b) = {8}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,144,// org.apache.commons.math.analysis.solvers.LaguerreSolver
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,145,"{ ""polynomial degree must be positive: degree={0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,146,"""le polyn\u00f4me doit \u00eatre de degr\u00e9 positif : degr\u00e9 = {0}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,148,// org.apache.commons.math.analysis.solvers.SecantSolver
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,149,"{ ""function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,150,"""les valeurs de la fonctions aux bornes sont de m\u00eame signe, bornes : [{0}, {1}], valeurs : [{2}, {3}]"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,152,// org.apache.commons.math.analysis.interpolation.SplineInterpolator
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,153,// org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,154,"{ ""{0} points are required, got only {1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,155,"""{0} sont n\u00e9cessaires, seuls {1} ont \u00e9t\u00e9 fournis"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,157,// org.apache.commons.math.analysis.interpolation.SplineInterpolator
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,158,"{ ""points {0} and {1} are not strictly increasing ({2} >= {3})"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,159,"""les points {0} et {1} ne sont pas strictements croissants ({2} >= {3})"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,418,// org.apache.commons.math.analysis.polynomials.PolynomialFunction
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,419,// org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,420,"{ ""empty polynomials coefficients array"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,421,"""tableau de coefficients polyn\u00f4miaux vide"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,423,// org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,424,"{ ""array sizes should have difference 1 ({0} != {1} + 1)"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,425,"""les tableaux devraient avoir une diff\u00e9rence de taille de 1 ({0} != {1} + 1)"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,431,// org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,432,"{ ""spline partition must have at least {0} points, got {1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,433,"""une partiction spline n\u00e9cessite au moins {0} points, seuls {1} ont \u00e9t\u00e9 fournis"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,434,"{ ""knot values must be strictly increasing"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,435,"""les n\u0153uds d''interpolation doivent \u00eatre strictement croissants"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,436,"{ ""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,437,"""le nombre d''interpolants polyn\u00f4miaux doit correspondre au nombre de segments ({0} != {1} - 1)"" },"
False,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,69,"hrow new IllegalArgumentException(""Function can not be null."");"
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,69,"throw MathRuntimeException.createIllegalArgumentException(""function is null"");"
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,19,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,60,"hrow new IllegalArgumentException(""Dataset arrays must have same length."");"
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,61,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,62,"""dimension mismatch {0} != {1}"", x.length, y.length);"
False,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,64,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,65,"""At least 3 datapoints are required to compute a spline interpolant"");"
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,66,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,67,"""{0} points are required, got only {1}"", 3, x.length);"
False,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,73,"hrow new IllegalArgumentException(""Dataset x values must be strictly increasing."");"
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,75,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,76,"""points {0} and {1} are not strictly increasing ({2} >= {3})"","
True,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,77,"i, i+1, x[i], x[i+1]);"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,21,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,61,"hrow new IllegalArgumentException(""Polynomial coefficient array must have postive length."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,62,"throw MathRuntimeException.createIllegalArgumentException(""empty polynomials coefficients array"");"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,121,"hrow new IllegalArgumentException(""Coefficient array must have positive length for evaluation"");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,122,"throw MathRuntimeException.createIllegalArgumentException(""empty polynomials coefficients array"");"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,230,"hrow new IllegalArgumentException(""Coefficient array must have positive length for differentiation"");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,231,"throw MathRuntimeException.createIllegalArgumentException(""empty polynomials coefficients array"");"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,295,f (x.length < 2 || y.length < 2) {
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,296,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,297,"""Interpolation requires at least two points."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,295,"if (Math.min(x.length, y.length) < 2) {"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,296,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,297,"""{0} points are required, got only {1}"","
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,298,"2, Math.min(x.length, y.length));"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,300,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,301,"""Abscissa and value arrays must have the same length."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,301,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,302,"""dimension mismatch {0} != {1}"", x.length, y.length);"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,21,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,212,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,213,"""Input arrays must not be empty."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,213,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,214,"""empty polynomials coefficients array"");"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,216,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,217,"""Bad input array sizes, should have difference 1."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,217,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,218,"""array sizes should have difference 1 ({0} != {1} + 1)"","
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,219,"a.length, c.length);"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,23,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,102,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,103,"""Not enough knot values -- spline partition must have at least 2 points."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,103,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,104,"""spline partition must have at least {0} points, got {1}"","
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,105,"2, knots.length);"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,106,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,107,"""Number of polynomial interpolants must match the number of segments."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,108,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,109,"""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)"","
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,110,"polynomials.length, knots.length);"
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,110,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,111,"""Knot values must be strictly increasing."");"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,113,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,114,"""knot values must be strictly increasing"");"
False,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,255,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,256,"""Polynomial degree must be positive: degree="" + n);"
True,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,255,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,256,"""polynomial degree must be positive: degree={0}"", n);"
False,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,303,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,304,"""Polynomial degree must be positive: degree="" + n);"
True,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,303,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,304,"""polynomial degree must be positive: degree={0}"", n);"
True,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,23,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,133,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,134,"""Function values at endpoints do not have different signs."" +"
False,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,135,"  Endpoints: ["" + min + "","" + max + ""]"" +"
False,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,136,"  Values: ["" + y0 + "","" + y1 + ""]"");"
True,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,134,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,135,"""function values at endpoints do not have different signs, "" +"
True,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,136,"""endpoints: [{0}, {1}], values: [{2}, {3}]"","
True,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,137,"min, max, y0, y1);"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,21,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,170,"hrow new IllegalArgumentException (""function is null."");"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,171,"throw MathRuntimeException.createIllegalArgumentException(""function is null"");"
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,173,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,174,"""bad value for maximumIterations: "" + maximumIterations);"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,174,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,175,"""bad value for maximum iterations number: {0}"", maximumIterations);"
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,177,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,178,"""Invalid endpoint parameters:  lowerBound="" + lowerBound +"
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,179," initial="" + initial + "" upperBound="" + upperBound);"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,178,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,179,"""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}"","
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,180,"lowerBound, initial, upperBound);"
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,198,hrow new ConvergenceException
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,199,"""Number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4}, final a value={5}, final b value={6}, f(a)={7}, f(b)={8}"","
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,200,"umIterations, maximumIterations, initial, lowerBound, upperBound, a, b, fa, fb);"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,199,throw new ConvergenceException(
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,200,"""number of iterations={0}, maximum iterations={1}, "" +"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,201,"""initial={2}, lower bound={3}, upper bound={4}, final a value={5}, "" +"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,202,"""final b value={6}, f(a)={7}, f(b)={8}"","
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,203,"numIterations, maximumIterations, initial,"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,204,"lowerBound, upperBound, a, b, fa, fb);"
False,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,224,"hrow new IllegalArgumentException(""function can not be null."");"
True,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,228,"throw MathRuntimeException.createIllegalArgumentException(""function is null"");"
