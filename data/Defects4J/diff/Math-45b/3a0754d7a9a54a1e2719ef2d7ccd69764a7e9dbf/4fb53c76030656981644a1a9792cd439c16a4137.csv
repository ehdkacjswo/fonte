is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,190,"NON_POSITIVE_DEFINITE_LINEAR_OPERATOR(""non positive definite linear operator: x' A x <= 0 when x is {0}""),"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,191,"NON_SELF_ADJOINT_LINEAR_OPERATOR(""non self-adjoint linear operator: |x' A y - y' A x| > {0} when x is {1} and y is {2}""),"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,18,package org.apache.commons.math.linear;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,21,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,24,"* Exception to be thrown when a symmetric, definite positive"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,25,* {@link RealLinearOperator} is expected.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,26,"* Since the coefficients of the matrix are not accessible, the most"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,27,* general definition is used to check that {@code A} is not positive
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,28,"* definite, i.e.  there exists {@code x} such that {@code x' A x <= 0}."
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,29,"* In the terminology of this exception, {@code A} is the ""offending"""
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,30,"* linear operator and {@code x} the ""offending"" vector."
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,32,* @version $Id$
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,34,public class NonPositiveDefiniteLinearOperatorException
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,35,extends MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,36,/** The offending linear operator.*/
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,37,private final RealLinearOperator a;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,38,/** A reference to the offending vector. */
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,39,private final RealVector x;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,42,* Creates a new instance of this class.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,44,* @param a Offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,45,* @param x Offending vector.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,47,"public NonPositiveDefiniteLinearOperatorException(final RealLinearOperator a,"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,48,final double[] x) {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,49,"this(a, new ArrayRealVector(x, false));"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,53,* Creates a new instance of this class.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,55,* @param a Offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,56,* @param x Offending vector.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,58,"public NonPositiveDefiniteLinearOperatorException(final RealLinearOperator a,"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,59,final RealVector x) {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,60,"super(LocalizedFormats.NON_POSITIVE_DEFINITE_LINEAR_OPERATOR, x);"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,61,this.a = a;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,62,this.x = x;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,66,* Returns a reference to the offending vector.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,67,* If the exception was raised by a call to
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,68,"* {@link #NonPositiveDefiniteLinearOperatorException(RealLinearOperator,"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,69,"* double[])}, then a new {@link ArrayRealVector} holding a reference to"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,70,* the actual {@code double[]} is returned.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,72,* @return the offending vector.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,74,public RealVector copyOffendingVector() {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,75,return x;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,79,* Returns a reference to the offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,81,* @return the offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,83,public RealLinearOperator getOffendingLinearOperator() {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,84,return a;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,18,package org.apache.commons.math.linear;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,21,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,24,* Exception to be thrown when a self-adjoint {@link RealLinearOperator}
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,25,* is expected.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,26,"* Since the coefficients of the matrix are not accessible, the most"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,27,"* general definition is used to check that A is not self-adjoint, i.e."
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,28,"* there exist x and y such as {@code | x' A y - y' A x | >= eps},"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,29,"* where {@code eps} is a user-specified tolerance, and {@code x'}"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,30,* denotes the transpose of {@code x}.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,31,"* In the terminology of this exception, {@code A} is the ""offending"""
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,32,"* linear operator, {@code x} and {@code y} are the first and second"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,33,"* ""offending"" vectors, respectively."
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,35,* @version $Id$
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,37,public class NonSelfAdjointLinearOperatorException
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,38,extends MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,39,"/** The offending linear operator, A. */"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,40,private final RealLinearOperator a;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,41,/** The threshold. */
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,42,private final double threshold;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,43,/** A reference to the first offending vector*/
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,44,private final RealVector x;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,45,/** A reference to the second offending vector*/
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,46,private final RealVector y;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,49,* Creates a new instance of this class.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,51,* @param a Offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,52,* @param x First offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,53,* @param y Second offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,54,* @param threshold Threshold.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,56,"public NonSelfAdjointLinearOperatorException(final RealLinearOperator a,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,57,"final double[] x,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,58,"final double[] y,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,59,final double threshold) {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,60,"this(a,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,61,"new ArrayRealVector(x, false),"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,62,"new ArrayRealVector(y, false),"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,63,threshold);
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,67,* Creates a new instance of this class.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,69,* @param a Offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,70,* @param x First offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,71,* @param y Second offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,72,* @param threshold Threshold.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,74,"public NonSelfAdjointLinearOperatorException(final RealLinearOperator a,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,75,"final RealVector x,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,76,"final RealVector y,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,77,final double threshold) {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,78,"super(LocalizedFormats.NON_SELF_ADJOINT_LINEAR_OPERATOR, threshold, x, y);"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,79,this.a = a;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,80,this.x = x;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,81,this.y = y;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,82,this.threshold = threshold;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,86,* Returns a reference to the first offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,87,* If the exception was raised by a call to
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,88,"* {@link #NonSelfAdjointLinearOperatorException(RealLinearOperator,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,89,"* double[], double[], double)}, then a new {@link ArrayRealVector}"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,90,* holding a reference to the actual {@code double[]} is returned.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,92,* @return the first offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,94,public RealVector getFirstOffendingVector() {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,95,return x;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,99,* Returns a reference to the offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,101,* @return the offending linear operator.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,103,public RealLinearOperator getOffendingLinearOperator() {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,104,return a;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,108,* Returns a copy of the second offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,109,* If the exception was raised by a call to
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,110,"* {@link #NonSelfAdjointLinearOperatorException(RealLinearOperator,"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,111,"* double[], double[], double)}, then a new {@link ArrayRealVector}"
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,112,* holding a reference to the actual {@code double[]} is returned.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,114,* @return the second offending vector.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,116,public RealVector getSecondOffendingVector() {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,117,return y;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,121,* Returns the threshold.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,123,* @return the threshold.
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,125,public double getThreshold() {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,126,return threshold;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,18,package org.apache.commons.math.linear;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,23,* This class defines a linear operator operating on real ({@code double})
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,24,* vector spaces.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,25,* No direct access to the coefficients of the underlying matrix is provided.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,27,* The motivation for such an interface is well stated by
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,28,"* <a href=""#BARR1994"">Barrett et al. (1994)</a>:"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,29,* <blockquote>
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,30,"*  We restrict ourselves to iterative methods, which work by repeatedly"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,31,*  improving an approximate solution until it is accurate enough. These
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,32,*  methods access the coefficient matrix {@code A} of the linear system
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,33,*  only via the matrix-vector product {@code y = A x} (and perhaps
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,34,*  {@code z} = {@code A}<sup>T</sup> {@code x}). Thus the user need only
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,35,*  supply a subroutine for computing {@code y} (and perhaps {@code z})
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,36,"*  given {@code x}, which permits full exploitation of the sparsity or"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,37,*  other special structure of A.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,38,* </blockquote>
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,39,* <br/>
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,41,* <dl>
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,42,"*  <dt><a name=""BARR1994"">Barret et al. (1994)</a></dt>"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,43,*  <dd>
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,44,"*   R. Barrett, M. Berry, T. F. Chan, J. Demmel, J. M. Donato, J. Dongarra, V."
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,45,"*   Eijkhout, R. Pozo, C. Romine and H. Van der Vorst,"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,46,*   <em>Templates for the Solution of Linear Systems: Building Blocks for
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,47,"*   Iterative Methods</em>, SIAM</dd>"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,48,* </dl>
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,50,* @version $Id$
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,52,public abstract class RealLinearOperator {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,53,/** The dimension of the codomain. */
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,54,private final int rowDimension;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,55,/** The dimension of the domain. */
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,56,private final int columnDimension;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,59,"* Creates a new instance of this class, with specified dimensions"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,60,* of the domain and codomain.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,62,* @param rowDimension Dimension of the codomain (number of rows).
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,63,* @param columnDimension Dimension of the domain (number of columns).
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,65,"public RealLinearOperator(final int rowDimension, final int columnDimension) {"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,66,this.columnDimension = columnDimension;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,67,this.rowDimension = rowDimension;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,71,* Returns the dimension of the codomain of this operator.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,73,* @return the number of rows of the underlying matrix.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,75,public final int getRowDimension() {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,76,return rowDimension;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,80,* Returns the dimension of the domain of this operator.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,82,* @return the number of columns of the underlying matrix.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,84,public final int getColumnDimension() {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,85,return columnDimension;
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,89,* Returns the result of multiplying {@code this} by the vector {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,91,* @param x Vector to operate on.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,92,* @return the product of {@code this} instance with {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,94,public double[] operate(final double[] x) {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,95,if (x.length != getColumnDimension()) {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,96,"throw new DimensionMismatchException(x.length, getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,98,"final RealVector y = operate(new ArrayRealVector(x, false));"
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,99,if (y instanceof ArrayRealVector) {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,100,return ((ArrayRealVector) y).getDataRef();
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,101,} else {
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,102,return y.getData();
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,107,* Returns the result of multiplying {@code this} by the vector {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,109,* @param x Vector to operate on.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,110,* @return the product of {@code this} instance with {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,112,public abstract RealVector operate(final RealVector x);
