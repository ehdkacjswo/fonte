is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,17,ackage org.apache.commons.math.analysis.integration;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,21, Interface for algorithms handling convergence settings.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,22, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,23," This interface only deals with convergence parameters setting, not"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,24, execution of the algorithms per se.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,25, </p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,26, @see ConvergenceException
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,27, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,28, @since 2.0
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,29, @deprecated in 2.2 (to be removed in 3.0).
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,31,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,32,ublic interface ConvergingAlgorithm {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,35, Set the upper limit for the number of iterations.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,36, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,37," Usually a high iteration count indicates convergence problems. However,"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,38," the ""reasonable value"" varies widely for different algorithms. Users are"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,39, advised to use the default value supplied by the algorithm.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,40, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,41, A {@link ConvergenceException} will be thrown if this number
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,42, is exceeded.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,44, @param count maximum number of iterations
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,46,oid setMaximalIterationCount(int count);
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,49, Get the upper limit for the number of iterations.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,51, @return the actual upper limit
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,53,nt getMaximalIterationCount();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,56, Reset the upper limit for the number of iterations to the default.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,57, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,58, The default value is supplied by the algorithm implementation.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,60, @see #setMaximalIterationCount(int)
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,62,oid resetMaximalIterationCount();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,65, Set the absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,66, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,67, The default is usually chosen so that results in the interval
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,68, -10..-0.1 and +0.1..+10 can be found with a reasonable accuracy. If the
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,69," expected absolute value of your results is of much smaller magnitude, set"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,70, this to a smaller value.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,71, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,72, Algorithms are advised to do a plausibility check with the relative
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,73," accuracy, but clients should not rely on this.</p>"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,75, @param accuracy the accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,76, @throws IllegalArgumentException if the accuracy can't be achieved by
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,77, the solver or is otherwise deemed unreasonable.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,79,oid setAbsoluteAccuracy(double accuracy);
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,82, Get the actual absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,84, @return the accuracy
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,86,ouble getAbsoluteAccuracy();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,89, Reset the absolute accuracy to the default.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,90, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,91, The default value is provided by the algorithm implementation.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,93,oid resetAbsoluteAccuracy();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,96, Set the relative accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,97, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,98, This is used to stop iterations if the absolute accuracy can't be
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,99, achieved due to large values or short mantissa length.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,100, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,101, If this should be the primary criterion for convergence rather then a
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,102," safety measure, set the absolute accuracy to a ridiculously small value,"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,103, like {@link org.apache.commons.math.util.MathUtils#SAFE_MIN MathUtils.SAFE_MIN}.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,105, @param accuracy the relative accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,106, @throws IllegalArgumentException if the accuracy can't be achieved by
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,107,  the algorithm or is otherwise deemed unreasonable.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,109,oid setRelativeAccuracy(double accuracy);
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,112, Get the actual relative accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,113, @return the accuracy
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,115,ouble getRelativeAccuracy();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,118, Reset the relative accuracy to the default.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,119, The default value is provided by the algorithm implementation.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,121,oid resetRelativeAccuracy();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,124, Get the number of iterations in the last run of the algorithm.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,125, <p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,126, This is mainly meant for testing purposes. It may occasionally
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,127, help track down performance problems: if the iteration count
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,128," is notoriously high, check whether the problem is evaluated"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,129," properly, and whether another algorithm is more amenable to the"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,130, problem.</p>
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,132, @return the last iteration count.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,133," @throws IllegalStateException if there is no result available, either"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,134, because no result was yet computed or the last attempt failed.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithm.java,136,nt getIterationCount();
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,18,ackage org.apache.commons.math.analysis.integration;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,20,mport org.apache.commons.math.exception.MaxCountExceededException;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,23, Provide a default implementation for several functions useful to generic
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,24, converging algorithms.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,26, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,27, @since 2.0
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,28, @deprecated in 2.2 (to be removed in 3.0).
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,30,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,31,ublic abstract class ConvergingAlgorithmImpl implements ConvergingAlgorithm {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,32,** Maximum absolute error. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,33,rotected double absoluteAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,34,** Maximum relative error. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,35,rotected double relativeAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,36,** Maximum number of iterations. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,37,rotected int maximalIterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,38,** Default maximum absolute error. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,39,rotected double defaultAbsoluteAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,40,** Default maximum relative error. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,41,rotected double defaultRelativeAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,42,** Default maximum number of iterations. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,43,rotected int defaultMaximalIterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,44,** The last iteration count. */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,45,rotected int iterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,47,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,48,ublic int getIterationCount() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,49,eturn iterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,52,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,53,ublic void setAbsoluteAccuracy(double accuracy) {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,54,bsoluteAccuracy = accuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,57,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,58,ublic double getAbsoluteAccuracy() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,59,eturn absoluteAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,62,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,63,ublic void resetAbsoluteAccuracy() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,64,bsoluteAccuracy = defaultAbsoluteAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,67,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,68,ublic void setMaximalIterationCount(int count) {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,69,aximalIterationCount = count;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,72,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,73,ublic int getMaximalIterationCount() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,74,eturn maximalIterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,77,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,78,ublic void resetMaximalIterationCount() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,79,aximalIterationCount = defaultMaximalIterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,82,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,83,ublic void setRelativeAccuracy(double accuracy) {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,84,elativeAccuracy = accuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,87,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,88,ublic double getRelativeAccuracy() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,89,eturn relativeAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,92,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,93,ublic void resetRelativeAccuracy() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,94,elativeAccuracy = defaultRelativeAccuracy;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,98, Reset the iterations counter to 0.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,100, @since 2.2
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,102,rotected void resetIterationsCounter() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,103,terationCount = 0;
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,107, Increment the iterations counter by 1.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,109, @throws MaxCountExceededException if the maximal number
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,110, of iterations is exceeded.
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,111, @since 2.2
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,113,rotected void incrementIterationsCounter() {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,114,f (++iterationCount > maximalIterationCount) {
False,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,src/main/java/org/apache/commons/math/analysis/integration/ConvergingAlgorithmImpl.java,115,hrow new MaxCountExceededException(maximalIterationCount);
False,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,156,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,157,"ublic double integrate(final double min, final double max)"
False,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,158,"hrows ConvergenceException,  MathUserException, IllegalArgumentException {"
False,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,159,"eturn integrate(f, min, max);"
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,42, Construct an integrator for the given function.
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,44, @param f function to integrate
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,45, @deprecated as of 2.0 the integrand function is passed as an argument
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,46," to the {@link #integrate(UnivariateRealFunction, double, double)}method."
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,48,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,49,ublic RombergIntegrator(UnivariateRealFunction f) {
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,50,"uper(f, 32);"
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,60,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,61,"ublic double integrate(final double min, final double max)"
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,62,"hrows MaxCountExceededException, MathUserException, IllegalArgumentException {"
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,63,"eturn integrate(f, min, max);"
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,41, Construct an integrator for the given function.
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,43, @param f function to integrate
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,44, @deprecated as of 2.0 the integrand function is passed as an argument
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,45," to the {@link #integrate(UnivariateRealFunction, double, double)}method."
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,47,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,48,ublic SimpsonIntegrator(UnivariateRealFunction f) {
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,49,"uper(f, 64);"
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,59,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,60,"ublic double integrate(final double min, final double max)"
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,61,"hrows MaxCountExceededException, MathUserException, IllegalArgumentException {"
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,62,"eturn integrate(f, min, max);"
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,43, Construct an integrator for the given function.
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,45, @param f function to integrate
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,46, @deprecated as of 2.0 the integrand function is passed as an argument
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,47," to the {@link #integrate(UnivariateRealFunction, double, double)}method."
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,49,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,50,ublic TrapezoidIntegrator(UnivariateRealFunction f) {
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,51,"uper(f, 64);"
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,99,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,100,"ublic double integrate(final double min, final double max)"
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,101,"hrows MaxCountExceededException, MathUserException, IllegalArgumentException {"
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,102,"eturn integrate(f, min, max);"
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,29,ublic interface UnivariateRealIntegrator extends ConvergingAlgorithm {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,29,public interface UnivariateRealIntegrator {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,32,* Set the upper limit for the number of iterations.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,33,* <p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,34,"* Usually a high iteration count indicates convergence problems. However,"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,35,"* the ""reasonable value"" varies widely for different algorithms. Users are"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,36,* advised to use the default value supplied by the algorithm.</p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,37,* <p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,38,* A {@link ConvergenceException} will be thrown if this number
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,39,* is exceeded.</p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,41,* @param count maximum number of iterations
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,43,public void setMaximalIterationCount(int count);
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,46,* Get the upper limit for the number of iterations.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,48,* @return the actual upper limit
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,50,public int getMaximalIterationCount();
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,53,* Set the absolute accuracy.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,54,* <p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,55,* The default is usually chosen so that results in the interval
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,56,* -10..-0.1 and +0.1..+10 can be found with a reasonable accuracy. If the
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,57,"* expected absolute value of your results is of much smaller magnitude, set"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,58,* this to a smaller value.</p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,59,* <p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,60,* Algorithms are advised to do a plausibility check with the relative
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,61,"* accuracy, but clients should not rely on this.</p>"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,63,* @param accuracy the accuracy.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,64,* @throws IllegalArgumentException if the accuracy can't be achieved by
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,65,* the solver or is otherwise deemed unreasonable.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,67,public void setAbsoluteAccuracy(double accuracy);
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,70,* Get the actual absolute accuracy.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,72,* @return the accuracy
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,74,public double getAbsoluteAccuracy();
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,77,* Set the relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,78,* <p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,79,* This is used to stop iterations if the absolute accuracy can't be
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,80,* achieved due to large values or short mantissa length.</p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,81,* <p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,82,* If this should be the primary criterion for convergence rather then a
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,83,"* safety measure, set the absolute accuracy to a ridiculously small value,"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,84,* like {@link org.apache.commons.math.util.MathUtils#SAFE_MIN MathUtils.SAFE_MIN}.</p>
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,86,* @param accuracy the relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,88,public void setRelativeAccuracy(double accuracy);
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,91,* Get the actual relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,92,* @return the accuracy
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,94,public double getRelativeAccuracy();
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,20,mport org.apache.commons.math.analysis.UnivariateRealFunction;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,22,mport org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,21,import org.apache.commons.math.exception.MaxCountExceededException;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,30,ublic abstract class UnivariateRealIntegratorImpl
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,31,xtends ConvergingAlgorithmImpl implements UnivariateRealIntegrator {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,29,public abstract class UnivariateRealIntegratorImpl implements UnivariateRealIntegrator {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,34,/** Maximum absolute error. */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,35,protected double absoluteAccuracy;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,37,/** Maximum relative error. */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,38,protected double relativeAccuracy;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,40,/** Maximum number of iterations. */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,41,protected int maximalIterationCount;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,49,/** The last iteration count. */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,50,protected int iterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,42,** The integrand functione.
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,43, @deprecated as of 2.0 the integrand function is passed as an argument
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,44," to the {@link #integrate(UnivariateRealFunction, double, double)}method. */"
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,45,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,46,rotected UnivariateRealFunction f;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,49, Construct an integrator with given iteration count and accuracy.
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,51, @param f the integrand function
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,52, @param defaultMaximalIterationCount maximum number of iterations
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,53, @throws IllegalArgumentException if f is null or the iteration
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,54, limits are not valid
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,55, @deprecated as of 2.0 the integrand function is passed as an argument
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,56," to the {@link #integrate(UnivariateRealFunction, double, double)}method."
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,58,Deprecated
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,59,"rotected UnivariateRealIntegratorImpl(final UnivariateRealFunction f,"
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,60,inal int defaultMaximalIterationCount)
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,61,hrows IllegalArgumentException {
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,63,etMaximalIterationCount(defaultMaximalIterationCount);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,64,etAbsoluteAccuracy(1.0e-15);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,66,f (f == null) {
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,67,hrow new NullArgumentException(LocalizedFormats.FUNCTION);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,70,his.f = f;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,72,/ parameters that are problem specific
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,73,etRelativeAccuracy(1.0e-6);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,74,his.defaultMinimalIterationCount = 3;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,75,his.minimalIterationCount = defaultMinimalIterationCount;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,77,erifyIterationCount();
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,83, @param defaultMaximalIterationCount maximum number of iterations
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,84, @throws IllegalArgumentException if f is null or the iteration
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,85, limits are not valid
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,61,* @param maximalIterationCount maximum number of iterations
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,87,rotected UnivariateRealIntegratorImpl(final int defaultMaximalIterationCount)
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,88,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,63,protected UnivariateRealIntegratorImpl(final int maximalIterationCount) {
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,90,etMaximalIterationCount(defaultMaximalIterationCount);
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,65,setMaximalIterationCount(maximalIterationCount);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,92,/ parameters that are problem specific
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,94,his.defaultMinimalIterationCount = 3;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,95,his.minimalIterationCount = defaultMinimalIterationCount;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,68,setMinimalIterationCount(3);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,101, Access the last computed integral.
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,103, @return the last computed integral
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,104, @throws IllegalStateException if no integral has been computed
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,73,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,74,public void setMaximalIterationCount(final int count) {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,75,maximalIterationCount = count;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,78,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,79,public int getMaximalIterationCount() {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,80,return maximalIterationCount;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,83,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,84,public void setAbsoluteAccuracy(double accuracy) {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,85,absoluteAccuracy = accuracy;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,88,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,89,public double getAbsoluteAccuracy() {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,90,return absoluteAccuracy;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,93,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,94,public void setRelativeAccuracy(final double accuracy) {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,95,relativeAccuracy = accuracy;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,98,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,99,public double getRelativeAccuracy() {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,100,return relativeAccuracy;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,103,/** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,120,"rotected final void setResult(double newResult, int iterationCount) {"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,118,"protected final void setResult(final double newResult, final int iterationCount) {"
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,135,ublic void setMinimalIterationCount(int count) {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,133,public void setMinimalIterationCount(final int count) {
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,156,"rotected void verifyInterval(double lower, double upper) throws"
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,157,llegalArgumentException {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,154,"protected void verifyInterval(final double lower, final double upper)"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,155,throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,177,* Reset the iterations counter to 0.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,179,* @since 2.2
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,181,protected void resetIterationsCounter() {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,182,iterationCount = 0;
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,186,* Increment the iterations counter by 1.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,188,* @throws MaxCountExceededException if the maximal number
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,189,* of iterations is exceeded.
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,190,* @since 2.2
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,192,protected void incrementIterationsCounter() {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,193,if (++iterationCount > maximalIterationCount) {
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,194,throw new MaxCountExceededException(maximalIterationCount);
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,38,"nivariateRealIntegrator integrator = new LegendreGaussIntegrator(5, 64);"
True,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,38,"UnivariateRealIntegratorImpl integrator = new LegendreGaussIntegrator(5, 64);"
