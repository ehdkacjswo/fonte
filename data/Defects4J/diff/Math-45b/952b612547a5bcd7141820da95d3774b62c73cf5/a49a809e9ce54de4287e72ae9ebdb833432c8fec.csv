is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,757,/        qMax = Double.NEGATIVE_INFINITY;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,758,/        eMin = Double.POSITIVE_INFINITY;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,763,"/            qMax = Math.max(qMax, qi);"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,764,"/            eMin = Math.min(eMin, ei);"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,769,"/        qMax = Math.max(qMax, qi);"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,847,/ insert a split here
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,842,// insert a split
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,890,/            eMin = work[4 + pingPong];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,909,"/               eMin = Math.min(eMin, work[j + 2]);"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,913,/            // find qMax
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,914,/            qMax = Double.NEGATIVE_INFINITY;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,915,/            for (int i = 1 - pingPong; i < 4 * n; i += 4) {
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,916,"/                qMax = Math.max(qMax, work[i]);"
