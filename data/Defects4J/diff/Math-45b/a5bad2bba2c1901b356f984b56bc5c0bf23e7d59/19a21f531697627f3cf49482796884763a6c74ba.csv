is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,18,ackage org.apache.commons.math.optimization.fitting;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,20,mport java.util.Arrays;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,21,mport java.util.Comparator;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,23,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,24,mport org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,25,mport org.apache.commons.math.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,26,mport org.apache.commons.math.exception.ZeroException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,27,mport org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,30," Guesses the parameters ({@code a}, {@code b}, {@code c}, and {@code d})"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,31, of a {@link ParametricGaussianFunction} based on the specified observed
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,32, points.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,34, @since 2.2
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,35, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,37,ublic class GaussianParametersGuesser {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,39,** Observed points. */
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,40,rivate final WeightedObservedPoint[] observations;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,42,** Resulting guessed parameters. */
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,43,rivate double[] parameters;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,46, Constructs instance with the specified observed points.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,48, @param observations observed points upon which should base guess
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,50,ublic GaussianParametersGuesser(WeightedObservedPoint[] observations) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,51,f (observations == null) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,52,hrow new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,54,f (observations.length < 3) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,55,"hrow new NumberIsTooSmallException(observations.length, 3, true);"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,57,his.observations = observations.clone();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,61, Guesses the parameters based on the observed points.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,63," @return guessed parameters array <code>{a, b, c, d}</code>"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,65,ublic double[] guess() {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,66,f (parameters == null) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,67,arameters = basicGuess(observations);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,69,eturn parameters.clone();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,73, Guesses the parameters based on the specified observed points.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,75, @param points observed points upon which should base guess
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,77," @return guessed parameters array <code>{a, b, c, d}</code>"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,79,rivate double[] basicGuess(WeightedObservedPoint[] points) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,80,"rrays.sort(points, createWeightedObservedPointComparator());"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,81,ouble[] params = new double[4];
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,83,nt minYIdx = findMinY(points);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,84,arams[0] = points[minYIdx].getY();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,86,nt maxYIdx = findMaxY(points);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,87,arams[1] = points[maxYIdx].getY();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,88,arams[2] = points[maxYIdx].getX();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,90,ouble fwhmApprox;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,91,ry {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,92,ouble halfY = params[0] + ((params[1] - params[0]) / 2.0);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,93,"ouble fwhmX1 = interpolateXAtY(points, maxYIdx, -1, halfY);"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,94,"ouble fwhmX2 = interpolateXAtY(points, maxYIdx, +1, halfY);"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,95,whmApprox = fwhmX2 - fwhmX1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,96, catch (OutOfRangeException e) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,97,whmApprox = points[points.length - 1].getX() - points[0].getX();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,99,arams[3] = fwhmApprox / (2.0 * Math.sqrt(2.0 * Math.log(2.0)));
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,101,eturn params;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,105, Finds index of point in specified points with the smallest Y.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,107, @param points points to search
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,109, @return index in specified points array
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,111,rivate int findMinY(WeightedObservedPoint[] points) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,112,nt minYIdx = 0;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,113,or (int i = 1; i < points.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,114,f (points[i].getY() < points[minYIdx].getY()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,115,inYIdx = i;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,118,eturn minYIdx;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,122, Finds index of point in specified points with the largest Y.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,124, @param points points to search
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,126, @return index in specified points array
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,128,rivate int findMaxY(WeightedObservedPoint[] points) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,129,nt maxYIdx = 0;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,130,or (int i = 1; i < points.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,131,f (points[i].getY() > points[maxYIdx].getY()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,132,axYIdx = i;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,135,eturn maxYIdx;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,139, Interpolates using the specified points to determine X at the specified
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,140, Y.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,142, @param points points to use for interpolation
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,143, @param startIdx index within points from which to start search for
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,144,        interpolation bounds points
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,145, @param idxStep index step for search for interpolation bounds points
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,146, @param y Y value for which X should be determined
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,148, @return value of X at the specified Y
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,150, @throws IllegalArgumentException if idxStep is 0
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,151, @throws OutOfRangeException if specified <code>y</code> is not within the
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,152,         range of the specified <code>points</code>
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,154,"rivate double interpolateXAtY(WeightedObservedPoint[] points,"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,155,"nt startIdx, int idxStep, double y) throws OutOfRangeException {"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,156,f (idxStep == 0) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,157,hrow new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,159,"eightedObservedPoint[] twoPoints = getInterpolationPointsForY(points, startIdx, idxStep, y);"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,160,eightedObservedPoint pointA = twoPoints[0];
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,161,eightedObservedPoint pointB = twoPoints[1];
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,162,f (pointA.getY() == y) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,163,eturn pointA.getX();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,165,f (pointB.getY() == y) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,166,eturn pointB.getX();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,168,eturn pointA.getX() +
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,169,((y - pointA.getY()) * (pointB.getX() - pointA.getX())) / (pointB.getY() - pointA.getY()));
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,173, Gets the two bounding interpolation points from the specified points
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,174, suitable for determining X at the specified Y.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,176, @param points points to use for interpolation
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,177, @param startIdx index within points from which to start search for
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,178,        interpolation bounds points
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,179, @param idxStep index step for search for interpolation bounds points
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,180, @param y Y value for which X should be determined
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,182, @return array containing two points suitable for determining X at the
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,183,         specified Y
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,185, @throws IllegalArgumentException if idxStep is 0
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,186, @throws OutOfRangeException if specified <code>y</code> is not within the
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,187,         range of the specified <code>points</code>
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,189,"rivate WeightedObservedPoint[] getInterpolationPointsForY(WeightedObservedPoint[] points,"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,190,"nt startIdx, int idxStep, double y)"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,191,hrows OutOfRangeException {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,192,f (idxStep == 0) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,193,hrow new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,195,or (int i = startIdx;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,196,idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,197, += idxStep) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,198,"f (isBetween(y, points[i].getY(), points[i + idxStep].getY())) {"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,199,eturn (idxStep < 0) ?
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,200,"ew WeightedObservedPoint[] { points[i + idxStep], points[i] } :"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,201,"ew WeightedObservedPoint[] { points[i], points[i + idxStep] };"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,205,ouble minY = Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,206,ouble maxY = Double.NEGATIVE_INFINITY;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,207,or (final WeightedObservedPoint point : points) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,208,"inY = Math.min(minY, point.getY());"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,209,"axY = Math.max(maxY, point.getY());"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,211,"hrow new OutOfRangeException(y, minY, maxY);"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,216, Determines whether a value is between two other values.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,218, @param value value to determine whether is between <code>boundary1</code>
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,219,        and <code>boundary2</code>
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,220, @param boundary1 one end of the range
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,221, @param boundary2 other end of the range
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,223, @return true if <code>value</code> is between <code>boundary1</code> and
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,224,         <code>boundary2</code> (inclusive); false otherwise
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,226,"rivate boolean isBetween(double value, double boundary1, double boundary2) {"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,227,eturn (value >= boundary1 && value <= boundary2) ||
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,228,value >= boundary2 && value <= boundary1);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,232, Factory method creating <code>Comparator</code> for comparing
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,233, <code>WeightedObservedPoint</code> instances.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,235, @return new <code>Comparator</code> instance
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,237,rivate Comparator<WeightedObservedPoint> createWeightedObservedPointComparator() {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,238,eturn new Comparator<WeightedObservedPoint>() {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,239,"ublic int compare(WeightedObservedPoint p1, WeightedObservedPoint p2) {"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,240,f (p1 == null && p2 == null) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,241,eturn 0;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,243,f (p1 == null) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,244,eturn -1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,246,f (p2 == null) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,247,eturn 1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,249,f (p1.getX() < p2.getX()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,250,eturn -1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,252,f (p1.getX() > p2.getX()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,253,eturn 1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,255,f (p1.getY() < p2.getY()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,256,eturn -1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,258,f (p1.getY() > p2.getY()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,259,eturn 1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,261,f (p1.getWeight() < p2.getWeight()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,262,eturn -1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,264,f (p1.getWeight() > p2.getWeight()) {
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,265,eturn 1;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,267,eturn 0;
