is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,154,"INIMAL_STEPSIZE_REACHED_DURING_INTEGRATION(""minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}""),"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,154,"MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION(""minimal step size ({1,number,0.00E00}) reached, integration needs {0,number,0.00E00}""),"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,29,mport org.apache.commons.math.ConvergenceException;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,32,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,33,import org.apache.commons.math.exception.MathIllegalStateException;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,35,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,35,mport org.apache.commons.math.ode.events.EventException;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,229, @exception IntegratorException if the value of one event state cannot be evaluated
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,230,* @exception MathIllegalStateException if the value of one event state cannot be evaluated
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,234,hrows IntegratorException {
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,235,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,236,ry {
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,332, catch (EventException se) {
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,333,inal Throwable cause = se.getCause();
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,334,f ((cause != null) && (cause instanceof MathUserException)) {
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,335,hrow (MathUserException) cause;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,337,hrow new IntegratorException(se);
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,338, catch (ConvergenceException ce) {
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,339,hrow new IntegratorException(ce);
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,350, @exception IntegratorException if some inconsistency is detected
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,341,* @exception DimensionMismatchException if some inconsistency is detected
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,342,* @exception NumberIsTooSmallException if integration span is too small
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,355,hrows IntegratorException {
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,347,"throws DimensionMismatchException, NumberIsTooSmallException {"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,358,hrow new IntegratorException(
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,359,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, ode.getDimension(), y0.length);"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,350,"throw new DimensionMismatchException(ode.getDimension(), y0.length);"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,363,hrow new IntegratorException(
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,364,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, ode.getDimension(), y.length);"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,354,"throw new DimensionMismatchException(ode.getDimension(), y.length);"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,368,hrow new IntegratorException(
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,369,"ocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,370,astMath.abs(t - t0));
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,358,"throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,359,"FastMath.abs(t - t0),"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,360,"1.0e-12 * FastMath.max(FastMath.abs(t0), FastMath.abs(t)),"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,361,false);
False,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,20,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,54, @throws IntegratorException if the integrator cannot perform integration
False,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,55, @throws MathUserException this exception is propagated to the caller if
False,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,56, the underlying user function triggers one
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,55,* @throws MathIllegalStateException if the integrator cannot perform integration
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,56,* @throws MathIllegalArgumentException if integration parameters are wrong (typically
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,57,* too small integration span)
False,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,59,"ouble t0, double[] y0,"
False,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,60,"ouble t, double[] y) throws MathUserException, IntegratorException;"
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,60,"double t0, double[] y0, double t, double[] y)"
True,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,61,"throws MathIllegalStateException, MathIllegalArgumentException;"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,18,ackage org.apache.commons.math.ode;
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,20,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,21,mport org.apache.commons.math.exception.util.Localizable;
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,24, This exception is made available to users to report
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,25, the error conditions that are triggered during integration
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,26, @version $Id$
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,27, @since 1.2
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,29,ublic class IntegratorException
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,30,xtends MathException {
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,32,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,33,rivate static final long serialVersionUID = -1607588949778036796L;
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,35,** Simple constructor.
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,36, Build an exception by translating and formating a message
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,37, @param specifier format specifier (to be translated)
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,38, @param parts to insert in the format (no translation)
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,39, @since 2.2
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,41,"ublic IntegratorException(final Localizable specifier, final Object ... parts) {"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,42,"uper(specifier, parts);"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,46, Create an exception with a given root cause.
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,47, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,49,ublic IntegratorException(final Throwable cause) {
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,50,uper(cause);
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,207, @throws IntegratorException if the integrator cannot perform integration
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,208, @throws MathUserException this exception is propagated to the caller if
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,209, the underlying user function triggers one
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,208,* @throws MathIllegalStateException if the integrator cannot perform integration
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,212,"hrows MathUserException, IntegratorException {"
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,211,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,20,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,51, @throws IntegratorException if the integrator cannot perform integration
False,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,52, @throws MathUserException this exception is propagated to the caller if the
False,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,53, underlying user function triggers one
True,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,52,* @throws MathIllegalStateException if the integrator cannot perform integration
True,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,53,* @throws MathIllegalArgumentException if integration parameters are wrong (typically
True,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,54,* too small integration span)
False,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,58,"hrows MathUserException, IntegratorException;"
True,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,59,"throws MathIllegalStateException, MathIllegalArgumentException;"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,18,ackage org.apache.commons.math.ode.events;
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,20,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,21,mport org.apache.commons.math.exception.util.Localizable;
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,24, This exception is made available to users to report
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,25, the error conditions that are triggered by {@link EventHandler}
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,26, @version $Id$
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,27, @since 2.0
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,29,ublic class EventException extends MathException {
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,31,** Serialization UID. */
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,32,rivate static final long serialVersionUID = -898215297400035290L;
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,34,** Simple constructor.
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,35, Build an exception by translating and formating a message
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,36, @param specifier format specifier (to be translated)
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,37, @param parts to insert in the format (no translation)
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,38, @since 2.2
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,40,"ublic EventException(final Localizable specifier, final Object ... parts) {"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,41,"uper(specifier, parts);"
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,45, Create an exception with a given root cause.
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,46, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,48,ublic EventException(final Throwable cause) {
False,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,49,uper(cause);
False,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,97, @exception EventException if the switching function cannot be evaluated
False,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,99,"ouble g(double t, double[] y) throws EventException;"
True,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,98,"double g(double t, double[] y);"
False,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,161, @exception EventException if the event occurrence triggers an error
False,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,163,"nt eventOccurred(double t, double[] y, boolean increasing) throws EventException;"
True,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,161,"int eventOccurred(double t, double[] y, boolean increasing);"
False,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,179, @exception EventException if the state cannot be reseted
False,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,181,"oid resetState(double t, double[] y) throws EventException;"
True,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,src/main/java/org/apache/commons/math/ode/events/EventHandler.java,178,"void resetState(double t, double[] y);"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,20,mport org.apache.commons.math.ConvergenceException;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,27,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,26,import org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,151, @exception EventException if the event handler
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,152, value cannot be evaluated at the beginning of the step
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,154,ublic void reinitializeBegin(final StepInterpolator interpolator)
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,155,hrows EventException {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,156,ry {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,158,0 = interpolator.getPreviousTime();
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,159,nterpolator.setInterpolatedTime(t0);
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,160,"0 = handler.g(t0, interpolator.getInterpolatedState());"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,161,f (g0 == 0) {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,162,/ excerpt from MATH-421 issue:
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,163,/ If an ODE solver is setup with an EventHandler that return STOP
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,164,"/ when the even is triggered, the integrator stops (which is exactly"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,165,/ the expected behavior). If however the user wants to restart the
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,166,/ solver from the final state reached at the event with the same
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,167,/ configuration (expecting the event to be triggered again at a
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,168,"/ later time), then the integrator may fail to start. It can get stuck"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,169,/ at the previous event. The use case for the bug MATH-421 is fairly
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,170,"/ general, so events occurring exactly at start in the first step should"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,171,/ be ignored.
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,173,/ extremely rare case: there is a zero EXACTLY at interval start
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,174,/ we will use the sign slightly after step beginning to force ignoring this zero
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,175,"inal double epsilon = FastMath.max(solver.getAbsoluteAccuracy(),"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,176,astMath.abs(solver.getRelativeAccuracy() * t0));
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,177,inal double tStart = t0 + 0.5 * epsilon;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,178,nterpolator.setInterpolatedTime(tStart);
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,179,"0 = handler.g(tStart, interpolator.getInterpolatedState());"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,181,0Positive = g0 >= 0;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,183, catch (MathUserException mue) {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,184,hrow new EventException(mue);
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,151,public void reinitializeBegin(final StepInterpolator interpolator) {
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,153,t0 = interpolator.getPreviousTime();
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,154,interpolator.setInterpolatedTime(t0);
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,155,"g0 = handler.g(t0, interpolator.getInterpolatedState());"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,156,if (g0 == 0) {
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,157,// excerpt from MATH-421 issue:
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,158,// If an ODE solver is setup with an EventHandler that return STOP
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,159,"// when the even is triggered, the integrator stops (which is exactly"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,160,// the expected behavior). If however the user wants to restart the
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,161,// solver from the final state reached at the event with the same
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,162,// configuration (expecting the event to be triggered again at a
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,163,"// later time), then the integrator may fail to start. It can get stuck"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,164,// at the previous event. The use case for the bug MATH-421 is fairly
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,165,"// general, so events occurring exactly at start in the first step should"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,166,// be ignored.
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,168,// extremely rare case: there is a zero EXACTLY at interval start
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,169,// we will use the sign slightly after step beginning to force ignoring this zero
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,170,"final double epsilon = FastMath.max(solver.getAbsoluteAccuracy(),"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,171,FastMath.abs(solver.getRelativeAccuracy() * t0));
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,172,final double tStart = t0 + 0.5 * epsilon;
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,173,interpolator.setInterpolatedTime(tStart);
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,174,"g0 = handler.g(tStart, interpolator.getInterpolatedState());"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,176,g0Positive = g0 >= 0;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,192, @exception MathUserException if the interpolator fails to
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,193, compute the switching function somewhere within the step
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,194, @exception EventException if the switching function
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,195, cannot be evaluated
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,199,"hrows MathUserException, EventException, ConvergenceException {"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,201,ry {
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,187,throws ConvergenceException {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,215,ry {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,216,nterpolator.setInterpolatedTime(t);
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,217,"eturn handler.g(t, interpolator.getInterpolatedState());"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,218, catch (EventException e) {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,219,hrow new ConveyedException(e);
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,201,interpolator.setInterpolatedTime(t);
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,202,"return handler.g(t, interpolator.getInterpolatedState());"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,295, catch (ConveyedException ce) {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,296,hrow ce.getConveyedException();
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,316, @exception EventException if the value of the event
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,317, handler cannot be evaluated
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,319,"ublic void stepAccepted(final double t, final double[] y)"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,320,hrows EventException {
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,295,"public void stepAccepted(final double t, final double[] y) {"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,350, @exception EventException if the state cannot be reseted by the event
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,351, handler
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,353,"ublic boolean reset(final double t, final double[] y)"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,354,hrows EventException {
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,326,"public boolean reset(final double t, final double[] y) {"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,371,** Local exception to convey EventException instances through root finding algorithms. */
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,372,rivate static class ConveyedException extends RuntimeException {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,374,** Serializable uid. */
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,375,rivate static final long serialVersionUID = 2668348550531980574L;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,377,** Conveyed exception. */
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,378,rivate final EventException conveyedException;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,380,** Simple constructor.
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,381, @param conveyedException conveyed exception
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,383,ublic ConveyedException(final EventException conveyedException) {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,384,his.conveyedException = conveyedException;
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,387,** Get the conveyed exception.
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,388, @return conveyed exception
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,390,ublic EventException getConveyedException() {
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,391,eturn conveyedException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,20,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,195,"hrows MathUserException, IntegratorException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,195,"throws MathIllegalStateException, MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,20,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,92,"hrows MathUserException, IntegratorException;"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,92,"throws MathIllegalStateException, MathIllegalArgumentException;"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,22,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,23,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,26,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,212,"hrows MathUserException, IntegratorException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,212,"throws MathIllegalStateException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,22,import org.apache.commons.math.exception.MathIllegalStateException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,24,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,25,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,221, @exception IntegratorException if some inconsistency is detected
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,224,* @exception DimensionMismatchException if some inconsistency is detected
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,225,* @exception NumberIsTooSmallException if integration span is too small
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,227,hrows IntegratorException {
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,231,"throws DimensionMismatchException, NumberIsTooSmallException {"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,238,hrow new IntegratorException(
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,239,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, mainSetDimension, vecAbsoluteTolerance.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,242,"throw new DimensionMismatchException(mainSetDimension, vecAbsoluteTolerance.length);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,243,hrow new IntegratorException(
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,244,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, mainSetDimension, vecRelativeTolerance.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,246,"throw new DimensionMismatchException(mainSetDimension, vecRelativeTolerance.length);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,335, @exception IntegratorException if the step is too small and acceptSmall is false
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,337,* @exception NumberIsTooSmallException if the step is too small and acceptSmall is false
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,338,hrows IntegratorException {
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,340,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,345,hrow new IntegratorException(
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,346,"ocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,347,"inStep, FastMath.abs(h));"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,347,"throw new NumberIsTooSmallException(LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,348,"minStep, FastMath.abs(h), true);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,365,"hrows MathUserException, IntegratorException;"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,366,"throws MathIllegalStateException, MathIllegalArgumentException;"
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,20,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,22,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,195,"hrows MathUserException, IntegratorException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,195,"throws MathIllegalStateException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,22,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,549,"hrows MathUserException, IntegratorException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,550,"throws MathIllegalStateException, MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,21,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,21,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,22,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,24,mport org.apache.commons.math.ode.IntegratorException;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,96,"hrows MathUserException, IntegratorException {"
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,96,"throws MathIllegalStateException, MathIllegalArgumentException {"
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,23,mport org.apache.commons.math.ode.ContinuousOutputModel;
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,24,mport org.apache.commons.math.ode.FirstOrderIntegrator;
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,25,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,44,ublic void testBoundaries()
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,45,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,41,public void testBoundaries() {
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,57,ublic void testRandomAccess()
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,58,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,53,public void testRandomAccess() {
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,87,ublic void testModelsMerging()
False,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,88,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java,82,public void testModelsMerging() {
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,20,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,21,mport org.apache.commons.math.ode.FirstOrderConverter;
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,22,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,23,mport org.apache.commons.math.ode.SecondOrderDifferentialEquations;
True,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,21,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,42,ublic void testDecreasingSteps()
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,43,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,40,public void testDecreasingSteps() {
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,60,ublic void testSmallStep()
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,61,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,57,public void testSmallStep() {
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,68,ublic void testBigStep()
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,69,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,64,public void testBigStep() {
False,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,103,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java,98,"throws MathIllegalStateException, MathIllegalArgumentException {"
False,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,21,mport org.apache.commons.math.ConvergenceException;
False,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,23,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,33,ublic void closeEvents()
False,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,34,"hrows EventException, ConvergenceException, MathUserException {"
True,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,src/test/java/org/apache/commons/math/ode/events/EventStateTest.java,31,public void closeEvents() {
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,27,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,51, @throws EventException in case of event evaluation failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,52, @throws IntegratorException in case of integration failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,53, @throws MathUserException in case of derivative evaluation failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,56,"ublic void testOverlappingEvents0() throws MathUserException, IntegratorException, EventException {"
True,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,52,public void testOverlappingEvents0() {
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,64, @throws EventException in case of event evaluation failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,65, @throws IntegratorException in case of integration failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,66, @throws MathUserException in case of derivative evaluation failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,69,"ublic void testOverlappingEvents1() throws MathUserException, IntegratorException, EventException {"
True,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,62,public void testOverlappingEvents1() {
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,78, @throws EventException in case of event evaluation failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,79, @throws IntegratorException in case of integration failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,80, @throws MathUserException in case of derivative evaluation failure
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,82,"ublic void test(int eventType) throws MathUserException, IntegratorException, EventException {"
True,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,72,public void test(int eventType) {
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,150,"ublic double g(double t, double[] y) throws EventException {"
True,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,140,"public double g(double t, double[] y) {"
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,156,"ublic int eventOccurred(double t, double[] y, boolean increasing) throws EventException {"
True,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,146,"public int eventOccurred(double t, double[] y, boolean increasing) {"
False,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,161,"ublic void resetState(double t, double[] y) throws EventException {"
True,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java,151,"public void resetState(double t, double[] y) {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,23,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,34,Test(expected=IntegratorException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,35,"ublic void dimensionCheck() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,35,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,36,public void dimensionCheck() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,44,Test(expected=IntegratorException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,45,"ublic void testMinStep() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,45,@Test(expected=NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,46,public void testMinStep() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,66,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,102,"ublic void exceedMaxEvaluations() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,103,public void exceedMaxEvaluations() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,118,"ublic void backward() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,119,public void backward() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,136,"ublic void polynomial() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java,137,public void polynomial() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,23,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,34,Test(expected=IntegratorException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,35,"ublic void dimensionCheck() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,35,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,36,public void dimensionCheck() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,44,Test(expected=IntegratorException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,45,"ublic void testMinStep() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,45,@Test(expected=NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,46,public void testMinStep() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,66,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,102,"ublic void exceedMaxEvaluations() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,103,public void exceedMaxEvaluations() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,118,"ublic void backward() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,119,public void backward() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,136,"ublic void polynomial() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java,137,public void polynomial() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,23,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,24,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,32,mport org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,42,"ublic void testMissedEndEvent() throws IntegratorException, MathUserException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,42,public void testMissedEndEvent() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,103, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,104,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,105, catch(IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,103,} catch(DimensionMismatchException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,113, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,114,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,115, catch(IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,111,} catch(DimensionMismatchException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,123, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,124,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,125, catch(IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,119,} catch(NumberIsTooSmallException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,131,"hrows MathUserException, IntegratorException  {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,180,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,199,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,218,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,237,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,281,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,28,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,41,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,50,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,51,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,48,"throws IOException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,22,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,30,mport org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,31,mport org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,41,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,40,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,43,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,50,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,51, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,52,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,53, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,57,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,50,@Test(expected=NumberIsTooSmallException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,60,ry {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,76, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,77,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,78, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,85,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,111,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,162,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,204,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,238,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,261,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,43,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,57,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,58,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,56,"throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,108,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,40,"ublic void testMissedEndEvent() throws IntegratorException, MathUserException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,41,public void testMissedEndEvent() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,96,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,97,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,98,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,106, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,107,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,108, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,112,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,108,@Test(expected=NumberIsTooSmallException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,114,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,122, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,123,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,124, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,128,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,119,@Test(expected=NumberIsTooSmallException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,131,ry {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,147, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,148,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,149, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,156,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,193,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,217,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,250,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,273,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,294,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,43,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,57,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,58,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,56,"throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,108,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,21,mport org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,24,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,31,mport org.apache.commons.math.ode.nonstiff.EulerIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,40,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,38,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,42,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,48, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,49,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,50, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,56,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,102,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,123,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,143,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,162,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,42,ublic void noReset() throws MathUserException {
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,41,public void noReset() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,124,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,133,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,134,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,132,"throws IOException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,24,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,32,mport org.apache.commons.math.ode.nonstiff.GillIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,41,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,40,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,43,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,49, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,50,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,51, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,57,"hrows MathUserException, IntegratorException  {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,103,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,123,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,142,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,161,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,175,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,216,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,21,mport java.util.Random;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,22,mport java.io.ByteArrayOutputStream;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,24,mport java.io.ObjectOutputStream;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,25,mport java.io.ObjectInputStream;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,22,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,24,import java.io.ObjectInputStream;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,25,import java.io.ObjectOutputStream;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,26,import java.util.Random;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,28,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,32,mport org.apache.commons.math.ode.nonstiff.GillIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,42,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,51,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,52,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,48,"throws IOException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,23,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,31,mport org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,41,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,41,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,43,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,50,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,51, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,52,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,53, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,57,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,51,@Test(expected=NumberIsTooSmallException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,59,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,66,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,67, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,68,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,69, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,73,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,61,@Test(expected=NumberIsTooSmallException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,76,ry {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,91,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,92, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,93,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,94, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,101,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,125,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,163,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,192,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,203,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,236,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,259,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,279,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,290,"ublic void testIssue596() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,272,public void testIssue596() {
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,43,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,58,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,59,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,57,"throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,110,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,21,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,22,mport org.apache.commons.math.exception.TooManyEvaluationsException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,23,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,24,import org.apache.commons.math.exception.TooManyEvaluationsException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,25,import org.apache.commons.math.exception.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,26,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,32,mport org.apache.commons.math.ode.events.EventException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,75,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,75,@Test(expected=NumberIsTooSmallException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,78,ry {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,94, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,95,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,96, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,103,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,139,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,163,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,214,"ublic double g(double t, double[] y) throws EventException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,209,"public double g(double t, double[] y) {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,218,"hrow new EventException(LocalizedFormats.EVALUATION_FAILED, t);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,213,"throw new MathUserException(LocalizedFormats.EVALUATION_FAILED, t);"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,231, catch (IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,226,} catch (MathUserException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,288, catch (IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,283,} catch (DimensionMismatchException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,298, catch (IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,293,} catch (DimensionMismatchException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,308, catch (IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,303,} catch (DimensionMismatchException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,318, catch (IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,313,} catch (DimensionMismatchException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,328, catch (IntegratorException ie) {
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,323,} catch (NumberIsTooSmallException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,336,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,43,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,57,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,58,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,56,"throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,108,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,21,mport org.apache.commons.math.exception.MathUserException;
True,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,24,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,31,mport org.apache.commons.math.ode.nonstiff.MidpointIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,40,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,38,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,42,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,48, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,49,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,50, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,56,"hrows MathUserException, IntegratorException  {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,102,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,123,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,143,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,162,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,28,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,42,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,51,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,52,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,49,"throws IOException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,24,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,32,mport org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,41,Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,40,@Test(expected=DimensionMismatchException.class)
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,43,ry  {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,49, catch(MathUserException de) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,50,"ssert.fail(""wrong exception caught"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,51, catch(IntegratorException ie) {
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,57,"hrows MathUserException, IntegratorException  {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,103,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,123,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,142,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,161,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,210,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,28,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,41,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,50,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,51,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,48,"throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,28,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,30,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,40,ublic void derivativesConsistency()
False,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,41,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,38,public void derivativesConsistency() {
False,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,49,"hrows MathUserException, IntegratorException,"
False,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,50,"OException, ClassNotFoundException {"
True,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,46,"throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,22,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,31,inal double threshold)
False,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,32,"hrows MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java,30,final double threshold) {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,11,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,84,"ublic void testIncNeither() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,83,public void testIncNeither() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,90,"ublic void testIncNeitherRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,89,public void testIncNeitherRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,96,"ublic void testIncFirst() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,95,public void testIncFirst() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,102,"ublic void testIncFirstRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,101,public void testIncFirstRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,108,"ublic void testIncLast() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,107,public void testIncLast() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,114,"ublic void testIncLastRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,113,public void testIncLastRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,120,"ublic void testIncBoth() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,119,public void testIncBoth() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,126,"ublic void testIncBothRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,125,public void testIncBothRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,132,"ublic void testMulNeither() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,131,public void testMulNeither() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,138,"ublic void testMulNeitherRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,137,public void testMulNeitherRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,144,"ublic void testMulFirst() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,143,public void testMulFirst() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,150,"ublic void testMulFirstRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,149,public void testMulFirstRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,156,"ublic void testMulLast() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,155,public void testMulLast() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,162,"ublic void testMulLastRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,161,public void testMulLastRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,168,"ublic void testMulBoth() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,167,public void testMulBoth() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,174,"ublic void testMulBothRev() throws MathUserException, IntegratorException {"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,173,public void testMulBothRev() {
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,189,"ouble[] expected, boolean reverse)"
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,190,"hrows MathUserException, IntegratorException"
True,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java,188,"double[] expected, boolean reverse) {"
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,20,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,22,mport org.apache.commons.math.ode.IntegratorException;
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,25,mport org.apache.commons.math.ode.sampling.FixedStepHandler;
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,26,mport org.apache.commons.math.ode.sampling.StepNormalizer;
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,43,"hrows MathUserException, IntegratorException {"
False,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,71,"hrows MathUserException, IntegratorException {"
