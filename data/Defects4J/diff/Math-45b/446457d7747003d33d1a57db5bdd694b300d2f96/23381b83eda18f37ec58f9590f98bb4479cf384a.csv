is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,28,ublic class SparseRealMatrix extends AbstractRealMatrix {
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,28,public class OpenMapRealMatrix extends AbstractRealMatrix {
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,47,"ublic SparseRealMatrix(int rowDimension, int columnDimension) {"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,47,"public OpenMapRealMatrix(int rowDimension, int columnDimension) {"
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,58,ublic SparseRealMatrix(SparseRealMatrix matrix) {
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,58,public OpenMapRealMatrix(OpenMapRealMatrix matrix) {
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,67,eturn new SparseRealMatrix(this);
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,67,return new OpenMapRealMatrix(this);
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,74,"eturn new SparseRealMatrix(rowDimension, columnDimension);"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,74,"return new OpenMapRealMatrix(rowDimension, columnDimension);"
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,88,eturn add((SparseRealMatrix) m);
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,88,return add((OpenMapRealMatrix) m);
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,101,ublic RealMatrix add(SparseRealMatrix m) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,101,public RealMatrix add(OpenMapRealMatrix m) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,106,inal RealMatrix out = new SparseRealMatrix(this);
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,106,final RealMatrix out = new OpenMapRealMatrix(this);
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,123,eturn subtract((SparseRealMatrix) m);
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,123,return subtract((OpenMapRealMatrix) m);
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,136,ublic RealMatrix subtract(SparseRealMatrix m) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,136,public RealMatrix subtract(OpenMapRealMatrix m) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,141,inal RealMatrix out = new SparseRealMatrix(this);
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,141,final RealMatrix out = new OpenMapRealMatrix(this);
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,158,eturn multiply((SparseRealMatrix) m);
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,158,return multiply((OpenMapRealMatrix) m);
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,190,ublic SparseRealMatrix multiply(SparseRealMatrix m) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,190,public OpenMapRealMatrix multiply(OpenMapRealMatrix m) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,196,"parseRealMatrix out = new SparseRealMatrix(rowDimension, outCols);"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,196,"OpenMapRealMatrix out = new OpenMapRealMatrix(rowDimension, outCols);"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,28,ublic class SparseRealVector implements RealVector {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,28,public class OpenMapRealVector implements RealVector {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,49," #SparseRealVector(SparseRealVector, int)} constructor"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,49,"* #SparseRealVector(OpenMapRealVector, int)} constructor"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,54,ublic SparseRealVector() {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,54,public OpenMapRealVector() {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,62,ublic SparseRealVector(int dimension) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,62,public OpenMapRealVector(int dimension) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,71,"ublic SparseRealVector(int dimension, double epsilon) {"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,71,"public OpenMapRealVector(int dimension, double epsilon) {"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,82,"rotected SparseRealVector(SparseRealVector v, int resize) {"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,82,"protected OpenMapRealVector(OpenMapRealVector v, int resize) {"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,93,"ublic SparseRealVector(int dimension, int expectedSize) {"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,93,"public OpenMapRealVector(int dimension, int expectedSize) {"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,103,"ublic SparseRealVector(int dimension, int expectedSize, double epsilon) {"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,103,"public OpenMapRealVector(int dimension, int expectedSize, double epsilon) {"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,114,ublic SparseRealVector(double[] values) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,114,public OpenMapRealVector(double[] values) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,124,"ublic SparseRealVector(double[] values, double epsilon) {"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,124,"public OpenMapRealVector(double[] values, double epsilon) {"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,141,ublic SparseRealVector(Double[] values) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,141,public OpenMapRealVector(Double[] values) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,151,"ublic SparseRealVector(Double[] values, double epsilon) {"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,151,"public OpenMapRealVector(Double[] values, double epsilon) {"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,167,ublic SparseRealVector(SparseRealVector v) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,167,public OpenMapRealVector(OpenMapRealVector v) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,177,ublic SparseRealVector(RealVector v) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,177,public OpenMapRealVector(RealVector v) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,225,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,226,eturn add((SparseRealVector) v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,225,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,226,return add((OpenMapRealVector) v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,237,ublic SparseRealVector add(SparseRealVector v) throws IllegalArgumentException{
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,237,public OpenMapRealVector add(OpenMapRealVector v) throws IllegalArgumentException{
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,239,parseRealVector res = (SparseRealVector)copy();
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,239,OpenMapRealVector res = (OpenMapRealVector)copy();
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,256,parseRealVector res = new SparseRealVector(getDimension());
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,256,OpenMapRealVector res = new OpenMapRealVector(getDimension());
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,268,ublic SparseRealVector append(SparseRealVector v) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,269,"parseRealVector res = new SparseRealVector(this, v.getDimension());"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,268,public OpenMapRealVector append(OpenMapRealVector v) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,269,"OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,280,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,281,eturn append((SparseRealVector) v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,280,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,281,return append((OpenMapRealVector) v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,288,"ealVector res = new SparseRealVector(this, 1);"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,288,"RealVector res = new OpenMapRealVector(this, 1);"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,295,"ealVector res = new SparseRealVector(this, a.length);"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,295,"RealVector res = new OpenMapRealVector(this, a.length);"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,304,eturn new SparseRealVector(this);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,304,return new OpenMapRealVector(this);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,338,parseRealVector res = new SparseRealVector(this);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,338,OpenMapRealVector res = new OpenMapRealVector(this);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,350,parseRealVector res = new SparseRealVector(this);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,350,OpenMapRealVector res = new OpenMapRealVector(this);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,362,parseRealVector res = new SparseRealVector(this);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,362,OpenMapRealVector res = new OpenMapRealVector(this);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,374,parseRealVector res = new SparseRealVector(this);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,374,OpenMapRealVector res = new OpenMapRealVector(this);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,387,parseRealVector res = new SparseRealVector(n);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,387,OpenMapRealVector res = new OpenMapRealVector(n);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,422,ublic double getDistance(SparseRealVector v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,422,public double getDistance(OpenMapRealVector v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,447,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,448,eturn getDistance((SparseRealVector) v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,447,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,448,return getDistance((OpenMapRealVector) v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,478,ublic double getL1Distance(SparseRealVector v) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,478,public double getL1Distance(OpenMapRealVector v) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,501,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,502,eturn getL1Distance((SparseRealVector) v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,501,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,502,return getL1Distance((OpenMapRealVector) v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,534,rivate double getLInfDistance(SparseRealVector v) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,534,private double getLInfDistance(OpenMapRealVector v) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,560,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,561,eturn getLInfDistance((SparseRealVector) v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,560,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,561,return getLInfDistance((OpenMapRealVector) v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1035,ublic SparseRealMatrix outerproduct(SparseRealVector v) throws IllegalArgumentException{
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1035,public OpenMapRealMatrix outerproduct(OpenMapRealVector v) throws IllegalArgumentException{
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1037,"parseRealMatrix res = new SparseRealMatrix(virtualSize, virtualSize);"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1037,"OpenMapRealMatrix res = new OpenMapRealMatrix(virtualSize, virtualSize);"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1054,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1055,eturn outerproduct((SparseRealVector)v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1054,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1055,return outerproduct((OpenMapRealVector)v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1057,"ealMatrix res = new SparseRealMatrix(virtualSize, virtualSize);"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1057,"RealMatrix res = new OpenMapRealMatrix(virtualSize, virtualSize);"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1072,"ealMatrix res = new SparseRealMatrix(virtualSize, virtualSize);"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1072,"RealMatrix res = new OpenMapRealMatrix(virtualSize, virtualSize);"
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1094,eturn projection(new SparseRealVector(v));
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1094,return projection(new OpenMapRealVector(v));
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1136,ublic SparseRealVector subtract(SparseRealVector v) throws IllegalArgumentException{
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1136,public OpenMapRealVector subtract(OpenMapRealVector v) throws IllegalArgumentException{
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1138,parseRealVector res = (SparseRealVector)copy();
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1138,OpenMapRealVector res = (OpenMapRealVector)copy();
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1155,f (v instanceof SparseRealVector) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1156,eturn subtract((SparseRealVector) v);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1155,if (v instanceof OpenMapRealVector) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1156,return subtract((OpenMapRealVector) v);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1164,parseRealVector res = new SparseRealVector(this);
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1164,OpenMapRealVector res = new OpenMapRealVector(this);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1270,f (!(obj instanceof SparseRealVector)) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1270,if (!(obj instanceof OpenMapRealVector)) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1273,parseRealVector other = (SparseRealVector) obj;
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1273,OpenMapRealVector other = (OpenMapRealVector) obj;
