is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,24,* {@code ceil} function.
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,29,public class Ceil implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,src/main/java/org/apache/commons/math/analysis/function/Ceil.java,32,return FastMath.ceil(x);
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,24,* {@code floor} function.
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,29,public class Floor implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Floor.java,src/main/java/org/apache/commons/math/analysis/function/Floor.java,32,return FastMath.floor(x);
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,24,* {@code rint} function.
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,29,public class Rint implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Rint.java,src/main/java/org/apache/commons/math/analysis/function/Rint.java,32,return FastMath.rint(x);
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,24,* {@code signum} function.
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,29,public class Signum implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Signum.java,src/main/java/org/apache/commons/math/analysis/function/Signum.java,32,return FastMath.signum(x);
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,24,* {@code ulp} function.
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,29,public class Ulp implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,30,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,31,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,src/main/java/org/apache/commons/math/analysis/function/Ulp.java,32,return FastMath.ulp(x);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,27,mport org.apache.commons.math.analysis.ComposableFunction;
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,345,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,346,ublic RealVector mapAbs() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,347,eturn copy().mapAbsToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,350,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,351,ublic RealVector mapAbsToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,352,eturn mapToSelf(ComposableFunction.ABS);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,355,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,356,ublic RealVector mapAcos() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,357,eturn copy().mapAcosToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,360,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,361,ublic RealVector mapAcosToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,362,eturn mapToSelf(ComposableFunction.ACOS);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,365,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,366,ublic RealVector mapAsin() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,367,eturn copy().mapAsinToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,370,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,371,ublic RealVector mapAsinToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,372,eturn mapToSelf(ComposableFunction.ASIN);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,375,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,376,ublic RealVector mapAtan() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,377,eturn copy().mapAtanToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,380,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,381,ublic RealVector mapAtanToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,382,eturn mapToSelf(ComposableFunction.ATAN);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,385,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,386,ublic RealVector mapCbrt() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,387,eturn copy().mapCbrtToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,390,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,391,ublic RealVector mapCbrtToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,392,eturn mapToSelf(ComposableFunction.CBRT);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,395,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,396,ublic RealVector mapCeil() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,397,eturn copy().mapCeilToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,400,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,401,ublic RealVector mapCeilToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,402,eturn mapToSelf(ComposableFunction.CEIL);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,405,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,406,ublic RealVector mapCos() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,407,eturn copy().mapCosToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,410,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,411,ublic RealVector mapCosToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,412,eturn mapToSelf(ComposableFunction.COS);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,415,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,416,ublic RealVector mapCosh() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,417,eturn copy().mapCoshToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,420,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,421,ublic RealVector mapCoshToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,422,eturn mapToSelf(ComposableFunction.COSH);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,425,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,426,ublic RealVector mapDivide(double d) {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,427,eturn copy().mapDivideToSelf(d);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,430,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,431,ublic RealVector mapDivideToSelf(double d){
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,432,eturn mapToSelf(BinaryFunction.DIVIDE.fix2ndArgument(d));
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,435,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,436,ublic RealVector mapExp() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,437,eturn copy().mapExpToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,440,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,441,ublic RealVector mapExpToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,442,eturn mapToSelf(ComposableFunction.EXP);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,445,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,446,ublic RealVector mapExpm1() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,447,eturn copy().mapExpm1ToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,450,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,451,ublic RealVector mapExpm1ToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,452,eturn mapToSelf(ComposableFunction.EXPM1);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,455,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,456,ublic RealVector mapFloor() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,457,eturn copy().mapFloorToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,460,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,461,ublic RealVector mapFloorToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,462,eturn mapToSelf(ComposableFunction.FLOOR);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,465,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,466,ublic RealVector mapInv() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,467,eturn copy().mapInvToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,470,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,471,ublic RealVector mapInvToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,472,eturn mapToSelf(ComposableFunction.INVERT);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,475,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,476,ublic RealVector mapLog() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,477,eturn copy().mapLogToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,480,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,481,ublic RealVector mapLogToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,482,eturn mapToSelf(ComposableFunction.LOG);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,485,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,486,ublic RealVector mapLog10() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,487,eturn copy().mapLog10ToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,490,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,491,ublic RealVector mapLog10ToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,492,eturn mapToSelf(ComposableFunction.LOG10);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,495,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,496,ublic RealVector mapLog1p() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,497,eturn copy().mapLog1pToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,500,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,501,ublic RealVector mapLog1pToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,502,eturn mapToSelf(ComposableFunction.LOG1P);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,515,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,516,ublic RealVector mapPow(double d) {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,517,eturn copy().mapPowToSelf(d);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,520,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,521,ublic RealVector mapPowToSelf(double d){
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,522,eturn mapToSelf(BinaryFunction.POW.fix2ndArgument(d));
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,525,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,526,ublic RealVector mapRint() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,527,eturn copy().mapRintToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,530,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,531,ublic RealVector mapRintToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,532,eturn mapToSelf(ComposableFunction.RINT);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,535,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,536,ublic RealVector mapSignum() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,537,eturn copy().mapSignumToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,540,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,541,ublic RealVector mapSignumToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,542,eturn mapToSelf(ComposableFunction.SIGNUM);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,545,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,546,ublic RealVector mapSin() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,547,eturn copy().mapSinToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,550,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,551,ublic RealVector mapSinToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,552,eturn mapToSelf(ComposableFunction.SIN);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,555,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,556,ublic RealVector mapSinh() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,557,eturn copy().mapSinhToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,560,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,561,ublic RealVector mapSinhToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,562,eturn mapToSelf(ComposableFunction.SINH);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,565,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,566,ublic RealVector mapSqrt() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,567,eturn copy().mapSqrtToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,570,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,571,ublic RealVector mapSqrtToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,572,eturn mapToSelf(ComposableFunction.SQRT);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,586,ublic RealVector mapTan() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,587,eturn copy().mapTanToSelf();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,590,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,591,ublic RealVector mapTanToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,592,eturn mapToSelf(ComposableFunction.TAN);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,595,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,596,ublic RealVector mapTanh() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,597,eturn copy().mapTanhToSelf();
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,366,public RealVector mapDivide(double d) {
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,367,return copy().mapDivideToSelf(d);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,601,ublic RealVector mapTanhToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,602,eturn mapToSelf(ComposableFunction.TANH);
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,371,public RealVector mapDivideToSelf(double d){
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,372,return mapToSelf(BinaryFunction.DIVIDE.fix2ndArgument(d));
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,606,ublic RealVector mapUlp() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,607,eturn copy().mapUlpToSelf();
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,376,public RealVector mapPow(double d) {
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,377,return copy().mapPowToSelf(d);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,611,ublic RealVector mapUlpToSelf() {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,612,eturn mapToSelf(ComposableFunction.ULP);
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,381,public RealVector mapPowToSelf(double d){
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,382,return mapToSelf(BinaryFunction.POW.fix2ndArgument(d));
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,491,@Override
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,497,@Override
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,23,import org.apache.commons.math.analysis.UnivariateRealFunction;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,283,ublic AbstractRealVector copy() {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,284,public ArrayRealVector copy() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,369,ublic RealVector mapAddToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,370,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,371,ata[i] = data[i] + d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,373,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,376,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,377,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,378,ublic RealVector mapSubtractToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,379,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,380,ata[i] = data[i] - d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,382,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,385,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,386,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,387,ublic RealVector mapMultiplyToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,388,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,389,ata[i] = data[i] * d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,391,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,394,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,395,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,396,ublic RealVector mapDivideToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,397,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,398,ata[i] = data[i] / d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,400,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,403,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,404,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,405,ublic RealVector mapPowToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,406,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,407,"ata[i] = FastMath.pow(data[i], d);"
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,409,eturn this;
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,370,public ArrayRealVector map(UnivariateRealFunction function) {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,371,return copy().mapToSelf(function);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,414,ublic RealVector mapExpToSelf() {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,376,public ArrayRealVector mapToSelf(UnivariateRealFunction function) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,416,ata[i] = FastMath.exp(data[i]);
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,378,data[i] = function.value(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,423,ublic RealVector mapExpm1ToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,424,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,425,ata[i] = FastMath.expm1(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,427,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,430,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,431,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,432,ublic RealVector mapLogToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,433,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,434,ata[i] = FastMath.log(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,436,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,439,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,440,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,441,ublic RealVector mapLog10ToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,442,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,443,ata[i] = FastMath.log10(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,445,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,448,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,449,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,450,ublic RealVector mapLog1pToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,451,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,452,ata[i] = FastMath.log1p(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,454,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,457,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,458,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,459,ublic RealVector mapCoshToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,460,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,461,ata[i] = FastMath.cosh(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,463,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,466,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,467,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,468,ublic RealVector mapSinhToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,469,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,470,ata[i] = FastMath.sinh(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,472,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,475,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,476,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,477,ublic RealVector mapTanhToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,478,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,479,ata[i] = FastMath.tanh(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,481,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,484,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,485,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,486,ublic RealVector mapCosToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,487,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,488,ata[i] = FastMath.cos(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,490,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,493,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,494,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,495,ublic RealVector mapSinToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,496,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,497,ata[i] = FastMath.sin(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,499,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,502,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,503,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,504,ublic RealVector mapTanToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,505,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,506,ata[i] = FastMath.tan(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,508,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,511,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,512,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,513,ublic RealVector mapAcosToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,514,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,515,ata[i] = FastMath.acos(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,517,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,520,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,521,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,522,ublic RealVector mapAsinToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,523,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,524,ata[i] = FastMath.asin(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,526,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,529,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,530,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,531,ublic RealVector mapAtanToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,532,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,533,ata[i] = FastMath.atan(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,535,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,538,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,539,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,540,ublic RealVector mapInvToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,541,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,542,ata[i] = 1.0 / data[i];
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,544,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,547,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,548,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,549,ublic RealVector mapAbsToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,550,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,551,ata[i] = FastMath.abs(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,553,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,556,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,557,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,558,ublic RealVector mapSqrtToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,559,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,560,ata[i] = FastMath.sqrt(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,562,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,565,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,566,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,567,ublic RealVector mapCbrtToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,568,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,569,ata[i] = FastMath.cbrt(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,571,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,574,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,575,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,576,ublic RealVector mapCeilToSelf() {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,577,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,578,ata[i] = FastMath.ceil(data[i]);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,580,eturn this;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,583,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,584,Override
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,585,ublic RealVector mapFloorToSelf() {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,385,public RealVector mapAddToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,587,ata[i] = FastMath.floor(data[i]);
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,387,data[i] = data[i] + d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,594,ublic RealVector mapRintToSelf() {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,394,public RealVector mapSubtractToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,596,ata[i] = FastMath.rint(data[i]);
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,396,data[i] = data[i] - d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,603,ublic RealVector mapSignumToSelf() {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,403,public RealVector mapMultiplyToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,605,ata[i] = FastMath.signum(data[i]);
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,405,data[i] = data[i] * d;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,612,ublic RealVector mapUlpToSelf() {
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,412,public RealVector mapDivideToSelf(double d) {
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,614,ata[i] = FastMath.ulp(data[i]);
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,414,data[i] = data[i] / d;
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,274, Map the {@link Math#exp(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,276, @return a mapped copy of the vector.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,277, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,278, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,279, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,280, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,282,ealVector mapExp();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,285, Map {@link Math#exp(double)} operation to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,286, The instance is changed in-place.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,288, @return the mapped vector.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,289, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,290, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,291, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,292, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,294,ealVector mapExpToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,297, Map the {@link Math#expm1(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,298, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,299, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,300, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,301, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,302, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,304,ealVector mapExpm1();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,307, Map the {@link Math#expm1(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,308, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,309," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,310, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,311, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,312, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,313, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,315,ealVector mapExpm1ToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,318, Map the {@link Math#log(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,319, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,320, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,321, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,322, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,323, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,325,ealVector mapLog();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,328, Map the {@link Math#log(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,329, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,330," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,331, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,332, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,333, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,334, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,336,ealVector mapLogToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,339, Map the {@link Math#log10(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,340, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,341, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,342, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,343, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,344, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,346,ealVector mapLog10();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,349, Map the {@link Math#log10(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,350, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,351," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,352, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,353, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,354, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,355, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,357,ealVector mapLog10ToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,360, Map the {@link Math#log1p(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,361, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,362, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,363, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,364, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,365, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,367,ealVector mapLog1p();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,370, Map the {@link Math#log1p(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,371, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,372," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,373, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,374, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,375, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,376, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,378,ealVector mapLog1pToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,381, Map the {@link Math#cosh(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,382, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,383, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,384, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,385, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,386, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,388,ealVector mapCosh();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,391, Map the {@link Math#cosh(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,392, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,393," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,394, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,395, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,396, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,397, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,399,ealVector mapCoshToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,402, Map the {@link Math#sinh(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,403, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,404, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,405, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,406, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,407, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,409,ealVector mapSinh();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,412, Map the {@link Math#sinh(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,413, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,414," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,415, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,416, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,417, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,418, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,420,ealVector mapSinhToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,423, Map the {@link Math#tanh(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,424, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,425, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,426, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,427, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,428, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,430,ealVector mapTanh();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,433, Map the {@link Math#tanh(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,434, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,435," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,436, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,437, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,438, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,439, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,441,ealVector mapTanhToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,444, Map the {@link Math#cos(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,445, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,446, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,447, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,448, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,449, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,451,ealVector mapCos();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,454, Map the {@link Math#cos(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,455, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,456," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,457, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,458, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,459, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,460, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,462,ealVector mapCosToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,465, Map the {@link Math#sin(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,466, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,467, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,468, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,469, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,470, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,472,ealVector mapSin();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,475, Map the {@link Math#sin(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,476, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,477," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,478, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,479, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,480, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,481, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,483,ealVector mapSinToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,486, Map the {@link Math#tan(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,487, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,488, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,489, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,490, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,491, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,493,ealVector mapTan();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,496, Map the {@link Math#tan(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,497, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,498," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,499, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,500, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,501, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,502, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,504,ealVector mapTanToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,507, Map the {@link Math#acos(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,508, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,509, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,510, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,511, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,512, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,514,ealVector mapAcos();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,517, Map the {@link Math#acos(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,518, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,519," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,520, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,521, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,522, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,523, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,525,ealVector mapAcosToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,528, Map the {@link Math#asin(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,529, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,530, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,531, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,532, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,533, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,535,ealVector mapAsin();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,538, Map the {@link Math#asin(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,539, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,540," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,541, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,542, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,543, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,544, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,546,ealVector mapAsinToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,549, Map the {@link Math#atan(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,550, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,551, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,552, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,553, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,554, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,556,ealVector mapAtan();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,559, Map the {@link Math#atan(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,560, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,561," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,562, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,563, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,564, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,565, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,567,ealVector mapAtanToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,570, Map the 1/x function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,571, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,572, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,573, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,574, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,575, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,577,ealVector mapInv();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,580, Map the 1/x function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,581, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,582," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,583, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,584, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,585, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,586, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,588,ealVector mapInvToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,591, Map the {@link Math#abs(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,592, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,593, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,594, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,595, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,596, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,598,ealVector mapAbs();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,601, Map the {@link Math#abs(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,602, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,603," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,604, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,605, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,606, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,607, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,609,ealVector mapAbsToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,612, Map the {@link Math#sqrt(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,613, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,614, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,615, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,616, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,617, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,619,ealVector mapSqrt();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,622, Map the {@link Math#sqrt(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,623, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,624," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,625, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,626, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,627, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,628, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,630,ealVector mapSqrtToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,633, Map the {@link Math#cbrt(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,634, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,635, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,636, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,637, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,638, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,640,ealVector mapCbrt();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,643, Map the {@link Math#cbrt(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,644, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,645," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,646, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,647, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,648, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,649, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,651,ealVector mapCbrtToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,654, Map the {@link Math#ceil(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,655, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,656, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,657, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,658, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,659, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,661,ealVector mapCeil();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,664, Map the {@link Math#ceil(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,665, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,666," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,667, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,668, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,669, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,670, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,672,ealVector mapCeilToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,675, Map the {@link Math#floor(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,676, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,677, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,678, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,679, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,680, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,682,ealVector mapFloor();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,685, Map the {@link Math#floor(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,686, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,687," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,688, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,689, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,690, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,691, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,693,ealVector mapFloorToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,696, Map the {@link Math#rint(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,697, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,698, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,699, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,700, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,701, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,703,ealVector mapRint();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,706, Map the {@link Math#rint(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,707, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,708," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,709, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,710, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,711, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,712, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,714,ealVector mapRintToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,717, Map the {@link Math#signum(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,718, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,719, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,720, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,721, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,722, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,724,ealVector mapSignum();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,727, Map the {@link Math#signum(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,728, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,729," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,730, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,731, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,732, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,733, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,735,ealVector mapSignumToSelf();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,738, Map the {@link Math#ulp(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,739, @return a vector containing the result of applying the function to each entry
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,740, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,741, {@link #map(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,742, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,743, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,745,ealVector mapUlp();
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,748, Map the {@link Math#ulp(double)} function to each entry.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,749, <p>The instance <strong>is</strong> changed by this method.</p>
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,750," @return for convenience, return this"
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,751, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,752, {@link #mapToSelf(UnivariateRealFunction)} directly with
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,753, the function classes in package
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,754, {@link org.apache.commons.math.analysis.function}.
False,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,756,ealVector mapUlpToSelf();
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,20,mport junit.framework.TestCase;
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,21,import org.junit.Assert;
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,31,ublic class AbstractRealVectorTest extends TestCase {
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,32,public class AbstractRealVectorTest {
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,107,Override
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,108,ublic RealVector mapInvToSelf() {
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,109,or(int i=0; i<values.length; i++) {
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,110,alues[i] = 1/values[i];
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,112,eturn this;
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,185,"ssertEquals(d1.length, d2.length);"
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,186,"or(int i=0; i<d1.length; i++) assertEquals(d1[i], d2[i]);"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,179,"Assert.assertEquals(d1.length, d2.length);"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,180,"for(int i=0; i<d1.length; i++) Assert.assertEquals(d1[i], d2[i], 0);"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,183,@Test
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,191,@Test
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,201,"ssertEquals(vec2[i], e.getValue());"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,197,"Assert.assertEquals(vec2[i], e.getValue(), 0);"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,201,@Test
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,211,"ssertEquals(nonDefaultV2[i], e.getValue());"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,208,"Assert.assertEquals(nonDefaultV2[i], e.getValue(), 0);"
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,216,"ssertEquals(onlyOne[1], e.getValue());"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,213,"Assert.assertEquals(onlyOne[1], e.getValue(), 0);"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,218,@Test
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,225,ssertTrue(new ArrayRealVector(d).getNorm() > 0);
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,223,Assert.assertTrue(new ArrayRealVector(d).getNorm() > 0);
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,228,"ssertNotSame(c[0], d[0]);"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,226,"Assert.assertNotSame(c[0], d[0]);"
False,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,230,"ssertEquals(new ArrayRealVector(d).getNorm(), new ArrayRealVector(c).getNorm());"
True,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java,228,"Assert.assertEquals(new ArrayRealVector(d).getNorm(), new ArrayRealVector(c).getNorm(), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,22,mport junit.framework.TestCase;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,22,import org.junit.Test;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,28,import org.apache.commons.math.analysis.function.Abs;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,29,import org.apache.commons.math.analysis.function.Acosh;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,30,import org.apache.commons.math.analysis.function.Acos;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,31,import org.apache.commons.math.analysis.function.Asinh;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,32,import org.apache.commons.math.analysis.function.Asin;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,33,import org.apache.commons.math.analysis.function.Atanh;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,34,import org.apache.commons.math.analysis.function.Atan;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,35,import org.apache.commons.math.analysis.function.Cbrt;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,36,import org.apache.commons.math.analysis.function.Cosh;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,37,import org.apache.commons.math.analysis.function.Cos;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,38,import org.apache.commons.math.analysis.function.Exp;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,39,import org.apache.commons.math.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,40,import org.apache.commons.math.analysis.function.Inverse;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,41,import org.apache.commons.math.analysis.function.Log10;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,42,import org.apache.commons.math.analysis.function.Log1p;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,43,import org.apache.commons.math.analysis.function.Log;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,44,import org.apache.commons.math.analysis.function.Pow;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,45,import org.apache.commons.math.analysis.function.Sinh;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,46,import org.apache.commons.math.analysis.function.Sin;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,47,import org.apache.commons.math.analysis.function.Sqrt;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,48,import org.apache.commons.math.analysis.function.Tanh;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,49,import org.apache.commons.math.analysis.function.Tan;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,50,import org.apache.commons.math.analysis.function.Floor;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,51,import org.apache.commons.math.analysis.function.Ceil;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,52,import org.apache.commons.math.analysis.function.Rint;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,53,import org.apache.commons.math.analysis.function.Signum;
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,54,import org.apache.commons.math.analysis.function.Ulp;
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,34,ublic class ArrayRealVectorTest extends TestCase {
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,61,public class ArrayRealVectorTest {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,170,ublic RealVector mapExp() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,171,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,174,ublic RealVector mapExpToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,175,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,178,ublic RealVector mapExpm1() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,179,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,182,ublic RealVector mapExpm1ToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,183,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,186,ublic RealVector mapLog() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,187,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,190,ublic RealVector mapLogToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,191,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,194,ublic RealVector mapLog10() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,195,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,198,ublic RealVector mapLog10ToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,199,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,202,ublic RealVector mapLog1p() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,203,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,206,ublic RealVector mapLog1pToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,207,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,210,ublic RealVector mapCosh() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,211,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,214,ublic RealVector mapCoshToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,215,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,218,ublic RealVector mapSinh() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,219,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,222,ublic RealVector mapSinhToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,223,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,226,ublic RealVector mapTanh() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,227,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,230,ublic RealVector mapTanhToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,231,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,234,ublic RealVector mapCos() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,235,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,238,ublic RealVector mapCosToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,239,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,242,ublic RealVector mapSin() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,243,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,246,ublic RealVector mapSinToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,247,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,250,ublic RealVector mapTan() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,251,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,254,ublic RealVector mapTanToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,255,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,258,ublic RealVector mapAcos() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,259,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,262,ublic RealVector mapAcosToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,263,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,266,ublic RealVector mapAsin() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,267,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,270,ublic RealVector mapAsinToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,271,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,274,ublic RealVector mapAtan() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,275,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,278,ublic RealVector mapAtanToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,279,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,282,ublic RealVector mapInv() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,283,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,286,ublic RealVector mapInvToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,287,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,290,ublic RealVector mapAbs() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,291,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,294,ublic RealVector mapAbsToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,295,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,298,ublic RealVector mapSqrt() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,299,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,302,ublic RealVector mapSqrtToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,303,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,306,ublic RealVector mapCbrt() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,307,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,310,ublic RealVector mapCbrtToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,311,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,314,ublic RealVector mapCeil() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,315,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,318,ublic RealVector mapCeilToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,319,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,322,ublic RealVector mapFloor() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,323,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,326,ublic RealVector mapFloorToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,327,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,330,ublic RealVector mapRint() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,331,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,334,ublic RealVector mapRintToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,335,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,338,ublic RealVector mapSignum() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,339,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,342,ublic RealVector mapSignumToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,343,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,346,ublic RealVector mapUlp() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,347,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,350,ublic RealVector mapUlpToSelf() {
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,351,hrow unsupported();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,347,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,507,"ssertEquals(""testData len"", 0, v0.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,351,"Assert.assertEquals(""testData len"", 0, v0.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,510,"ssertEquals(""testData len"", 7, v1.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,511,"ssertEquals(""testData is 0.0 "", 0.0, v1.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,354,"Assert.assertEquals(""testData len"", 7, v1.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,355,"Assert.assertEquals(""testData is 0.0 "", 0.0, v1.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,514,"ssertEquals(""testData len"", 5, v2.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,515,"ssertEquals(""testData is 1.23 "", 1.23, v2.getEntry(4));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,358,"Assert.assertEquals(""testData len"", 5, v2.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,359,"Assert.assertEquals(""testData is 1.23 "", 1.23, v2.getEntry(4), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,518,"ssertEquals(""testData len"", 3, v3.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,519,"ssertEquals(""testData is 2.0 "", 2.0, v3.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,362,"Assert.assertEquals(""testData len"", 3, v3.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,363,"Assert.assertEquals(""testData is 2.0 "", 2.0, v3.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,522,"ssertEquals(""testData len"", 3, v3_bis.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,523,"ssertEquals(""testData is 2.0 "", 2.0, v3_bis.getEntry(1));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,524,"ssertNotSame(v3_bis.getDataRef(), vec1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,525,"ssertNotSame(v3_bis.getData(), vec1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,366,"Assert.assertEquals(""testData len"", 3, v3_bis.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,367,"Assert.assertEquals(""testData is 2.0 "", 2.0, v3_bis.getEntry(1), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,368,"Assert.assertNotSame(v3_bis.getDataRef(), vec1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,369,"Assert.assertNotSame(v3_bis.getData(), vec1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,528,"ssertEquals(""testData len"", 3, v3_ter.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,529,"ssertEquals(""testData is 2.0 "", 2.0, v3_ter.getEntry(1));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,530,"ssertSame(v3_ter.getDataRef(), vec1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,531,"ssertNotSame(v3_ter.getData(), vec1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,372,"Assert.assertEquals(""testData len"", 3, v3_ter.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,373,"Assert.assertEquals(""testData is 2.0 "", 2.0, v3_ter.getEntry(1), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,374,"Assert.assertSame(v3_ter.getDataRef(), vec1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,375,"Assert.assertNotSame(v3_ter.getData(), vec1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,534,"ssertEquals(""testData len"", 2, v4.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,535,"ssertEquals(""testData is 4.0 "", 4.0, v4.getEntry(0));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,378,"Assert.assertEquals(""testData len"", 2, v4.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,379,"Assert.assertEquals(""testData is 4.0 "", 4.0, v4.getEntry(0), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,538,"ail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,382,"Assert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,544,"ssertEquals(""testData len"", 9, v5_i.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,545,"ssertEquals(""testData is 9.0 "", 9.0, v5_i.getEntry(8));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,388,"Assert.assertEquals(""testData len"", 9, v5_i.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,389,"Assert.assertEquals(""testData is 9.0 "", 9.0, v5_i.getEntry(8), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,548,"ssertEquals(""testData len"", 9, v5.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,549,"ssertEquals(""testData is 9.0 "", 9.0, v5.getEntry(8));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,392,"Assert.assertEquals(""testData len"", 9, v5.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,393,"Assert.assertEquals(""testData is 9.0 "", 9.0, v5.getEntry(8), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,552,"ssertEquals(""testData len"", 2, v6.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,553,"ssertEquals(""testData is 4.0 "", 4.0, v6.getEntry(0));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,396,"Assert.assertEquals(""testData len"", 2, v6.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,397,"Assert.assertEquals(""testData is 4.0 "", 4.0, v6.getEntry(0), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,556,"ail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,400,"Assert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,562,"ssertEquals(""testData len"", 7, v7.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,563,"ssertEquals(""testData is 0.0 "", 0.0, v7.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,406,"Assert.assertEquals(""testData len"", 7, v7.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,407,"Assert.assertEquals(""testData is 0.0 "", 0.0, v7.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,568,"ssertEquals(""testData len"", 3, v7_2.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,569,"ssertEquals(""testData is 0.0 "", 2.0d, v7_2.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,412,"Assert.assertEquals(""testData len"", 3, v7_2.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,413,"Assert.assertEquals(""testData is 0.0 "", 2.0d, v7_2.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,572,"ssertEquals(""testData len"", 7, v8.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,573,"ssertEquals(""testData is 0.0 "", 0.0, v8.getEntry(6));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,574,"ssertNotSame(""testData not same object "", v1.data, v8.data);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,416,"Assert.assertEquals(""testData len"", 7, v8.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,417,"Assert.assertEquals(""testData is 0.0 "", 0.0, v8.getEntry(6), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,418,"Assert.assertNotSame(""testData not same object "", v1.data, v8.data);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,577,"ssertEquals(""testData len"", 7, v8_2.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,578,"ssertEquals(""testData is 0.0 "", 0.0, v8_2.getEntry(6));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,579,"ssertEquals(""testData same object "", v1.data, v8_2.data);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,421,"Assert.assertEquals(""testData len"", 7, v8_2.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,422,"Assert.assertEquals(""testData is 0.0 "", 0.0, v8_2.getEntry(6), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,423,"Assert.assertEquals(""testData same object "", v1.data, v8_2.data);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,582,"ssertEquals(""testData len"", 10, v9.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,583,"ssertEquals(""testData is 1.0 "", 1.0, v9.getEntry(7));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,426,"Assert.assertEquals(""testData len"", 10, v9.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,427,"Assert.assertEquals(""testData is 1.0 "", 1.0, v9.getEntry(7), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,586,"ssertEquals(""testData len"", 8, v10.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,587,"ssertEquals(""testData is 1.23 "", 1.23, v10.getEntry(4));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,588,"ssertEquals(""testData is 7.0 "", 7.0, v10.getEntry(5));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,430,"Assert.assertEquals(""testData len"", 8, v10.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,431,"Assert.assertEquals(""testData is 1.23 "", 1.23, v10.getEntry(4), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,432,"Assert.assertEquals(""testData is 7.0 "", 7.0, v10.getEntry(5), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,591,"ssertEquals(""testData len"", 8, v11.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,592,"ssertEquals(""testData is 9.0 "", 9.0, v11.getEntry(2));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,593,"ssertEquals(""testData is 1.23 "", 1.23, v11.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,435,"Assert.assertEquals(""testData len"", 8, v11.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,436,"Assert.assertEquals(""testData is 9.0 "", 9.0, v11.getEntry(2), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,437,"Assert.assertEquals(""testData is 1.23 "", 1.23, v11.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,596,"ssertEquals(""testData len"", 8, v12.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,597,"ssertEquals(""testData is 1.23 "", 1.23, v12.getEntry(4));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,598,"ssertEquals(""testData is 7.0 "", 7.0, v12.getEntry(5));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,440,"Assert.assertEquals(""testData len"", 8, v12.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,441,"Assert.assertEquals(""testData is 1.23 "", 1.23, v12.getEntry(4), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,442,"Assert.assertEquals(""testData is 7.0 "", 7.0, v12.getEntry(5), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,601,"ssertEquals(""testData len"", 8, v13.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,602,"ssertEquals(""testData is 9.0 "", 9.0, v13.getEntry(2));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,603,"ssertEquals(""testData is 1.23 "", 1.23, v13.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,445,"Assert.assertEquals(""testData len"", 8, v13.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,446,"Assert.assertEquals(""testData is 9.0 "", 9.0, v13.getEntry(2), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,447,"Assert.assertEquals(""testData is 1.23 "", 1.23, v13.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,606,"ssertEquals(""testData len"", 12, v14.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,607,"ssertEquals(""testData is 9.0 "", 9.0, v14.getEntry(2));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,608,"ssertEquals(""testData is 1.0 "", 1.0, v14.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,450,"Assert.assertEquals(""testData len"", 12, v14.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,451,"Assert.assertEquals(""testData is 9.0 "", 9.0, v14.getEntry(2), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,452,"Assert.assertEquals(""testData is 1.0 "", 1.0, v14.getEntry(3), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,456,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,620,"ssertEquals(""testData len"", 6, v_append_1.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,621,"ssertEquals(""testData is 4.0 "", 4.0, v_append_1.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,465,"Assert.assertEquals(""testData len"", 6, v_append_1.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,466,"Assert.assertEquals(""testData is 4.0 "", 4.0, v_append_1.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,624,"ssertEquals(""testData len"", 4, v_append_2.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,625,"ssertEquals(""testData is 2.0 "", 2.0, v_append_2.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,469,"Assert.assertEquals(""testData len"", 4, v_append_2.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,470,"Assert.assertEquals(""testData is 2.0 "", 2.0, v_append_2.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,628,"ssertEquals(""testData len"", 6, v_append_3.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,629,"ssertEquals(""testData is  "", 4.0, v_append_3.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,473,"Assert.assertEquals(""testData len"", 6, v_append_3.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,474,"Assert.assertEquals(""testData is  "", 4.0, v_append_3.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,632,"ssertEquals(""testData len"", 6, v_append_4.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,633,"ssertEquals(""testData is 4.0 "", 4.0, v_append_4.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,477,"Assert.assertEquals(""testData len"", 6, v_append_4.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,478,"Assert.assertEquals(""testData is 4.0 "", 4.0, v_append_4.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,636,"ssertEquals(""testData len"", 6, v_append_5.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,637,"ssertEquals(""testData is 4.0 "", 4.0, v_append_5.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,481,"Assert.assertEquals(""testData len"", 6, v_append_5.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,482,"Assert.assertEquals(""testData is 4.0 "", 4.0, v_append_5.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,640,"ssertEquals(""testData len"", 3, v_copy.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,641,"ssertNotSame(""testData not same object "", v1.data, v_copy.getData());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,485,"Assert.assertEquals(""testData len"", 3, v_copy.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,486,"Assert.assertNotSame(""testData not same object "", v1.data, v_copy.getData());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,644,"ssertEquals(""testData len"", 3, a_double.length);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,645,"ssertNotSame(""testData not same object "", v1.data, a_double);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,489,"Assert.assertEquals(""testData len"", 3, a_double.length);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,490,"Assert.assertNotSame(""testData not same object "", v1.data, a_double);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,649,"/      assertEquals(""testData len"", 3, vout4.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,650,"/      assertEquals(""testData not same object "", v1.data, vout4.data);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,494,"//      Assert.assertEquals(""testData len"", 3, vout4.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,495,"//      Assert.assertEquals(""testData not same object "", v1.data, vout4.data);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,654,"ssertEquals(""testData len"", 3, vout5.getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,655,"ssertEquals(""testData is 4.0 "", 5.0, vout5.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,499,"Assert.assertEquals(""testData len"", 3, vout5.getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,500,"Assert.assertEquals(""testData is 4.0 "", 5.0, vout5.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,658,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,503,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,665,"ssertEquals(""testData is 11.0 "", 11.0, v_set1.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,510,"Assert.assertEquals(""testData is 11.0 "", 11.0, v_set1.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,668,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,513,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,675,"ssertEquals(""testData is 1.0 "", 1.0, v_set2.getEntry(3));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,676,"ssertEquals(""testData is 7.0 "", 7.0, v_set2.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,520,"Assert.assertEquals(""testData is 1.0 "", 1.0, v_set2.getEntry(3), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,521,"Assert.assertEquals(""testData is 7.0 "", 7.0, v_set2.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,679,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,524,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,686,"ssertEquals(""testData is 13.0 "", 13.0, v_set3.getEntry(2));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,531,"Assert.assertEquals(""testData is 13.0 "", 13.0, v_set3.getEntry(2), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,690,"ail(""ArrayIndexOutOfBoundsException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,535,"Assert.fail(""ArrayIndexOutOfBoundsException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,697,"ssertEquals(""testData is 1.0 "", 4.0, v_set4.getEntry(3));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,698,"ssertEquals(""testData is 7.0 "", 7.0, v_set4.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,542,"Assert.assertEquals(""testData is 1.0 "", 4.0, v_set4.getEntry(3), 0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,543,"Assert.assertEquals(""testData is 7.0 "", 7.0, v_set4.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,701,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,546,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,709,"ssertEquals(vout10, vout10_2);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,554,"Assert.assertEquals(vout10, vout10_2);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,711,"ssertNotSame(vout10, vout10_2);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,556,"Assert.assertNotSame(vout10, vout10_2);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,560,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,774,ealVector v_mapExp = v1.mapExp();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,620,RealVector v_mapExp = v1.map(new Exp());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,780,_mapExpToSelf.mapExpToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,626,v_mapExpToSelf.mapToSelf(new Exp());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,786,ealVector v_mapExpm1 = v1.mapExpm1();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,632,RealVector v_mapExpm1 = v1.map(new Expm1());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,792,_mapExpm1ToSelf.mapExpm1ToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,638,v_mapExpm1ToSelf.mapToSelf(new Expm1());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,797,ealVector v_mapLog = v1.mapLog();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,643,RealVector v_mapLog = v1.map(new Log());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,803,_mapLogToSelf.mapLogToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,649,v_mapLogToSelf.mapToSelf(new Log());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,808,ealVector v_mapLog10 = v1.mapLog10();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,654,RealVector v_mapLog10 = v1.map(new Log10());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,814,_mapLog10ToSelf.mapLog10ToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,660,v_mapLog10ToSelf.mapToSelf(new Log10());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,819,ealVector v_mapLog1p = v1.mapLog1p();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,665,RealVector v_mapLog1p = v1.map(new Log1p());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,825,_mapLog1pToSelf.mapLog1pToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,671,v_mapLog1pToSelf.mapToSelf(new Log1p());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,830,ealVector v_mapCosh = v1.mapCosh();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,676,RealVector v_mapCosh = v1.map(new Cosh());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,836,_mapCoshToSelf.mapCoshToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,682,v_mapCoshToSelf.mapToSelf(new Cosh());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,841,ealVector v_mapSinh = v1.mapSinh();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,687,RealVector v_mapSinh = v1.map(new Sinh());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,847,_mapSinhToSelf.mapSinhToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,693,v_mapSinhToSelf.mapToSelf(new Sinh());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,852,ealVector v_mapTanh = v1.mapTanh();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,698,RealVector v_mapTanh = v1.map(new Tanh());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,858,_mapTanhToSelf.mapTanhToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,704,v_mapTanhToSelf.mapToSelf(new Tanh());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,863,ealVector v_mapCos = v1.mapCos();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,709,RealVector v_mapCos = v1.map(new Cos());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,869,_mapCosToSelf.mapCosToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,715,v_mapCosToSelf.mapToSelf(new Cos());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,874,ealVector v_mapSin = v1.mapSin();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,720,RealVector v_mapSin = v1.map(new Sin());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,880,_mapSinToSelf.mapSinToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,726,v_mapSinToSelf.mapToSelf(new Sin());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,885,ealVector v_mapTan = v1.mapTan();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,731,RealVector v_mapTan = v1.map(new Tan());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,891,_mapTanToSelf.mapTanToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,737,v_mapTanToSelf.mapToSelf(new Tan());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,899,ealVector v_mapAcos = vat.mapAcos();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,745,RealVector v_mapAcos = vat.map(new Acos());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,905,_mapAcosToSelf.mapAcosToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,751,v_mapAcosToSelf.mapToSelf(new Acos());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,910,ealVector v_mapAsin = vat.mapAsin();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,756,RealVector v_mapAsin = vat.map(new Asin());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,916,_mapAsinToSelf.mapAsinToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,762,v_mapAsinToSelf.mapToSelf(new Asin());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,921,ealVector v_mapAtan = vat.mapAtan();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,767,RealVector v_mapAtan = vat.map(new Atan());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,927,_mapAtanToSelf.mapAtanToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,773,v_mapAtanToSelf.mapToSelf(new Atan());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,932,ealVector v_mapInv = v1.mapInv();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,778,RealVector v_mapInv = v1.map(new Inverse());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,938,_mapInvToSelf.mapInvToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,784,v_mapInvToSelf.mapToSelf(new Inverse());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,946,ealVector v_mapAbs = abs_v.mapAbs();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,792,RealVector v_mapAbs = abs_v.map(new Abs());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,952,_mapAbsToSelf.mapAbsToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,798,v_mapAbsToSelf.mapToSelf(new Abs());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,957,ealVector v_mapSqrt = v1.mapSqrt();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,803,RealVector v_mapSqrt = v1.map(new Sqrt());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,963,_mapSqrtToSelf.mapSqrtToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,809,v_mapSqrtToSelf.mapToSelf(new Sqrt());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,971,ealVector v_mapCbrt = cbrt_v.mapCbrt();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,817,RealVector v_mapCbrt = cbrt_v.map(new Cbrt());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,977,_mapCbrtToSelf.mapCbrtToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,823,v_mapCbrtToSelf.mapToSelf(new Cbrt());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,985,ealVector v_mapCeil = ceil_v.mapCeil();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,831,RealVector v_mapCeil = ceil_v.map(new Ceil());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,991,_mapCeilToSelf.mapCeilToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,837,v_mapCeilToSelf.mapToSelf(new Ceil());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,996,ealVector v_mapFloor = ceil_v.mapFloor();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,842,RealVector v_mapFloor = ceil_v.map(new Floor());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1002,_mapFloorToSelf.mapFloorToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,848,v_mapFloorToSelf.mapToSelf(new Floor());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1007,ealVector v_mapRint = ceil_v.mapRint();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,853,RealVector v_mapRint = ceil_v.map(new Rint());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1013,_mapRintToSelf.mapRintToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,859,v_mapRintToSelf.mapToSelf(new Rint());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1018,ealVector v_mapSignum = ceil_v.mapSignum();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,864,RealVector v_mapSignum = ceil_v.map(new Signum());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1024,_mapSignumToSelf.mapSignumToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,870,v_mapSignumToSelf.mapToSelf(new Signum());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1031,ealVector v_mapUlp = ceil_v.mapUlp();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,877,RealVector v_mapUlp = ceil_v.map(new Ulp());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1037,_mapUlpToSelf.mapUlpToSelf();
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,883,v_mapUlpToSelf.mapToSelf(new Ulp());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,888,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1053,"ssertEquals(""compare values  "", 8.4261497731763586307, d_getNorm);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,899,"Assert.assertEquals(""compare values  "", 8.4261497731763586307, d_getNorm, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1057,"ssertEquals(""compare values  "", 17.0, d_getL1Norm);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,903,"Assert.assertEquals(""compare values  "", 17.0, d_getL1Norm, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1061,"ssertEquals(""compare values  "", 6.0, d_getLInfNorm);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,907,"Assert.assertEquals(""compare values  "", 6.0, d_getLInfNorm, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1066,"ssertEquals(""compare values  "",v1.subtract(v2).getNorm(), dist );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,912,"Assert.assertEquals(""compare values  "",v1.subtract(v2).getNorm(), dist, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1070,"ssertEquals(""compare values  "", v1.subtract(v2).getNorm(),dist_2 );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,916,"Assert.assertEquals(""compare values  "", v1.subtract(v2).getNorm(),dist_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1074,"ssertEquals(""compare values  "", v1.subtract(v2).getNorm(),dist_3 );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,920,"Assert.assertEquals(""compare values  "", v1.subtract(v2).getNorm(),dist_3, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1078,"ssertEquals(""compare values  "",9d, d_getL1Distance );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,924,"Assert.assertEquals(""compare values  "", 9d, d_getL1Distance, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1080,ouble d_getL1Distance_2 = v1. getL1Distance(v2_t);
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1081,"ssertEquals(""compare values  "",9d, d_getL1Distance_2 );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,926,double d_getL1Distance_2 = v1.getL1Distance(v2_t);
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,927,"Assert.assertEquals(""compare values  "", 9d, d_getL1Distance_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1083,ouble d_getL1Distance_3 = v1. getL1Distance((RealVector) v2);
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1084,"ssertEquals(""compare values  "",9d, d_getL1Distance_3 );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,929,double d_getL1Distance_3 = v1.getL1Distance((RealVector) v2);
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,930,"Assert.assertEquals(""compare values  "", 9d, d_getL1Distance_3, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1087,ouble d_getLInfDistance = v1. getLInfDistance(v2);
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1088,"ssertEquals(""compare values  "",3d, d_getLInfDistance );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,933,double d_getLInfDistance = v1.getLInfDistance(v2);
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,934,"Assert.assertEquals(""compare values  "", 3d, d_getLInfDistance, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1091,"ssertEquals(""compare values  "",3d, d_getLInfDistance_2 );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,937,"Assert.assertEquals(""compare values  "", 3d, d_getLInfDistance_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1094,"ssertEquals(""compare values  "",3d, d_getLInfDistance_3 );"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,940,"Assert.assertEquals(""compare values  "", 3d, d_getLInfDistance_3, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1099,"ssertClose(""compare vect"" ,v_add.getData(),result_add,normTolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,945,"assertClose(""compare vect"" ,v_add.getData(), result_add, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1143,"ssertEquals(""compare val "",32d, dot);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,989,"Assert.assertEquals(""compare val "",32d, dot, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1147,"ssertEquals(""compare val "",32d, dot_2);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,993,"Assert.assertEquals(""compare val "",32d, dot_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1150,"ssertEquals(""compare val "",4d, m_outerProduct.getEntry(0,0));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,996,"Assert.assertEquals(""compare val "",4d, m_outerProduct.getEntry(0,0), normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1153,"ssertEquals(""compare val "",4d, m_outerProduct_2.getEntry(0,0));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,999,"Assert.assertEquals(""compare val "",4d, m_outerProduct_2.getEntry(0,0), normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1156,"ssertEquals(""compare val "",4d, m_outerProduct_3.getEntry(0,0));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1002,"Assert.assertEquals(""compare val "",4d, m_outerProduct_3.getEntry(0,0), normTolerance);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1164,"ail(""Expecting ArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1010,"Assert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1174,"ail(""Expecting ArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1020,"Assert.fail(""Expecting ArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1039,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1199,"ssertTrue(""some output "",  out1.length()!=0);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1046,"Assert.assertTrue(""some output "",  out1.length()!=0);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1202,"ssertEquals(""testData len"", 3, dout1.length);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1203,"ssertNotSame(""testData not same object "", v1.data, dout1);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1049,"Assert.assertEquals(""testData len"", 3, dout1.length);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1050,"Assert.assertNotSame(""testData not same object "", v1.data, dout1);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1207,"ail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1054,"Assert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1214,"ail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1061,"Assert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1221,"ail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1068,"Assert.fail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1075,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1232,ssertFalse(v.isNaN());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1080,Assert.assertFalse(v.isNaN());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1234,ssertTrue(v.isNaN());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1082,Assert.assertTrue(v.isNaN());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1236,ssertFalse(v.isInfinite());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1084,Assert.assertFalse(v.isInfinite());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1238,ssertFalse(v.isInfinite());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1086,Assert.assertFalse(v.isInfinite());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1240,ssertTrue(v.isInfinite());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1088,Assert.assertTrue(v.isInfinite());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1242,ssertFalse(v.isInfinite());
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1090,Assert.assertFalse(v.isInfinite());
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1245,"ssertEquals(v, new ArrayRealVector(new double[] { 0, 1, 2 }));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1246,"ssertNotSame(v, new ArrayRealVector(new double[] { 0, 1, 2 + FastMath.ulp(2)}));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1247,"ssertNotSame(v, new ArrayRealVector(new double[] { 0, 1, 2, 3 }));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1093,"Assert.assertEquals(v, new ArrayRealVector(new double[] { 0, 1, 2 }));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1094,"Assert.assertNotSame(v, new ArrayRealVector(new double[] { 0, 1, 2 + FastMath.ulp(2)}));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1095,"Assert.assertNotSame(v, new ArrayRealVector(new double[] { 0, 1, 2, 3 }));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1249,"ssertEquals(new ArrayRealVector(new double[] { Double.NaN, 1, 2 }).hashCode(),"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1097,"Assert.assertEquals(new ArrayRealVector(new double[] { Double.NaN, 1, 2 }).hashCode(),"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1252,"ssertTrue(new ArrayRealVector(new double[] { Double.NaN, 1, 2 }).hashCode() !="
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1100,"Assert.assertTrue(new ArrayRealVector(new double[] { Double.NaN, 1, 2 }).hashCode() !="
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1255,ssertTrue(v.equals(v));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1256,ssertTrue(v.equals(v.copy()));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1257,ssertFalse(v.equals(null));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1258,ssertFalse(v.equals(v.getDataRef()));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1259,"ssertFalse(v.equals(v.getSubVector(0, v.getDimension() - 1)));"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1260,"ssertTrue(v.equals(v.getSubVector(0, v.getDimension())));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1103,Assert.assertTrue(v.equals(v));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1104,Assert.assertTrue(v.equals(v.copy()));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1105,Assert.assertFalse(v.equals(null));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1106,Assert.assertFalse(v.equals(v.getDataRef()));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1107,"Assert.assertFalse(v.equals(v.getSubVector(0, v.getDimension() - 1)));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1108,"Assert.assertTrue(v.equals(v.getSubVector(0, v.getDimension())));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1112,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1266,"ssertEquals(v,TestUtils.serializeAndRecover(v));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1115,"Assert.assertEquals(v,TestUtils.serializeAndRecover(v));"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1118,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1270,"ssertEquals(0, new ArrayRealVector(new double[0]).getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1271,"ssertEquals(0, new ArrayRealVector(new double[0], true).getDimension());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1272,"ssertEquals(0, new ArrayRealVector(new double[0], false).getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1120,"Assert.assertEquals(0, new ArrayRealVector(new double[0]).getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1121,"Assert.assertEquals(0, new ArrayRealVector(new double[0], true).getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1122,"Assert.assertEquals(0, new ArrayRealVector(new double[0], false).getDimension());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1125,@Test
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1277,"ssertEquals(1,  v1.getMinIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1278,"ssertEquals(-6, v1.getMinValue(), 1.0e-12);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1279,"ssertEquals(3,  v1.getMaxIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1280,"ssertEquals(12, v1.getMaxValue(), 1.0e-12);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1128,"Assert.assertEquals(1,  v1.getMinIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1129,"Assert.assertEquals(-6, v1.getMinValue(), 1.0e-12);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1130,"Assert.assertEquals(3,  v1.getMaxIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1131,"Assert.assertEquals(12, v1.getMaxValue(), 1.0e-12);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1282,"ssertEquals(3,  v2.getMinIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1283,"ssertEquals(-2, v2.getMinValue(), 1.0e-12);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1284,"ssertEquals(1,  v2.getMaxIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1285,"ssertEquals(3, v2.getMaxValue(), 1.0e-12);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1133,"Assert.assertEquals(3,  v2.getMinIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1134,"Assert.assertEquals(-2, v2.getMinValue(), 1.0e-12);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1135,"Assert.assertEquals(1,  v2.getMaxIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1136,"Assert.assertEquals(3, v2.getMaxValue(), 1.0e-12);"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1287,"ssertEquals(-1,  v3.getMinIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1288,ssertTrue(Double.isNaN(v3.getMinValue()));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1289,"ssertEquals(-1,  v3.getMaxIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1290,ssertTrue(Double.isNaN(v3.getMaxValue()));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1138,"Assert.assertEquals(-1,  v3.getMinIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1139,Assert.assertTrue(Double.isNaN(v3.getMinValue()));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1140,"Assert.assertEquals(-1,  v3.getMaxIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1141,Assert.assertTrue(Double.isNaN(v3.getMaxValue()));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1292,"ssertEquals(-1,  v4.getMinIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1293,ssertTrue(Double.isNaN(v4.getMinValue()));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1294,"ssertEquals(-1,  v4.getMaxIndex());"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1295,ssertTrue(Double.isNaN(v4.getMaxValue()));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1143,"Assert.assertEquals(-1,  v4.getMinIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1144,Assert.assertTrue(Double.isNaN(v4.getMinValue()));
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1145,"Assert.assertEquals(-1,  v4.getMaxIndex());"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1146,Assert.assertTrue(Double.isNaN(v4.getMaxValue()));
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1303,"ail(""vectors have different lengths"");"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1154,"Assert.fail(""vectors have different lengths"");"
False,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1306,"ssertEquals(msg + "" "" +  i + "" elements differ"", m[i],n[i],tolerance);"
True,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java,1157,"Assert.assertEquals(msg + "" "" +  i + "" elements differ"", m[i],n[i],tolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,22,mport junit.framework.TestCase;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,22,import org.junit.Test;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,28,import org.apache.commons.math.analysis.function.Abs;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,29,import org.apache.commons.math.analysis.function.Acosh;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,30,import org.apache.commons.math.analysis.function.Acos;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,31,import org.apache.commons.math.analysis.function.Asinh;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,32,import org.apache.commons.math.analysis.function.Asin;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,33,import org.apache.commons.math.analysis.function.Atanh;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,34,import org.apache.commons.math.analysis.function.Atan;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,35,import org.apache.commons.math.analysis.function.Cbrt;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,36,import org.apache.commons.math.analysis.function.Cosh;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,37,import org.apache.commons.math.analysis.function.Cos;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,38,import org.apache.commons.math.analysis.function.Exp;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,39,import org.apache.commons.math.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,40,import org.apache.commons.math.analysis.function.Inverse;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,41,import org.apache.commons.math.analysis.function.Log10;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,42,import org.apache.commons.math.analysis.function.Log1p;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,43,import org.apache.commons.math.analysis.function.Log;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,44,import org.apache.commons.math.analysis.function.Pow;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,45,import org.apache.commons.math.analysis.function.Sinh;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,46,import org.apache.commons.math.analysis.function.Sin;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,47,import org.apache.commons.math.analysis.function.Sqrt;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,48,import org.apache.commons.math.analysis.function.Tanh;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,49,import org.apache.commons.math.analysis.function.Tan;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,50,import org.apache.commons.math.analysis.function.Floor;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,51,import org.apache.commons.math.analysis.function.Ceil;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,52,import org.apache.commons.math.analysis.function.Rint;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,53,import org.apache.commons.math.analysis.function.Signum;
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,54,import org.apache.commons.math.analysis.function.Ulp;
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,34,ublic class SparseRealVectorTest extends TestCase {
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,61,public class SparseRealVectorTest {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,161,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,162,ublic RealVector mapExp() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,163,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,166,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,167,ublic RealVector mapExpToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,168,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,171,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,172,ublic RealVector mapExpm1() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,173,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,176,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,177,ublic RealVector mapExpm1ToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,178,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,181,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,182,ublic RealVector mapLog() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,183,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,186,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,187,ublic RealVector mapLogToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,188,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,191,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,192,ublic RealVector mapLog10() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,193,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,196,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,197,ublic RealVector mapLog10ToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,198,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,201,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,202,ublic RealVector mapLog1p() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,203,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,206,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,207,ublic RealVector mapLog1pToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,208,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,211,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,212,ublic RealVector mapCosh() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,213,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,216,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,217,ublic RealVector mapCoshToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,218,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,221,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,222,ublic RealVector mapSinh() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,223,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,226,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,227,ublic RealVector mapSinhToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,228,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,231,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,232,ublic RealVector mapTanh() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,233,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,236,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,237,ublic RealVector mapTanhToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,238,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,241,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,242,ublic RealVector mapCos() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,243,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,246,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,247,ublic RealVector mapCosToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,248,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,251,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,252,ublic RealVector mapSin() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,253,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,256,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,257,ublic RealVector mapSinToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,258,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,261,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,262,ublic RealVector mapTan() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,263,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,266,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,267,ublic RealVector mapTanToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,268,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,271,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,272,ublic RealVector mapAcos() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,273,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,276,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,277,ublic RealVector mapAcosToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,278,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,281,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,282,ublic RealVector mapAsin() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,283,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,286,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,287,ublic RealVector mapAsinToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,288,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,291,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,292,ublic RealVector mapAtan() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,293,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,296,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,297,ublic RealVector mapAtanToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,298,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,301,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,302,ublic RealVector mapInv() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,303,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,306,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,307,ublic RealVector mapInvToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,308,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,311,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,312,ublic RealVector mapAbs() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,313,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,316,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,317,ublic RealVector mapAbsToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,318,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,321,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,322,ublic RealVector mapSqrt() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,323,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,326,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,327,ublic RealVector mapSqrtToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,328,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,331,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,332,ublic RealVector mapCbrt() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,333,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,336,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,337,ublic RealVector mapCbrtToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,338,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,341,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,342,ublic RealVector mapCeil() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,343,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,346,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,347,ublic RealVector mapCeilToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,348,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,351,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,352,ublic RealVector mapFloor() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,353,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,356,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,357,ublic RealVector mapFloorToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,358,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,361,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,362,ublic RealVector mapRint() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,363,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,366,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,367,ublic RealVector mapRintToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,368,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,371,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,372,ublic RealVector mapSignum() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,373,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,376,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,377,ublic RealVector mapSignumToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,378,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,381,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,382,ublic RealVector mapUlp() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,383,hrow unsupported();
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,386,Override
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,387,ublic RealVector mapUlpToSelf() {
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,388,hrow unsupported();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,361,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,567,"ssertEquals(""testData len"", 0, v0.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,365,"Assert.assertEquals(""testData len"", 0, v0.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,570,"ssertEquals(""testData len"", 7, v1.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,571,"ssertEquals(""testData is 0.0 "", 0.0, v1.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,368,"Assert.assertEquals(""testData len"", 7, v1.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,369,"Assert.assertEquals(""testData is 0.0 "", 0.0, v1.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,574,"ssertEquals(""testData len"", 3, v3.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,575,"ssertEquals(""testData is 2.0 "", 2.0, v3.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,372,"Assert.assertEquals(""testData len"", 3, v3.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,373,"Assert.assertEquals(""testData is 2.0 "", 2.0, v3.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,578,"/assertEquals(""testData len"", 2, v4.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,579,"/assertEquals(""testData is 4.0 "", 4.0, v4.getEntry(0));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,376,"//Assert.assertEquals(""testData len"", 2, v4.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,377,"//Assert.assertEquals(""testData is 4.0 "", 4.0, v4.getEntry(0));"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,582,"/    fail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,380,"//    Assert.fail(""IllegalArgumentException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,588,"ssertEquals(""testData len"", 9, v5_i.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,589,"ssertEquals(""testData is 9.0 "", 9.0, v5_i.getEntry(8));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,386,"Assert.assertEquals(""testData len"", 9, v5_i.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,387,"Assert.assertEquals(""testData is 9.0 "", 9.0, v5_i.getEntry(8), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,592,"ssertEquals(""testData len"", 9, v5.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,593,"ssertEquals(""testData is 9.0 "", 9.0, v5.getEntry(8));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,390,"Assert.assertEquals(""testData len"", 9, v5.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,391,"Assert.assertEquals(""testData is 9.0 "", 9.0, v5.getEntry(8), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,596,"ssertEquals(""testData len"", 7, v7.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,597,"ssertEquals(""testData is 0.0 "", 0.0, v7.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,394,"Assert.assertEquals(""testData len"", 7, v7.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,395,"Assert.assertEquals(""testData is 0.0 "", 0.0, v7.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,602,"ssertEquals(""testData len"", 3, v7_2.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,603,"ssertEquals(""testData is 0.0 "", 2.0d, v7_2.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,400,"Assert.assertEquals(""testData len"", 3, v7_2.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,401,"Assert.assertEquals(""testData is 0.0 "", 2.0d, v7_2.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,606,"ssertEquals(""testData len"", 7, v8.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,607,"ssertEquals(""testData is 0.0 "", 0.0, v8.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,404,"Assert.assertEquals(""testData len"", 7, v8.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,405,"Assert.assertEquals(""testData is 0.0 "", 0.0, v8.getEntry(6), 0);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,409,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,619,"ssertEquals(""testData len"", 6, v_append_1.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,620,"ssertEquals(""testData is 4.0 "", 4.0, v_append_1.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,418,"Assert.assertEquals(""testData len"", 6, v_append_1.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,419,"Assert.assertEquals(""testData is 4.0 "", 4.0, v_append_1.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,623,"ssertEquals(""testData len"", 4, v_append_2.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,624,"ssertEquals(""testData is 2.0 "", 2.0, v_append_2.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,422,"Assert.assertEquals(""testData len"", 4, v_append_2.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,423,"Assert.assertEquals(""testData is 2.0 "", 2.0, v_append_2.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,627,"ssertEquals(""testData len"", 6, v_append_3.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,628,"ssertEquals(""testData is  "", 4.0, v_append_3.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,426,"Assert.assertEquals(""testData len"", 6, v_append_3.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,427,"Assert.assertEquals(""testData is  "", 4.0, v_append_3.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,631,"ssertEquals(""testData len"", 6, v_append_4.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,632,"ssertEquals(""testData is 4.0 "", 4.0, v_append_4.getEntry(3));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,430,"Assert.assertEquals(""testData len"", 6, v_append_4.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,431,"Assert.assertEquals(""testData is 4.0 "", 4.0, v_append_4.getEntry(3), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,635,"ssertEquals(""testData len"", 3, vout5.getDimension());"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,636,"ssertEquals(""testData is 4.0 "", 5.0, vout5.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,434,"Assert.assertEquals(""testData len"", 3, vout5.getDimension());"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,435,"Assert.assertEquals(""testData is 4.0 "", 5.0, vout5.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,639,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,438,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,646,"ssertEquals(""testData is 11.0 "", 11.0, v_set1.getEntry(1));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,445,"Assert.assertEquals(""testData is 11.0 "", 11.0, v_set1.getEntry(1), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,649,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,448,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,656,"ssertEquals(""testData is 1.0 "", 1.0, v_set2.getEntry(3));"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,657,"ssertEquals(""testData is 7.0 "", 7.0, v_set2.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,455,"Assert.assertEquals(""testData is 1.0 "", 1.0, v_set2.getEntry(3), 0);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,456,"Assert.assertEquals(""testData is 7.0 "", 7.0, v_set2.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,660,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,459,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,667,"ssertEquals(""testData is 13.0 "", 13.0, v_set3.getEntry(2));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,466,"Assert.assertEquals(""testData is 13.0 "", 13.0, v_set3.getEntry(2), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,671,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,470,"Assert.fail(""OutOfRangeException expected"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,678,"ssertEquals(""testData is 1.0 "", 4.0, v_set4.getEntry(3));"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,679,"ssertEquals(""testData is 7.0 "", 7.0, v_set4.getEntry(6));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,477,"Assert.assertEquals(""testData is 1.0 "", 4.0, v_set4.getEntry(3), 0);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,478,"Assert.assertEquals(""testData is 7.0 "", 7.0, v_set4.getEntry(6), 0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,682,"ail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,481,"Assert.fail(""OutOfRangeException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,489,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,749,ealVector v_mapExp = v1.mapExp();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,549,RealVector v_mapExp = v1.map(new Exp());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,755,_mapExpToSelf.mapExpToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,555,v_mapExpToSelf.mapToSelf(new Exp());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,761,ealVector v_mapExpm1 = v1.mapExpm1();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,561,RealVector v_mapExpm1 = v1.map(new Expm1());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,767,_mapExpm1ToSelf.mapExpm1ToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,567,v_mapExpm1ToSelf.mapToSelf(new Expm1());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,772,ealVector v_mapLog = v1.mapLog();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,572,RealVector v_mapLog = v1.map(new Log());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,778,_mapLogToSelf.mapLogToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,578,v_mapLogToSelf.mapToSelf(new Log());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,783,ealVector v_mapLog10 = v1.mapLog10();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,583,RealVector v_mapLog10 = v1.map(new Log10());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,789,_mapLog10ToSelf.mapLog10ToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,589,v_mapLog10ToSelf.mapToSelf(new Log10());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,794,ealVector v_mapLog1p = v1.mapLog1p();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,594,RealVector v_mapLog1p = v1.map(new Log1p());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,800,_mapLog1pToSelf.mapLog1pToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,600,v_mapLog1pToSelf.mapToSelf(new Log1p());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,805,ealVector v_mapCosh = v1.mapCosh();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,605,RealVector v_mapCosh = v1.map(new Cosh());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,811,_mapCoshToSelf.mapCoshToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,611,v_mapCoshToSelf.mapToSelf(new Cosh());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,816,ealVector v_mapSinh = v1.mapSinh();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,616,RealVector v_mapSinh = v1.map(new Sinh());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,822,_mapSinhToSelf.mapSinhToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,622,v_mapSinhToSelf.mapToSelf(new Sinh());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,827,ealVector v_mapTanh = v1.mapTanh();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,627,RealVector v_mapTanh = v1.map(new Tanh());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,833,_mapTanhToSelf.mapTanhToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,633,v_mapTanhToSelf.mapToSelf(new Tanh());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,838,ealVector v_mapCos = v1.mapCos();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,638,RealVector v_mapCos = v1.map(new Cos());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,844,_mapCosToSelf.mapCosToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,644,v_mapCosToSelf.mapToSelf(new Cos());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,849,ealVector v_mapSin = v1.mapSin();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,649,RealVector v_mapSin = v1.map(new Sin());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,855,_mapSinToSelf.mapSinToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,655,v_mapSinToSelf.mapToSelf(new Sin());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,860,ealVector v_mapTan = v1.mapTan();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,660,RealVector v_mapTan = v1.map(new Tan());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,866,_mapTanToSelf.mapTanToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,666,v_mapTanToSelf.mapToSelf(new Tan());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,874,ealVector v_mapAcos = vat.mapAcos();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,674,RealVector v_mapAcos = vat.map(new Acos());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,880,_mapAcosToSelf.mapAcosToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,680,v_mapAcosToSelf.mapToSelf(new Acos());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,885,ealVector v_mapAsin = vat.mapAsin();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,685,RealVector v_mapAsin = vat.map(new Asin());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,891,_mapAsinToSelf.mapAsinToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,691,v_mapAsinToSelf.mapToSelf(new Asin());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,896,ealVector v_mapAtan = vat.mapAtan();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,696,RealVector v_mapAtan = vat.map(new Atan());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,902,_mapAtanToSelf.mapAtanToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,702,v_mapAtanToSelf.mapToSelf(new Atan());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,907,ealVector v_mapInv = v1.mapInv();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,707,RealVector v_mapInv = v1.map(new Inverse());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,913,_mapInvToSelf.mapInvToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,713,v_mapInvToSelf.mapToSelf(new Inverse());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,921,ealVector v_mapAbs = abs_v.mapAbs();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,721,RealVector v_mapAbs = abs_v.map(new Abs());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,927,_mapAbsToSelf.mapAbsToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,727,v_mapAbsToSelf.mapToSelf(new Abs());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,932,ealVector v_mapSqrt = v1.mapSqrt();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,732,RealVector v_mapSqrt = v1.map(new Sqrt());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,938,_mapSqrtToSelf.mapSqrtToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,738,v_mapSqrtToSelf.mapToSelf(new Sqrt());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,946,ealVector v_mapCbrt = cbrt_v.mapCbrt();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,746,RealVector v_mapCbrt = cbrt_v.map(new Cbrt());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,952,_mapCbrtToSelf.mapCbrtToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,752,v_mapCbrtToSelf.mapToSelf(new Cbrt());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,960,ealVector v_mapCeil = ceil_v.mapCeil();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,760,RealVector v_mapCeil = ceil_v.map(new Ceil());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,966,_mapCeilToSelf.mapCeilToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,766,v_mapCeilToSelf.mapToSelf(new Ceil());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,971,ealVector v_mapFloor = ceil_v.mapFloor();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,771,RealVector v_mapFloor = ceil_v.map(new Floor());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,977,_mapFloorToSelf.mapFloorToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,777,v_mapFloorToSelf.mapToSelf(new Floor());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,982,ealVector v_mapRint = ceil_v.mapRint();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,782,RealVector v_mapRint = ceil_v.map(new Rint());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,988,_mapRintToSelf.mapRintToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,788,v_mapRintToSelf.mapToSelf(new Rint());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,993,ealVector v_mapSignum = ceil_v.mapSignum();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,793,RealVector v_mapSignum = ceil_v.map(new Signum());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,999,_mapSignumToSelf.mapSignumToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,799,v_mapSignumToSelf.mapToSelf(new Signum());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1006,ealVector v_mapUlp = ceil_v.mapUlp();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,806,RealVector v_mapUlp = ceil_v.map(new Ulp());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1012,_mapUlpToSelf.mapUlpToSelf();
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,812,v_mapUlpToSelf.mapToSelf(new Ulp());
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,817,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1028,"ssertEquals(""compare values  "", 8.4261497731763586307, d_getNorm);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,828,"Assert.assertEquals(""compare values  "", 8.4261497731763586307, d_getNorm, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1032,"ssertEquals(""compare values  "", 17.0, d_getL1Norm);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,832,"Assert.assertEquals(""compare values  "", 17.0, d_getL1Norm, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1036,"ssertEquals(""compare values  "", 6.0, d_getLInfNorm);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,836,"Assert.assertEquals(""compare values  "", 6.0, d_getLInfNorm, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1040,"ssertEquals(""compare values  "",v1.subtract(v2).getNorm(), dist );"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,840,"Assert.assertEquals(""compare values  "",v1.subtract(v2).getNorm(), dist, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1044,"ssertEquals(""compare values  "", v1.subtract(v2).getNorm(),dist_2 );"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,844,"Assert.assertEquals(""compare values  "", v1.subtract(v2).getNorm(),dist_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1048,"ssertEquals(""compare values  "",9d, d_getL1Distance );"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,848,"Assert.assertEquals(""compare values  "", 9d, d_getL1Distance, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1051,"ssertEquals(""compare values  "",9d, d_getL1Distance_2 );"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,851,"Assert.assertEquals(""compare values  "", 9d, d_getL1Distance_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1055,"ssertEquals(""compare values  "",3d, d_getLInfDistance );"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,855,"Assert.assertEquals(""compare values  "", 3d, d_getLInfDistance, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1058,"ssertEquals(""compare values  "",3d, d_getLInfDistance_2 );"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,858,"Assert.assertEquals(""compare values  "", 3d, d_getLInfDistance_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1099,"ssertEquals(""compare val "",32d, dot);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,899,"Assert.assertEquals(""compare val "",32d, dot, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1103,"ssertEquals(""compare val "",32d, dot_2);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,903,"Assert.assertEquals(""compare val "",32d, dot_2, normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1106,"ssertEquals(""compare val "",4d, m_outerProduct.getEntry(0,0));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,906,"Assert.assertEquals(""compare val "",4d, m_outerProduct.getEntry(0,0), normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1109,"ssertEquals(""compare val "",4d, m_outerProduct_2.getEntry(0,0));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,909,"Assert.assertEquals(""compare val "",4d, m_outerProduct_2.getEntry(0,0), normTolerance);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1117,"ail(""Expecting ArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,917,"Assert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1127,"ail(""Expecting ArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,927,"Assert.fail(""Expecting ArithmeticException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,942,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1146,"ssertTrue(""some output "",  out1.length()!=0);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,947,"Assert.assertTrue(""some output "",  out1.length()!=0);"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1149,"ail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,950,"Assert.fail(""IllegalArgumentException expected"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,958,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1161,ssertFalse(v.isNaN());
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,963,Assert.assertFalse(v.isNaN());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1163,ssertTrue(v.isNaN());
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,965,Assert.assertTrue(v.isNaN());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1165,ssertFalse(v.isInfinite());
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,967,Assert.assertFalse(v.isInfinite());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1167,ssertFalse(v.isInfinite()); // NaN has higher priority than infinity
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,969,Assert.assertFalse(v.isInfinite()); // NaN has higher priority than infinity
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1169,ssertTrue(v.isInfinite());
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,971,Assert.assertTrue(v.isInfinite());
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1172,"ssertEquals(v, new OpenMapRealVector(new double[] { 0, 1, 2 }));"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1173,"ssertNotSame(v, new OpenMapRealVector(new double[] { 0, 1, 2 + FastMath.ulp(2)}));"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1174,"ssertNotSame(v, new OpenMapRealVector(new double[] { 0, 1, 2, 3 }));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,974,"Assert.assertEquals(v, new OpenMapRealVector(new double[] { 0, 1, 2 }));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,975,"Assert.assertNotSame(v, new OpenMapRealVector(new double[] { 0, 1, 2 + FastMath.ulp(2)}));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,976,"Assert.assertNotSame(v, new OpenMapRealVector(new double[] { 0, 1, 2, 3 }));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,980,@Test
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1180,"ssertEquals(v,TestUtils.serializeAndRecover(v));"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,983,"Assert.assertEquals(v,TestUtils.serializeAndRecover(v));"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1187,"ail(""vectors have different lengths"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,990,"Assert.fail(""vectors have different lengths"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,1190,"ssertEquals(msg + "" "" +  i + "" elements differ"", m[i],n[i],tolerance);"
True,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,993,"Assert.assertEquals(msg + "" "" +  i + "" elements differ"", m[i],n[i],tolerance);"
