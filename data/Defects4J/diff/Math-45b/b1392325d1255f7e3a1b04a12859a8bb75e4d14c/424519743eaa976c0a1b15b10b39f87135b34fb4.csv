is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,18,ackage org.apache.commons.math.optimization.fitting;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,20,mport org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,21,mport org.apache.commons.math.util.FastMath;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,23,** Harmonic function of the form <code>f (t) = a cos (&omega; t + &phi;)</code>.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,24, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,25, @since 2.0
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,27,ublic class HarmonicFunction implements DifferentiableUnivariateRealFunction {
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,29,** Amplitude a. */
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,30,rivate final double a;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,32,** Pulsation &omega;. */
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,33,rivate final double omega;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,35,** Phase &phi;. */
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,36,rivate final double phi;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,38,** Simple constructor.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,39, @param a amplitude
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,40, @param omega pulsation
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,41, @param phi phase
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,43,"ublic HarmonicFunction(double a, double omega, double phi) {"
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,44,his.a     = a;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,45,his.omega = omega;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,46,his.phi   = phi;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,49,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,50,ublic double value(double x) {
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,51,eturn a * FastMath.cos(omega * x + phi);
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,54,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,55,ublic HarmonicFunction derivative() {
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,56,"eturn new HarmonicFunction(a * omega, omega, phi + FastMath.PI / 2);"
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,59,** Get the amplitude a.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,60, @return amplitude a;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,62,ublic double getAmplitude() {
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,63,eturn a;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,66,** Get the pulsation &omega;.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,67, @return pulsation &omega;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,69,ublic double getPulsation() {
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,70,eturn omega;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,73,** Get the phase &phi;.
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,74, @return phase &phi;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,76,ublic double getPhase() {
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFunction.java,77,eturn phi;
