is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,583,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,584,@Override
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,585,public int hashCode() {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,586,final int prime = 31;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,587,int result = 1;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,588,result = prime * result + ((field == null) ? 0 : field.hashCode());
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,589,result = prime * result + virtualSize;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,590,OpenIntToFieldHashMap<T>.Iterator iter = entries.iterator();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,591,while (iter.hasNext()) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,592,iter.advance();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,593,int temp = iter.value().hashCode();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,594,result = prime * result + temp;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,596,return result;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,600,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,601,@Override
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,602,public boolean equals(Object obj) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,603,if (this == obj)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,604,return true;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,605,if (obj == null)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,606,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,607,if (!(obj instanceof SparseFieldVector))
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,608,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,609,SparseFieldVector<T> other = (SparseFieldVector<T>) obj;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,610,if (field == null) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,611,if (other.field != null)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,612,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,613,} else if (!field.equals(other.field))
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,614,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,615,if (virtualSize != other.virtualSize)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,616,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,617,OpenIntToFieldHashMap<T>.Iterator iter = entries.iterator();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,618,while (iter.hasNext()) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,619,iter.advance();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,620,T test = other.getEntry(iter.key());
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,621,if (!test.equals(iter.value())) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,622,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,625,iter = other.getEntries().iterator();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,626,while (iter.hasNext()) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,627,iter.advance();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,628,T test = iter.value();
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,629,if (!test.equals(getEntry(iter.key()))) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,630,return false;
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,633,return true;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1293,f (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1293,if (Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key()))) {
