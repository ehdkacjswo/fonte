is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,20,import junit.framework.*;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,21,import java.util.Random;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,22,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,23,import java.io.ByteArrayInputStream;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,24,import java.io.ObjectOutputStream;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,25,import java.io.ObjectInputStream;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,26,import java.io.IOException;
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,28,public class DummyStepInterpolatorTest
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,29,extends TestCase {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,31,public DummyStepInterpolatorTest(String name) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,32,super(name);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,35,public void testNoReset() {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,37,"double[]   y    =   { 0.0, 1.0, -2.0 };"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,38,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,39,interpolator.storeTime(0);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,40,interpolator.shift();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,41,interpolator.storeTime(1);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,43,double[] result = interpolator.getInterpolatedState();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,44,for (int i = 0; i < result.length; ++i) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,45,assertTrue(Math.abs(result[i] - y[i]) < 1.0e-10);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,50,public void testFixedState()
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,51,throws DerivativeException {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,53,"double[]   y    =   { 1.0, 3.0, -4.0 };"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,54,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,55,interpolator.storeTime(0);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,56,interpolator.shift();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,57,interpolator.storeTime(1);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,59,interpolator.setInterpolatedTime(0.1);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,60,double[] result = interpolator.getInterpolatedState();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,61,for (int i = 0; i < result.length; ++i) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,62,assertTrue(Math.abs(result[i] - y[i]) < 1.0e-10);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,65,interpolator.setInterpolatedTime(0.5);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,66,result = interpolator.getInterpolatedState();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,67,for (int i = 0; i < result.length; ++i) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,68,assertTrue(Math.abs(result[i] - y[i]) < 1.0e-10);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,73,public void testSerialization()
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,74,"throws DerivativeException, IntegratorException,"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,75,"IOException, ClassNotFoundException {"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,77,"double[]   y    =   { 0.0, 1.0, -2.0 };"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,78,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,79,interpolator.storeTime(0);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,80,interpolator.shift();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,81,interpolator.storeTime(1);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,83,ByteArrayOutputStream bos = new ByteArrayOutputStream();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,84,ObjectOutputStream    oos = new ObjectOutputStream(bos);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,85,oos.writeObject(interpolator);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,87,assertTrue(bos.size () > 150);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,88,assertTrue(bos.size () < 250);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,90,ByteArrayInputStream  bis = new ByteArrayInputStream(bos.toByteArray());
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,91,ObjectInputStream     ois = new ObjectInputStream(bis);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,92,DummyStepInterpolator dsi = (DummyStepInterpolator) ois.readObject();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,94,dsi.setInterpolatedTime(0.5);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,95,double[] result = dsi.getInterpolatedState();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,96,for (int i = 0; i < result.length; ++i) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,97,assertTrue(Math.abs(result[i] - y[i]) < 1.0e-10);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,102,public static Test suite() {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,103,return new TestSuite(DummyStepInterpolatorTest.class);
