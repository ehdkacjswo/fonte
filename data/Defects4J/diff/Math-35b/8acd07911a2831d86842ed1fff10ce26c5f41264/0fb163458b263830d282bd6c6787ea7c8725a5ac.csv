is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,193,"but got {0} abscisssae and {1} ordinatae"","
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,193,"""but got {0} abscissae and {1} ordinatae"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,201,"but got {0} abscisssae and {1} ordinatae"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,201,"""but got {0} abscissae and {1} ordinatae"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,257,"pdateBandwidthInterval(xval, i, bandwidthInterval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,257,"updateBandwidthInterval(xval, weights, i, bandwidthInterval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,364,if (xval.length != yval.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,365,throw new MathException(
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,366,"""Loess expects the abscissa and ordinate arrays "" +"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,367,"""to be of the same size, "" +"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,368,"""but got {0} abscissae and {1} ordinatae"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,369,"xval.length, yval.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,376, the same number of points closest to xval[i]
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,381,"* the same number of points closest to xval[i], ignoring zero weights."
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,384,* @param xval weights array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,386,"rivate static void updateBandwidthInterval(final double[] xval, final int i,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,392,"private static void updateBandwidthInterval(final double[] xval, final double[] weights,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,393,"final int i,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,393,f (right < xval.length - 1 &&
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,394,val[right+1] - xval[i] < xval[i] - xval[left]) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,395,andwidthInterval[0]++;
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,396,andwidthInterval[1]++;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,400,"int nextRight = nextNonzero(weights, right);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,401,if (nextRight < xval.length && xval[nextRight] - xval[i] < xval[i] - xval[left]) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,402,"int nextLeft = nextNonzero(weights, bandwidthInterval[0]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,403,bandwidthInterval[0] = nextLeft;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,404,bandwidthInterval[1] = nextRight;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,409,* Returns the smallest index j such that j > i && (j==weights.length || weights[j] != 0)
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,410,* @param weights weights array
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,411,* @param i the index from which to start search; must be < weights.length
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,412,* @return the smallest index j such that j > i && (j==weights.length || weights[j] != 0)
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,414,"private static int nextNonzero(final double[] weights, final int i) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,415,int j = i + 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,416,while(j < weights.length && weights[j] == 0) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,417,j++;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,419,return j;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,22,import org.junit.Ignore;
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,52,"oessInterpolator li = new LoessInterpolator(0.6, 2);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,53,"LoessInterpolator li = new LoessInterpolator(0.6, 2, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,70,"oessInterpolator li = new LoessInterpolator(0.3, 4);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,71,"LoessInterpolator li = new LoessInterpolator(0.3, 4, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,109,"oessInterpolator li = new LoessInterpolator(bw, 4);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,110,"LoessInterpolator li = new LoessInterpolator(bw, 4, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,142,"oessInterpolator li = new LoessInterpolator(0.3, i);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,143,"LoessInterpolator li = new LoessInterpolator(0.3, i, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,208,"oessInterpolator li = new LoessInterpolator(0.1, 3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,209,"LoessInterpolator li = new LoessInterpolator(0.1, 3, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,214,"ew LoessInterpolator(-0.2, 3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,215,"new LoessInterpolator(-0.2, 3, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,219,"ew LoessInterpolator(1.1, 3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,220,"new LoessInterpolator(1.1, 3, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,245,Test
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,246,ublic void testMath296withWeights() throws MathException {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,247,ouble[] xval = {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,248,".1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0,"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,249,".1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0};"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,250,ouble[] yval = {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,251,".47, 0.48, 0.55, 0.56, -0.08, -0.04, -0.07, -0.07,"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,252,"0.56, -0.46, -0.56, -0.52, -3.03, -3.08, -3.09,"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,253,"3.04, 3.54, 3.46, 3.36, 3.35};"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,254,ouble[] weights = {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,255,",1,1,1,1,1,1,1,1,1,"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,256,",1,0,0,1,1,0,0,1,1};"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,257,"/ Output from R, rounded to .001"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,258,ouble[] yref = {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,259,".478, 0.492, 0.484, 0.320, 0.179, -0.003, -0.088, -0.209,"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,260,"0.327, -0.455, -0.518, -0.537, -1.492, -2.115, -3.09, -3.04,"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,261,"3.0, 0.155, 1.752, 3.35};"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,262,"oessInterpolator li = new LoessInterpolator(0.3, 4, 1e-12);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,263,"ouble[] res = li.smooth(xval, yval,weights);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,264,"ssert.assertEquals(xval.length, res.length);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,265,or(int i = 0; i < res.length; ++i) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,266,"ssert.assertEquals(yref[i], res[i], 0.05);"
