is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,96,"/** Indicator for loading big tables from ""resource"" files. */"
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,97,private static final boolean LOAD_RESOURCES = true;
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3652,rivate static final int EXP_INT_TABLE_MAX_INDEX = 750;
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3654,static final int EXP_INT_TABLE_MAX_INDEX = 750;
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3655,rivate static final int EXP_INT_TABLE_LEN = EXP_INT_TABLE_MAX_INDEX * 2;
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3657,static final int EXP_INT_TABLE_LEN = EXP_INT_TABLE_MAX_INDEX * 2;
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3669,f (FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3671,if (RECOMPUTE_TABLES_AT_RUNTIME) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3691,} else if (LOAD_RESOURCES) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3692,final double[][] expInt = FastMathResources.loadExpInt();
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3693,EXP_INT_TABLE_A = expInt[0];
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,3694,EXP_INT_TABLE_B = expInt[1];
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6699,"rivate static final int EXP_FRAC_TABLE_LEN = TWO_POWER_10 + 1; // 0, 1/1024, ... 1024/1024"
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6705,"static final int EXP_FRAC_TABLE_LEN = TWO_POWER_10 + 1; // 0, 1/1024, ... 1024/1024"
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6714,f (FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6720,if (RECOMPUTE_TABLES_AT_RUNTIME) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6732,} else if (LOAD_RESOURCES) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6733,final double[][] expFrac = FastMathResources.loadExpFrac();
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6734,EXP_FRAC_TABLE_A = expFrac[0];
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,6735,EXP_FRAC_TABLE_B = expFrac[1];
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,8786,rivate static final int LN_MANT_LEN = TWO_POWER_10; // (see LN_MANT comment below)
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,8796,static final int LN_MANT_LEN = TWO_POWER_10; // (see LN_MANT comment below)
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,8794,f (FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,8804,if (RECOMPUTE_TABLES_AT_RUNTIME) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,8812,} else if (LOAD_RESOURCES) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,8813,LN_MANT = FastMathResources.loadLnMant();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,18,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,20,import java.io.File;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,21,import java.io.DataOutputStream;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,22,import java.io.DataInputStream;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,23,import java.io.BufferedOutputStream;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,24,import java.io.BufferedInputStream;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,25,import java.io.FileOutputStream;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,26,import java.io.FileNotFoundException;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,27,import java.io.IOException;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,28,import  org.apache.commons.math.exception.MathInternalError;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,31,* Utility class for saving and loading tabulated data used by
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,32,* {@link FastMath}.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,34,* @version $Id$
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,36,public class FastMathResources {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,38,* Resource directory. Assuming that this class and the resource files
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,39,"* are located in the same package as ""FastMath""."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,41,"private static final String RES_DIR = ""data/"" +"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,42,"FastMath.class.getPackage().getName().replace('.', '/') + ""/"";"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,43,/** File resource prefix. */
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,44,"private static final String RES_PREFIX = RES_DIR + ""FastMath__"";"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,45,"/** Resource basename for ""EXP_INT_TABLE_A"" and ""EXP_INT_TABLE_B"". */"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,46,"private static final String EXP_INT = ""exp_int"";"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,47,"/** Resource basename for ""EXP_FRAC_TABLE_A"" and ""EXP_FRAC_TABLE_B"". */"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,48,"private static final String EXP_FRAC = ""exp_frac"";"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,49,"/** Resource basename for ""LN_MANT"". */"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,50,"private static final String LN_MANT = ""ln_mant"";"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,53,* Class contains only static methods.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,55,private FastMathResources() {}
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,58,* Compute and save all the resources.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,60,static void createAll() {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,61,// Create resource directory.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,62,final File resDir = new File(RES_DIR);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,63,if (resDir.exists()) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,64,if (!resDir.isDirectory()) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,65,throw new MathInternalError();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,67,} else {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,68,try {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,69,resDir.mkdirs();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,70,} catch (SecurityException e) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,71,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,75,"// ""EXP_INT"" tables."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,76,final double[] expIntA = new double[FastMath.EXP_INT_TABLE_LEN];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,77,final double[] expIntB = new double[FastMath.EXP_INT_TABLE_LEN];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,79,final double tmp[] = new double[2];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,80,final double recip[] = new double[2];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,82,for (int i = 0; i < FastMath.EXP_INT_TABLE_MAX_INDEX; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,83,"FastMathCalc.expint(i, tmp);"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,84,expIntA[i + FastMath.EXP_INT_TABLE_MAX_INDEX] = tmp[0];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,85,expIntB[i + FastMath.EXP_INT_TABLE_MAX_INDEX] = tmp[1];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,87,if (i != 0) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,88,// Negative integer powers.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,89,"FastMathCalc.splitReciprocal(tmp, recip);"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,90,expIntA[FastMath.EXP_INT_TABLE_MAX_INDEX - i] = recip[0];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,91,expIntB[FastMath.EXP_INT_TABLE_MAX_INDEX - i] = recip[1];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,95,"saveTable2d(EXP_INT, 2, FastMath.EXP_INT_TABLE_LEN,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,96,"new double[][] { expIntA, expIntB });"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,98,"// ""EXP_FRAC"" tables."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,99,final double[] expFracA = new double[FastMath.EXP_FRAC_TABLE_LEN];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,100,final double[] expFracB = new double[FastMath.EXP_FRAC_TABLE_LEN];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,102,for (int i = 0; i < FastMath.EXP_FRAC_TABLE_LEN; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,103,"FastMathCalc.slowexp(i / 1024d, tmp); // TWO_POWER_10"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,104,expFracA[i] = tmp[0];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,105,expFracB[i] = tmp[1];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,108,"saveTable2d(EXP_FRAC, 2, FastMath.EXP_FRAC_TABLE_LEN,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,109,"new double[][] { expFracA, expFracB });"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,111,"// ""LN_MANT"" table."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,112,final double[][] lnMant = new double[FastMath.LN_MANT_LEN][];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,114,for (int i = 0; i < FastMath.LN_MANT_LEN; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,115,final double d = Double.longBitsToDouble((((long) i) << 42) |
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,116,0x3ff0000000000000L);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,117,lnMant[i] = FastMathCalc.slowLog(d);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,120,"saveTable2d(LN_MANT, FastMath.LN_MANT_LEN, 2, lnMant);"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,124,"* Load ""EXP_INT"" tables."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,125,"* ""EXP_INT_TABLE_A"" is at index 0."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,126,"* ""EXP_INT_TABLE_B"" is at index 1."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,128,* @return the retrieved data.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,130,public static double[][] loadExpInt() {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,131,"return loadTable2d(EXP_INT, 2, FastMath.EXP_INT_TABLE_LEN);"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,134,"* Load ""EXP_FRAC"" tables."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,135,"* ""EXP_FRAC_TABLE_A"" is at index 0."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,136,"* ""EXP_FRAC_TABLE_B"" is at index 1."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,138,* @return the retrieved data.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,141,public static double[][] loadExpFrac() {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,142,"return loadTable2d(EXP_FRAC, 2, FastMath.EXP_FRAC_TABLE_LEN);"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,145,"* Load ""LN_MANT""."
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,147,* @return the retrieved data.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,150,public static double[][] loadLnMant() {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,151,"return loadTable2d(LN_MANT, FastMath.LN_MANT_LEN, 2);"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,155,* @param name Basename of the resource.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,156,* @return an output stream.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,157,* @throws FileNotFoundException if the file cannot be opened.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,159,private static DataOutputStream out(String name)
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,160,throws FileNotFoundException {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,161,final String fullName = RES_PREFIX + name;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,162,return new DataOutputStream(new BufferedOutputStream(new FileOutputStream(fullName)));
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,166,* @param name Basename of the resource.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,167,* @param len Number of {@code double}s to be stored.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,168,* @param data Data to be stored.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,170,"private static void saveTable1d(String name,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,171,"int len,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,172,double[] data) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,173,try {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,174,final DataOutputStream out = out(name);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,176,for (int i = 0; i < len; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,177,out.writeDouble(data[i]);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,180,out.close();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,181,} catch (IOException e) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,182,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,187,* @param name Basename of the resource.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,188,* @param len Number of table rows to be stored.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,189,* @param rowLen Number of {@code double}s per table row.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,190,* @param data Data to be stored.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,192,"private static void saveTable2d(String name,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,193,"int len,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,194,"int rowLen,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,195,double[][] data) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,196,try {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,197,final DataOutputStream out = out(name);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,199,for (int i = 0; i < len; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,200,for (int j = 0; j < rowLen; j++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,201,out.writeDouble(data[i][j]);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,205,out.close();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,206,} catch (IOException e) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,207,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,212,* @param name Basename of the resource.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,213,* @return an input stream.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,214,* @throws FileNotFoundException if the resource cannot be accessed.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,216,private static DataInputStream in(String name)
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,217,throws FileNotFoundException {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,218,"final String fullName = ""/"" + RES_PREFIX + name;"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,219,return new DataInputStream(new BufferedInputStream(FastMathResources.class.getResourceAsStream(fullName)));
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,224,* @param name Basename of the resource.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,225,* @param len Number of {@code double}s to be retrieved.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,226,* @return the retrieved data.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,228,"private static double[] loadTable1d(String name,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,229,int len) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,230,try {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,231,final DataInputStream in = in(name);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,233,final double[] data = new double[len];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,234,for (int i = 0; i < len; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,235,data[i] = in.readDouble();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,238,in.close();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,239,return data;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,240,} catch (IOException e) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,241,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,246,* @param name Basename of the resource.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,247,* @param len Number of table rows to be retrieved.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,248,* @param rowLen Number of {@code double}s per table row.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,249,* @return the retrieved data.
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,251,"private static double[][] loadTable2d(String name,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,252,"int len,"
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,253,int rowLen) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,254,try {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,255,final DataInputStream in = in(name);
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,257,final double[][] data = new double[len][rowLen];
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,258,for (int i = 0; i < len; i++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,259,for (int j = 0; j < rowLen; j++) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,260,data[i][j] = in.readDouble();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,264,in.close();
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,265,return data;
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,266,} catch (IOException e) {
True,src/main/java/org/apache/commons/math/util/FastMathResources.java,src/main/java/org/apache/commons/math/util/FastMathResources.java,267,throw new MathInternalError(e);
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,6, FastMath load test - requires that FastMath.USE_PRECOMPUTED_TABLES be set to non-final.
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,6,* FastMath load performance test - requires that
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,7,* <ul>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,8,*  <li>{@code FastMath.USE_PRECOMPUTED_TABLES}</li>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,9,*  <li>{@code FastMath.LOAD_RESOURCES}</li>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,10,* </ul>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,11,"* be non-""final""."
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,8,ample output from:
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,9,ava -cp target/classes;target/test-classes org.apache.commons.math.util.FastMathLoadCheck false false
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,10,ava -cp target/classes;target/test-classes org.apache.commons.math.util.FastMathLoadCheck false true
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,11,ava -cp target/classes;target/test-classes org.apache.commons.math.util.FastMathLoadCheck true  false
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,12,ava -cp target/classes;target/test-classes org.apache.commons.math.util.FastMathLoadCheck true  true
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,14,sing exp(100); compute=false
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,15,ew   12155456       9219       5308       5029       5587       5308       5029       5029       5029       5308
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,16,sing exp(100); compute=true
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,17,ew   34929579       9499       5308       5308       5029       5029       5029       5308       5028       5029
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,18,"sing max(0,0); compute=false"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,19,ew       5029       3632       3073       3073       3073       3073       3073       3073       3073       3073
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,20,"sing max(0,0); compute=true"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,21,ew       5028       3911       3073       3073       3073       3073       3073       3073       3073       3073
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,13,"* For example, this shell command:"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,14,* <pre>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,15,*  $ for max in false true ; do for how in compute resources array; do java -cp target/classes:target/test-classes org.apache.commons.math.util.FastMathLoadCheck $max $how ; done ; done
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,16,* </pre>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,17,* will produce an output similar to the following:
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,18,* <pre>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,19,*  Using exp(100); how=compute
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,20,*  times  50955053      4062      1783      1708      1731      1728      1739      1735      1746      1735
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,21,*  Using exp(100); how=resources
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,22,*  times  18467554      4822      1953      1769      1851      1746      1821      1817      1813      1742
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,23,*  Using exp(100); how=array
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,24,*  times   5952415      2960      1839      1776      1720      1847      1839      1780      1788      1742
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,25,"*  Using max(0,0); how=compute"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,26,*  times      1596       521       401       352       345       405       393       390       397       382
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,27,"*  Using max(0,0); how=resources"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,28,*  times      1517       521       401       386       386       394       363       386       382       383
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,29,"*  Using max(0,0); how=array"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,30,*  times      1569       453       398       390       389       394       333       390       334       359
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,31,* </pre>
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,34,"private final static String COMP = ""compute"";"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,35,"private final static String RES = ""resources"";"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,36,"private final static String ARR = ""array"";"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,28,rivate static boolean compute = true;
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,40,private static String how = ARR;
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,31,f (args.length>0) MAX = Boolean.valueOf(args[0]);
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,32,f (args.length>1) compute = Boolean.valueOf(args[1]);
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,33,f (args.length>2) LOOPS = Integer.valueOf(args[2]);
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,34,"(""Using ""+ (MAX ? ""max(0,0)"" : ""exp(100)"") + ""; compute="" + compute+""\n"");"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,35,"ield usePrecompute = FastMath.class.getDeclaredField(""RECOMPUTE_TABLES_AT_RUNTIME"");"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,36,sePrecompute.setAccessible(true);
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,37,f (usePrecompute.getBoolean(null) != compute) {
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,38,"sePrecompute.setBoolean(null, compute);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,43,if (args.length > 0) MAX = Boolean.valueOf(args[0]);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,44,if (args.length > 1) how = args[1];
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,45,if (args.length > 2) LOOPS = Integer.valueOf(args[2]);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,46,"p(""Using ""+ (MAX ? ""max(0,0)"" : ""exp(100)"") + ""; how="" + how + ""\n"");"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,48,"final Field recompute = FastMath.class.getDeclaredField(""RECOMPUTE_TABLES_AT_RUNTIME"");"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,49,"final Field load = FastMath.class.getDeclaredField(""LOAD_RESOURCES"");"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,50,if (how.equals(COMP)) {
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,51,recompute.setAccessible(true);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,52,"recompute.setBoolean(null, true);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,53,recompute.setAccessible(false);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,54,load.setAccessible(true);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,55,"load.setBoolean(null, false);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,56,load.setAccessible(false);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,57,} else if (how.equals(RES)) {
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,58,recompute.setAccessible(true);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,59,"recompute.setBoolean(null, false);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,60,recompute.setAccessible(false);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,61,load.setAccessible(true);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,62,"load.setBoolean(null, true);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,63,load.setAccessible(false);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,64,} else if (how.equals(ARR)) {
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,65,recompute.setAccessible(true);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,66,"recompute.setBoolean(null, false);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,67,recompute.setAccessible(false);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,68,load.setAccessible(true);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,69,"load.setBoolean(null, false);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,70,load.setAccessible(false);
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,71,} else {
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,72,"throw new IllegalArgumentException(""'how' must be 'compute' or 'resources' or 'array'"");"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,40,sePrecompute.setAccessible(false);
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,45,or(int i=0; i< LOOPS; i++){
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,79,for(int i = 0; i < LOOPS; i++){
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,49,"astMath.max(0,0);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,83,"FastMath.max(0, 0);"
False,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,54,"(""%10d"",t2-t1);"
True,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math/util/FastMathLoadCheck.java,88,"p(""%9d"", t2 - t1);"
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,17,package org.apache.commons.math.util;
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,20,* Not a test class.
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,21,"* It is used to generate the resource data used by the ""FastMath"" class."
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,22,"* You should run it from inside the ""resources"" directory, i.e. use as:"
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,23,* <pre>
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,24,*  $ cd src/main/resources/
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,25,*  $ java -cp ../../../target/classes:../../../target/test-classes org.apache.commons.math.util.FastMathResourcesSave
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,26,* </pre>
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,28,public class FastMathResourcesSave {
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,29,public static void main(String[] args) throws Exception {
True,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math/util/FastMathResourcesSave.java,30,FastMathResources.createAll();
