is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,20,import java.util.ArrayList;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,22,import java.util.Collections;
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,24,mport org.apache.commons.math.ode.sampling.DummyStepHandler;
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,38,rotected StepHandler handler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,39,protected Collection<StepHandler> stepHandlers;
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,54,andler = DummyStepHandler.getInstance();
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,55,stepHandlers = new ArrayList<StepHandler>();
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,66,ublic void setStepHandler(final StepHandler handler) {
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,67,his.handler = handler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,67,public void addStepHandler(final StepHandler handler) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,68,stepHandlers.add(handler);
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,71,ublic StepHandler getStepHandler() {
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,72,eturn handler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,72,public Collection<StepHandler> getStepHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,73,return Collections.unmodifiableCollection(stepHandlers);
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,76,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,77,public void clearStepHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,78,stepHandlers.clear();
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,85,ublic Collection<EventHandler> getEventsHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,91,public Collection<EventHandler> getEventHandlers() {
False,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,90,ublic void clearEventsHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,96,public void clearEventHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,100,/** Check if one of the step handlers requires dense output.
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,101,* @return true if one of the step handlers requires dense output
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,103,protected boolean requiresDenseOutput() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,104,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,105,if (handler.requiresDenseOutput()) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,106,return true;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,109,return false;
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,48,** Set the step handler for this integrator.
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,49, The handler will be called by the integrator for each accepted
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,50, step.
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,48,/** Add a step handler to this integrator.
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,49,* <p>The handler will be called by the integrator for each accepted
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,50,* step.</p>
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,52,* @see #getStepHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,53,* @see #clearStepHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,54,* @since 2.0
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,53,ublic void setStepHandler (StepHandler handler);
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,56,public void addStepHandler (StepHandler handler);
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,55,** Get the step handler for this integrator.
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,56, @return the step handler for this integrator
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,58,/** Get all the step handlers that have been added to the integrator.
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,59,* @return an unmodifiable collection of the added events handlers
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,60,* @see #addStepHandler(StepHandler)
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,61,* @see #clearStepHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,62,* @since 2.0
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,64,public Collection<StepHandler> getStepHandlers();
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,66,/** Remove all the step handlers that have been added to the integrator.
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,67,* @see #addStepHandler(StepHandler)
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,68,* @see #getStepHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,69,* @since 2.0
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,58,ublic StepHandler getStepHandler();
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,71,public void clearStepHandlers();
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,68, @see #getEventsHandlers()
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,69, @see #clearEventsHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,81,* @see #getEventHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,82,* @see #clearEventHandlers()
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,74,** Get all the events handlers that have been added to the integrator.
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,87,/** Get all the event handlers that have been added to the integrator.
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,77, @see #clearEventsHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,90,* @see #clearEventHandlers()
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,79,ublic Collection<EventHandler> getEventsHandlers();
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,92,public Collection<EventHandler> getEventHandlers();
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,81,** Remove all the events handlers that have been added to the integrator.
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,94,/** Remove all the event handlers that have been added to the integrator.
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,83, @see #getEventsHandlers()
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,96,* @see #getEventHandlers()
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,85,ublic void clearEventsHandlers();
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,98,public void clearEventHandlers();
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,25,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,183,f (handler.requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,184,if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,196,andler.reset();
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,197,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,198,handler.reset();
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,292,"andler.handleStep(interpolator, lastStep);"
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,295,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,296,"handler.handleStep(interpolator, lastStep);"
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,120,enseOutput = (handler.requiresDenseOutput() || (! eventsHandlersManager.isEmpty()));
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,120,denseOutput = requiresDenseOutput() || (! eventsHandlersManager.isEmpty());
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,143,enseOutput = (handler.requiresDenseOutput() || (! eventsHandlersManager.isEmpty()));
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,143,denseOutput = requiresDenseOutput() || (! eventsHandlersManager.isEmpty());
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,284,** Set the step handler for this integrator.
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,285, The handler will be called by the integrator for each accepted
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,286, step.
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,287, @param handler handler for the accepted steps
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,289,ublic void setStepHandler (final StepHandler handler) {
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,284,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,285,public void addStepHandler (final StepHandler handler) {
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,291,uper.setStepHandler(handler);
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,292,enseOutput = (handler.requiresDenseOutput() || (! eventsHandlersManager.isEmpty()));
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,287,super.addStepHandler(handler);
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,288,denseOutput = requiresDenseOutput() || (! eventsHandlersManager.isEmpty());
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,305,enseOutput = (handler.requiresDenseOutput() || (! eventsHandlersManager.isEmpty()));
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,301,denseOutput = requiresDenseOutput() || (! eventsHandlersManager.isEmpty());
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,588,andler.reset();
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,584,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,585,handler.reset();
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,861,"andler.handleStep(interpolator, lastStep);"
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,859,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,860,"handler.handleStep(interpolator, lastStep);"
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,27,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,99,f (handler.requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,100,if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,113,andler.reset();
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,114,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,115,handler.reset();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,171,"andler.handleStep(interpolator, lastStep);"
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,174,for (StepHandler handler : stepHandlers) {
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,175,"handler.handleStep(interpolator, lastStep);"
False,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,44,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,44,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,48,ontinuousOutputModel cm = (ContinuousOutputModel) integ.getStepHandler();
True,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,48,ContinuousOutputModel cm = (ContinuousOutputModel) integ.getStepHandlers().iterator().next();
False,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,58,nteg.setStepHandler(cm);
True,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,58,integ.addStepHandler(cm);
False,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,104,nteg1.setStepHandler(cm1);
True,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,104,integ1.addStepHandler(cm1);
False,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,112,nteg2.setStepHandler(cm2);
True,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,112,integ2.addStepHandler(cm2);
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,84,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,84,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,90,"ssertEquals(functions.length, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,90,"assertEquals(functions.length, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,103,nteg.clearEventsHandlers();
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,104,"ssertEquals(0, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,103,integ.clearEventHandlers();
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,104,"assertEquals(0, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,119,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,119,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,137,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,137,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,154,nteg.setStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,154,integ.addStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,33,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,56,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,57,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,63,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,64,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java,65,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,67,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,67,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,94,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,94,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,155,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,155,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,190,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,190,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,196,"ssertEquals(functions.length, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,196,"assertEquals(functions.length, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,204,nteg.clearEventsHandlers();
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,205,"ssertEquals(0, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,204,integ.clearEventHandlers();
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,205,"assertEquals(0, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,221,nteg.setStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,221,integ.addStepHandler(new KeplerHandler(pb));
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,242,nteg.setStepHandler(new VariableHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,242,integ.addStepHandler(new VariableHandler());
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,67,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,67,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,74,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,74,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,75,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,113,nteg.setStepHandler(new StepHandler() {
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java,115,integ.addStepHandler(new StepHandler() {
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,82,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,82,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,109,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,109,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,141,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,141,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,147,"ssertEquals(functions.length, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,147,"assertEquals(functions.length, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,155,nteg.clearEventsHandlers();
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,156,"ssertEquals(0, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,155,integ.clearEventHandlers();
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,156,"assertEquals(0, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,172,nteg.setStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,172,integ.addStepHandler(new KeplerHandler(pb));
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,193,nteg.setStepHandler(new VariableHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,193,integ.addStepHandler(new VariableHandler());
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,213,nteg.setStepHandler(DummyStepHandler.getInstance());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,213,integ.addStepHandler(DummyStepHandler.getInstance());
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,219,nteg.setStepHandler(new InterpolatingStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,219,integ.addStepHandler(new InterpolatingStepHandler());
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,67,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,67,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,74,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,74,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,75,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,113,nteg.setStepHandler(new StepHandler() {
True,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java,115,integ.addStepHandler(new StepHandler() {
False,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,63,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,63,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,96,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,96,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,116,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java,116,integ.addStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,34,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,135,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,136,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,142,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,143,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,144,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,65,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,65,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,98,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,98,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,117,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,117,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,134,nteg.setStepHandler(new KeplerStepHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,134,integ.addStepHandler(new KeplerStepHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,32,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,55,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,56,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,62,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,63,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java,64,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,81,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,81,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,108,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,108,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,161,ntegrator.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,161,integrator.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,181,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,181,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,187,"ssertEquals(functions.length, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,187,"assertEquals(functions.length, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,195,nteg.clearEventsHandlers();
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,196,"ssertEquals(0, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,195,integ.clearEventHandlers();
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,196,"assertEquals(0, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,212,nteg.setStepHandler(new KeplerStepHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,212,integ.addStepHandler(new KeplerStepHandler(pb));
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,232,nteg.setStepHandler(new VariableStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,232,integ.addStepHandler(new VariableStepHandler());
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,69,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,69,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,76,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,76,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,77,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,115,nteg.setStepHandler(new StepHandler() {
True,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java,117,integ.addStepHandler(new StepHandler() {
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,95,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,95,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,122,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,122,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,154,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,154,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,160,"ssertEquals(functions.length, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,160,"assertEquals(functions.length, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,168,nteg.clearEventsHandlers();
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,169,"ssertEquals(0, integ.getEventsHandlers().size());"
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,168,integ.clearEventHandlers();
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,169,"assertEquals(0, integ.getEventHandlers().size());"
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,186,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,186,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,232,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,232,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,335,nteg.setStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,335,integ.addStepHandler(new KeplerHandler(pb));
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,67,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,67,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,74,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,74,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,75,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,113,nteg.setStepHandler(new StepHandler() {
True,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java,115,integ.addStepHandler(new StepHandler() {
False,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,62,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,62,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,96,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,96,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,116,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java,116,integ.addStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,33,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,56,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,57,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,63,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,64,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java,65,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/StepInterpolatorAbstractTest.java,src/test/org/apache/commons/math/ode/nonstiff/StepInterpolatorAbstractTest.java,37,ntegrator.setStepHandler(new StepHandler() {
True,src/test/org/apache/commons/math/ode/nonstiff/StepInterpolatorAbstractTest.java,src/test/org/apache/commons/math/ode/nonstiff/StepInterpolatorAbstractTest.java,37,integrator.addStepHandler(new StepHandler() {
False,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,65,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,65,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,98,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,98,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,117,nteg.setStepHandler(handler);
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,117,integ.addStepHandler(handler);
False,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,134,nteg.setStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,134,integ.addStepHandler(new KeplerHandler(pb));
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,33,import org.apache.commons.math.ode.sampling.StepHandler;
False,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,56,nteg.setStepHandler(new ContinuousOutputModel());
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,57,integ.addStepHandler(new ContinuousOutputModel());
False,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,63,os.writeObject(integ.getStepHandler());
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,64,for (StepHandler handler : integ.getStepHandlers()) {
True,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java,65,oos.writeObject(handler);
False,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,43,"nteg.setStepHandler(new StepNormalizer(range / 10.0,"
True,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,43,"integ.addStepHandler(new StepNormalizer(range / 10.0,"
False,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,70,"nteg.setStepHandler(new StepNormalizer(range / 10.5,"
True,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/sampling/StepNormalizerTest.java,70,"integ.addStepHandler(new StepNormalizer(range / 10.5,"
