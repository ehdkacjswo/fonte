is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,20,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,35, @throws MathUserException if the function evaluation fails.
False,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,37,"ouble value(double x, double y)"
False,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,38,hrows MathUserException;
True,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java,34,"double value(double x, double y);"
False,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,20,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,34, @exception MathUserException if the function evaluation fails
False,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,38,"hrows MathUserException, IllegalArgumentException;"
True,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java,34,throws IllegalArgumentException;
False,src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java,33, @throws org.apache.commons.math.exception.MathUserException if
False,src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java,34, the function evaluation fails.
False,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,20,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,33, @exception MathUserException if the function evaluation fails
False,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,37,"hrows MathUserException, IllegalArgumentException;"
True,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java,34,throws IllegalArgumentException;
False,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,20,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,36, @throws MathUserException if the function evaluation fails.
False,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,38,"ouble value(double x, double y, double z)"
False,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,39,hrows MathUserException;
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,35,"double value(double x, double y, double z);"
False,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,19,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,33, @throws MathUserException if the function evaluation fails
False,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,35,ouble[][] value(double x) throws MathUserException;
True,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java,32,double[][] value(double x);
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,19,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,28,* <p>
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,29,"* For user-defined functions, when the method encounters an error"
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,30,"* during evaluation, users must use their <em>own</em> unchecked exceptions."
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,31,"* The following example shows the recommended way to do that, using root"
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,32,* solving as the example (the same construct should be used for ODE
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,33,* integrators or for optimizations).
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,34,* </p>
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,35,* <pre>
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,36,* private static class LocalException extends RuntimeException {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,38,*   // the x value that caused the problem
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,39,*   private final double x;
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,41,*   public LocalException(double x) {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,42,*     this.x = x;
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,45,*   public double getX() {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,46,*     return x;
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,51,* private static class MyFunction implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,52,*   public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,53,*     double y = hugeFormula(x);
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,54,*     if (somethingBadHappens) {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,55,*       throw new LocalException(x);
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,57,*     return y;
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,61,* public void compute() {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,62,*   try {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,63,"*     solver.solve(maxEval, new MyFunction(a, b, c), min, max);"
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,64,*   } catch (LocalException le) {
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,65,*     // retrieve the x value
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,68,* </pre>
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,70,* <p>
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,71,* As shown in this example the exception is really something local to user code
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,72,* and there is a guarantee Apache Commons Math will not mess with it. The user is safe.
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,73,* </p>
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,38, @throws MathUserException when the method may encounter errors during evaluation.
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,39," This should be thrown only in circumstances where, at the level of the"
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,40," activated function, IllegalArgumentException is not appropriate and it"
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,41, should indicate that while formal preconditions of the method have not
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,42," been violated, an irrecoverable error has occurred evaluating a"
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,43, function at some (usually lower) level of the call stack.
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,44," Convergence failures, runtime exceptions (even IllegalArgumentException)"
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,45, in user code or lower level methods can cause (and should be wrapped in)
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,46, a MathUserException.
False,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,48,ouble value(double x) throws MathUserException;
True,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java,83,double value(double x);
False,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,19,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,33, @throws MathUserException if the function evaluation fails
False,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,35,ouble[] value(double x) throws MathUserException;
True,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java,32,double[] value(double x);
False,src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,19,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,41,ublic double value(double x) throws MathUserException {
True,src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java,39,public double value(double x) {
False,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,19,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,46,ublic double value(double[] point) throws MathUserException {
True,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,44,public double value(double[] point) {
False,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,61,ublic double value(double[] point) throws MathUserException {
True,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,59,public double value(double[] point) {
False,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,72,ublic double[] value(double[] point)
False,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,73,hrows MathUserException {
True,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math/analysis/SumSincFunction.java,70,public double[] value(double[] point) {
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,27,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,81,"hrows ConvergenceException, MathUserException {"
True,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,80,throws ConvergenceException {
