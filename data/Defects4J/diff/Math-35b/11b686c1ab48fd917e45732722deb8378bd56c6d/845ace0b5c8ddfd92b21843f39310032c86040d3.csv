is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,53, @param specific Format specifier.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,54, @param general Format specifier.
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,53,* @param specific Format specifier (may be null).
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,54,* @param general Format specifier (may be null).
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,66,"inal MessageFormat generalFmt  = new MessageFormat(general.getLocalizedString(locale), locale);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,83,"b.append("": "");"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,87,b.append(generalFmt.format(generalArgs));
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,85,if (general != null) {
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,86,if (specific != null) {
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,87,"sb.append("": "");"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,89,"final MessageFormat generalFmt  = new MessageFormat(general.getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,90,sb.append(generalFmt.format(generalArgs));
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,27,ublic void testSpecificGeneric() {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,27,public void testSpecificGeneral() {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,35,@Test
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,36,public void testNullSpecific() {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,37,"Localizable general  = new DummyLocalizable(""general  {0} / {1}"");"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,38,"String message = MessageFactory.buildMessage(Locale.FRENCH, null, general,"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,39,"'a', 'b');"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,40,"Assert.assertEquals(""general  a / b"", message);"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,43,@Test
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,44,public void testNullGeneral() {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,45,"Localizable specific = new DummyLocalizable(""specific {0} - {1} - {2}"");"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,46,"String message = MessageFactory.buildMessage(Locale.FRENCH, specific, null,"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,47,"0, 1, 2);"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,48,"Assert.assertEquals(""specific 0 - 1 - 2"", message);"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,52,@Test
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,53,public void testNull() {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,54,"String message = MessageFactory.buildMessage(Locale.FRENCH, null, null, ""nothing"");"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,55,"Assert.assertEquals("""", message);"
