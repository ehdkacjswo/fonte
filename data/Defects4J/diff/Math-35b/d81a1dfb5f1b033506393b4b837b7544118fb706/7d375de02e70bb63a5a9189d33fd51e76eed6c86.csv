is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,148,"{0} points Legendre-Gauss integrator not supported, "" +"
False,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,149,"number of points must be in the {1}-{2} range"","
True,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java,149,"LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED,"
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,162,"endpoints do not specify an interval: [{0}, {1}]"","
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,162,"LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,259,"hrow MathRuntimeException.createArithmeticException(""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero"","
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,260,", k, x[i]);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,259,throw MathRuntimeException.createArithmeticException(
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,260,"LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO,"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,261,"i, k, x[i]);"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,211,"endpoints do not specify an interval: [{0}, {1}]"","
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,211,"LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,"
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,259,"unparseable complex number: \""{0}\"""", source);"
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,259,"LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER, source);"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,148,"Cannot compute beta density at 0 when alpha = {0,number}"", alpha);"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,149,"LocalizedFormats.CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA, alpha);"
False,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,154,"Cannot compute beta density at 1 when beta = %.3g"", beta);"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,155,"LocalizedFormats.CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA, beta);"
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,198,"unparseable fraction number: \""{0}\"""", source);"
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,198,"LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER, source);"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,209,"unparseable fraction number: \""{0}\"""", source);"
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,209,"LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER, source);"
True,src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,42,"RandomKeyMutation works only with RandomKeys, got "" +"
True,src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java,43,"LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS,"
False,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,263,"unparseable 3D vector: \""{0}\"""", source);"
True,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,263,"LocalizedFormats.UNPARSEABLE_3D_VECTOR, source);"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,174,"wrong array shape (block length = {0}, expected {1})"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,174,"LocalizedFormats.WRONG_BLOCK_LENGTH,"
False,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,268,"unparseable real vector: \""{0}\"""", source);"
True,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,268,"LocalizedFormats.UNPARSEABLE_REAL_VECTOR, source);"
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,223,"input data comes from unsupported datasource: {0}, "" +"
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,224,"supported sources: {1}, {2}"","
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,223,"LocalizedFormats.INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE,"
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,123,"unknown mode {0}, known modes: "" +"
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,124,"{1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) and {11} ({12})"","
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,123,"LocalizedFormats.UNKNOWN_MODE,"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,143,"hrow MathRuntimeException.createIllegalArgumentException(""input weights array is null"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,143,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,148,"Different number of weights and values"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,148,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, weights.length, values.length);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,155,"NaN weight at index {0}"", i);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,155,"LocalizedFormats.NAN_ELEMENT_AT_INDEX, i);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,159,"Infinite weight at index {0}"", i);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,159,"LocalizedFormats.INFINITE_ARRAY_ELEMENT, weights[i], i);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,163,"negative weight {0} at index {1} "", weights[i], i);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,163,"LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX, i, weights[i]);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,172,"weight array must contain at least one non-zero value"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,172,LocalizedFormats.WEIGHT_AT_LEAST_ONE_NON_ZERO);
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,572,"percentile implementation {0} does not support setQuantile"","
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,573,ercentileImpl.getClass().getName());
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,572,"LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD,"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,573,"percentileImpl.getClass().getName(), SET_QUANTILE_METHOD_NAME);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,52,** Message for out of range root index. */
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,53,rivate static final String OUT_OF_RANGE_ROOT_INDEX_MESSAGE =
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,54,"out of range root of unity index {0} (must be in [{1};{2}])"";"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,531,"endpoints do not specify an interval: [{0}, {1}]"","
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,527,"LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,886,"UT_OF_RANGE_ROOT_INDEX_MESSAGE, k, 0, omegaCount - 1);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,882,"LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, k, 0, omegaCount - 1);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,908,"UT_OF_RANGE_ROOT_INDEX_MESSAGE, k, 0, omegaCount - 1);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,904,"LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, k, 0, omegaCount - 1);"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,46,"ARRAY_SUMS_TO_ZERO(""array sums to zero""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,55,"CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA(""cannot compute beta density at 0 when alpha = {0,number}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,56,"CANNOT_COMPUTE_BETA_DENSITY_AT_1_FOR_SOME_BETA(""cannot compute beta density at 1 when beta = %.3g""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,141,"NAN_ELEMENT_AT_INDEX(""element {0} is NaN""),"
False,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,206,"ULL_INPUT_ARRAY(""input values array is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,210,"NULL_INPUT_ARRAY(""input array is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,234,"RANDOMKEY_MUTATION_WRONG_CLASS(""RandomKeyMutation works only with RandomKeys, not {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,271,"WEIGHT_AT_LEAST_ONE_NON_ZERO(""weigth array must contain at least one non-zero value""),"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1252,hrow MathRuntimeException.createArithmeticException(
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1253,"Array sums to zero"");"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1252,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ARRAY_SUMS_TO_ZERO);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1415,"invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4}),"" +"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1416," {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1414,"LocalizedFormats.INVALID_ROUNDING_METHOD,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,349,"contraction criteria ({0}) smaller than the expansion factor ({1}).  This would "" +"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,350,"lead to a never ending loop of expansion and contraction as a newly expanded "" +"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,351,"internal storage array would immediately satisfy the criteria for contraction"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,349,"LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,357,"contraction criteria smaller than one ({0}).  This would lead to a never ending "" +"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,358,"loop of expansion and contraction as an internal storage array length equal "" +"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,359,"to the number of elements would satisfy the contraction criteria."","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,355,"LocalizedFormats.CONTRACTION_CRITERIA_SMALLER_THAN_ONE,"
