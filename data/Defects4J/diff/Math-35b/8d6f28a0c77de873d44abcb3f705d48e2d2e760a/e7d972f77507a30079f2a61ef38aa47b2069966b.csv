is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,15, limitations under the License.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,17,ackage org.apache.commons.math.stat.descriptive;
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,20, Implementation of
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,21, {@link org.apache.commons.math.stat.descriptive.DescriptiveStatistics} that
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,22, is safe to use in a mulithreaded environment.  Multiple threads can safely
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,23, operate on a single instance without causing runtime exceptions due to race
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,24," conditions.  In effect, this implementation makes modification and access"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,25," methods atomic operations for a signle instance.  That is to say, as one"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,26," thread is computing a statistic from the instance, no other thread can modify"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,27, the instance nor compute another statistic.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,29, @since 1.2
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,30," @version $Revision: 480440 $ $Date: 2006-11-29 01:14:12 -0600 (Wed, 29 Nov 2006) $"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,32,ublic class SynchronizedDescriptiveStatistics extends DescriptiveStatisticsImpl {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,34,** Serialization UID */
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,35,rivate static final long serialVersionUID = 1L;
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,38, Construct an instance with infinite window
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,40,ublic SynchronizedDescriptiveStatistics() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,41,his(INFINITE_WINDOW);
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,45, Construct an instance with finite window
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,46, @param window the finite window size.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,48,ublic SynchronizedDescriptiveStatistics(int window) {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,49,uper(window);
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,53, @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#addValue(double)
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,55,ublic synchronized void addValue(double v) {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,56,uper.addValue(v);
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,60, Apply the given statistic to this univariate collection.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,61, @param stat the statistic to apply
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,62, @return the computed value of the statistic.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,64,ublic synchronized double apply(UnivariateStatistic stat) {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,65,eturn super.apply(stat);
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,69, @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#clear()
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,71,ublic synchronized void clear() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,72,uper.clear();
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,76, @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getElement(int)
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,78,ublic synchronized double getElement(int index) {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,79,eturn super.getElement(index);
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,83, @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getN()
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,85,ublic synchronized long getN() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,86,eturn super.getN();
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,90, Returns the standard deviation of the available values.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,91," @return The standard deviation, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,92, or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,94,ublic synchronized double getStandardDeviation() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,95,eturn super.getStandardDeviation();
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,99, @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getValues()
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,101,ublic synchronized double[] getValues() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,102,eturn super.getValues();
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,106, Access the window size.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,107, @return the current window size.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,109,ublic synchronized int getWindowSize() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,110,eturn super.getWindowSize();
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,114, @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#setWindowSize(int)
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,116,ublic synchronized void setWindowSize(int windowSize) {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,117,uper.setWindowSize(windowSize);
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,121, Generates a text report displaying univariate statistics from values
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,122, that have been added.  Each statistic is displayed on a separate
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,123, line.
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,125, @return String with line feeds displaying statistics
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,127,ublic synchronized String toString() {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,128,eturn super.toString();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,17,package org.apache.commons.math.stat.descriptive;
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,20,* Implementation of
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,21,* {@link org.apache.commons.math.stat.descriptive.DescriptiveStatistics} that
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,22,* is safe to use in a mulithreaded environment.  Multiple threads can safely
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,23,* operate on a single instance without causing runtime exceptions due to race
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,24,"* conditions.  In effect, this implementation makes modification and access"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,25,"* methods atomic operations for a signle instance.  That is to say, as one"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,26,"* thread is computing a statistic from the instance, no other thread can modify"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,27,* the instance nor compute another statistic.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,29,* @since 1.2
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,30,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,32,public class SynchronizedDescriptiveStatistics extends DescriptiveStatisticsImpl {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,34,/** Serialization UID */
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,35,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,38,* Construct an instance with infinite window
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,40,public SynchronizedDescriptiveStatistics() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,41,this(INFINITE_WINDOW);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,45,* Construct an instance with finite window
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,46,* @param window the finite window size.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,48,public SynchronizedDescriptiveStatistics(int window) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,49,super(window);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,53,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#addValue(double)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,55,public synchronized void addValue(double v) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,56,super.addValue(v);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,60,* Apply the given statistic to this univariate collection.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,61,* @param stat the statistic to apply
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,62,* @return the computed value of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,64,public synchronized double apply(UnivariateStatistic stat) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,65,return super.apply(stat);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,69,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#clear()
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,71,public synchronized void clear() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,72,super.clear();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,76,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getElement(int)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,78,public synchronized double getElement(int index) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,79,return super.getElement(index);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,83,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getN()
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,85,public synchronized long getN() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,86,return super.getN();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,90,* Returns the standard deviation of the available values.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,91,"* @return The standard deviation, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,92,* or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,94,public synchronized double getStandardDeviation() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,95,return super.getStandardDeviation();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,99,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getValues()
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,101,public synchronized double[] getValues() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,102,return super.getValues();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,106,* Access the window size.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,107,* @return the current window size.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,109,public synchronized int getWindowSize() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,110,return super.getWindowSize();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,114,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#setWindowSize(int)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,116,public synchronized void setWindowSize(int windowSize) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,117,super.setWindowSize(windowSize);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,121,* Generates a text report displaying univariate statistics from values
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,122,* that have been added.  Each statistic is displayed on a separate
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,123,* line.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,125,* @return String with line feeds displaying statistics
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,127,public synchronized String toString() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,128,return super.toString();
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,3, contributor license agreements. See the NOTICE file distributed with this
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,4, work for additional information regarding copyright ownership. The ASF
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,5," licenses this file to You under the Apache License, Version 2.0 (the"
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,6," ""License""); you may not use this file except in compliance with the License."
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,7, You may obtain a copy of the License at
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,8, http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,9," or agreed to in writing, software distributed under the License is"
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,10," distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,11," KIND, either express or implied. See the License for the specific language"
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,12, governing permissions and limitations under the License.
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,14,ackage org.apache.commons.math.stat.descriptive;
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,16,mport junit.framework.Test;
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,17,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,20, Test cases for the {@link SynchronizedDescriptiveStatisticsTest} class.
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,21," @version $Revision: 566833 $ $Date: 2007-08-16 15:36:33 -0500 (Thu, 16 Aug"
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,22,          2007) $
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,24,ublic final class SynchronizedDescriptiveStatisticsTest extends DescriptiveStatisticsTest {
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,26,ublic SynchronizedDescriptiveStatisticsTest(String name) {
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,27,uper(name);
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,30,ublic static Test suite() {
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,31,estSuite suite = new TestSuite(SynchronizedDescriptiveStatisticsTest.class);
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,32,"uite.setName(""SynchronizedDescriptiveStatistics Tests"");"
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,33,eturn suite;
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,36,rotected DescriptiveStatistics createDescriptiveStatistics() {
False,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,37,eturn new SynchronizedDescriptiveStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,3,* contributor license agreements. See the NOTICE file distributed with this
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,4,* work for additional information regarding copyright ownership. The ASF
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,5,"* licenses this file to You under the Apache License, Version 2.0 (the"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,6,"* ""License""); you may not use this file except in compliance with the License."
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,7,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,9,"* or agreed to in writing, software distributed under the License is"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,10,"* distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,11,"* KIND, either express or implied. See the License for the specific language"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,12,* governing permissions and limitations under the License.
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,14,package org.apache.commons.math.stat.descriptive;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,16,import junit.framework.Test;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,17,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,20,* Test cases for the {@link SynchronizedDescriptiveStatisticsTest} class.
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,21,"* @version $Revision$ $Date: 2007-08-16 15:36:33 -0500 (Thu, 16 Aug"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,22,*          2007) $
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,24,public final class SynchronizedDescriptiveStatisticsTest extends DescriptiveStatisticsTest {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,26,public SynchronizedDescriptiveStatisticsTest(String name) {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,27,super(name);
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,30,public static Test suite() {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,31,TestSuite suite = new TestSuite(SynchronizedDescriptiveStatisticsTest.class);
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,32,"suite.setName(""SynchronizedDescriptiveStatistics Tests"");"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,33,return suite;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,36,protected DescriptiveStatistics createDescriptiveStatistics() {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,37,return new SynchronizedDescriptiveStatistics();
