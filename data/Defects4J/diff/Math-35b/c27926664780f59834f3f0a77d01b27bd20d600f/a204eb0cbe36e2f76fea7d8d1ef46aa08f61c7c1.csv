is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,22,import org.apache.commons.math.MathException;
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,23,import org.apache.commons.math.TestUtils;
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,141,* Adding this test to benchmark against tables published by NIST
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,142,* http://itl.nist.gov/div898/handbook/eda/section3/eda3672.htm
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,143,"* Have chosen tabulated results for degrees of freedom 2,10,30,100"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,144,* Have chosen problevels from 0.10 to 0.001
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,146,@Test
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,147,public void nistData() throws MathException{
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,148,"double[] prob = new double[]{ 0.10,0.05,0.025,0.01,0.005,0.001};"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,149,"double[] args2 = new double[]{1.886,2.920,4.303,6.965,9.925,22.327};"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,150,"double[] args10 = new double[]{1.372,1.812,2.228,2.764,3.169,4.143};"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,151,"double[] args30 = new double[]{1.310,1.697,2.042,2.457,2.750,3.385};"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,152,"double[] args100= new double[]{1.290,1.660,1.984,2.364,2.626,3.174};"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,153,"TestUtils.assertEquals(prob, makeNistResults(args2, 2), 1.0e-4);"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,154,"TestUtils.assertEquals(prob, makeNistResults(args10, 10), 1.0e-4);"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,155,"TestUtils.assertEquals(prob, makeNistResults(args30, 30), 1.0e-4);"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,156,"TestUtils.assertEquals(prob, makeNistResults(args100, 100), 1.0e-4);"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,157,return;
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,159,"private double[] makeNistResults(double[] args, int df) throws MathException{"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,160,TDistribution td =  new TDistributionImpl(df);
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,161,double[] res  = new double[ args.length ];
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,162,for( int i = 0 ; i < res.length ; i++){
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,163,res[i] = 1.0 - td.cumulativeProbability(args[i]);
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,165,return res;
