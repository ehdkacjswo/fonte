is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,232,"// Assert.assertEquals(z, Complex.INF); // See MATH-657"
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,233,"Assert.assertEquals(z, Complex.NaN);"
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,236,@Test
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,237,public void testDivideZeroZero() {
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,238,"Complex x = new Complex(0.0, 0.0);"
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,239,Complex z = x.divide(Complex.ZERO);
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,352,"omplex x = new Complex(1,1);"
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,360,"Complex x = new Complex(1, 1);"
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,358,Complex = new Complex(yDouble);
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,366,yComplex = new Complex(yDouble);
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,575,@Test
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,576,public void testAtanI() {
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,577,Assert.assertTrue(Complex.I.atan().isNaN());
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,570,ssert.assertTrue(Complex.I.atan().isNaN());
