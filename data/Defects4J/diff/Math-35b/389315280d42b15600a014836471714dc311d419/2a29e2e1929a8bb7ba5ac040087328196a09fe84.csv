is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,17,ackage org.apache.commons.math;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,19,mport org.apache.commons.math.exception.util.DummyLocalizable;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,20,mport org.apache.commons.math.exception.util.Localizable;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,21,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,22,mport org.apache.commons.math.linear.ArrayRealVector;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,25, Exception thrown when an error occurs evaluating a function.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,26, <p>
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,27, Maintains an <code>argument</code> property holding the input value that
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,28, caused the function evaluation to fail.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,30, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,31, @deprecated in 2.2 (to be removed in 3.0). Please use
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,32, {@link org.apache.commons.math.exception.FunctionEvaluationException} instead.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,34,Deprecated
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,35,ublic class FunctionEvaluationException extends MathException  {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,37,** Serializable version identifier. */
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,38,rivate static final long serialVersionUID = 1384427981840836868L;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,40,** Argument causing function evaluation failure */
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,41,rivate double[] argument;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,44, Construct an exception indicating the argument value
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,45, that caused the function evaluation to fail.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,47, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,49,ublic FunctionEvaluationException(double argument) {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,50,"uper(LocalizedFormats.EVALUATION_FAILED, argument);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,51,his.argument = new double[] { argument };
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,55, Construct an exception indicating the argument value
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,56, that caused the function evaluation to fail.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,58, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,59, @since 2.0
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,61,ublic FunctionEvaluationException(double[] argument) {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,62,"uper(LocalizedFormats.EVALUATION_FAILED, new ArrayRealVector(argument));"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,63,his.argument = argument.clone();
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,67, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,68, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,69, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,70, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,71, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,72, @since 1.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,74,"ublic FunctionEvaluationException(double argument,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,75,"tring pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,76,"his(argument, new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,80, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,81, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,82, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,83, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,84, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,85, @since 2.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,87,"ublic FunctionEvaluationException(double argument,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,88,"ocalizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,89,"uper(pattern, arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,90,his.argument = new double[] { argument };
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,94, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,95, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,96, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,97, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,98, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,99, @since 2.0
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,101,"ublic FunctionEvaluationException(double[] argument,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,102,"tring pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,103,"his(argument, new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,107, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,108, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,109, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,110, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,111, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,112, @since 2.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,114,"ublic FunctionEvaluationException(double[] argument,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,115,"ocalizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,116,"uper(pattern, arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,117,his.argument = argument.clone();
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,121, Constructs an exception with specified root cause.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,122, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,123, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,124, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,125, @since 1.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,127,"ublic FunctionEvaluationException(Throwable cause, double argument) {"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,128,uper(cause);
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,129,his.argument = new double[] { argument };
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,133, Constructs an exception with specified root cause.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,134, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,135, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,136, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,137, @since 2.0
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,139,"ublic FunctionEvaluationException(Throwable cause, double[] argument) {"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,140,uper(cause);
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,141,his.argument = argument.clone();
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,145, Constructs an exception with specified formatted detail message and root cause.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,146, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,147, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,148, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,149, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,150, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,151, @since 1.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,153,"ublic FunctionEvaluationException(Throwable cause,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,154,"ouble argument, String pattern,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,155,bject ... arguments) {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,156,"his(cause, argument, new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,160, Constructs an exception with specified formatted detail message and root cause.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,161, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,162, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,163, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,164, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,165, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,166, @since 2.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,168,"ublic FunctionEvaluationException(Throwable cause,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,169,"ouble argument, Localizable pattern,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,170,bject ... arguments) {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,171,"uper(cause, pattern, arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,172,his.argument = new double[] { argument };
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,176, Constructs an exception with specified formatted detail message and root cause.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,177, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,178, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,179, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,180, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,181, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,182, @since 2.0
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,184,"ublic FunctionEvaluationException(Throwable cause,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,185,"ouble[] argument, String pattern,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,186,bject ... arguments) {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,187,"his(cause, argument, new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,191, Constructs an exception with specified formatted detail message and root cause.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,192, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,193, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,194, @param argument  the failing function argument
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,195, @param pattern format specifier
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,196, @param arguments format arguments
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,197, @since 2.2
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,199,"ublic FunctionEvaluationException(Throwable cause,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,200,"ouble[] argument, Localizable pattern,"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,201,bject ... arguments) {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,202,"uper(cause, pattern, arguments);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,203,his.argument = argument.clone();
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,207, Returns the function argument that caused this exception.
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,209, @return  argument that caused function evaluation to fail
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,211,ublic double[] getArgument() {
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,212,eturn argument.clone();
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,18,ackage org.apache.commons.math;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,20,mport java.util.Locale;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,22,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,24,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,27, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,29,ublic class FunctionEvaluationExceptionTest extends TestCase {
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,31,ublic void testConstructor(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,32,unctionEvaluationException ex = new FunctionEvaluationException(0.0);
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,33,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,34,ssertNotNull(ex.getMessage());
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,35,"ssertTrue(ex.getMessage().indexOf(""0"") > 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,36,"ssertEquals(0.0, ex.getArgument()[0], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,39,ublic void testConstructorArray(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,40,unctionEvaluationException ex =
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,41,"ew FunctionEvaluationException(new double[] { 0, 1, 2 });"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,42,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,43,ssertNotNull(ex.getMessage());
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,44,"ssertTrue(ex.getMessage().indexOf(""0"") > 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,45,"ssertEquals(0.0, ex.getArgument()[0], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,46,"ssertEquals(1.0, ex.getArgument()[1], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,47,"ssertEquals(2.0, ex.getArgument()[2], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,50,ublic void testConstructorPatternArguments(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,51,ocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,52,bject[] arguments = { Double.valueOf(0.0) };
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,53,"unctionEvaluationException ex = new FunctionEvaluationException(0.0, pattern, arguments);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,54,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,55,"ssertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,56,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,57,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,58,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,60,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,61,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,64,ublic void testConstructorArrayPatternArguments(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,65,ocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,66,bject[] arguments = { Double.valueOf(0.0) };
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,67,unctionEvaluationException ex =
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,68,"ew FunctionEvaluationException(new double[] { 0, 1, 2 }, pattern, arguments);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,69,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,70,"ssertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,71,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,72,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,73,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,75,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,76,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,77,"ssertEquals(0.0, ex.getArgument()[0], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,78,"ssertEquals(1.0, ex.getArgument()[1], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,79,"ssertEquals(2.0, ex.getArgument()[2], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,82,ublic void testConstructorPatternArgumentsCause(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,83,ocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,84,bject[] arguments = { Double.valueOf(0.0) };
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,85,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,86,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,87,"unctionEvaluationException ex = new FunctionEvaluationException(cause, 0.0, pattern, arguments);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,88,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,89,"ssertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,90,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,91,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,92,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,94,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,95,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,98,ublic void testConstructorArrayPatternArgumentsCause(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,99,ocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,100,bject[] arguments = { Double.valueOf(0.0) };
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,101,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,102,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,103,unctionEvaluationException ex =
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,104,"ew FunctionEvaluationException(cause, new double[] { 0, 1, 2 }, pattern, arguments);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,105,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,106,"ssertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,107,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,108,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,109,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,111,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,112,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,113,"ssertEquals(0.0, ex.getArgument()[0], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,114,"ssertEquals(1.0, ex.getArgument()[1], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,115,"ssertEquals(2.0, ex.getArgument()[2], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,118,ublic void testConstructorArgumentCause(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,119,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,120,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,121,"unctionEvaluationException ex = new FunctionEvaluationException(cause, 0.0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,122,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,123,ssertTrue(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,126,ublic void testConstructorArrayArgumentCause(){
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,127,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,128,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,129,unctionEvaluationException ex =
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,130,"ew FunctionEvaluationException(cause, new double[] { 0, 1, 2 });"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,131,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,132,ssertTrue(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,133,"ssertEquals(0.0, ex.getArgument()[0], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,134,"ssertEquals(1.0, ex.getArgument()[1], 0);"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,135,"ssertEquals(2.0, ex.getArgument()[2], 0);"
