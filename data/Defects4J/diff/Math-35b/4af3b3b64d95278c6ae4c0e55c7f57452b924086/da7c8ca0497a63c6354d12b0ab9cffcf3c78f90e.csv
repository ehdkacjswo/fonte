is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,28,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,29,import org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,244,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,245,ublic BigReal divide(BigReal a) throws ArithmeticException {
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,246,"eturn new BigReal(d.divide(a.d, scale, roundingMode));"
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,247,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,249,* @throws MathArithmeticException if {@code a} is zero
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,251,public BigReal divide(BigReal a) {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,252,try {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,253,"return new BigReal(d.divide(a.d, scale, roundingMode));"
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,254,} catch (ArithmeticException e) {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,255,// Division by zero has occured
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,256,throw new MathArithmeticException(LocalizedFormats.ZERO_NOT_ALLOWED);
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,249,** {@inheritDoc}} */
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,250,ublic BigReal reciprocal(){
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,251,"eturn new BigReal(BigDecimal.ONE.divide(d, scale, roundingMode));"
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,261,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,263,* @throws MathArithmeticException if {@code this} is zero
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,265,public BigReal reciprocal() {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,266,try {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,267,"return new BigReal(BigDecimal.ONE.divide(d, scale, roundingMode));"
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,268,} catch (ArithmeticException e) {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,269,// Division by zero has occured
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,270,throw new MathArithmeticException(LocalizedFormats.ZERO_NOT_ALLOWED);
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,24,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,117,@Test(expected = MathArithmeticException.class)
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,118,public void testDivisionByZero() {
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,119,final BigReal a = BigReal.ONE;
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,120,final BigReal b = BigReal.ZERO;
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,121,a.divide(b);
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,136,@Test(expected = MathArithmeticException.class)
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,137,public void testReciprocalOfZero() {
True,src/test/java/org/apache/commons/math3/util/BigRealTest.java,src/test/java/org/apache/commons/math3/util/BigRealTest.java,138,BigReal.ZERO.reciprocal();
