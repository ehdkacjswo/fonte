is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,39,** serializable version identifier */
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,40,rivate static final long serialVersionUID = -1058849527738180243L;
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,39,/** Serializable version identifier. */
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,40,private static final long serialVersionUID = 4616482344304576900L;
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,46,* @deprecated as of 2.0 the integrand function is passed as an argument
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,47,"* to the {@link #integrate(UnivariateRealFunction, double, double)}method."
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,49,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,55,* Construct an integrator.
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,57,public RombergIntegrator() {
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,58,super(32);
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,61,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,62,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,63,"public double integrate(final double min, final double max)"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,64,"throws MaxIterationsExceededException, FunctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,65,"return integrate(f, min, max);"
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,52,"ublic double integrate(double min, double max) throws MaxIterationsExceededException,"
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,53,"unctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,69,"public double integrate(final UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,70,"final double min, final double max)"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,71,"throws MaxIterationsExceededException, FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,64,rapezoidIntegrator qtrap = new TrapezoidIntegrator(this.f);
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,65,"[0][0] = qtrap.stage(min, max, 0);"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,82,TrapezoidIntegrator qtrap = new TrapezoidIntegrator();
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,83,"t[0][0] = qtrap.stage(f, min, max, 0);"
False,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,68,"[i][0] = qtrap.stage(min, max, i);"
True,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,86,"t[i][0] = qtrap.stage(f, min, max, i);"
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,38,** serializable version identifier */
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,39,rivate static final long serialVersionUID = 3405465123320678216L;
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,38,/** Serializable version identifier. */
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,39,private static final long serialVersionUID = 2535890386567281329L;
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,45,* @deprecated as of 2.0 the integrand function is passed as an argument
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,46,"* to the {@link #integrate(UnivariateRealFunction, double, double)}method."
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,48,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,54,* Construct an integrator.
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,56,public SimpsonIntegrator() {
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,57,super(64);
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,60,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,61,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,62,"public double integrate(final double min, final double max)"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,63,"throws MaxIterationsExceededException, FunctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,64,"return integrate(f, min, max);"
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,51,"ublic double integrate(double min, double max) throws MaxIterationsExceededException,"
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,52,"unctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,68,"public double integrate(final UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,69,"final double min, final double max)"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,70,"throws MaxIterationsExceededException, FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,61,rapezoidIntegrator qtrap = new TrapezoidIntegrator(this.f);
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,79,TrapezoidIntegrator qtrap = new TrapezoidIntegrator();
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,63," = (4 * qtrap.stage(min, max, 1) - qtrap.stage(min, max, 0)) / 3.0;"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,81,"s = (4 * qtrap.stage(f, min, max, 1) - qtrap.stage(f, min, max, 0)) / 3.0;"
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,69,"ldt = qtrap.stage(min, max, 0);"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,87,"oldt = qtrap.stage(f, min, max, 0);"
False,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,71," = qtrap.stage(min, max, i);"
True,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,89,"t = qtrap.stage(f, min, max, i);"
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,37,** serializable version identifier */
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,38,rivate static final long serialVersionUID = 4978222553983172543L;
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,37,/** Serializable version identifier. */
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,38,private static final long serialVersionUID = 6963842845860399200L;
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,40,** intermediate result */
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,40,/** Intermediate result. */
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,47,* @deprecated as of 2.0 the integrand function is passed as an argument
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,48,"* to the {@link #integrate(UnivariateRealFunction, double, double)}method."
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,50,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,56,* Construct an integrator.
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,58,public TrapezoidIntegrator() {
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,59,super(64);
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,71,* @param f the integrand function
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,68,"ouble stage(double min, double max, int n) throws"
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,69,unctionEvaluationException {
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,79,"double stage(final UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,80,"final double min, final double max, final int n)"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,81,throws FunctionEvaluationException {
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,92,"ublic double integrate(double min, double max) throws MaxIterationsExceededException,"
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,93,"unctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,104,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,105,"public double integrate(final double min, final double max)"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,106,"throws MaxIterationsExceededException, FunctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,107,"return integrate(f, min, max);"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,110,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,111,"public double integrate(final UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,112,"final double min, final double max)"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,113,"throws MaxIterationsExceededException, FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,102,"ldt = stage(min, max, 0);"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,122,"oldt = stage(f, min, max, 0);"
False,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,104," = stage(min, max, i);"
True,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,124,"t = stage(f, min, max, i);"
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,22,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,74,"* @deprecated replaced by {@link #integrate(UnivariateRealFunction, double, double)}"
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,75,* since 2.0
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,77,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,82,* Integrate the function in the given interval.
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,84,* @param min the lower bound for the interval
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,85,* @param max the upper bound for the interval
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,86,* @return the value of integral
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,87,* @throws ConvergenceException if the maximum iteration count is exceeded
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,88,* or the integrator detects convergence problems otherwise
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,89,* @throws FunctionEvaluationException if an error occurs evaluating the
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,90,* function
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,91,* @throws IllegalArgumentException if min > max or the endpoints do not
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,92,* satisfy the requirements specified by the integrator
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,94,"double integrate(UnivariateRealFunction f, double min, double max) throws ConvergenceException,"
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java,95,"FunctionEvaluationException, IllegalArgumentException;"
False,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,47,** the integrand function */
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,47,/** The integrand functione.
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,48,* @deprecated as of 2.0 the integrand function is passed as an argument
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,49,"* to the {@link #integrate(UnivariateRealFunction, double, double)}method. */"
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,50,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,60,* @deprecated as of 2.0 the integrand function is passed as an argument
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,61,"* to the {@link #integrate(UnivariateRealFunction, double, double)}method."
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,63,@Deprecated
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,83,* Construct an integrator with given iteration count and accuracy.
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,85,* @param defaultMaximalIterationCount maximum number of iterations
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,86,* @throws IllegalArgumentException if f is null or the iteration
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,87,* limits are not valid
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,89,protected UnivariateRealIntegratorImpl(final int defaultMaximalIterationCount)
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,90,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,91,"super(defaultMaximalIterationCount, 1.0e-15);"
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,93,// parameters that are problem specific
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,94,setRelativeAccuracy(1.0e-6);
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,95,this.defaultMinimalIterationCount = 3;
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,96,this.minimalIterationCount = defaultMinimalIterationCount;
True,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,98,verifyIterationCount();
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,42,nivariateRealIntegrator integrator = new RombergIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,42,UnivariateRealIntegrator integrator = new RombergIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,47,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,47,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,52,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,52,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,61,nivariateRealIntegrator integrator = new RombergIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,61,UnivariateRealIntegrator integrator = new RombergIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,66,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,66,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,71,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,71,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,76,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,76,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,85,nivariateRealIntegrator integrator = new RombergIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,85,UnivariateRealIntegrator integrator = new RombergIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,89,"ntegrator.integrate(1, -1);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,89,"integrator.integrate(f, 1, -1);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,98,"ntegrator.integrate(-1, 1);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,98,"integrator.integrate(f, -1, 1);"
False,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,107,"ntegrator.integrate(-1, 1);"
True,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,107,"integrator.integrate(f, -1, 1);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,41,nivariateRealIntegrator integrator = new SimpsonIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,41,UnivariateRealIntegrator integrator = new SimpsonIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,46,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,46,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,51,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,51,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,60,nivariateRealIntegrator integrator = new SimpsonIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,60,UnivariateRealIntegrator integrator = new SimpsonIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,65,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,65,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,70,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,70,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,75,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,75,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,84,nivariateRealIntegrator integrator = new SimpsonIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,84,UnivariateRealIntegrator integrator = new SimpsonIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,88,"ntegrator.integrate(1, -1);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,88,"integrator.integrate(f, 1, -1);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,97,"ntegrator.integrate(-1, 1);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,97,"integrator.integrate(f, -1, 1);"
False,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,106,"ntegrator.integrate(-1, 1);"
True,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,106,"integrator.integrate(f, -1, 1);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,41,nivariateRealIntegrator integrator = new TrapezoidIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,41,UnivariateRealIntegrator integrator = new TrapezoidIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,46,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,46,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,51,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,51,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,60,nivariateRealIntegrator integrator = new TrapezoidIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,60,UnivariateRealIntegrator integrator = new TrapezoidIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,65,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,65,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,70,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,70,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,75,"esult = integrator.integrate(min, max);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,75,"result = integrator.integrate(f, min, max);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,84,nivariateRealIntegrator integrator = new TrapezoidIntegrator(f);
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,84,UnivariateRealIntegrator integrator = new TrapezoidIntegrator();
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,88,"ntegrator.integrate(1, -1);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,88,"integrator.integrate(f, 1, -1);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,97,"ntegrator.integrate(-1, 1);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,97,"integrator.integrate(f, -1, 1);"
False,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,106,"ntegrator.integrate(-1, 1);"
True,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,106,"integrator.integrate(f, -1, 1);"
