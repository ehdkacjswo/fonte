is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,175,"ON_SQUARE_MATRIX(""a {0}x{1} matrix was provided instead of a square matrix""),"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,175,"NON_SQUARE_MATRIX(""non square ({0}x{1}) matrix""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,191,"ON_POSITIVE_DEFINITE_LINEAR_OPERATOR(""non positive definite linear operator: x' A x <= 0 when x is {0}""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,192,"ON_SELF_ADJOINT_LINEAR_OPERATOR(""non self-adjoint linear operator: |x' A y - y' A x| > {0} when x is {1} and y is {2}""),"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,191,"NON_POSITIVE_DEFINITE_LINEAR_OPERATOR(""non positive definite linear operator""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,192,"NON_SELF_ADJOINT_LINEAR_OPERATOR(""non self-adjoint linear operator""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,193,"NON_SQUARE_LINEAR_OPERATOR(""non square ({0}x{1}) linear operator""), /* keep */"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,36,** The offending linear operator.*/
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,37,rivate final RealLinearOperator a;
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,38,** A reference to the offending vector. */
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,39,rivate final RealVector x;
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,42, Creates a new instance of this class.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,44, @param a Offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,45, @param x Offending vector.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,47,"ublic NonPositiveDefiniteLinearOperatorException(final RealLinearOperator a,"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,48,inal double[] x) {
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,49,"his(a, new ArrayRealVector(x, false));"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,53, Creates a new instance of this class.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,55, @param a Offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,56, @param x Offending vector.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,58,"ublic NonPositiveDefiniteLinearOperatorException(final RealLinearOperator a,"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,59,inal RealVector x) {
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,60,"uper(LocalizedFormats.NON_POSITIVE_DEFINITE_LINEAR_OPERATOR, x);"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,61,his.a = a;
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,62,his.x = x;
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,66, Returns a reference to the offending vector.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,67, If the exception was raised by a call to
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,68," {@link #NonPositiveDefiniteLinearOperatorException(RealLinearOperator,"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,69," double[])}, then a new {@link ArrayRealVector} holding a reference to"
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,70, the actual {@code double[]} is returned.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,72, @return the offending vector.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,74,ublic RealVector getOffendingVector() {
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,75,eturn x;
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,79, Returns a reference to the offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,81, @return the offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,83,ublic RealLinearOperator getOffendingLinearOperator() {
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,84,eturn a;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,36,/** Creates a new instance of this class. */
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,37,public NonPositiveDefiniteLinearOperatorException() {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java,38,super(LocalizedFormats.NON_POSITIVE_DEFINITE_LINEAR_OPERATOR);
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,39,"** The offending linear operator, A. */"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,40,rivate final RealLinearOperator a;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,41,** The threshold. */
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,42,rivate final double threshold;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,43,** A reference to the first offending vector*/
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,44,rivate final RealVector x;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,45,** A reference to the second offending vector*/
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,46,rivate final RealVector y;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,49, Creates a new instance of this class.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,51, @param a Offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,52, @param x First offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,53, @param y Second offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,54, @param threshold Threshold.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,56,"ublic NonSelfAdjointLinearOperatorException(final RealLinearOperator a,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,57,"inal double[] x,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,58,"inal double[] y,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,59,inal double threshold) {
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,60,"his(a,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,61,"ew ArrayRealVector(x, false),"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,62,"ew ArrayRealVector(y, false),"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,63,hreshold);
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,67, Creates a new instance of this class.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,69, @param a Offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,70, @param x First offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,71, @param y Second offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,72, @param threshold Threshold.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,74,"ublic NonSelfAdjointLinearOperatorException(final RealLinearOperator a,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,75,"inal RealVector x,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,76,"inal RealVector y,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,77,inal double threshold) {
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,78,"uper(LocalizedFormats.NON_SELF_ADJOINT_LINEAR_OPERATOR, threshold, x, y);"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,79,his.a = a;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,80,his.x = x;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,81,his.y = y;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,82,his.threshold = threshold;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,86, Returns a reference to the first offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,87, If the exception was raised by a call to
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,88," {@link #NonSelfAdjointLinearOperatorException(RealLinearOperator,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,89," double[], double[], double)}, then a new {@link ArrayRealVector}"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,90, holding a reference to the actual {@code double[]} is returned.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,92, @return the first offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,94,ublic RealVector getFirstOffendingVector() {
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,95,eturn x;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,99, Returns a reference to the offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,101, @return the offending linear operator.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,103,ublic RealLinearOperator getOffendingLinearOperator() {
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,104,eturn a;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,108, Returns a copy of the second offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,109, If the exception was raised by a call to
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,110," {@link #NonSelfAdjointLinearOperatorException(RealLinearOperator,"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,111," double[], double[], double)}, then a new {@link ArrayRealVector}"
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,112, holding a reference to the actual {@code double[]} is returned.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,114, @return the second offending vector.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,116,ublic RealVector getSecondOffendingVector() {
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,117,eturn y;
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,121, Returns the threshold.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,123, @return the threshold.
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,125,ublic double getThreshold() {
False,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,126,eturn threshold;
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,40,/** Creates a new instance of this class. */
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,41,public NonSelfAdjointLinearOperatorException() {
True,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java,42,super(LocalizedFormats.NON_SELF_ADJOINT_LINEAR_OPERATOR);
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,17,package org.apache.commons.math.linear;
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,19,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,20,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,23,* Exception to be thrown when a square linear operator is expected.
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,25,* @since 3.0
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,26,* @version $Id$
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,28,public class NonSquareLinearOperatorException extends DimensionMismatchException {
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,29,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,30,private static final long serialVersionUID = -660069396594485772L;
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,33,* Construct an exception from the mismatched dimensions.
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,35,* @param wrong Row dimension.
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,36,* @param expected Column dimension.
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,38,"public NonSquareLinearOperatorException(int wrong, int expected) {"
True,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java,39,"super(LocalizedFormats.NON_SQUARE_LINEAR_OPERATOR, wrong, expected);"
