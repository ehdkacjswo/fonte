is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,27, @version $Revision: 1.17 $ $Date: 2004/07/23 05:22:36 $
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,27,* @version $Revision: 1.18 $ $Date: 2004/07/25 16:29:24 $
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,165,* <p>
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,166,* Returns <code>-1</code> for p=0 and <code>Integer.MAX_VALUE</code> for
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,167,* p=1.
False,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,175,eturn 0;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,178,return -1;
False,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,23, @version $Revision: 1.15 $ $Date: 2004/06/23 16:26:15 $
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,23,* @version $Revision: 1.16 $ $Date: 2004/07/25 16:29:24 $
False,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,54," For this distribution, X, this method returns the largest x such that P(X &le; x) <= p."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,54,"* For this distribution, X, this method returns the largest x such that"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,55,* P(X &le; x) <= p.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,56,* <p>
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,57,* Note that this definition implies: <ul>
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,58,"* <li> If there is a minimum value, <code>m</code>, with postive"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,59,"* probablility under (the density of) X, then <code>m - 1</code> is"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,60,* returned by <code>inverseCumulativeProbability(0).</code>  If there is
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,61,"* no such value <code>m,  Integer.MIN_VALUE</code> is"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,62,* returned.</li>
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,63,"* <li> If there is a maximum value, <code>M</code>, such that"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,64,"* P(X &le; M) =1, then <code>M</code> is returned by"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,65,* <code>inverseCumulativeProbability(1).</code>
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,66,"* If there is no such value, <code>M, Integer.MAX_VALUE</code> is"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,67,* returned.</li></ul>
False,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,56, @return x.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,70,* @return the largest x such that P(X &le; x) <= p
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,73,* @throws IllegalArgumentException if p is not between 0 and 1 (inclusive)
False,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,23, @version $Revision: 1.14 $ $Date: 2004/07/23 05:22:36 $
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,23,* @version $Revision: 1.15 $ $Date: 2004/07/25 16:29:25 $
False,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,72,"eturn new int[] {0,1, 2, 3, 4, 4, 9, 9, 9, 8, 8, Integer.MAX_VALUE};"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,72,"return new int[] {-1, 1, 2, 3, 4, 4, 9, 9, 9, 8, 8, Integer.MAX_VALUE};"
False,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,24, @version $Revision: 1.11 $ $Date: 2004/05/11 02:12:11 $
True,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,24,* @version $Revision: 1.12 $ $Date: 2004/07/25 16:29:25 $
False,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,67,"eturn new double[] {0.001d, 0.010d, 0.025d, 0.050d, 0.100d, 0.999d,"
False,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,68,".990d, 0.975d, 0.950d, 0.900d};"
True,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,67,"return new double[] {0d, 0.001d, 0.010d, 0.025d, 0.050d, 0.100d, 0.999d,"
True,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,68,"0.990d, 0.975d, 0.950d, 0.900d, 1d};"
False,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,73,"eturn new int[] {-1, 0, 0, 0, 0, 4, 3, 3, 3, 3};"
True,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,73,"return new int[] {-1, -1, 0, 0, 0, 0, 4, 3, 3, 3, 3, 5};"
