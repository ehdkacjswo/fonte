is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,671,heckVectorDimensions(v);
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,673,"inal FieldMatrix<T> out = new Array2DRowFieldMatrix<T>(field, m, m);"
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,674,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,675,or (int j = 0; j < data.length; j++) {
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,672,final int n = v.getDimension();
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,673,"final FieldMatrix<T> out = new Array2DRowFieldMatrix<T>(field, m, n);"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,674,for (int i = 0; i < m; i++) {
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,675,for (int j = 0; j < n; j++) {
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,695,heckVectorDimensions(v.length);
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,697,"inal FieldMatrix<T> out = new Array2DRowFieldMatrix<T>(field, m, m);"
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,698,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,699,or (int j = 0; j < data.length; j++) {
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,696,final int n = v.length;
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,697,"final FieldMatrix<T> out = new Array2DRowFieldMatrix<T>(field, m, n);"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,698,for (int i = 0; i < m; i++) {
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,699,for (int j = 0; j < n; j++) {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,631,@Test
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,632,public void testOuterProduct() {
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,633,final ArrayFieldVector<Fraction> u
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,634,"= new ArrayFieldVector<Fraction>(FractionField.getInstance(),"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,635,"new Fraction[] {new Fraction(1),"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,636,"new Fraction(2),"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,637,new Fraction(-3)});
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,638,final ArrayFieldVector<Fraction> v
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,639,"= new ArrayFieldVector<Fraction>(FractionField.getInstance(),"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,640,"new Fraction[] {new Fraction(4),"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,641,new Fraction(-2)});
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,643,final FieldMatrix<Fraction> uv = u.outerProduct(v);
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,645,final double tol = Math.ulp(1d);
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,646,"Assert.assertEquals(new Fraction(4).doubleValue(), uv.getEntry(0, 0).doubleValue(), tol);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,647,"Assert.assertEquals(new Fraction(-2).doubleValue(), uv.getEntry(0, 1).doubleValue(), tol);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,648,"Assert.assertEquals(new Fraction(8).doubleValue(), uv.getEntry(1, 0).doubleValue(), tol);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,649,"Assert.assertEquals(new Fraction(-4).doubleValue(), uv.getEntry(1, 1).doubleValue(), tol);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,650,"Assert.assertEquals(new Fraction(-12).doubleValue(), uv.getEntry(2, 0).doubleValue(), tol);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,651,"Assert.assertEquals(new Fraction(6).doubleValue(), uv.getEntry(2, 1).doubleValue(), tol);"
