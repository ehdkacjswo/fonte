is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,19,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,20,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,21,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,24,* Adapter for class implementing the {@link UnivariateRealInterpolator}
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,25,* interface.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,26,* The data to be interpolated is assumed to be periodic. Thus values that are
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,27,* outside of the range can be passed to the interpolation function: They will
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,28,* be wrapped into the initial range before being passed to the class that
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,29,* actually computes the interpolation.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,31,* @version $Id$
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,33,public class UnivariateRealPeriodicInterpolator
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,34,implements UnivariateRealInterpolator {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,35,/** Default number of extension points of the samples array. */
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,36,public static final int DEFAULT_EXTEND = 5;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,37,/** Interpolator. */
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,38,private final UnivariateRealInterpolator interpolator;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,39,/** Period. */
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,40,private final double period;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,41,/** Number of extension points. */
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,42,private final int extend;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,45,* Builds an interpolator.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,47,* @param interpolator Interpolator.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,48,* @param period Period.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,49,* @param extend Number of points to be appended at the beginning and
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,50,* end of the sample arrays in order to avoid interpolation failure at
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,51,* the (periodic) boundaries of the orginal interval. The value is the
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,52,* number of sample points which the original {@code interpolator} needs
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,53,* on each side of the interpolated point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,55,"public UnivariateRealPeriodicInterpolator(UnivariateRealInterpolator interpolator,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,56,"double period,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,57,int extend) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,58,this.interpolator = interpolator;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,59,this.period = period;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,60,this.extend = extend;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,64,* Builds an interpolator.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,65,* Uses {@link #DEFAULT_EXTEND} as the number of extension points on each side
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,66,* of the original abscissae range.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,68,* @param interpolator Interpolator.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,69,* @param period Period.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,71,"public UnivariateRealPeriodicInterpolator(UnivariateRealInterpolator interpolator,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,72,double period) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,73,"this(interpolator, period, DEFAULT_EXTEND);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,77,* {@inheritDoc}
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,79,* @throws NumberIsTooSmallException if the number of extension points
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,80,* iss larger then the size of {@code xval}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,82,"public UnivariateRealFunction interpolate(double[] xval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,83,double[] yval) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,84,if (xval.length < extend) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,85,"throw new NumberIsTooSmallException(xval.length, extend, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,88,MathUtils.checkOrder(xval);
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,89,final double offset = xval[0];
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,91,final int len = xval.length + extend * 2;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,92,final double[] x = new double[len];
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,93,final double[] y = new double[len];
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,94,for (int i = 0; i < xval.length; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,95,final int index = i + extend;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,96,"x[index] = MathUtils.reduce(xval[i], period, offset);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,97,y[index] = yval[i];
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,100,// Wrap to enable interpolation at the boundaries.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,101,for (int i = 0; i < extend; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,102,int index = xval.length - extend + i;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,103,"x[i] = MathUtils.reduce(xval[index], period, offset) - period;"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,104,y[i] = yval[index];
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,106,index = len - extend + i;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,107,"x[index] = MathUtils.reduce(xval[i], period, offset) + period;"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,108,y[index] = yval[i];
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,111,"MathUtils.sortInPlace(x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,113,"final UnivariateRealFunction f = interpolator.interpolate(x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,114,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,115,public double value(final double x) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,116,"return f.value(MathUtils.reduce(x, period, offset));"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,19,import java.util.Random;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,21,import org.apache.commons.math.util.FastMath;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,23,import org.apache.commons.math.exception.NonMonotonousSequenceException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,25,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,30,* Test for {@link UnivariateRealPeriodicInterpolator}.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,32,public class UnivariateRealPeriodicInterpolatorTest {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,33,private final Random rng = new Random(1224465L);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,35,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,36,public void testSine() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,37,final int n = 30;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,38,final double[] xval = new double[n];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,39,final double[] yval = new double[n];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,40,final double period = 12.3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,41,final double offset = 45.67;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,43,double delta = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,44,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,45,delta += rng.nextDouble() * period / n;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,46,xval[i] = offset + delta;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,47,yval[i] = FastMath.sin(xval[i]);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,50,final UnivariateRealInterpolator inter = new LinearInterpolator();
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,51,"final UnivariateRealFunction f = inter.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,53,final UnivariateRealInterpolator interP
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,54,"= new UnivariateRealPeriodicInterpolator(new LinearInterpolator(),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,55,"period, 1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,56,"final UnivariateRealFunction fP = interP.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,58,// Comparing with original interpolation algorithm.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,59,final double xMin = xval[0];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,60,final double xMax = xval[n - 1];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,61,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,62,final double x = xMin + (xMax - xMin) * rng.nextDouble();
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,63,final double y = f.value(x);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,64,final double yP = fP.value(x);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,66,"Assert.assertEquals(""x="" + x, y, yP, Math.ulp(1d));"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,69,// Test interpolation outside the primary interval.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,70,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,71,final double xIn = offset + rng.nextDouble() * period;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,72,final double xOut = xIn + rng.nextInt(123456789) * period;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,73,final double yIn = fP.value(xIn);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,74,final double yOut = fP.value(xOut);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,76,"Assert.assertEquals(yIn, yOut, 1e-7);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,80,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,81,public void testLessThanOnePeriodCoverage() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,82,final int n = 30;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,83,final double[] xval = new double[n];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,84,final double[] yval = new double[n];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,85,final double period = 12.3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,86,final double offset = 45.67;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,88,double delta = period / 2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,89,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,90,delta += period / (2 * n) * rng.nextDouble();
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,91,xval[i] = offset + delta;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,92,yval[i] = FastMath.sin(xval[i]);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,95,final UnivariateRealInterpolator interP
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,96,"= new UnivariateRealPeriodicInterpolator(new LinearInterpolator(),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,97,"period, 1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,98,"final UnivariateRealFunction fP = interP.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,100,// Test interpolation outside the sample data interval.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,101,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,102,final double xIn = offset + rng.nextDouble() * period;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,103,final double xOut = xIn + rng.nextInt(123456789) * period;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,104,final double yIn = fP.value(xIn);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,105,final double yOut = fP.value(xOut);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,107,"Assert.assertEquals(yIn, yOut, 1e-7);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,111,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,112,public void testMoreThanOnePeriodCoverage() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,113,final int n = 30;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,114,final double[] xval = new double[n];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,115,final double[] yval = new double[n];
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,116,final double period = 12.3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,117,final double offset = 45.67;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,119,double delta = period / 2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,120,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,121,delta += 10 * period / n * rng.nextDouble();
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,122,xval[i] = offset + delta;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,123,yval[i] = FastMath.sin(xval[i]);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,126,final UnivariateRealInterpolator interP
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,127,"= new UnivariateRealPeriodicInterpolator(new LinearInterpolator(),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,128,"period, 1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,129,"final UnivariateRealFunction fP = interP.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,131,// Test interpolation outside the sample data interval.
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,132,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,133,final double xIn = offset + rng.nextDouble() * period;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,134,final double xOut = xIn + rng.nextInt(123456789) * period;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,135,final double yIn = fP.value(xIn);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,136,final double yOut = fP.value(xOut);
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,138,"Assert.assertEquals(yIn, yOut, 1e-6);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,142,@Test(expected=NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,143,public void testTooFewSamples() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,144,"final double[] xval = { 2, 3, 7 };"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,145,"final double[] yval = { 1, 6, 5 };"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,146,final double period = 10;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,148,final UnivariateRealInterpolator interpolator
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,149,"= new UnivariateRealPeriodicInterpolator(new LinearInterpolator(), period);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,150,"final UnivariateRealFunction f = interpolator.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,153,@Test(expected=NonMonotonousSequenceException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,154,public void testUnsortedSamples() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,155,"final double[] xval = { 2, 3, 7, 4, 6 };"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,156,"final double[] yval = { 1, 6, 5, -1, -2 };"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,157,final double period = 10;
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,159,final UnivariateRealInterpolator interpolator
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,160,"= new UnivariateRealPeriodicInterpolator(new LinearInterpolator(), period);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolatorTest.java,161,"final UnivariateRealFunction f = interpolator.interpolate(xval, yval);"
