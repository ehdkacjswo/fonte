is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,127,* Construct a DescriptiveStatistics instance with an infinite window
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,128,* and the initial data values in double[] initialDoubleArray.
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,129,"* If initialDoubleArray is null, then this constructor corresponds to"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,130,* DescriptiveStatistics()
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,132,* @param initialDoubleArray the initial double[].
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,134,public DescriptiveStatistics(double[] initialDoubleArray) {
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,135,if (initialDoubleArray != null) {
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,136,eDA = new ResizableDoubleArray(initialDoubleArray);
True,src/main/java/org/apache/commons/math/util/DoubleArray.java,src/main/java/org/apache/commons/math/util/DoubleArray.java,71,* Adds elements to the end of this expandable array
True,src/main/java/org/apache/commons/math/util/DoubleArray.java,src/main/java/org/apache/commons/math/util/DoubleArray.java,73,* @param values to be added to end of array
True,src/main/java/org/apache/commons/math/util/DoubleArray.java,src/main/java/org/apache/commons/math/util/DoubleArray.java,75,void addElements(double[] values);
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,164,* Create a ResizableArray from an existing double[] with the
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,165,* initial capacity and numElements corresponding to the size of
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,166,"* the supplied double[] array. If the supplied array is null, a"
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,167,* new empty array with the default initial capacity will be created.
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,168,* Other properties take default values:
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,169,* <ul>
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,170,* <li><code>initialCapacity = 16</code></li>
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,171,* <li><code>expansionMode = MULTIPLICATIVE_MODE</code></li>
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,172,* <li><code>expansionFactor = 2.5</code></li>
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,173,* <li><code>contractionFactor = 2.0</code></li>
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,174,* </ul>
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,176,public ResizableDoubleArray(double[] initialArray) {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,177,if (initialArray == null) {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,178,internalArray = new double[initialCapacity];
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,179,} else {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,180,internalArray = initialArray;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,181,initialCapacity = initialArray.length;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,182,numElements = initialArray.length;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,302,* Adds several element to the end of this expandable array.
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,304,* @param values to be added to end of array
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,306,public synchronized void addElements(double[] values) {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,307,final double[] tempArray = new double[numElements + values.length + 1];
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,308,"System.arraycopy(internalArray, startIndex, tempArray, 0, numElements);"
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,309,"System.arraycopy(values, 0, tempArray, numElements, values.length);"
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,310,internalArray = tempArray;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,311,startIndex = 0;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,312,numElements += values.length;
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,63,testDa = new ResizableDoubleArray((double[]) null);
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,64,"assertEquals(0, testDa.getNumElements());"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,66,"double[] initialArray = new double[] { 0, 1, 2 };"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,67,testDa = new ResizableDoubleArray(initialArray);
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,68,"assertEquals(3, testDa.getNumElements());"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,195,public void testAddElements() {
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,196,ResizableDoubleArray testDa = new ResizableDoubleArray();
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,198,// MULTIPLICATIVE_MODE
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,199,"testDa.addElements(new double[] {4, 5, 6});"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,200,"assertEquals(3, testDa.getNumElements(), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,201,"assertEquals(4, testDa.getElement(0), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,202,"assertEquals(5, testDa.getElement(1), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,203,"assertEquals(6, testDa.getElement(2), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,205,"testDa.addElements(new double[] {4, 5, 6});"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,206,"assertEquals(6, testDa.getNumElements());"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,208,"// ADDITIVE_MODE  (x's are occupied storage locations, 0's are open)"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,209,"testDa = new ResizableDoubleArray(2, 2.0f, 2.5f,"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,210,ResizableDoubleArray.ADDITIVE_MODE);
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,211,"assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,212,"testDa.addElements(new double[] { 1d }); // x,0"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,213,"testDa.addElements(new double[] { 2d }); // x,x"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,214,"testDa.addElements(new double[] { 3d }); // x,x,x,0 -- expanded"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,215,"assertEquals(1d, testDa.getElement(0), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,216,"assertEquals(2d, testDa.getElement(1), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,217,"assertEquals(3d, testDa.getElement(2), 0);"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,218,"assertEquals(4, testDa.getInternalLength());  // x,x,x,0"
True,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math/util/ResizableDoubleArrayTest.java,219,"assertEquals(3, testDa.getNumElements());"
