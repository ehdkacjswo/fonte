is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,671,// Equals in array
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,674,* <p>Whether the contents of two byte[] arrays are equal.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,676,* @param array1  first array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,677,* @param array2  second array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,678,* @return whether the two arrays are equal
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,680,"public static boolean equals(byte[] array1, byte[] array2) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,681,if (array1 == array2) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,682,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,684,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,685,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,687,if (array1.length != array2.length) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,688,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,691,for (int i=0; i<array1.length; i++) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,692,if (array1[i] != array2[i]) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,693,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,697,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,701,* <p>Whether the contents of two short[] arrays are equal.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,703,* @param array1  first array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,704,* @param array2  second array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,705,* @return whether the two arrays are equal
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,707,"public static boolean equals(short[] array1, short[] array2) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,708,if (array1 == array2) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,709,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,711,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,712,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,714,if (array1.length != array2.length) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,715,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,718,for (int i=0; i<array1.length; i++) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,719,if (array1[i] != array2[i]) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,720,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,724,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,728,* <p>Whether the contents of two int[] arrays are equal.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,730,* @param array1  first array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,731,* @param array2  second array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,732,* @return whether the two arrays are equal
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,734,"public static boolean equals(int[] array1, int[] array2) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,735,if (array1 == array2) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,736,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,738,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,739,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,741,if (array1.length != array2.length) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,742,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,745,for (int i=0; i<array1.length; i++) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,746,if (array1[i] != array2[i]) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,747,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,751,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,755,* <p>Whether the contents of two long[] arrays are equal.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,757,* @param array1  first array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,758,* @param array2  second array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,759,* @return whether the two arrays are equal
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,761,"public static boolean equals(long[] array1, long[] array2) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,762,if (array1 == array2) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,763,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,765,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,766,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,768,if (array1.length != array2.length) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,769,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,772,for (int i=0; i<array1.length; i++) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,773,if (array1[i] != array2[i]) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,774,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,778,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,782,* <p>Whether the contents of two float[] arrays are equal.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,784,* @param array1  first array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,785,* @param array2  second array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,786,* @return whether the two arrays are equal
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,788,"public static boolean equals(float[] array1, float[] array2) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,789,if (array1 == array2) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,790,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,792,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,793,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,795,if (array1.length != array2.length) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,796,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,799,for (int i=0; i<array1.length; i++) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,800,"if (compare(array1[i], array2[i]) != 0) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,801,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,805,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,809,* <p>Whether the contents of two double[] arrays are equal.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,811,* @param array1  first array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,812,* @param array2  second array to compare
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,813,* @return whether the two arrays are equal
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,815,"public static boolean equals(double[] array1, double[] array2) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,816,if (array1 == array2) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,817,return true;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,819,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,820,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,822,if (array1.length != array2.length) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,823,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,826,for (int i=0; i<array1.length; i++) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,827,"if (compare(array1[i], array2[i]) != 0) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,828,return false;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,832,return true;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,321,// equals tests
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,323,public void testEqualsByte() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,324,byte[] array1 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,325,byte[] array2 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,326,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,327,"assertEquals( true, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,329,"array1 = new byte[] { 50, 20 }; // array2 still null"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,330,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,331,"assertEquals( false, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,333,// test same reference equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,334,array2 = array1;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,335,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,337,// test object equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,338,"array2 = new byte[] { 50, 20 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,339,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,341,// test symmetry is not equivalent
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,342,"array2 = new byte[] { 20, 50 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,343,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,345,// test the whole length of rhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,346,"array2 = new byte[] { 50, 20, 10 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,347,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,349,// test whole length of lhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,350,array2 = new byte[] { 50 };
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,351,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,354,public void testEqualsShort() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,355,short[] array1 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,356,short[] array2 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,357,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,358,"assertEquals( true, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,360,"array1 = new short[] { 50, 20 }; // array2 still null"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,361,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,362,"assertEquals( false, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,364,// test same reference equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,365,array2 = array1;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,366,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,368,// test object equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,369,"array2 = new short[] { 50, 20 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,370,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,372,// test symmetry is not equivalent
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,373,"array2 = new short[] { 20, 50 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,374,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,376,// test the whole length of rhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,377,"array2 = new short[] { 50, 20, 10 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,378,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,380,// test whole length of lhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,381,array2 = new short[] { 50 };
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,382,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,385,public void testEqualsInt() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,386,int[] array1 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,387,int[] array2 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,388,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,389,"assertEquals( true, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,391,"array1 = new int[] { 50, 20 }; // array2 still null"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,392,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,393,"assertEquals( false, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,395,// test same reference equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,396,array2 = array1;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,397,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,399,// test object equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,400,"array2 = new int[] { 50, 20 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,401,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,403,// test symmetry is not equivalent
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,404,"array2 = new int[] { 20, 50 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,405,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,407,// test the whole length of rhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,408,"array2 = new int[] { 50, 20, 10 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,409,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,411,// test whole length of lhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,412,array2 = new int[] { 50 };
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,413,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,416,public void testEqualsLong() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,417,long[] array1 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,418,long[] array2 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,419,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,420,"assertEquals( true, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,422,"array1 = new long[] { 50L, 20L }; // array2 still null"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,423,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,424,"assertEquals( false, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,426,// test same reference equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,427,array2 = array1;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,428,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,430,// test object equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,431,"array2 = new long[] { 50L, 20L };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,432,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,434,// test symmetry is not equivalent
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,435,"array2 = new long[] { 20L, 50L };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,436,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,438,// test the whole length of rhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,439,"array2 = new long[] { 50L, 20L, 10L };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,440,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,442,// test whole length of lhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,443,array2 = new long[] { 50L };
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,444,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,447,public void testEqualsFloat() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,448,float[] array1 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,449,float[] array2 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,450,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,451,"assertEquals( true, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,453,"array1 = new float[] { 50.6f, 20.6f }; // array2 still null"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,454,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,455,"assertEquals( false, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,457,// test same reference equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,458,array2 = array1;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,459,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,461,// test object equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,462,"array2 = new float[] { 50.6f, 20.6f };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,463,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,465,// test symmetry is not equivalent
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,466,"array2 = new float[] { 20.6f, 50.6f };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,467,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,469,// test the whole length of rhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,470,"array2 = new float[] { 50.6f, 20.6f, 10.6f };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,471,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,473,// test whole length of lhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,474,array2 = new float[] { 50.6f };
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,475,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,478,public void testEqualsDouble() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,479,double[] array1 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,480,double[] array2 = null;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,481,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,482,"assertEquals( true, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,484,"array1 = new double[] { 50.6, 20.6 }; // array2 still null"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,485,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,486,"assertEquals( false, NumberUtils.equals(array2, array1) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,488,// test same reference equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,489,array2 = array1;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,490,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,492,// test object equivalence
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,493,"array2 = new double[] { 50.6, 20.6 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,494,"assertEquals( true, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,496,// test symmetry is not equivalent
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,497,"array2 = new double[] { 20.6, 50.6 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,498,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,500,// test the whole length of rhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,501,"array2 = new double[] { 50.6, 20.6, 10.6 };"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,502,"assertEquals( false, NumberUtils.equals(array1, array2) );"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,504,// test whole length of lhs is tested against
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,505,array2 = new double[] { 50.6 };
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,506,"assertEquals( false, NumberUtils.equals(array1, array2) );"
