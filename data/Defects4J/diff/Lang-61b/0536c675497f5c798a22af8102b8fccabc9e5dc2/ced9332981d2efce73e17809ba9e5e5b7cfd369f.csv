is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,63," @version $Id: DoubleRange.java,v 1.3 2003/07/14 22:25:04 bayard Exp $"
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,63,"* @version $Id: DoubleRange.java,v 1.4 2003/08/04 01:14:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,327,ublic boolean includesNumber(Number number) {
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,327,public boolean containsNumber(Number number) {
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,331,eturn includesDouble(number.doubleValue());
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,331,return containsDouble(number.doubleValue());
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,345,ublic boolean includesDouble(double value) {
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,345,public boolean containsDouble(double value) {
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,362,ublic boolean includesRange(Range range) {
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,362,public boolean containsRange(Range range) {
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,366,eturn includesDouble(range.getMinimumDouble()) &&
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,367,ncludesDouble(range.getMaximumDouble());
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,366,return containsDouble(range.getMinimumDouble())
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,367,&& containsDouble(range.getMaximumDouble());
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,383,eturn range.includesDouble(min) ||
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,384,ange.includesDouble(max) ||
False,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,385,ncludesDouble(range.getMinimumDouble());
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,383,return range.containsDouble(min)
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,384,|| range.containsDouble(max)
True,src/java/org/apache/commons/lang/math/DoubleRange.java,src/java/org/apache/commons/lang/math/DoubleRange.java,385,|| containsDouble(range.getMinimumDouble());
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,63," @version $Id: FloatRange.java,v 1.3 2003/07/14 22:25:04 bayard Exp $"
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,63,"* @version $Id: FloatRange.java,v 1.4 2003/08/04 01:14:01 scolebourne Exp $"
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,323,ublic boolean includesNumber(Number number) {
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,323,public boolean containsNumber(Number number) {
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,327,eturn includesFloat(number.floatValue());
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,327,return containsFloat(number.floatValue());
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,341,ublic boolean includesFloat(float value) {
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,341,public boolean containsFloat(float value) {
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,358,ublic boolean includesRange(Range range) {
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,358,public boolean containsRange(Range range) {
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,362,eturn includesFloat(range.getMinimumFloat()) &&
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,363,ncludesFloat(range.getMaximumFloat());
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,362,return containsFloat(range.getMinimumFloat()) &&
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,363,containsFloat(range.getMaximumFloat());
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,379,eturn range.includesFloat(min) ||
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,380,ange.includesFloat(max) ||
False,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,381,ncludesFloat(range.getMinimumFloat());
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,379,return range.containsFloat(min) ||
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,380,range.containsFloat(max) ||
True,src/java/org/apache/commons/lang/math/FloatRange.java,src/java/org/apache/commons/lang/math/FloatRange.java,381,containsFloat(range.getMinimumFloat());
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,63," @version $Id: IntRange.java,v 1.3 2003/07/14 22:25:05 bayard Exp $"
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,63,"* @version $Id: IntRange.java,v 1.4 2003/08/04 01:14:01 scolebourne Exp $"
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,298,ublic boolean includesNumber(Number number) {
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,298,public boolean containsNumber(Number number) {
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,302,eturn includesInteger(number.intValue());
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,302,return containsInteger(number.intValue());
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,316,ublic boolean includesInteger(int value) {
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,316,public boolean containsInteger(int value) {
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,333,ublic boolean includesRange(Range range) {
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,333,public boolean containsRange(Range range) {
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,337,eturn includesInteger(range.getMinimumInteger()) &&
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,338,ncludesInteger(range.getMaximumInteger());
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,337,return containsInteger(range.getMinimumInteger()) &&
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,338,containsInteger(range.getMaximumInteger());
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,354,eturn range.includesInteger(min) ||
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,355,ange.includesInteger(max) ||
False,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,356,ncludesInteger(range.getMinimumInteger());
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,354,return range.containsInteger(min) ||
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,355,range.containsInteger(max) ||
True,src/java/org/apache/commons/lang/math/IntRange.java,src/java/org/apache/commons/lang/math/IntRange.java,356,containsInteger(range.getMinimumInteger());
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,63," @version $Id: LongRange.java,v 1.3 2003/07/14 22:25:05 bayard Exp $"
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,63,"* @version $Id: LongRange.java,v 1.4 2003/08/04 01:14:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,305,ublic boolean includesNumber(Number number) {
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,305,public boolean containsNumber(Number number) {
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,309,eturn includesLong(number.longValue());
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,309,return containsLong(number.longValue());
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,323,ublic boolean includesLong(long value) {
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,323,public boolean containsLong(long value) {
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,340,ublic boolean includesRange(Range range) {
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,340,public boolean containsRange(Range range) {
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,344,eturn includesLong(range.getMinimumLong()) &&
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,345,ncludesLong(range.getMaximumLong());
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,344,return containsLong(range.getMinimumLong()) &&
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,345,containsLong(range.getMaximumLong());
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,361,eturn range.includesLong(min) ||
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,362,ange.includesLong(max) ||
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,363,ncludesLong(range.getMinimumLong());
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,361,return range.containsLong(min) ||
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,362,range.containsLong(max) ||
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,363,containsLong(range.getMinimumLong());
False,src/java/org/apache/commons/lang/math/NumberRange.java,src/java/org/apache/commons/lang/math/NumberRange.java,65," @version $Id: NumberRange.java,v 1.4 2003/07/14 22:25:05 bayard Exp $"
True,src/java/org/apache/commons/lang/math/NumberRange.java,src/java/org/apache/commons/lang/math/NumberRange.java,65,"* @version $Id: NumberRange.java,v 1.5 2003/08/04 01:14:01 scolebourne Exp $"
False,src/java/org/apache/commons/lang/math/NumberRange.java,src/java/org/apache/commons/lang/math/NumberRange.java,201,ublic boolean includesNumber(Number number) {
True,src/java/org/apache/commons/lang/math/NumberRange.java,src/java/org/apache/commons/lang/math/NumberRange.java,201,public boolean containsNumber(Number number) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,65," @version $Id: Range.java,v 1.3 2003/06/24 21:14:50 scolebourne Exp $"
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,65,"* @version $Id: Range.java,v 1.4 2003/08/04 01:14:01 scolebourne Exp $"
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,206,ublic abstract boolean includesNumber(Number number);
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,206,public abstract boolean containsNumber(Number number);
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,214, <p>This implementation forwards to the {@link #includesLong(long)} method.</p>
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,214,* <p>This implementation forwards to the {@link #containsLong(long)} method.</p>
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,220,ublic boolean includesLong(Number value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,220,public boolean containsLong(Number value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,224,eturn includesLong(value.longValue());
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,224,return containsLong(value.longValue());
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,238,ublic boolean includesLong(long value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,238,public boolean containsLong(long value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,248, <p>This implementation forwards to the {@link #includesInteger(int)} method.</p>
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,248,* <p>This implementation forwards to the {@link #containsInteger(int)} method.</p>
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,254,ublic boolean includesInteger(Number value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,254,public boolean containsInteger(Number value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,258,eturn includesInteger(value.intValue());
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,258,return containsInteger(value.intValue());
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,272,ublic boolean includesInteger(int value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,272,public boolean containsInteger(int value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,282, <p>This implementation forwards to the {@link #includesDouble(double)} method.</p>
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,282,* <p>This implementation forwards to the {@link #containsDouble(double)} method.</p>
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,288,ublic boolean includesDouble(Number value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,288,public boolean containsDouble(Number value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,292,eturn includesDouble(value.doubleValue());
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,292,return containsDouble(value.doubleValue());
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,306,ublic boolean includesDouble(double value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,306,public boolean containsDouble(double value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,318, <p>This implementation forwards to the {@link #includesFloat(float)} method.</p>
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,318,* <p>This implementation forwards to the {@link #containsFloat(float)} method.</p>
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,324,ublic boolean includesFloat(Number value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,324,public boolean containsFloat(Number value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,328,eturn includesFloat(value.floatValue());
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,328,return containsFloat(value.floatValue());
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,342,ublic boolean includesFloat(float value) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,342,public boolean containsFloat(float value) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,360, <p>This implementation uses the {@link #includesNumber(Number)} method.
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,360,* <p>This implementation uses the {@link #containsNumber(Number)} method.
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,368,ublic boolean includesRange(Range range) {
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,368,public boolean containsRange(Range range) {
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,372,eturn includesNumber(range.getMinimumNumber()) &&
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,373,ncludesNumber(range.getMaximumNumber());
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,372,return containsNumber(range.getMinimumNumber())
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,373,&& containsNumber(range.getMaximumNumber());
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,385, <p>This implementation uses the {@link #includesNumber(Number)} and
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,386, {@link #includesRange(Range)} methods.
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,385,* <p>This implementation uses the {@link #containsNumber(Number)} and
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,386,* {@link #containsRange(Range)} methods.
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,398,eturn range.includesNumber(getMinimumNumber()) ||
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,399,ange.includesNumber(getMaximumNumber()) ||
False,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,400,ncludesNumber(range.getMinimumNumber());
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,398,return range.containsNumber(getMinimumNumber())
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,399,|| range.containsNumber(getMaximumNumber())
True,src/java/org/apache/commons/lang/math/Range.java,src/java/org/apache/commons/lang/math/Range.java,400,|| containsNumber(range.getMinimumNumber());
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,62," @version $Id: AbstractRangeTest.java,v 1.2 2003/06/08 14:19:43 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,62,"* @version $Id: AbstractRangeTest.java,v 1.3 2003/08/04 01:14:02 scolebourne Exp $"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,156,ublic void testIncludesLong() {
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,157,"ssertEquals(false, tenToTwenty.includesLong(null));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,158,"ssertEquals(true, tenToTwenty.includesLong(nonComparable));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,160,"ssertEquals(false, tenToTwenty.includesLong(five));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,161,"ssertEquals(true, tenToTwenty.includesLong(ten));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,162,"ssertEquals(true, tenToTwenty.includesLong(fifteen));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,163,"ssertEquals(true, tenToTwenty.includesLong(twenty));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,164,"ssertEquals(false, tenToTwenty.includesLong(twentyFive));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,166,"ssertEquals(false, tenToTwenty.includesLong(long8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,167,"ssertEquals(true, tenToTwenty.includesLong(long10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,168,"ssertEquals(true, tenToTwenty.includesLong(long12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,169,"ssertEquals(true, tenToTwenty.includesLong(long20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,170,"ssertEquals(false, tenToTwenty.includesLong(long21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,172,"ssertEquals(false, tenToTwenty.includesLong(double8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,173,"ssertEquals(true, tenToTwenty.includesLong(double10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,174,"ssertEquals(true, tenToTwenty.includesLong(double12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,175,"ssertEquals(true, tenToTwenty.includesLong(double20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,176,"ssertEquals(false, tenToTwenty.includesLong(double21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,178,"ssertEquals(false, tenToTwenty.includesLong(float8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,179,"ssertEquals(true, tenToTwenty.includesLong(float10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,180,"ssertEquals(true, tenToTwenty.includesLong(float12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,181,"ssertEquals(true, tenToTwenty.includesLong(float20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,182,"ssertEquals(false, tenToTwenty.includesLong(float21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,184,"ssertEquals(false, tenToTwenty.includesLong(9L));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,185,"ssertEquals(true, tenToTwenty.includesLong(10L));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,186,"ssertEquals(true, tenToTwenty.includesLong(15L));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,187,"ssertEquals(true, tenToTwenty.includesLong(20L));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,188,"ssertEquals(false, tenToTwenty.includesLong(21L));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,156,public void testContainsLong() {
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,157,"assertEquals(false, tenToTwenty.containsLong(null));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,158,"assertEquals(true, tenToTwenty.containsLong(nonComparable));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,160,"assertEquals(false, tenToTwenty.containsLong(five));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,161,"assertEquals(true, tenToTwenty.containsLong(ten));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,162,"assertEquals(true, tenToTwenty.containsLong(fifteen));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,163,"assertEquals(true, tenToTwenty.containsLong(twenty));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,164,"assertEquals(false, tenToTwenty.containsLong(twentyFive));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,166,"assertEquals(false, tenToTwenty.containsLong(long8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,167,"assertEquals(true, tenToTwenty.containsLong(long10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,168,"assertEquals(true, tenToTwenty.containsLong(long12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,169,"assertEquals(true, tenToTwenty.containsLong(long20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,170,"assertEquals(false, tenToTwenty.containsLong(long21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,172,"assertEquals(false, tenToTwenty.containsLong(double8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,173,"assertEquals(true, tenToTwenty.containsLong(double10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,174,"assertEquals(true, tenToTwenty.containsLong(double12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,175,"assertEquals(true, tenToTwenty.containsLong(double20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,176,"assertEquals(false, tenToTwenty.containsLong(double21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,178,"assertEquals(false, tenToTwenty.containsLong(float8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,179,"assertEquals(true, tenToTwenty.containsLong(float10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,180,"assertEquals(true, tenToTwenty.containsLong(float12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,181,"assertEquals(true, tenToTwenty.containsLong(float20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,182,"assertEquals(false, tenToTwenty.containsLong(float21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,184,"assertEquals(false, tenToTwenty.containsLong(9L));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,185,"assertEquals(true, tenToTwenty.containsLong(10L));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,186,"assertEquals(true, tenToTwenty.containsLong(15L));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,187,"assertEquals(true, tenToTwenty.containsLong(20L));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,188,"assertEquals(false, tenToTwenty.containsLong(21L));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,191,ublic void testIncludesInteger() {
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,192,"ssertEquals(false, tenToTwenty.includesInteger(null));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,193,"ssertEquals(true, tenToTwenty.includesInteger(nonComparable));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,195,"ssertEquals(false, tenToTwenty.includesInteger(five));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,196,"ssertEquals(true, tenToTwenty.includesInteger(ten));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,197,"ssertEquals(true, tenToTwenty.includesInteger(fifteen));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,198,"ssertEquals(true, tenToTwenty.includesInteger(twenty));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,199,"ssertEquals(false, tenToTwenty.includesInteger(twentyFive));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,201,"ssertEquals(false, tenToTwenty.includesInteger(long8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,202,"ssertEquals(true, tenToTwenty.includesInteger(long10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,203,"ssertEquals(true, tenToTwenty.includesInteger(long12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,204,"ssertEquals(true, tenToTwenty.includesInteger(long20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,205,"ssertEquals(false, tenToTwenty.includesInteger(long21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,207,"ssertEquals(false, tenToTwenty.includesInteger(double8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,208,"ssertEquals(true, tenToTwenty.includesInteger(double10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,209,"ssertEquals(true, tenToTwenty.includesInteger(double12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,210,"ssertEquals(true, tenToTwenty.includesInteger(double20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,211,"ssertEquals(false, tenToTwenty.includesInteger(double21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,213,"ssertEquals(false, tenToTwenty.includesInteger(float8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,214,"ssertEquals(true, tenToTwenty.includesInteger(float10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,215,"ssertEquals(true, tenToTwenty.includesInteger(float12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,216,"ssertEquals(true, tenToTwenty.includesInteger(float20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,217,"ssertEquals(false, tenToTwenty.includesInteger(float21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,219,"ssertEquals(false, tenToTwenty.includesInteger(9));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,220,"ssertEquals(true, tenToTwenty.includesInteger(10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,221,"ssertEquals(true, tenToTwenty.includesInteger(15));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,222,"ssertEquals(true, tenToTwenty.includesInteger(20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,223,"ssertEquals(false, tenToTwenty.includesInteger(21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,191,public void testContainsInteger() {
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,192,"assertEquals(false, tenToTwenty.containsInteger(null));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,193,"assertEquals(true, tenToTwenty.containsInteger(nonComparable));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,195,"assertEquals(false, tenToTwenty.containsInteger(five));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,196,"assertEquals(true, tenToTwenty.containsInteger(ten));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,197,"assertEquals(true, tenToTwenty.containsInteger(fifteen));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,198,"assertEquals(true, tenToTwenty.containsInteger(twenty));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,199,"assertEquals(false, tenToTwenty.containsInteger(twentyFive));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,201,"assertEquals(false, tenToTwenty.containsInteger(long8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,202,"assertEquals(true, tenToTwenty.containsInteger(long10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,203,"assertEquals(true, tenToTwenty.containsInteger(long12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,204,"assertEquals(true, tenToTwenty.containsInteger(long20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,205,"assertEquals(false, tenToTwenty.containsInteger(long21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,207,"assertEquals(false, tenToTwenty.containsInteger(double8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,208,"assertEquals(true, tenToTwenty.containsInteger(double10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,209,"assertEquals(true, tenToTwenty.containsInteger(double12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,210,"assertEquals(true, tenToTwenty.containsInteger(double20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,211,"assertEquals(false, tenToTwenty.containsInteger(double21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,213,"assertEquals(false, tenToTwenty.containsInteger(float8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,214,"assertEquals(true, tenToTwenty.containsInteger(float10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,215,"assertEquals(true, tenToTwenty.containsInteger(float12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,216,"assertEquals(true, tenToTwenty.containsInteger(float20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,217,"assertEquals(false, tenToTwenty.containsInteger(float21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,219,"assertEquals(false, tenToTwenty.containsInteger(9));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,220,"assertEquals(true, tenToTwenty.containsInteger(10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,221,"assertEquals(true, tenToTwenty.containsInteger(15));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,222,"assertEquals(true, tenToTwenty.containsInteger(20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,223,"assertEquals(false, tenToTwenty.containsInteger(21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,226,ublic void testIncludesDouble() {
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,227,"ssertEquals(false, tenToTwenty.includesDouble(null));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,228,"ssertEquals(true, tenToTwenty.includesDouble(nonComparable));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,230,"ssertEquals(false, tenToTwenty.includesDouble(five));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,231,"ssertEquals(true, tenToTwenty.includesDouble(ten));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,232,"ssertEquals(true, tenToTwenty.includesDouble(fifteen));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,233,"ssertEquals(true, tenToTwenty.includesDouble(twenty));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,234,"ssertEquals(false, tenToTwenty.includesDouble(twentyFive));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,236,"ssertEquals(false, tenToTwenty.includesDouble(long8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,237,"ssertEquals(true, tenToTwenty.includesDouble(long10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,238,"ssertEquals(true, tenToTwenty.includesDouble(long12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,239,"ssertEquals(true, tenToTwenty.includesDouble(long20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,240,"ssertEquals(false, tenToTwenty.includesDouble(long21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,242,"ssertEquals(false, tenToTwenty.includesDouble(double8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,243,"ssertEquals(true, tenToTwenty.includesDouble(double10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,244,"ssertEquals(true, tenToTwenty.includesDouble(double12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,245,"ssertEquals(true, tenToTwenty.includesDouble(double20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,246,"ssertEquals(false, tenToTwenty.includesDouble(double21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,248,"ssertEquals(false, tenToTwenty.includesDouble(float8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,249,"ssertEquals(true, tenToTwenty.includesDouble(float10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,250,"ssertEquals(true, tenToTwenty.includesDouble(float12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,251,"ssertEquals(true, tenToTwenty.includesDouble(float20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,252,"ssertEquals(false, tenToTwenty.includesDouble(float21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,254,"ssertEquals(false, tenToTwenty.includesDouble(9d));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,255,"ssertEquals(true, tenToTwenty.includesDouble(10d));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,256,"ssertEquals(true, tenToTwenty.includesDouble(15d));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,257,"ssertEquals(true, tenToTwenty.includesDouble(20d));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,258,"ssertEquals(false, tenToTwenty.includesDouble(21d));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,226,public void testContainsDouble() {
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,227,"assertEquals(false, tenToTwenty.containsDouble(null));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,228,"assertEquals(true, tenToTwenty.containsDouble(nonComparable));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,230,"assertEquals(false, tenToTwenty.containsDouble(five));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,231,"assertEquals(true, tenToTwenty.containsDouble(ten));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,232,"assertEquals(true, tenToTwenty.containsDouble(fifteen));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,233,"assertEquals(true, tenToTwenty.containsDouble(twenty));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,234,"assertEquals(false, tenToTwenty.containsDouble(twentyFive));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,236,"assertEquals(false, tenToTwenty.containsDouble(long8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,237,"assertEquals(true, tenToTwenty.containsDouble(long10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,238,"assertEquals(true, tenToTwenty.containsDouble(long12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,239,"assertEquals(true, tenToTwenty.containsDouble(long20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,240,"assertEquals(false, tenToTwenty.containsDouble(long21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,242,"assertEquals(false, tenToTwenty.containsDouble(double8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,243,"assertEquals(true, tenToTwenty.containsDouble(double10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,244,"assertEquals(true, tenToTwenty.containsDouble(double12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,245,"assertEquals(true, tenToTwenty.containsDouble(double20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,246,"assertEquals(false, tenToTwenty.containsDouble(double21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,248,"assertEquals(false, tenToTwenty.containsDouble(float8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,249,"assertEquals(true, tenToTwenty.containsDouble(float10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,250,"assertEquals(true, tenToTwenty.containsDouble(float12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,251,"assertEquals(true, tenToTwenty.containsDouble(float20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,252,"assertEquals(false, tenToTwenty.containsDouble(float21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,254,"assertEquals(false, tenToTwenty.containsDouble(9d));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,255,"assertEquals(true, tenToTwenty.containsDouble(10d));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,256,"assertEquals(true, tenToTwenty.containsDouble(15d));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,257,"assertEquals(true, tenToTwenty.containsDouble(20d));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,258,"assertEquals(false, tenToTwenty.containsDouble(21d));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,261,ublic void testIncludesFloat() {
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,262,"ssertEquals(false, tenToTwenty.includesFloat(null));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,263,"ssertEquals(true, tenToTwenty.includesFloat(nonComparable));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,265,"ssertEquals(false, tenToTwenty.includesFloat(five));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,266,"ssertEquals(true, tenToTwenty.includesFloat(ten));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,267,"ssertEquals(true, tenToTwenty.includesFloat(fifteen));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,268,"ssertEquals(true, tenToTwenty.includesFloat(twenty));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,269,"ssertEquals(false, tenToTwenty.includesFloat(twentyFive));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,271,"ssertEquals(false, tenToTwenty.includesFloat(long8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,272,"ssertEquals(true, tenToTwenty.includesFloat(long10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,273,"ssertEquals(true, tenToTwenty.includesFloat(long12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,274,"ssertEquals(true, tenToTwenty.includesFloat(long20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,275,"ssertEquals(false, tenToTwenty.includesFloat(long21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,277,"ssertEquals(false, tenToTwenty.includesFloat(double8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,278,"ssertEquals(true, tenToTwenty.includesFloat(double10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,279,"ssertEquals(true, tenToTwenty.includesFloat(double12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,280,"ssertEquals(true, tenToTwenty.includesFloat(double20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,281,"ssertEquals(false, tenToTwenty.includesFloat(double21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,283,"ssertEquals(false, tenToTwenty.includesFloat(float8));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,284,"ssertEquals(true, tenToTwenty.includesFloat(float10));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,285,"ssertEquals(true, tenToTwenty.includesFloat(float12));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,286,"ssertEquals(true, tenToTwenty.includesFloat(float20));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,287,"ssertEquals(false, tenToTwenty.includesFloat(float21));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,289,"ssertEquals(false, tenToTwenty.includesFloat(9f));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,290,"ssertEquals(true, tenToTwenty.includesFloat(10f));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,291,"ssertEquals(true, tenToTwenty.includesFloat(15f));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,292,"ssertEquals(true, tenToTwenty.includesFloat(20f));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,293,"ssertEquals(false, tenToTwenty.includesFloat(21f));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,261,public void testContainsFloat() {
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,262,"assertEquals(false, tenToTwenty.containsFloat(null));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,263,"assertEquals(true, tenToTwenty.containsFloat(nonComparable));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,265,"assertEquals(false, tenToTwenty.containsFloat(five));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,266,"assertEquals(true, tenToTwenty.containsFloat(ten));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,267,"assertEquals(true, tenToTwenty.containsFloat(fifteen));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,268,"assertEquals(true, tenToTwenty.containsFloat(twenty));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,269,"assertEquals(false, tenToTwenty.containsFloat(twentyFive));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,271,"assertEquals(false, tenToTwenty.containsFloat(long8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,272,"assertEquals(true, tenToTwenty.containsFloat(long10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,273,"assertEquals(true, tenToTwenty.containsFloat(long12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,274,"assertEquals(true, tenToTwenty.containsFloat(long20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,275,"assertEquals(false, tenToTwenty.containsFloat(long21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,277,"assertEquals(false, tenToTwenty.containsFloat(double8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,278,"assertEquals(true, tenToTwenty.containsFloat(double10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,279,"assertEquals(true, tenToTwenty.containsFloat(double12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,280,"assertEquals(true, tenToTwenty.containsFloat(double20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,281,"assertEquals(false, tenToTwenty.containsFloat(double21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,283,"assertEquals(false, tenToTwenty.containsFloat(float8));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,284,"assertEquals(true, tenToTwenty.containsFloat(float10));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,285,"assertEquals(true, tenToTwenty.containsFloat(float12));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,286,"assertEquals(true, tenToTwenty.containsFloat(float20));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,287,"assertEquals(false, tenToTwenty.containsFloat(float21));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,289,"assertEquals(false, tenToTwenty.containsFloat(9f));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,290,"assertEquals(true, tenToTwenty.containsFloat(10f));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,291,"assertEquals(true, tenToTwenty.containsFloat(15f));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,292,"assertEquals(true, tenToTwenty.containsFloat(20f));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,293,"assertEquals(false, tenToTwenty.containsFloat(21f));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,298,ublic void testIncludesRange() {
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,299,"ssertEquals(false, tenToTwenty.includesRange(createRange(five, five)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,300,"ssertEquals(false, tenToTwenty.includesRange(createRange(five, ten)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,301,"ssertEquals(false, tenToTwenty.includesRange(createRange(five, twelve)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,302,"ssertEquals(false, tenToTwenty.includesRange(createRange(five, fifteen)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,303,"ssertEquals(false, tenToTwenty.includesRange(createRange(five, twenty)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,304,"ssertEquals(false, tenToTwenty.includesRange(createRange(five, twentyFive)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,306,"ssertEquals(true, tenToTwenty.includesRange(createRange(ten, ten)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,307,"ssertEquals(true, tenToTwenty.includesRange(createRange(ten, twelve)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,308,"ssertEquals(true, tenToTwenty.includesRange(createRange(ten, fifteen)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,309,"ssertEquals(true, tenToTwenty.includesRange(createRange(ten, twenty)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,310,"ssertEquals(false, tenToTwenty.includesRange(createRange(ten, twentyFive)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,312,"ssertEquals(true, tenToTwenty.includesRange(createRange(twelve, twelve)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,313,"ssertEquals(true, tenToTwenty.includesRange(createRange(twelve, fifteen)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,314,"ssertEquals(true, tenToTwenty.includesRange(createRange(twelve, twenty)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,315,"ssertEquals(false, tenToTwenty.includesRange(createRange(twelve, twentyFive)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,317,"ssertEquals(true, tenToTwenty.includesRange(createRange(fifteen, fifteen)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,318,"ssertEquals(true, tenToTwenty.includesRange(createRange(fifteen, twenty)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,319,"ssertEquals(false, tenToTwenty.includesRange(createRange(fifteen, twentyFive)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,321,"ssertEquals(true, tenToTwenty.includesRange(createRange(twenty, twenty)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,322,"ssertEquals(false, tenToTwenty.includesRange(createRange(twenty, twentyFive)));"
False,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,324,"ssertEquals(false, tenToTwenty.includesRange(createRange(twentyFive, twentyFive)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,298,public void testContainsRange() {
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,299,"assertEquals(false, tenToTwenty.containsRange(createRange(five, five)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,300,"assertEquals(false, tenToTwenty.containsRange(createRange(five, ten)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,301,"assertEquals(false, tenToTwenty.containsRange(createRange(five, twelve)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,302,"assertEquals(false, tenToTwenty.containsRange(createRange(five, fifteen)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,303,"assertEquals(false, tenToTwenty.containsRange(createRange(five, twenty)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,304,"assertEquals(false, tenToTwenty.containsRange(createRange(five, twentyFive)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,306,"assertEquals(true, tenToTwenty.containsRange(createRange(ten, ten)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,307,"assertEquals(true, tenToTwenty.containsRange(createRange(ten, twelve)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,308,"assertEquals(true, tenToTwenty.containsRange(createRange(ten, fifteen)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,309,"assertEquals(true, tenToTwenty.containsRange(createRange(ten, twenty)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,310,"assertEquals(false, tenToTwenty.containsRange(createRange(ten, twentyFive)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,312,"assertEquals(true, tenToTwenty.containsRange(createRange(twelve, twelve)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,313,"assertEquals(true, tenToTwenty.containsRange(createRange(twelve, fifteen)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,314,"assertEquals(true, tenToTwenty.containsRange(createRange(twelve, twenty)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,315,"assertEquals(false, tenToTwenty.containsRange(createRange(twelve, twentyFive)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,317,"assertEquals(true, tenToTwenty.containsRange(createRange(fifteen, fifteen)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,318,"assertEquals(true, tenToTwenty.containsRange(createRange(fifteen, twenty)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,319,"assertEquals(false, tenToTwenty.containsRange(createRange(fifteen, twentyFive)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,321,"assertEquals(true, tenToTwenty.containsRange(createRange(twenty, twenty)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,322,"assertEquals(false, tenToTwenty.containsRange(createRange(twenty, twentyFive)));"
True,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,src/test/org/apache/commons/lang/math/AbstractRangeTest.java,324,"assertEquals(false, tenToTwenty.containsRange(createRange(twentyFive, twentyFive)));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,63," @version $Id: DoubleRangeTest.java,v 1.2 2003/06/08 14:19:43 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,63,"* @version $Id: DoubleRangeTest.java,v 1.3 2003/08/04 01:14:02 scolebourne Exp $"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,170,ublic void testIncludesNumber() {
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,171,"ssertEquals(false, tenToTwenty.includesNumber(null));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,172,"ssertEquals(true, tenToTwenty.includesNumber(nonComparable));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,170,public void testContainsNumber() {
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,171,"assertEquals(false, tenToTwenty.containsNumber(null));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,172,"assertEquals(true, tenToTwenty.containsNumber(nonComparable));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,174,"ssertEquals(false, tenToTwenty.includesNumber(five));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,175,"ssertEquals(true, tenToTwenty.includesNumber(ten));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,176,"ssertEquals(true, tenToTwenty.includesNumber(fifteen));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,177,"ssertEquals(true, tenToTwenty.includesNumber(twenty));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,178,"ssertEquals(false, tenToTwenty.includesNumber(twentyFive));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,174,"assertEquals(false, tenToTwenty.containsNumber(five));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,175,"assertEquals(true, tenToTwenty.containsNumber(ten));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,176,"assertEquals(true, tenToTwenty.containsNumber(fifteen));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,177,"assertEquals(true, tenToTwenty.containsNumber(twenty));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,178,"assertEquals(false, tenToTwenty.containsNumber(twentyFive));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,180,"ssertEquals(false, tenToTwenty.includesNumber(long8));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,181,"ssertEquals(true, tenToTwenty.includesNumber(long10));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,182,"ssertEquals(true, tenToTwenty.includesNumber(long12));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,183,"ssertEquals(true, tenToTwenty.includesNumber(long20));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,184,"ssertEquals(false, tenToTwenty.includesNumber(long21));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,180,"assertEquals(false, tenToTwenty.containsNumber(long8));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,181,"assertEquals(true, tenToTwenty.containsNumber(long10));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,182,"assertEquals(true, tenToTwenty.containsNumber(long12));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,183,"assertEquals(true, tenToTwenty.containsNumber(long20));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,184,"assertEquals(false, tenToTwenty.containsNumber(long21));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,186,"ssertEquals(false, tenToTwenty.includesNumber(double8));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,187,"ssertEquals(true, tenToTwenty.includesNumber(double10));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,188,"ssertEquals(true, tenToTwenty.includesNumber(double12));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,189,"ssertEquals(true, tenToTwenty.includesNumber(double20));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,190,"ssertEquals(false, tenToTwenty.includesNumber(double21));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,186,"assertEquals(false, tenToTwenty.containsNumber(double8));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,187,"assertEquals(true, tenToTwenty.containsNumber(double10));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,188,"assertEquals(true, tenToTwenty.containsNumber(double12));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,189,"assertEquals(true, tenToTwenty.containsNumber(double20));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,190,"assertEquals(false, tenToTwenty.containsNumber(double21));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,192,"ssertEquals(false, tenToTwenty.includesNumber(float8));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,193,"ssertEquals(true, tenToTwenty.includesNumber(float10));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,194,"ssertEquals(true, tenToTwenty.includesNumber(float12));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,195,"ssertEquals(true, tenToTwenty.includesNumber(float20));"
False,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,196,"ssertEquals(false, tenToTwenty.includesNumber(float21));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,192,"assertEquals(false, tenToTwenty.containsNumber(float8));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,193,"assertEquals(true, tenToTwenty.containsNumber(float10));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,194,"assertEquals(true, tenToTwenty.containsNumber(float12));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,195,"assertEquals(true, tenToTwenty.containsNumber(float20));"
True,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,src/test/org/apache/commons/lang/math/DoubleRangeTest.java,196,"assertEquals(false, tenToTwenty.containsNumber(float21));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,63," @version $Id: FloatRangeTest.java,v 1.2 2003/06/08 14:19:43 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,63,"* @version $Id: FloatRangeTest.java,v 1.3 2003/08/04 01:14:02 scolebourne Exp $"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,170,ublic void testIncludesNumber() {
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,171,"ssertEquals(false, tenToTwenty.includesNumber(null));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,172,"ssertEquals(true, tenToTwenty.includesNumber(nonComparable));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,170,public void testContainsNumber() {
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,171,"assertEquals(false, tenToTwenty.containsNumber(null));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,172,"assertEquals(true, tenToTwenty.containsNumber(nonComparable));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,174,"ssertEquals(false, tenToTwenty.includesNumber(five));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,175,"ssertEquals(true, tenToTwenty.includesNumber(ten));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,176,"ssertEquals(true, tenToTwenty.includesNumber(fifteen));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,177,"ssertEquals(true, tenToTwenty.includesNumber(twenty));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,178,"ssertEquals(false, tenToTwenty.includesNumber(twentyFive));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,174,"assertEquals(false, tenToTwenty.containsNumber(five));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,175,"assertEquals(true, tenToTwenty.containsNumber(ten));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,176,"assertEquals(true, tenToTwenty.containsNumber(fifteen));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,177,"assertEquals(true, tenToTwenty.containsNumber(twenty));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,178,"assertEquals(false, tenToTwenty.containsNumber(twentyFive));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,180,"ssertEquals(false, tenToTwenty.includesNumber(long8));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,181,"ssertEquals(true, tenToTwenty.includesNumber(long10));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,182,"ssertEquals(true, tenToTwenty.includesNumber(long12));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,183,"ssertEquals(true, tenToTwenty.includesNumber(long20));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,184,"ssertEquals(false, tenToTwenty.includesNumber(long21));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,180,"assertEquals(false, tenToTwenty.containsNumber(long8));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,181,"assertEquals(true, tenToTwenty.containsNumber(long10));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,182,"assertEquals(true, tenToTwenty.containsNumber(long12));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,183,"assertEquals(true, tenToTwenty.containsNumber(long20));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,184,"assertEquals(false, tenToTwenty.containsNumber(long21));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,186,"ssertEquals(false, tenToTwenty.includesNumber(double8));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,187,"ssertEquals(true, tenToTwenty.includesNumber(double10));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,188,"ssertEquals(true, tenToTwenty.includesNumber(double12));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,189,"ssertEquals(true, tenToTwenty.includesNumber(double20));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,190,"ssertEquals(false, tenToTwenty.includesNumber(double21));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,186,"assertEquals(false, tenToTwenty.containsNumber(double8));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,187,"assertEquals(true, tenToTwenty.containsNumber(double10));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,188,"assertEquals(true, tenToTwenty.containsNumber(double12));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,189,"assertEquals(true, tenToTwenty.containsNumber(double20));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,190,"assertEquals(false, tenToTwenty.containsNumber(double21));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,192,"ssertEquals(false, tenToTwenty.includesNumber(float8));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,193,"ssertEquals(true, tenToTwenty.includesNumber(float10));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,194,"ssertEquals(true, tenToTwenty.includesNumber(float12));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,195,"ssertEquals(true, tenToTwenty.includesNumber(float20));"
False,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,196,"ssertEquals(false, tenToTwenty.includesNumber(float21));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,192,"assertEquals(false, tenToTwenty.containsNumber(float8));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,193,"assertEquals(true, tenToTwenty.containsNumber(float10));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,194,"assertEquals(true, tenToTwenty.containsNumber(float12));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,195,"assertEquals(true, tenToTwenty.containsNumber(float20));"
True,src/test/org/apache/commons/lang/math/FloatRangeTest.java,src/test/org/apache/commons/lang/math/FloatRangeTest.java,196,"assertEquals(false, tenToTwenty.containsNumber(float21));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,63," @version $Id: IntRangeTest.java,v 1.2 2003/06/08 14:19:43 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,63,"* @version $Id: IntRangeTest.java,v 1.3 2003/08/04 01:14:02 scolebourne Exp $"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,151,ublic void testIncludesNumber() {
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,152,"ssertEquals(false, tenToTwenty.includesNumber(null));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,153,"ssertEquals(true, tenToTwenty.includesNumber(nonComparable));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,151,public void testContainsNumber() {
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,152,"assertEquals(false, tenToTwenty.containsNumber(null));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,153,"assertEquals(true, tenToTwenty.containsNumber(nonComparable));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,155,"ssertEquals(false, tenToTwenty.includesNumber(five));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,156,"ssertEquals(true, tenToTwenty.includesNumber(ten));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,157,"ssertEquals(true, tenToTwenty.includesNumber(fifteen));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,158,"ssertEquals(true, tenToTwenty.includesNumber(twenty));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,159,"ssertEquals(false, tenToTwenty.includesNumber(twentyFive));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,155,"assertEquals(false, tenToTwenty.containsNumber(five));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,156,"assertEquals(true, tenToTwenty.containsNumber(ten));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,157,"assertEquals(true, tenToTwenty.containsNumber(fifteen));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,158,"assertEquals(true, tenToTwenty.containsNumber(twenty));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,159,"assertEquals(false, tenToTwenty.containsNumber(twentyFive));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,161,"ssertEquals(false, tenToTwenty.includesNumber(long8));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,162,"ssertEquals(true, tenToTwenty.includesNumber(long10));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,163,"ssertEquals(true, tenToTwenty.includesNumber(long12));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,164,"ssertEquals(true, tenToTwenty.includesNumber(long20));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,165,"ssertEquals(false, tenToTwenty.includesNumber(long21));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,161,"assertEquals(false, tenToTwenty.containsNumber(long8));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,162,"assertEquals(true, tenToTwenty.containsNumber(long10));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,163,"assertEquals(true, tenToTwenty.containsNumber(long12));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,164,"assertEquals(true, tenToTwenty.containsNumber(long20));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,165,"assertEquals(false, tenToTwenty.containsNumber(long21));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,167,"ssertEquals(false, tenToTwenty.includesNumber(double8));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,168,"ssertEquals(true, tenToTwenty.includesNumber(double10));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,169,"ssertEquals(true, tenToTwenty.includesNumber(double12));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,170,"ssertEquals(true, tenToTwenty.includesNumber(double20));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,171,"ssertEquals(false, tenToTwenty.includesNumber(double21));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,167,"assertEquals(false, tenToTwenty.containsNumber(double8));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,168,"assertEquals(true, tenToTwenty.containsNumber(double10));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,169,"assertEquals(true, tenToTwenty.containsNumber(double12));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,170,"assertEquals(true, tenToTwenty.containsNumber(double20));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,171,"assertEquals(false, tenToTwenty.containsNumber(double21));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,173,"ssertEquals(false, tenToTwenty.includesNumber(float8));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,174,"ssertEquals(true, tenToTwenty.includesNumber(float10));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,175,"ssertEquals(true, tenToTwenty.includesNumber(float12));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,176,"ssertEquals(true, tenToTwenty.includesNumber(float20));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,177,"ssertEquals(false, tenToTwenty.includesNumber(float21));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,173,"assertEquals(false, tenToTwenty.containsNumber(float8));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,174,"assertEquals(true, tenToTwenty.containsNumber(float10));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,175,"assertEquals(true, tenToTwenty.containsNumber(float12));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,176,"assertEquals(true, tenToTwenty.containsNumber(float20));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,177,"assertEquals(false, tenToTwenty.containsNumber(float21));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,180,ublic void testIncludesIntegerBig() {
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,180,public void testContainsIntegerBig() {
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,182,"ssertEquals(true, big.includesInteger(Integer.MAX_VALUE - 1));"
False,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,183,"ssertEquals(false, big.includesInteger(Integer.MAX_VALUE - 3));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,182,"assertEquals(true, big.containsInteger(Integer.MAX_VALUE - 1));"
True,src/test/org/apache/commons/lang/math/IntRangeTest.java,src/test/org/apache/commons/lang/math/IntRangeTest.java,183,"assertEquals(false, big.containsInteger(Integer.MAX_VALUE - 3));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,63," @version $Id: LongRangeTest.java,v 1.2 2003/06/08 14:19:43 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,63,"* @version $Id: LongRangeTest.java,v 1.3 2003/08/04 01:14:02 scolebourne Exp $"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,151,ublic void testIncludesNumber() {
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,152,"ssertEquals(false, tenToTwenty.includesNumber(null));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,153,"ssertEquals(true, tenToTwenty.includesNumber(nonComparable));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,151,public void testContainsNumber() {
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,152,"assertEquals(false, tenToTwenty.containsNumber(null));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,153,"assertEquals(true, tenToTwenty.containsNumber(nonComparable));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,155,"ssertEquals(false, tenToTwenty.includesNumber(five));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,156,"ssertEquals(true, tenToTwenty.includesNumber(ten));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,157,"ssertEquals(true, tenToTwenty.includesNumber(fifteen));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,158,"ssertEquals(true, tenToTwenty.includesNumber(twenty));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,159,"ssertEquals(false, tenToTwenty.includesNumber(twentyFive));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,155,"assertEquals(false, tenToTwenty.containsNumber(five));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,156,"assertEquals(true, tenToTwenty.containsNumber(ten));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,157,"assertEquals(true, tenToTwenty.containsNumber(fifteen));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,158,"assertEquals(true, tenToTwenty.containsNumber(twenty));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,159,"assertEquals(false, tenToTwenty.containsNumber(twentyFive));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,161,"ssertEquals(false, tenToTwenty.includesNumber(long8));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,162,"ssertEquals(true, tenToTwenty.includesNumber(long10));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,163,"ssertEquals(true, tenToTwenty.includesNumber(long12));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,164,"ssertEquals(true, tenToTwenty.includesNumber(long20));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,165,"ssertEquals(false, tenToTwenty.includesNumber(long21));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,161,"assertEquals(false, tenToTwenty.containsNumber(long8));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,162,"assertEquals(true, tenToTwenty.containsNumber(long10));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,163,"assertEquals(true, tenToTwenty.containsNumber(long12));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,164,"assertEquals(true, tenToTwenty.containsNumber(long20));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,165,"assertEquals(false, tenToTwenty.containsNumber(long21));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,167,"ssertEquals(false, tenToTwenty.includesNumber(double8));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,168,"ssertEquals(true, tenToTwenty.includesNumber(double10));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,169,"ssertEquals(true, tenToTwenty.includesNumber(double12));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,170,"ssertEquals(true, tenToTwenty.includesNumber(double20));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,171,"ssertEquals(false, tenToTwenty.includesNumber(double21));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,167,"assertEquals(false, tenToTwenty.containsNumber(double8));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,168,"assertEquals(true, tenToTwenty.containsNumber(double10));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,169,"assertEquals(true, tenToTwenty.containsNumber(double12));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,170,"assertEquals(true, tenToTwenty.containsNumber(double20));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,171,"assertEquals(false, tenToTwenty.containsNumber(double21));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,173,"ssertEquals(false, tenToTwenty.includesNumber(float8));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,174,"ssertEquals(true, tenToTwenty.includesNumber(float10));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,175,"ssertEquals(true, tenToTwenty.includesNumber(float12));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,176,"ssertEquals(true, tenToTwenty.includesNumber(float20));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,177,"ssertEquals(false, tenToTwenty.includesNumber(float21));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,173,"assertEquals(false, tenToTwenty.containsNumber(float8));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,174,"assertEquals(true, tenToTwenty.containsNumber(float10));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,175,"assertEquals(true, tenToTwenty.containsNumber(float12));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,176,"assertEquals(true, tenToTwenty.containsNumber(float20));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,177,"assertEquals(false, tenToTwenty.containsNumber(float21));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,180,ublic void testIncludesLongBig() {
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,180,public void testContainsLongBig() {
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,182,"ssertEquals(true, big.includesLong(Long.MAX_VALUE - 1));"
False,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,183,"ssertEquals(false, big.includesLong(Long.MAX_VALUE - 3));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,182,"assertEquals(true, big.containsLong(Long.MAX_VALUE - 1));"
True,src/test/org/apache/commons/lang/math/LongRangeTest.java,src/test/org/apache/commons/lang/math/LongRangeTest.java,183,"assertEquals(false, big.containsLong(Long.MAX_VALUE - 3));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,65," @version $Id: NumberRangeTest.java,v 1.2 2003/06/08 14:19:43 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,65,"* @version $Id: NumberRangeTest.java,v 1.3 2003/08/04 01:14:02 scolebourne Exp $"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,169,ublic void testIncludesNumber() {
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,170,"ssertEquals(false, tenToTwenty.includesNumber(null));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,171,"ssertEquals(false, tenToTwenty.includesNumber(five));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,172,"ssertEquals(true, tenToTwenty.includesNumber(ten));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,173,"ssertEquals(true, tenToTwenty.includesNumber(fifteen));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,174,"ssertEquals(true, tenToTwenty.includesNumber(twenty));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,175,"ssertEquals(false, tenToTwenty.includesNumber(twentyFive));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,169,public void testContainsNumber() {
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,170,"assertEquals(false, tenToTwenty.containsNumber(null));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,171,"assertEquals(false, tenToTwenty.containsNumber(five));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,172,"assertEquals(true, tenToTwenty.containsNumber(ten));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,173,"assertEquals(true, tenToTwenty.containsNumber(fifteen));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,174,"assertEquals(true, tenToTwenty.containsNumber(twenty));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,175,"assertEquals(false, tenToTwenty.containsNumber(twentyFive));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,178,enToTwenty.includesNumber(long21);
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,178,tenToTwenty.containsNumber(long21);
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,183,ublic void testIncludesLongBig() {
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,183,public void testContainsLongBig() {
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,186,"ssertEquals(true, big.includesLong(Long.MAX_VALUE - 1));"
False,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,187,"ssertEquals(false, big.includesLong(Long.MAX_VALUE - 3));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,186,"assertEquals(true, big.containsLong(Long.MAX_VALUE - 1));"
True,src/test/org/apache/commons/lang/math/NumberRangeTest.java,src/test/org/apache/commons/lang/math/NumberRangeTest.java,187,"assertEquals(false, big.containsLong(Long.MAX_VALUE - 3));"
