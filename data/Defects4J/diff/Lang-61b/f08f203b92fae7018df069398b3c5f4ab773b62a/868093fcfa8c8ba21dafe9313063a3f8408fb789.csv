is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,446,/ TODO: Decide whether this code is removed or goes into 2.1
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,448," Tests the parse method, which is supposed to handle various strings"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,449, as flexibly as CVS supports.
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,450,ublic void testParseCVS() throws Exception {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,451,ry {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,452,ateUtils.parseCVS(null);
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,453,ail();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,454, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,455,ry {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,456,"ateUtils.parseCVS(""gobbledegook"");"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,457,ail();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,458, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,459,ry {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,460,"ateUtils.parseCVS(""ago"");"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,461,ail();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,462, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,463,ry {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,464,"ateUtils.parseCVS(""1 junk ago"");"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,465,ail();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,466, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,467,ry {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,468,"ateUtils.parseCVS(""1month ago"");"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,469,ail();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,470, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,471,ry {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,472,"ateUtils.parseCVS(""last month"");"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,473,ail();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,474, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,477,"/This is difficult to test since the ""now"" used in the"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,478,/  parse function cannot be controlled.  We could possibly control
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,479,/  it by trying before and after and making sure the value we expect
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,480,/  is between the two values calculated.
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,481,/For now we're just using the custom assertEquals that takes a delta
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,483,alendar now = null;
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,485,/ M/dd/yy H:mm:ss z
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,486,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,487,"ow.set(Calendar.MILLISECOND, 0);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,488,"ssertEquals(""parseCVS format M/dd/yy H:mm:ss z"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,489,"ow, DateUtils.parseCVS(new SimpleDateFormat(""M/dd/yy H:mm:ss z"").format(now.getTime())), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,490,"/ MMM d, yyyy h:mm a"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,491,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,492,"ow.set(Calendar.MILLISECOND, 0);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,493,"ow.set(Calendar.SECOND, 0);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,494,"ssertEquals(""parseCVS format MMM d, yyyy h:mm a"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,495,"ow, DateUtils.parseCVS(new SimpleDateFormat(""MMM d, yyyy h:mm a"").format(now.getTime())), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,496,/ h:mm z
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,498,/ This format is difficult to test using the current time because the
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,499,"/ parseCVS method applies the default date of January 1, 1970 to the"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,500,/ parsed time. The most straightforward way to test the parse is to
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,501,"/ pass in a known value, and test the output against this know value."
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,503,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,504,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,505,"ssertEquals(""parseCVS format h:mm z 16:30 GMT"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,506,"ow, DateUtils.parseCVS(""16:30 GMT""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,507,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,508,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 EST""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,509,"ssertEquals(""parseCVS format h:mm z 16:30 EST"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,510,"ow, DateUtils.parseCVS(""16:30 EST""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,511,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,512,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT-05:00""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,513,"ssertEquals(""parseCVS format h:mm z 16:30 GMT-05:00"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,514,"ow, DateUtils.parseCVS(""16:30 GMT-05:00""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,515,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,516,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT+01:00""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,517,"ssertEquals(""parseCVS format h:mm z 16:30 GMT+01:00"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,518,"ow, DateUtils.parseCVS(""16:30 GMT+01:00""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,520,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,521,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,522,"ssertEquals(""parseCVS format h:mm z 06:30 GMT"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,523,"ow, DateUtils.parseCVS(""06:30 GMT""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,524,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,525,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 EST""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,526,"ssertEquals(""parseCVS format h:mm z 06:30 EST"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,527,"ow, DateUtils.parseCVS(""06:30 EST""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,528,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,529,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT-05:00""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,530,"ssertEquals(""parseCVS format h:mm z 06:30 GMT-05:00"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,531,"ow, DateUtils.parseCVS(""06:30 GMT-05:00""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,532,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,533,"ow.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT+01:00""));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,534,"ssertEquals(""parseCVS format h:mm z 06:30 GMT+01:00"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,535,"ow, DateUtils.parseCVS(""06:30 GMT+01:00""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,537,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,538,"ow.add(Calendar.WEEK_OF_MONTH, -1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,539,"ssertEquals(""parseCVS a week ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,540,"ow, DateUtils.parseCVS(""a week ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,541,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,542,"ow.add(Calendar.WEEK_OF_MONTH, -1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,543,"ssertEquals(""parseCVS an week ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,544,"ow, DateUtils.parseCVS(""an week ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,546,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,547,"ow.add(Calendar.DAY_OF_MONTH, -14);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,548,"ssertEquals(""parseCVS 1 fortnight ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,549,"ow, DateUtils.parseCVS(""1 fortnight ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,550,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,551,"ow.add(Calendar.DAY_OF_MONTH, -14);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,552,"ssertEquals(""parseCVS 1 fortnights ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,553,"ow, DateUtils.parseCVS(""1 fortnights ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,555,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,556,"ow.add(Calendar.MINUTE, -1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,557,"ssertEquals(""parseCVS 1 minute ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,558,"ow, DateUtils.parseCVS(""1 minute ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,559,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,560,"ow.add(Calendar.MINUTE, -8);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,561,"ssertEquals(""parseCVS 8 minutes ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,562,"ow, DateUtils.parseCVS(""8 minutes ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,564,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,565,"ow.add(Calendar.MILLISECOND, -1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,566,"ssertEquals(""parseCVS 1 millisecond ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,567,"ow, DateUtils.parseCVS(""1 millisecond ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,568,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,569,"ow.add(Calendar.MILLISECOND, -100);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,570,"ssertEquals(""parseCVS 1 milliseconds ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,571,"ow, DateUtils.parseCVS(""100 milliseconds ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,572,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,573,"ow.add(Calendar.SECOND, -30);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,574,"ssertEquals(""parseCVS 30 second ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,575,"ow, DateUtils.parseCVS(""30 second ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,576,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,577,"ow.add(Calendar.SECOND, -30);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,578,"ssertEquals(""parseCVS 30 seconds ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,579,"ow, DateUtils.parseCVS(""30 seconds ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,580,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,581,"ow.add(Calendar.HOUR, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,582,"ssertEquals(""parseCVS 2 hour ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,583,"ow, DateUtils.parseCVS(""2 hour ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,584,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,585,"ow.add(Calendar.HOUR, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,586,"ssertEquals(""parseCVS 2 hours ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,587,"ow, DateUtils.parseCVS(""2 hours ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,588,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,589,"ow.add(Calendar.DAY_OF_MONTH, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,590,"ssertEquals(""parseCVS 2 day ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,591,"ow, DateUtils.parseCVS(""2 day ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,592,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,593,"ow.add(Calendar.DAY_OF_MONTH, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,594,"ssertEquals(""parseCVS 2 days ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,595,"ow, DateUtils.parseCVS(""2 days ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,596,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,597,"ow.add(Calendar.MONTH, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,598,"ssertEquals(""parseCVS 2 month ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,599,"ow, DateUtils.parseCVS(""2 month ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,600,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,601,"ow.add(Calendar.MONTH, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,602,"ssertEquals(""parseCVS 2 months ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,603,"ow, DateUtils.parseCVS(""2 months ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,604,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,605,"ow.add(Calendar.YEAR, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,606,"ssertEquals(""parseCVS 2 year ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,607,"ow, DateUtils.parseCVS(""2 year ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,608,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,609,"ow.add(Calendar.YEAR, -2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,610,"ssertEquals(""parseCVS 2 years ago"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,611,"ow, DateUtils.parseCVS(""2 years ago""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,613,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,614,"ow.add(Calendar.DATE, -1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,615,"ssertEquals(""parseCVS yesterday"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,616,"ow, DateUtils.parseCVS(""yesterday""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,618,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,619,"ow.add(Calendar.DATE, 1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,620,"ssertEquals(""parseCVS tomorrow"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,621,"ow, DateUtils.parseCVS(""tomorrow""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,623,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,624,"/Sunday would be 1, Saturday would be 7, so we walk back up to 6 days."
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,625,f (now.get(Calendar.DAY_OF_WEEK) == 1) {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,626,"/If Sunday already, we go back a full week"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,627,"ow.add(Calendar.DATE, -7);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,628, else {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,629,"ow.add(Calendar.DATE, 1 - now.get(Calendar.DAY_OF_WEEK));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,631,"ssertEquals(""parseCVS last Sunday"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,632,"ow, DateUtils.parseCVS(""last Sunday""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,634,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,635,"ow.add(Calendar.DATE, -7);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,636,"ssertEquals(""parseCVS last week"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,637,"ow, DateUtils.parseCVS(""last week""), 50);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,639,ow = Calendar.getInstance();
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,640,"/January would be 0, December would be 11, so we walk back up to 11 months"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,641,f (now.get(Calendar.MONTH) == 0) {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,642,"/If January already, we go back a full year"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,643,"ow.add(Calendar.MONTH, -12);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,644, else {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,645,"ow.add(Calendar.MONTH, 0 - now.get(Calendar.MONTH));"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,647,"ssertEquals(""parseCVS last January"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,648,"ow, DateUtils.parseCVS(""last January""), 50);"
