is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,2,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,5,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,7,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,8,* reserved.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,10,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,11,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,12,* are met:
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,14,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,15,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,17,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,18,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,19,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,20,*    distribution.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,22,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,23,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,24,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,25,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,26,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,27,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,29,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,30,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,31,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,32,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,34,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,35,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,36,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,38,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,39,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,40,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,41,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,42,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,43,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,44,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,45,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,46,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,47,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,48,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,49,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,52,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,53,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,54,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,55,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,58,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,59,import java.io.PrintStream;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,60,import java.io.PrintWriter;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,62,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,63,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,65,* Tests implementations of the org.apache.commons.lang.exception.Nestable
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,66,* interface.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,68,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,69,"* @version $Id: AbstractNestableTestCase.java,v 1.1 2002/09/11 18:16:10 stevencaswell Exp $"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,71,public abstract class AbstractNestableTestCase extends TestCase
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,75,* Constructs an instance of
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,76,* <code>AbstractNestableTestCase</code>.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,78,* @param name the test name
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,80,public AbstractNestableTestCase(String name)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,82,super(name);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,86,* Tests the getCause() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,88,public void testGetCause()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,90,Nestable ne1 = getNestable();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,91,"assertNull(""nestable exception() cause is null"", ne1.getCause());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,93,"Nestable ne2 = getNestable(""ne2"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,94,"assertNull(""nestable exception(\""ne2\"") cause is null"", ne2.getCause());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,96,"Nestable ne3 = getNestable(getThrowable(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,97,"assertNotNull(""nestable exception(Throwable(\""ne3 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,98,ne3.getCause());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,99,"assertTrue(""nestable exception(Throwable(\""ne3 exception\"") cause message == ne3 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,100,"ne3.getCause().getMessage().equals(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,102,"Nestable ne4 = getNestable(""ne4"", getThrowable(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,103,"assertNotNull(""nestable exception(\""ne4\"", Throwable(\""ne4 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,104,ne4.getCause());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,106,"Nestable ne5 = getNestable(""ne5"", (Throwable) null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,107,"assertNull(""nestable exception(\""ne5\"", null) cause is null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,108,ne5.getCause());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,110,"Nestable ne6 = getNestable(null, getThrowable(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,111,"assertNotNull(""nestable exception(null, Throwable(\""ne6 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,112,ne6.getCause());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,116,* Tests the getThrowableCount() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,118,public void testGetThrowableCount()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,120,Nestable ne1 = getNestable();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,121,"assertEquals(""ne1 throwable count"", 1, ne1.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,123,"Nestable ne2 = getNestable(""ne2"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,124,"assertEquals(""ne2 throwable count"", 1, ne2.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,126,"Nestable ne3 = getNestable(getThrowable(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,127,"assertEquals(""ne3 throwable count"", 2, ne3.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,129,"Nestable ne4 = getNestable(""ne4"", getThrowable(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,130,"assertEquals(""ne4 throwable count"", 2, ne4.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,132,"Nestable ne5 = getNestable(""ne5"", (Throwable) null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,133,"assertEquals(""ne 5 throwable count"", 1, ne5.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,135,"Nestable ne6 = getNestable(null, getThrowable(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,136,"assertEquals(""ne 6 throwable count"", 2, ne6.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,138,"Nestable ne7 = getNestable(""ne7o"", getNestable(""ne7i"", getThrowable(""ne7 exception"")));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,139,"assertEquals(""ne 7 throwable count"", 3, ne7.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,141,"Nestable ne8 = getNestable(""level 1"", getNestable(""level 2"", getNestable(getNestable(""level 4"", getThrowable(""level 5"")))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,142,"assertEquals(""ne 8 throwable count"", 5, ne8.getThrowableCount());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,146,* Tests the getMessage() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,148,public void testGetMessage()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,150,Nestable ne1 = getNestable();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,151,"assertNull(""nestable exception() message is null"", ne1.getMessage());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,153,"Nestable ne2 = getNestable(""ne2"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,154,"assertNotNull(""nestable exception(\""ne2\"") message is not null"", ne2.getMessage());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,155,"assertTrue(""nestable exception(\""ne2\"") message == ne2"", ne2.getMessage().equals(""ne2""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,157,"Nestable ne3 = getNestable(getThrowable(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,158,"assertNotNull(""nestable exception(Throwable(\""ne3 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,159,ne3.getMessage());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,160,"assertTrue(""nestable exception(Throwable(\""ne3 exception\"") message == cause message"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,161,ne3.getMessage().equals(ne3.getCause().getMessage()));
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,163,"Nestable ne4 = getNestable(""ne4"", getThrowable(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,164,"assertNotNull(""nestable exception(\""ne4\"", Throwable(\""ne4 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,165,ne4.getMessage());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,166,"assertTrue(""nestable exception(\""ne4\"", Throwable(\""ne4 exception\"") message == ne4: ne4 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,167,"ne4.getMessage().equals(""ne4: ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,169,"Nestable ne5 = getNestable(""ne5"", (Throwable) null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,170,"assertNotNull(""nestable exception(\""ne5\"", null) message is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,171,ne5.getMessage());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,172,"assertTrue(""nestable exception(\""ne5\"", null) message == ne5"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,173,"ne5.getMessage().equals(""ne5""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,175,"Nestable ne6 = getNestable(null, getThrowable(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,176,"assertTrue(""nestable exception(null, Throwable(\""ne6 exception\"") cause == ne6 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,177,"ne6.getMessage().equals(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,179,"Nestable ne7 = getNestable(""ne7o"", getNestable(""ne7i"", getThrowable(""ne7 exception"")));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,180,"assertTrue(""nextable exception(\""ne7o\"", getNestable(\""ne7i\"", Throwable(\""ne7 exception\""))) message is ne7o: ne7i: ne7 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,181,"ne7.getMessage().equals(""ne7o: ne7i: ne7 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,186,* Tests the getMessage(int) operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,188,public void testGetMessageI()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,190,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,191,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,192,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,193,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,194,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,195,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,196,"Nestable ne = getNestable(msgs[0], getNestable(msgs[1], getNestable(getNestable(msgs[3], getThrowable(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,197,for(int i = 0; i < msgs.length; i++)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,199,"assertEquals(""message "" + i, msgs[i], ne.getMessage(i));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,202,// Test for index out of bounds
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,203,try
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,205,String msg = ne.getMessage(-1);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,206,"fail(""getMessage(-1) should have thrown IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,208,catch(IndexOutOfBoundsException ioode)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,211,try
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,213,String msg = ne.getMessage(msgs.length + 100);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,214,"fail(""getMessage(999) should have thrown IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,216,catch(IndexOutOfBoundsException ioode)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,222,* Tests the getMessages() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,224,public void testGetMessages()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,226,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,227,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,228,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,229,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,230,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,231,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,232,"Nestable ne = getNestable(msgs[0], getNestable(msgs[1], getNestable(getNestable(msgs[3], getThrowable(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,233,String[] nMsgs = ne.getMessages();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,234,"assertEquals(""messages length"", msgs.length, nMsgs.length);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,235,for(int i = 0; i < nMsgs.length; i++)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,237,"assertEquals(""message "" + i, msgs[i], nMsgs[i]);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,242,* Tests the getThrowable(int) operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,244,public void testGetThrowableI()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,246,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,247,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,248,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,250,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,251,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,252,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,253,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,254,throwables[0] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,255,throwables[1] = getThrowableClass();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,256,n = new NestableExceptionTester1(getThrowable(msgs[1]));
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,257,"doNestableExceptionGetThrowableI(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,259,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,260,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,261,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,262,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,263,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,264,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,265,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,266,throwables[0] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,267,throwables[1] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,268,throwables[2] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,269,throwables[3] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,270,throwables[4] = getThrowableClass();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,271,"n = getTester1(msgs[0], getTester2(msgs[1], getTester1(getTester2(msgs[3], getThrowable(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,272,"doNestableExceptionGetThrowableI(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,275,"private void doNestableExceptionGetThrowableI(Nestable n, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,277,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,278,String msg = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,280,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,282,t = n.getThrowable(i);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,283,"assertEquals(""throwable class"", classes[i], t.getClass());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,284,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,286,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,288,else
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,290,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,292,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,295,// Test for index out of bounds
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,296,try
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,298,t = n.getThrowable(-1);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,299,"fail(""getThrowable(-1) should have thrown IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,301,catch(IndexOutOfBoundsException ioobe)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,304,try
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,306,t = n.getThrowable(999);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,307,"fail(""getThrowable(999) should have thrown IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,309,catch(IndexOutOfBoundsException ioobe)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,315,* Tests the getThrowables() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,317,public void testGetThrowables()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,319,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,320,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,321,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,323,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,324,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,325,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,326,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,327,//        throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,328,throwables[0] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,329,throwables[1] = getThrowableClass();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,330,n = getTester1(getThrowable(msgs[1]));
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,331,"doNestableExceptionGetThrowables(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,333,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,334,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,335,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,336,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,337,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,338,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,339,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,340,throwables[0] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,341,throwables[1] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,342,throwables[2] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,343,throwables[3] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,344,throwables[4] = getThrowableClass();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,345,"n = getTester1(msgs[0], getTester2(msgs[1], getTester1(getTester2(msgs[3], getThrowable(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,346,"doNestableExceptionGetThrowables(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,349,"private void doNestableExceptionGetThrowables(Nestable n, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,351,String msg = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,353,Throwable throwables[] = n.getThrowables();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,354,"assertEquals(""throwables length"", classes.length, throwables.length);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,355,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,357,"assertEquals(""throwable class"", classes[i], throwables[i].getClass());"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,358,Throwable t = throwables[i];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,359,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,361,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,363,else
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,365,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,367,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,372,* Tests the indexOfThrowable() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,374,public void testIndexOfThrowable()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,376,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,377,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,378,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,380,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,381,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,382,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,383,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,384,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,385,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,386,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,387,throwables[0] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,388,throwables[1] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,389,throwables[2] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,390,throwables[3] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,391,throwables[4] = getThrowableClass();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,392,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,393,"n = getTester1(msgs[0], getTester2(msgs[1], getTester1(getTester2(msgs[3], getThrowable(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,394,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,396,"doNestableExceptionIndexOfThrowable(n, throwables[i], indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,398,"doNestableExceptionIndexOfThrowable(n, java.util.Date.class, -1, null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,401,"private void doNestableExceptionIndexOfThrowable(Nestable n, Class type, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,403,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,405,int index = n.indexOfThrowable(type);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,406,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,407,if(expectedIndex > -1)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,409,t = n.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,410,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,412,String msg = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,413,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,415,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,417,else
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,419,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,421,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,427,* Tests the indexOfThrowable(int) operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,429,public void testIndexOfThrowableI()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,431,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,432,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,433,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,435,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,436,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,437,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,438,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,439,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,440,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,441,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,442,throwables[0] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,443,throwables[1] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,444,throwables[2] = getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,445,throwables[3] = getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,446,throwables[4] = getThrowableClass();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,447,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,448,"n = getTester1(msgs[0], getTester2(msgs[1], getTester1(getTester2(msgs[3], getThrowable(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,449,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,451,"doNestableExceptionIndexOfThrowableI(n, throwables[i], 0, indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,453,"doNestableExceptionIndexOfThrowableI(n, getTester2Class(), 2, 3, msgs[3]);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,454,"doNestableExceptionIndexOfThrowableI(n, getTester1Class(), 1, 2, msgs[2]);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,455,"doNestableExceptionIndexOfThrowableI(n, getTester1Class(), 3, -1, null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,456,"doNestableExceptionIndexOfThrowableI(n, getTester1Class(), 4, -1, null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,457,"doNestableExceptionIndexOfThrowableI(n, getThrowableClass(), 2, 4, msgs[4]);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,458,"doNestableExceptionIndexOfThrowableI(n, java.util.Date.class, 0, -1, null);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,460,// Test for index out of bounds
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,461,try
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,463,"int index = n.indexOfThrowable(getTester1Class(), -1);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,464,"fail(""method should have thrown IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,466,catch(IndexOutOfBoundsException iooob)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,469,try
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,471,"int index = n.indexOfThrowable(getTester1Class(), 5);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,472,"fail(""method should have thrown IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,474,catch(IndexOutOfBoundsException iooob)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,480,"private void doNestableExceptionIndexOfThrowableI(Nestable n, Class type, int fromIndex, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,482,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,484,"int index = n.indexOfThrowable(type, fromIndex);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,485,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,486,if(expectedIndex > -1)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,488,t = n.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,489,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,491,String msg = null;
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,492,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,494,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,496,else
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,498,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,500,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,507,* Tests the printPartialStackTrace() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,509,public void testPrintPartialStackTrace()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,511,"Nestable ne9 = getNestable(""ne9"", getThrowable(""ne9 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,512,ByteArrayOutputStream baos2 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,513,PrintStream ps2 = new PrintStream(baos2);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,514,"PrintWriter pw2 = new PrintWriter(ps2, true);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,515,ne9.printPartialStackTrace(pw2);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,516,String stack2 = baos2.toString();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,517,"assertTrue(""stack trace startsWith == org.apache.commons.lang.exception.NestableException: ne9: ne9 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,518,"stack2.startsWith(""org.apache.commons.lang.exception.NestableException: ne9: ne9 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,519,"assertEquals(""stack trace indexOf rethrown == -1"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,520,"stack2.indexOf(""rethrown""), -1);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,524,* Tests the printStackTrace() operation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,526,public void testPrintStackTrace()
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,528,"Nestable ne8 = getNestable(""ne8"", getThrowable(""ne8 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,529,ByteArrayOutputStream baos1 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,530,PrintStream ps1 = new PrintStream(baos1);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,531,"PrintWriter pw1 = new PrintWriter(ps1, true);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,532,ne8.printStackTrace(ps1);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,533,String stack1 = baos1.toString();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,534,"assertTrue(""stack trace startsWith == java.lang.Exception: ne8 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,535,"stack1.startsWith(""java.lang.Exception: ne8 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,536,"assertTrue(""stack trace indexOf org.apache.commons.lang.exception.NestableException: ne8: ne8 exception > -1"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,537,"stack1.indexOf(""org.apache.commons.lang.exception.NestableException: ne8: ne8 exception"") > -1);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,541,* Returns an instance of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,542,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,544,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,546,public abstract Nestable getNestable();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,549,* Returns an instance of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,550,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,552,* @param n <code>Nestable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,553,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,554,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,556,public abstract Nestable getNestable(Nestable n);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,559,* Returns an instance of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,560,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,562,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,563,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,564,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,566,public abstract Nestable getNestable(String msg);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,569,* Returns an instance of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,570,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,572,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,573,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,574,* @param n <code>Nestable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,575,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,576,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,578,"public abstract Nestable getNestable(String msg, Nestable n);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,581,* Returns an instance of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,582,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,584,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,585,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,586,* @param t <code>Throwable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,587,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,588,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,590,"public abstract Nestable getNestable(String msg, Throwable t);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,593,* Returns an instance of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,594,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,596,* @param t <code>Throwable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,597,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,598,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,600,public abstract Nestable getNestable(Throwable t);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,603,* Returns an instance of a <code>Throwable</code> to be used in
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,604,* constructing instances of the <code>Nestable</code> implementation being
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,605,* tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,607,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,608,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,609,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,611,public abstract Throwable getThrowable(String msg);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,614,* Returns an instance of one tester <code>Nestable</code> implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,616,* @param n <code>Nestable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,617,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,618,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,620,public abstract Nestable getTester1(Nestable n);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,623,* Returns an instance of one tester <code>Nestable</code> implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,625,* @param t <code>Throwable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,626,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,627,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,629,public abstract Nestable getTester1(Throwable t);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,632,* Returns an instance of one tester <code>Nestable</code> implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,634,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,635,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,636,* @param n <code>Nestable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,637,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,638,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,640,"public abstract Nestable getTester1(String msg, Nestable n);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,643,* Returns an instance of one tester <code>Nestable</code> implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,645,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,646,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,647,* @param t <code>Throwable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,648,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,649,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,651,"public abstract Nestable getTester1(String msg, Throwable t);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,654,* Returns an instance of a second tester <code>Nestable</code>
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,655,* implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,657,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,658,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,659,* @param n <code>Nestable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,660,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,661,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,663,"public abstract Nestable getTester2(String msg, Nestable n);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,666,* Returns an instance of a second tester <code>Nestable</code>
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,667,* implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,669,* @param msg <code>String</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,670,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,671,* @param t <code>Throwable</code> argument to be provided to the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,672,* constructor
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,673,* @return the instance
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,675,"public abstract Nestable getTester2(String msg, Throwable t);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,678,* Returns the class of the first tester <code>Nestable</code>
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,679,* implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,681,* @return the class
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,683,public abstract Class getTester1Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,686,* Returns the class of the second tester <code>Nestable</code>
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,687,* implementation.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,689,* @return the class
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,691,public abstract Class getTester2Class();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,694,* Returns the class of the <code>Throwable</code> used in constructing
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,695,* instances of the <code>Nestable</code> implementation being tested.
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,697,* @return the class
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,699,public abstract Class getThrowableClass();
