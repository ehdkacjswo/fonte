is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,1,package org.apache.commons.lang.builder;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,3,import java.lang.reflect.Field;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,4,import java.lang.reflect.Modifier;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,5,import java.util.HashSet;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,6,import java.util.Set;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,8,import org.apache.commons.lang.ClassUtils;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,11,* <p>Builds <code>toString()</code> values using reflection.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,13,* <p>This class uses reflection to determine the fields to append.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,14,"* Because these fields are usually private, the class,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,15,* uses <code>Field.setAccessible</code> to
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,16,"* change the visibility of the fields. This will fail under a security manager,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,17,* unless the appropriate permissions are set up correctly.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,19,* <p>A typical invocation for this method would look like:</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,20,* <pre>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,21,* public String toString() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,22,*   return ReflectionToStringBuilder.toString(this);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,24,* </pre>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,26,* <p>You can also use the builder to debug 3rd party objects:</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,27,* <pre>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,28,"* System.out.println(""An object: "" + ReflectionToStringBuilder.toString(anObject));"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,29,* </pre>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,31,* <p>A subclass can control field output by overriding the methods:
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,32,* <ul>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,33,* <li>{@link #accept(java.lang.reflect.Field)}</li>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,34,* <li>{@link #getValue(java.lang.reflect.Field)}</li>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,35,* </ul>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,36,* </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,38,* <p>The exact format of the <code>toString</code> is determined by
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,39,* the {@link ToStringStyle} passed into the constructor.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,41,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,42,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,43,* @since 2.0
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,44,"* @version $Id: ReflectionToStringBuilder.java,v 1.1 2003/06/03 03:51:56 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,46,public class ReflectionToStringBuilder extends ToStringBuilder {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,49,* A registry of objects used by <code>reflectionToString</code> methods to detect cyclical object references
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,50,* and avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,52,private static ThreadLocal registry = new ThreadLocal() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,53,protected synchronized Object initialValue() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,54,"// The HashSet implementation is not synchronized,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,55,// which is just what we need here.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,56,return new HashSet();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,61,* Returns the registry of objects being traversed by the
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,62,* <code>reflectionToString</code> methods in the current thread.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,63,* @return Set the registry of objects being traversed
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,65,static Set getRegistry() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,66,return (Set) registry.get();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,70,* Returns <code>true</code> if the registry contains the given object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,71,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,73,* @param value The object to lookup in the registry.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,74,* @return boolean <code>true</code> if the registry contains the given object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,76,static boolean isRegistered(Object value) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,77,return getRegistry().contains(value);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,81,* Registers the given object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,82,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,84,* @param value The object to register.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,86,static void register(Object value) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,87,getRegistry().add(value);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,91,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,92,* <code>toString</code> using the default <code>ToStringStyle</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,94,* <p>It uses <code>Field.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,95,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,96,"* under a security manger, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,97,* It is also not as efficient as testing explicitly.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,99,"* <p>Transient members will be not be included, as they are likely derived."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,100,* Static fields will not be included. Superclass fields will be appended.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,102,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,103,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,104,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,106,public static String toString(Object object) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,107,"return toString(object, null, false, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,111,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,112,* <code>toString</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,114,* <p>It uses <code>Field.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,115,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,116,"* under a security manger, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,117,* It is also not as efficient as testing explicitly.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,119,"* <p>Transient members will be not be included, as they are likely derived."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,120,* Static fields will not be included. Superclass fields will be appended.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,122,"* <p>If the style is <code>null</code>, the default"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,123,* <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,125,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,126,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,127,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,128,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,129,* @throws IllegalArgumentException if the Object or
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,130,*  <code>ToStringStyle</code> is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,132,"public static String toString(Object object, ToStringStyle style) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,133,"return toString(object, style, false, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,137,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,138,* <code>toString</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,140,* <p>It uses <code>Field.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,141,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,142,"* under a security manger, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,143,* It is also not as efficient as testing explicitly. </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,145,"* <p>If the <code>outputTransients</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,146,"* transient members will be output, otherwise they are ignored,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,147,"* as they are likely derived fields, and not part of the value of the"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,148,* Object.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,150,* <p>Static fields will not be included. Superclass fields will be appended.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,152,* <p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,153,"* If the style is <code>null</code>, the default"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,154,* <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,156,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,157,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,158,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,159,* @param outputTransients  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,160,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,161,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,163,"public static String toString(Object object, ToStringStyle style, boolean outputTransients) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,164,"return toString(object, style, outputTransients, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,168,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,169,* <code>toString</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,171,* <p>It uses <code>Field.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,172,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,173,"* under a security manger, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,174,* It is also not as efficient as testing explicitly. </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,176,"* <p>If the <code>outputTransients</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,177,"* transient members will be output, otherwise they are ignored,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,178,"* as they are likely derived fields, and not part of the value of the"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,179,* Object.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,181,* <p>Static fields will not be included. Superclass fields will be appended
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,182,* up to and including the specified superclass. A null superclass is treated
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,183,* as <code>java.lang.Object</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,185,"* <p>If the style is <code>null</code>, the default"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,186,* <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,188,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,189,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,190,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,191,* @param outputTransients  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,192,"* @param reflectUpToClass  the superclass to reflect up to (inclusive), may be null"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,193,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,194,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,196,public static String toString(
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,197,"Object object,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,198,"ToStringStyle style,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,199,"boolean outputTransients,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,200,Class reflectUpToClass) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,201,"return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients).toString();"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,205,* Unregisters the given object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,206,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,208,* @param value The object to unregister.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,210,static void unregister(Object value) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,211,getRegistry().remove(value);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,215,* Whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,217,private boolean appendTransients = false;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,220,* The last super class to stop appending fields for.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,222,private Class upToClass = null;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,225,* <p>Constructs a new instance.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,227,* <p>This constructor outputs using the default style set with
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,228,* <code>setDefaultStyle</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,230,"* @param object  the Object to build a <code>toString</code> for,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,231,*  must not be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,232,* @throws IllegalArgumentException  if the Object passed in is
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,233,*  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,235,public ReflectionToStringBuilder(Object object) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,236,super(object);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,240,* <p>Constructor specifying the output style.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,242,"* <p>If the style is <code>null</code>, the default style is used.</p>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,244,"* @param object  the Object to build a <code>toString</code> for,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,245,*  must not be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,246,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,247,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,248,* @throws IllegalArgumentException  if the Object passed in is
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,249,*  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,251,"public ReflectionToStringBuilder(Object object, ToStringStyle style) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,252,"super(object, style);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,256,* <p>Constructors a new instance.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,258,"* <p>If the style is <code>null</code>, the default style is used.</p>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,260,"* <p>If the buffer is <code>null</code>, a new one is created.</p>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,262,"* @param object  the Object to build a <code>toString</code> for,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,263,*  must not be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,264,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,265,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,266,"* @param buffer  the <code>StringBuffer</code> to populate, may be"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,267,*  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,268,* @throws IllegalArgumentException  if the Object passed in is
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,269,*  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,271,"public ReflectionToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,272,"super(object, style, buffer);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,276,* Constructs a new instance.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,278,"* @param object  the Object to build a <code>toString</code> for,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,279,*  must not be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,280,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,281,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,282,"* @param buffer  the <code>StringBuffer</code> to populate, may be"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,283,*  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,285,public ReflectionToStringBuilder(
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,286,"Object object,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,287,"ToStringStyle style,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,288,"StringBuffer buffer,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,289,"Class reflectUpToClass,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,290,boolean outputTransients) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,291,"super(object, style, buffer);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,292,this.setUpToClass(reflectUpToClass);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,293,this.setAppendTransients(outputTransients);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,297,* Returns whether or not to append the given <code>Field</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,298,* <ul>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,299,* <li>Static fields are not appended.</li>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,300,* <li>Transient fields are appended only if {@link #isAppendTransients()} returns <code>true</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,301,* <li>Inner class fields are not appened.</li>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,302,* </ul>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,303,* @param field The Field to test.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,304,* @return Whether or not to append the given <code>Field</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,306,protected boolean accept(Field field) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,307,String fieldName = field.getName();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,308,return (fieldName.indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) == -1)
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,309,&& (this.isAppendTransients() || !Modifier.isTransient(field.getModifiers()))
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,310,&& (!Modifier.isStatic(field.getModifiers()));
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,314,* Appends the fields and values defined by the given object of the
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,315,"* given Class. If a cycle is detected as an objects is ""toString()'ed"","
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,316,* such an object is rendered as if <code>Object.toString()</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,317,* had been called and not implemented by the object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,319,* @param clazz The class of object parameter
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,321,protected void appendFieldsIn(Class clazz) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,322,if (isRegistered(this.getObject())) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,323,"// The object has already been appended, therefore we have an object cycle."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,324,// Append a simple Object.toString style string. The field name is already appended at this point.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,325,this.appendAsObjectToString(this.getObject());
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,326,return;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,328,try {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,329,this.registerObject();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,330,if (clazz.isArray()) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,331,this.reflectionAppendArray(this.getObject());
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,332,return;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,334,Field[] fields = clazz.getDeclaredFields();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,335,"Field.setAccessible(fields, true);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,336,for (int i = 0; i < fields.length; i++) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,337,Field field = fields[i];
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,338,String fieldName = field.getName();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,339,if (this.accept(field)) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,340,try {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,341,// Warning: Field.get(Object) creates wrappers objects for primitive types.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,342,Object fieldValue = this.getValue(field);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,343,if (isRegistered(fieldValue) && !field.getType().isPrimitive()) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,344,"// A known field value has already been appended, therefore we have an object cycle,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,345,// append a simple Object.toString style string.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,346,"this.getStyle().appendFieldStart(this.getStringBuffer(), fieldName);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,347,this.appendAsObjectToString(fieldValue);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,348,// The recursion out of
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,349,"//    builder.append(fieldName, fieldValue);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,350,// below will append the field
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,351,// end marker.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,352,} else {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,353,try {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,354,this.registerObject();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,355,"this.append(fieldName, fieldValue);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,356,} finally {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,357,this.unregisterObject();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,360,} catch (IllegalAccessException ex) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,361,//this can't happen. Would get a Security exception instead
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,362,//throw a runtime exception in case the impossible happens.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,363,"throw new InternalError(""Unexpected IllegalAccessException: "" + ex.getMessage());"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,367,} finally {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,368,this.unregisterObject();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,373,* Gets the last super class to stop appending fields for.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,375,* @return The last super class to stop appending fields for.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,377,public Class getUpToClass() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,378,return this.upToClass;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,382,* Calls <code>java.lang.reflect.Field.get(Object)</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,383,* @see java.lang.reflect.Field#get(Object)
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,384,* @throws IllegalArgumentException
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,385,* @throws IllegalAccessException
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,387,"protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,388,return field.get(this.getObject());
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,392,* Returns whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,394,* @return Whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,396,public boolean isAppendTransients() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,397,return this.appendTransients;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,401,* <p>Append to the <code>toString</code> an <code>Object</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,402,* array.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,404,* @param array  the array to add to the <code>toString</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,405,* @return this
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,407,public ToStringBuilder reflectionAppendArray(Object array) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,408,"this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,409,return this;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,413,* Registers this builder's source object to avoid infinite loops processing circular object references.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,415,void registerObject() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,416,register(this.getObject());
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,420,* Sets whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,422,* @param appendTransients Whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,424,public void setAppendTransients(boolean appendTransients) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,425,this.appendTransients = appendTransients;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,429,* Sets the last super class to stop appending fields for.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,431,* @param clazz The last super class to stop appending fields for.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,433,public void setUpToClass(Class clazz) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,434,this.upToClass = clazz;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,437,public String toString() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,438,if (this.getObject() == null) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,439,return this.getStyle().getNullText();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,441,Class clazz = this.getObject().getClass();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,442,this.appendFieldsIn(clazz);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,443,while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,444,clazz = clazz.getSuperclass();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,445,this.appendFieldsIn(clazz);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,447,return super.toString();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,451,* Unegisters this builder's source object to avoid infinite loops processing circular object references.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,453,void unregisterObject() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,454,unregister(this.getObject());
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,56,mport java.lang.reflect.Field;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,57,mport java.lang.reflect.Modifier;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,58,mport java.util.HashSet;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,59,mport java.util.Set;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,125," @version $Id: ToStringBuilder.java,v 1.21 2003/05/31 22:22:49 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,120,"* @version $Id: ToStringBuilder.java,v 1.22 2003/06/03 03:51:56 ggregory Exp $"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,135, A registry of objects used by <code>reflectionToString</code> methods to detect cyclical object references
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,136, and avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,138,rivate static ThreadLocal reflectionRegistry = new ThreadLocal() {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,139,rotected synchronized Object initialValue() {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,140,"/ The HashSet implementation is not synchronized, which is just what we need here."
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,141,eturn new HashSet();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,164, Returns the registry of objects being traversed by the
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,165, <code>reflectionToString</code> methods in the current thread.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,166, @return Set the registry of objects being traversed
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,168,tatic Set getReflectionRegistry() {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,169,eturn (Set) reflectionRegistry.get();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,173, Returns <code>true</code> if the registry contains the given object.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,174, Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,148,* Forwards to ReflectionToStringBuilder.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,176, @param value The object to lookup in the registry.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,177, @return boolean <code>true</code> if the registry contains the given object.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,179,tatic boolean isRegistered(Object value) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,180,eturn getReflectionRegistry().contains(value);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,184, Appends the fields and values defined by the given object of the
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,185," given Class. If a cycle is detected as an objects is ""toString()'ed"","
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,186, such an object is rendered as if <code>Object.toString()</code>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,187, had been called and not implemented by the object.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,189, @param object  the object to append details of
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,190, @param clazz  the class of object parameter
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,191, @param builder  the builder to append to
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,192, @param useTransients  whether to output transient fields
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,194,"rivate static void reflectionAppend(Object object, Class clazz, ToStringBuilder builder, boolean useTransients) {"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,195,f (isRegistered(object)) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,196,"/ The object has already been appended, therefore we have an object cycle."
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,197,/ Append a simple Object.toString style string. The field name is already appended at this point.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,198,uilder.appendAsObjectToString(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,199,eturn;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,201,ry {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,202,egister(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,203,f (clazz.isArray()) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,204,uilder.reflectionAppendArray(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,205,eturn;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,207,ield[] fields = clazz.getDeclaredFields();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,208,"ield.setAccessible(fields, true);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,209,or (int i = 0; i < fields.length; i++) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,210,ield f = fields[i];
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,211,tring fieldName = f.getName();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,212,f ((fieldName.indexOf('$') == -1)
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,213,& (useTransients || !Modifier.isTransient(f.getModifiers()))
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,214,& (!Modifier.isStatic(f.getModifiers()))) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,215,ry {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,216,/ Warning: Field.get(Object) creates wrappers objects for primitive types.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,217,bject fieldValue = f.get(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,218,f (isRegistered(fieldValue)
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,219,& !f.getType().isPrimitive()) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,220,"/ A known field value has already been appended, therefore we have an object cycle,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,221,/ append a simple Object.toString style string.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,222,"uilder.getStyle().appendFieldStart(builder.getStringBuffer(), fieldName);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,223,uilder.appendAsObjectToString(fieldValue);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,224,/ The recursion out of
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,225,"/    builder.append(fieldName, fieldValue);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,226,/ below will append the field
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,227,/ end marker.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,228, else {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,229,ry {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,230,egister(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,231,"uilder.append(fieldName, fieldValue);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,232, finally {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,233,nregister(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,236, catch (IllegalAccessException ex) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,237,/this can't happen. Would get a Security exception instead
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,238,/throw a runtime exception in case the impossible happens.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,239,"hrow new InternalError(""Unexpected IllegalAccessException: "" + ex.getMessage());"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,243, finally {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,244,nregister(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,251, <p>This method uses reflection to build a suitable
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,252, <code>toString</code> using the default <code>ToStringStyle</code>.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,254, <p>It uses <code>Field.setAccessible</code> to gain access to private
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,255, fields. This means that it will throw a security exception if run
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,256," under a security manger, if the permissions are not set up correctly."
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,257, It is also not as efficient as testing explicitly.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,259," <p>Transient members will be not be included, as they are likely derived.</p>"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,261, <p>Static fields will not be included. Superclass fields will be appended.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,263, @param object  the Object to be output
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,264, @return the String result
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,265, @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,150,* @see ReflectionToStringBuilder#toString(Object)
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,268,"eturn reflectionToString(object, null, false, null);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,153,return ReflectionToStringBuilder.toString(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,272, <p>This method uses reflection to build a suitable
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,273, <code>toString</code>.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,275, <p>It uses <code>Field.setAccessible</code> to gain access to private
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,276, fields. This means that it will throw a security exception if run
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,277," under a security manger, if the permissions are not set up correctly."
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,278, It is also not as efficient as testing explicitly.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,280," <p>Transient members will be not be included, as they are likely"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,281, derived.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,283, <p>Static fields will not be included. Superclass fields will be appended.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,285," <p>If the style is <code>null</code>, the default"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,286, <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,157,* Forwards to ReflectionToStringBuilder.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,288, @param object  the Object to be output
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,289," @param style  the style of the <code>toString</code> to create,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,290,  may be <code>null</code>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,291, @return the String result
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,292, @throws IllegalArgumentException if the Object or
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,293,  <code>ToStringStyle</code> is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,159,"* @see ReflectionToStringBuilder#toString(Object,ToStringStyle)"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,296,"eturn reflectionToString(object, style, false, null);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,162,"return ReflectionToStringBuilder.toString(object, style);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,300, <p>This method uses reflection to build a suitable
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,301, <code>toString</code>.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,303, <p>It uses <code>Field.setAccessible</code> to gain access to private
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,304, fields. This means that it will throw a security exception if run
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,305," under a security manger, if the permissions are not set up correctly."
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,306, It is also not as efficient as testing explicitly. </p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,308," <p>If the <code>outputTransients</code> is <code>true</code>,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,309," transient members will be output, otherwise they are ignored,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,310," as they are likely derived fields, and not part of the value of the"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,311, Object.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,313, <p>Static fields will not be included. Superclass fields will be appended.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,315, <p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,316," If the style is <code>null</code>, the default"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,317, <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,166,* Forwards to ReflectionToStringBuilder.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,319, @param object  the Object to be output
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,320," @param style  the style of the <code>toString</code> to create,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,321,  may be <code>null</code>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,322, @param outputTransients  whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,323, @return the String result
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,324, @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,168,"* @see ReflectionToStringBuilder#toString(Object,ToStringStyle,boolean)"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,327,"eturn reflectionToString(object, style, outputTransients, null);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,171,"return ReflectionToStringBuilder.toString(object, style, outputTransients, null);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,331, <p>This method uses reflection to build a suitable
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,332, <code>toString</code>.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,334, <p>It uses <code>Field.setAccessible</code> to gain access to private
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,335, fields. This means that it will throw a security exception if run
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,336," under a security manger, if the permissions are not set up correctly."
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,337, It is also not as efficient as testing explicitly. </p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,339," <p>If the <code>outputTransients</code> is <code>true</code>,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,340," transient members will be output, otherwise they are ignored,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,341," as they are likely derived fields, and not part of the value of the"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,342, Object.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,344, <p>Static fields will not be included. Superclass fields will be appended
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,345, up to and including the specified superclass. A null superclass is treated
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,346, as java.lang.Object.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,348," <p>If the style is <code>null</code>, the default"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,349, <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,175,* Forwards to ReflectionToStringBuilder.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,351, @param object  the Object to be output
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,352," @param style  the style of the <code>toString</code> to create,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,353,  may be <code>null</code>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,354, @param outputTransients  whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,355," @param reflectUpToClass  the superclass to reflect up to (inclusive), may be null"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,356, @return the String result
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,357, @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,177,"* @see ReflectionToStringBuilder#toString(Object,ToStringStyle,boolean,Class)"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,364,f (style == null) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,365,tyle = getDefaultStyle();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,367,f (object == null) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,368,eturn style.getNullText();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,370,"oStringBuilder builder = new ToStringBuilder(object, style);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,371,lass clazz = object.getClass();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,372,"eflectionAppend(object, clazz, builder, outputTransients);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,373,hile (clazz.getSuperclass() != null && clazz != reflectUpToClass) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,374,lazz = clazz.getSuperclass();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,375,"eflectionAppend(object, clazz, builder, outputTransients);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,377,eturn builder.toString();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,381, Registers the given object.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,382, Used by the reflection methods to avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,384, @param value The object to register.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,386,tatic void register(Object value) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,387,etReflectionRegistry().add(value);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,184,"return ReflectionToStringBuilder.toString(object, style, outputTransients, reflectUpToClass);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,404, Unregisters the given object.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,405, Used by the reflection methods to avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,407, @param value The object to unregister.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,409,tatic void unregister(Object value) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,410,etReflectionRegistry().remove(value);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,414, Current toString buffer
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,201,* Current toString buffer.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,419, The object being output
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,206,* The object being output.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,424, The style of output to use
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,211,* The style of output to use.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1261, <p>Append to the <code>toString</code> an <code>Object</code>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1262, array.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1264, @param array  the array to add to the <code>toString</code>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1265, @return this
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1267,ublic ToStringBuilder reflectionAppendArray(Object array) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1268,"tyle.reflectionAppendArrayDetail(buffer, null, array);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1269,eturn this;
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1061,* Returns the object being output.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1063,* @return The object being output.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1065,public Object getObject() {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1066,return object;
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,84,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,85," @version $Id: ToStringStyle.java,v 1.13 2003/04/18 04:57:19 bayard Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,86,"* @version $Id: ToStringStyle.java,v 1.14 2003/06/03 03:51:56 ggregory Exp $"
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,156, The detail for array content
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,157,* The detail for array content.
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,332,f (ToStringBuilder.isRegistered(value)
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,333,if (ReflectionToStringBuilder.isRegistered(value)
