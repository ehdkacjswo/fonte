is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,34,"uper(""Convergence failed"", new Object[0]);"
True,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,34,"super(""Convergence failed"", null);"
False,src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,38,"uper(isCardan ? ""Cardan angles singularity"" : ""Euler angles singularity"", new Object[0]);"
True,src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,38,"super(isCardan ? ""Cardan angles singularity"" : ""Euler angles singularity"", null);"
False,src/java/org/apache/commons/math/linear/RankDeficientMatrixException.java,src/java/org/apache/commons/math/linear/RankDeficientMatrixException.java,34,"uper(""matrix is rank-deficient"", new Object[0]);"
True,src/java/org/apache/commons/math/linear/RankDeficientMatrixException.java,src/java/org/apache/commons/math/linear/RankDeficientMatrixException.java,34,"super(""matrix is rank-deficient"", null);"
False,src/java/org/apache/commons/math/linear/SingularMatrixException.java,src/java/org/apache/commons/math/linear/SingularMatrixException.java,34,"uper(""matrix is singular"", new Object[0]);"
True,src/java/org/apache/commons/math/linear/SingularMatrixException.java,src/java/org/apache/commons/math/linear/SingularMatrixException.java,34,"super(""matrix is singular"", null);"
False,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,39,"uper(""not positive definite matrix"", new Object[0]);"
True,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java,39,"super(""not positive definite matrix"", null);"
False,src/test/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/org/apache/commons/math/MathConfigurationExceptionTest.java,33,ssertNull(ex.getMessage(Locale.FRENCH));
True,src/test/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/org/apache/commons/math/MathConfigurationExceptionTest.java,33,"assertEquals(0, ex.getMessage(Locale.FRENCH).length());"
False,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,36,ssertNull(ex.getMessage(Locale.FRENCH));
True,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,36,"assertEquals(0, ex.getMessage(Locale.FRENCH).length());"
False,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,82,"athException cause = new MathConfigurationException(inMsg, new Object[0]);"
False,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,83,"athException ex = new MathException(outMsg, new Object[0], cause);"
True,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,82,"MathException cause = new MathConfigurationException(inMsg, null);"
True,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,83,"MathException ex = new MathException(outMsg, null, cause);"
False,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,107,"athException cause = new MathConfigurationException(inMsg, new Object[0]);"
False,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,108,"athException ex = new MathException(outMsg, new Object[0], cause);"
True,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,107,"MathException cause = new MathConfigurationException(inMsg, null);"
True,src/test/org/apache/commons/math/MathExceptionTest.java,src/test/org/apache/commons/math/MathExceptionTest.java,108,"MathException ex = new MathException(outMsg, null, cause);"
False,src/test/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,32,"nvalidMatrixException ex = new InvalidMatrixException(msg, new Object[0]);"
True,src/test/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,32,"InvalidMatrixException ex = new InvalidMatrixException(msg, null);"
False,src/test/org/apache/commons/math/linear/MatrixIndexExceptionTest.java,src/test/org/apache/commons/math/linear/MatrixIndexExceptionTest.java,32,"atrixIndexException ex = new MatrixIndexException(msg, new Object[0]);"
True,src/test/org/apache/commons/math/linear/MatrixIndexExceptionTest.java,src/test/org/apache/commons/math/linear/MatrixIndexExceptionTest.java,32,"MatrixIndexException ex = new MatrixIndexException(msg, null);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,662,"hrow new InvalidMatrixException(""incorrect dimensions"", new Object[0]);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,662,"throw new InvalidMatrixException(""incorrect dimensions"", null);"
