is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,17,package org.apache.commons.math.ode.nonstiff;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,19,import org.apache.commons.math.ode.DerivativeException;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,20,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,21,import org.apache.commons.math.ode.IntegratorException;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,22,import org.apache.commons.math.ode.sampling.StepHandler;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,23,import org.apache.commons.math.ode.sampling.StepInterpolator;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,27,public class AbstractStepInterpolatorTest extends TestCase {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,29,protected AbstractStepInterpolatorTest(String name) {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,30,super(name);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,33,"protected void checkDerivativesConsistency(final FirstOrderIntegrator integrator,"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,34,"final TestProblemAbstract problem,"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,35,final double threshold)
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,36,"throws DerivativeException, IntegratorException {"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,37,integrator.setStepHandler(new StepHandler() {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,39,private static final long serialVersionUID = 2462564234755682953L;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,41,public boolean requiresDenseOutput() {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,42,return true;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,45,"public void handleStep(StepInterpolator interpolator, boolean isLast)"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,46,throws DerivativeException {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,48,final double h = 0.001 * (interpolator.getCurrentTime() - interpolator.getPreviousTime());
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,49,final double t = interpolator.getCurrentTime() - 300 * h;
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,51,interpolator.setInterpolatedTime(t - 4 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,52,final double[] yM4h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,53,interpolator.setInterpolatedTime(t - 3 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,54,final double[] yM3h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,55,interpolator.setInterpolatedTime(t - 2 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,56,final double[] yM2h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,57,interpolator.setInterpolatedTime(t - h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,58,final double[] yM1h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,59,interpolator.setInterpolatedTime(t + h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,60,final double[] yP1h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,61,interpolator.setInterpolatedTime(t + 2 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,62,final double[] yP2h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,63,interpolator.setInterpolatedTime(t + 3 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,64,final double[] yP3h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,65,interpolator.setInterpolatedTime(t + 4 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,66,final double[] yP4h = interpolator.getInterpolatedState().clone();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,68,interpolator.setInterpolatedTime(t);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,69,final double[] yDot = interpolator.getInterpolatedDerivatives();
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,71,for (int i = 0; i < yDot.length; ++i) {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,72,final double approYDot = ( -3 * (yP4h[i] - yM4h[i]) +
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,73,32 * (yP3h[i] - yM3h[i]) +
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,74,-168 * (yP2h[i] - yM2h[i]) +
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,75,672 * (yP1h[i] - yM1h[i])) / (840 * h);
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,76,"assertEquals(approYDot, yDot[i], threshold);"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,81,public void reset() {
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,86,"integrator.integrate(problem,"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,87,"problem.getInitialTime(), problem.getInitialState(),"
True,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AbstractStepInterpolatorTest.java,88,"problem.getFinalTime(), new double[problem.getDimension()]);"
