is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,17,ackage org.apache.commons.math.exception.util;
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,19,mport java.text.MessageFormat;
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,20,mport java.util.Locale;
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,23, Class for constructing localized messages.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,25, @since 2.2
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,26, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,28,ublic class MessageFactory {
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,30, Class contains only static methods.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,32,rivate MessageFactory() {}
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,35, Builds a message string by from a pattern and its arguments.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,37, @param locale Locale in which the message should be translated.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,38, @param pattern Format specifier.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,39, @param arguments Format arguments.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,40, @return a localized message string.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,42,"ublic static String buildMessage(Locale locale,"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,43,"ocalizable pattern,"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,44,bject ... arguments) {
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,45,"eturn buildMessage(locale, null, pattern, arguments);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,49, Builds a message string by from two patterns (specific and general) and
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,50, an argument list.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,52, @param locale Locale in which the message should be translated.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,53, @param specific Format specifier (may be null).
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,54, @param general Format specifier (may be null).
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,55, @param arguments Format arguments. They will be substituted in
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,56, <em>both</em> the {@code general} and {@code specific} format specifiers.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,57, @return a localized message string.
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,59,"ublic static String buildMessage(Locale locale,"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,60,"ocalizable specific,"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,61,"ocalizable general,"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,62,bject ... arguments) {
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,63,inal StringBuilder sb = new StringBuilder();
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,64,f (general != null) {
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,65,"inal MessageFormat fmt = new MessageFormat(general.getLocalizedString(locale), locale);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,66,b.append(fmt.format(arguments));
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,68,f (specific != null) {
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,69,f (general != null) {
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,70,"b.append("": "");"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,72,"inal MessageFormat fmt = new MessageFormat(specific.getLocalizedString(locale), locale);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,73,b.append(fmt.format(arguments));
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,76,eturn sb.toString();
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,17,ackage org.apache.commons.math.exception.util;
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,19,mport java.util.Locale;
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,21,mport org.junit.Assert;
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,22,mport org.junit.Test;
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,24,ublic class MessageFactoryTest {
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,26,Test
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,27,ublic void testSpecificGeneral() {
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,28,"ocalizable specific = new DummyLocalizable(""specific {0} - {1} - {2}"");"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,29,"ocalizable general  = new DummyLocalizable(""general  {0} / {1}"");"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,30,"tring message = MessageFactory.buildMessage(Locale.FRENCH, specific, general,"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,31,", 1, 2, 'a', 'b');"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,32,"ssert.assertEquals(""general  0 / 1: specific 0 - 1 - 2"", message);"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,35,Test
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,36,ublic void testNullSpecific() {
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,37,"ocalizable general  = new DummyLocalizable(""general  {0} / {1}"");"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,38,"tring message = MessageFactory.buildMessage(Locale.FRENCH, null, general,"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,39,", 1, 2, 'a', 'b');"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,40,"ssert.assertEquals(""general  0 / 1"", message);"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,43,Test
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,44,ublic void testNullGeneral() {
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,45,"ocalizable specific = new DummyLocalizable(""specific {0} - {1} - {2}"");"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,46,"tring message = MessageFactory.buildMessage(Locale.FRENCH, specific, null,"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,47,", 1, 2, 'a', 'b');"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,48,"ssert.assertEquals(""specific 0 - 1 - 2"", message);"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,51,Test
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,52,ublic void testNull() {
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,53,"tring message = MessageFactory.buildMessage(Locale.FRENCH, null, null, ""nothing"");"
False,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,54,"ssert.assertEquals("""", message);"
