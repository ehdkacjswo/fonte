is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,170,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,171,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,172,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,173, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,174,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,170,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,171,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,199,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,200,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,201,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,202, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,203,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,195,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,196,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,215,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,216,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,217,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,218, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,219,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,207,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,208,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,231,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,232,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,233,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,234, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,235,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,219,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,220,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,247,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,248,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,249,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,250, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,251,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,231,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,232,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,263,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,264,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,265,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,266, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,267,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,243,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,244,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,279,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,280,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,281,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,282, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,283,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,255,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,256,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,295,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,296,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,297,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,298, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,299,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,267,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,268,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,311,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,312,rrayRealVector actual = realVectorFormatSquare.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,313,"ssert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,314, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,315,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,279,ArrayRealVector actual = realVectorFormatSquare.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,280,"Assert.assertEquals(expected, actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,322,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,323,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,324,"ssert.assertEquals(new ArrayRealVector(new double[] {Double.NaN, Double.NaN, Double.NaN}), actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,325, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,326,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,286,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,287,"Assert.assertEquals(new ArrayRealVector(new double[] {Double.NaN, Double.NaN, Double.NaN}), actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,333,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,334,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,335,ssert.assertEquals(new ArrayRealVector(new double[] {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,336,"ouble.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,337,"), actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,338, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,339,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,293,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,294,Assert.assertEquals(new ArrayRealVector(new double[] {
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,295,"Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY"
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,296,"}), actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,346,ry {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,347,rrayRealVector actual = realVectorFormat.parse(source);
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,348,ssert.assertEquals(new ArrayRealVector(new double[] {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,349,"ouble.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,350,"), actual);"
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,351, catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,352,ssert.fail(ex.getMessage());
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,302,ArrayRealVector actual = realVectorFormat.parse(source);
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,303,Assert.assertEquals(new ArrayRealVector(new double[] {
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,304,"Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY"
True,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java,305,"}), actual);"
