is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,18,package org.apache.commons.math.estimation;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,20,import java.util.ArrayList;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,21,import java.util.HashSet;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,22,import java.util.Iterator;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,24,import org.apache.commons.math.estimation.EstimatedParameter;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,25,import org.apache.commons.math.estimation.EstimationException;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,26,import org.apache.commons.math.estimation.EstimationProblem;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,27,import org.apache.commons.math.estimation.GaussNewtonEstimator;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,28,import org.apache.commons.math.estimation.WeightedMeasurement;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,30,import junit.framework.*;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,33,* <p>Some of the unit tests are re-implementations of the MINPACK <a
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,34,"* href=""http://www.netlib.org/minpack/ex/file17"">file17</a> and <a"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,35,"* href=""http://www.netlib.org/minpack/ex/file22"">file22</a> test files."
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,36,* The redistribution policy for MINPACK is available <a
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,37,"* href=""http://www.netlib.org/minpack/disclaimer"">here</a>, for"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,38,"* convenience, it is reproduced below.</p>"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,40,"* <table border=""0"" width=""80%"" cellpadding=""10"" align=""center"" bgcolor=""#E0E0E0"">"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,41,* <tr><td>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,42,*    Minpack Copyright Notice (1999) University of Chicago.
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,43,*    All rights reserved
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,44,* </td></tr>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,45,* <tr><td>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,46,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,47,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,48,* are met:
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,49,* <ol>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,50,*  <li>Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,51,"*      notice, this list of conditions and the following disclaimer.</li>"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,52,* <li>Redistributions in binary form must reproduce the above
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,53,"*     copyright notice, this list of conditions and the following"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,54,*     disclaimer in the documentation and/or other materials provided
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,55,*     with the distribution.</li>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,56,"* <li>The end-user documentation included with the redistribution, if any,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,57,*     must include the following acknowledgment:
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,58,*     <code>This product includes software developed by the University of
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,59,"*           Chicago, as Operator of Argonne National Laboratory.</code>"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,60,"*     Alternately, this acknowledgment may appear in the software itself,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,61,*     if and wherever such third-party acknowledgments normally appear.</li>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,62,"* <li><strong>WARRANTY DISCLAIMER. THE SOFTWARE IS SUPPLIED ""AS IS"""
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,63,"*     WITHOUT WARRANTY OF ANY KIND. THE COPYRIGHT HOLDER, THE"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,64,"*     UNITED STATES, THE UNITED STATES DEPARTMENT OF ENERGY, AND"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,65,"*     THEIR EMPLOYEES: (1) DISCLAIM ANY WARRANTIES, EXPRESS OR"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,66,"*     IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,67,"*     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,68,"*     OR NON-INFRINGEMENT, (2) DO NOT ASSUME ANY LEGAL LIABILITY"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,69,"*     OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,70,"*     USEFULNESS OF THE SOFTWARE, (3) DO NOT REPRESENT THAT USE OF"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,71,"*     THE SOFTWARE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS, (4)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,72,*     DO NOT WARRANT THAT THE SOFTWARE WILL FUNCTION
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,73,"*     UNINTERRUPTED, THAT IT IS ERROR-FREE OR THAT ANY ERRORS WILL"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,74,*     BE CORRECTED.</strong></li>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,75,* <li><strong>LIMITATION OF LIABILITY. IN NO EVENT WILL THE COPYRIGHT
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,76,"*     HOLDER, THE UNITED STATES, THE UNITED STATES DEPARTMENT OF"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,77,"*     ENERGY, OR THEIR EMPLOYEES: BE LIABLE FOR ANY INDIRECT,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,78,"*     INCIDENTAL, CONSEQUENTIAL, SPECIAL OR PUNITIVE DAMAGES OF"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,79,"*     ANY KIND OR NATURE, INCLUDING BUT NOT LIMITED TO LOSS OF"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,80,"*     PROFITS OR LOSS OF DATA, FOR ANY REASON WHATSOEVER, WHETHER"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,81,"*     SUCH LIABILITY IS ASSERTED ON THE BASIS OF CONTRACT, TORT"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,82,"*     (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,83,*     EVEN IF ANY OF SAID PARTIES HAS BEEN WARNED OF THE
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,84,*     POSSIBILITY OF SUCH LOSS OR DAMAGES.</strong></li>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,85,* <ol></td></tr>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,86,* </table>
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,88,* @author Argonne National Laboratory. MINPACK project. March 1980 (original fortran minpack tests)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,89,* @author Burton S. Garbow (original fortran minpack tests)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,90,* @author Kenneth E. Hillstrom (original fortran minpack tests)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,91,* @author Jorge J. More (original fortran minpack tests)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,92,* @author Luc Maisonobe (non-minpack tests and minpack tests Java translation)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,94,public class GaussNewtonEstimatorTest
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,95,extends TestCase {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,97,public GaussNewtonEstimatorTest(String name) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,98,super(name);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,101,public void testTrivial() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,102,LinearProblem problem =
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,103,new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,104,"new LinearMeasurement(new double[] {2},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,105,new EstimatedParameter[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,106,"new EstimatedParameter(""p0"", 0)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,107,"}, 3.0)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,109,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,110,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,111,"assertEquals(0, estimator.getRMS(problem), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,112,"assertEquals(1.5,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,113,"problem.getUnboundParameters()[0].getEstimate(),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,114,1.0e-10);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,117,public void testQRColumnsPermutation() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,119,EstimatedParameter[] x = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,120,"new EstimatedParameter(""p0"", 0), new EstimatedParameter(""p1"", 0)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,122,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,123,"new LinearMeasurement(new double[] { 1.0, -1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,124,"new EstimatedParameter[] { x[0], x[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,125,"4.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,126,"new LinearMeasurement(new double[] { 2.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,127,"new EstimatedParameter[] { x[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,128,"6.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,129,"new LinearMeasurement(new double[] { 1.0, -2.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,130,"new EstimatedParameter[] { x[0], x[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,131,1.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,134,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,135,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,136,"assertEquals(0, estimator.getRMS(problem), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,137,"assertEquals(7.0, x[0].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,138,"assertEquals(3.0, x[1].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,142,public void testNoDependency() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,143,EstimatedParameter[] p = new EstimatedParameter[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,144,"new EstimatedParameter(""p0"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,145,"new EstimatedParameter(""p1"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,146,"new EstimatedParameter(""p2"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,147,"new EstimatedParameter(""p3"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,148,"new EstimatedParameter(""p4"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,149,"new EstimatedParameter(""p5"", 0)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,151,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,152,"new LinearMeasurement(new double[] {2}, new EstimatedParameter[] { p[0] }, 0.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,153,"new LinearMeasurement(new double[] {2}, new EstimatedParameter[] { p[1] }, 1.1),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,154,"new LinearMeasurement(new double[] {2}, new EstimatedParameter[] { p[2] }, 2.2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,155,"new LinearMeasurement(new double[] {2}, new EstimatedParameter[] { p[3] }, 3.3),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,156,"new LinearMeasurement(new double[] {2}, new EstimatedParameter[] { p[4] }, 4.4),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,157,"new LinearMeasurement(new double[] {2}, new EstimatedParameter[] { p[5] }, 5.5)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,159,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,160,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,161,"assertEquals(0, estimator.getRMS(problem), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,162,for (int i = 0; i < p.length; ++i) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,163,"assertEquals(0.55 * i, p[i].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,167,public void testOneSet() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,169,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,170,"new EstimatedParameter(""p0"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,171,"new EstimatedParameter(""p1"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,172,"new EstimatedParameter(""p2"", 0)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,174,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,175,"new LinearMeasurement(new double[] { 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,176,"new EstimatedParameter[] { p[0] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,177,"1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,178,"new LinearMeasurement(new double[] { -1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,179,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,180,"1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,181,"new LinearMeasurement(new double[] { -1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,182,"new EstimatedParameter[] { p[1], p[2] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,183,1.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,186,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,187,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,188,"assertEquals(0, estimator.getRMS(problem), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,189,"assertEquals(1.0, p[0].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,190,"assertEquals(2.0, p[1].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,191,"assertEquals(3.0, p[2].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,195,public void testTwoSets() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,196,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,197,"new EstimatedParameter(""p0"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,198,"new EstimatedParameter(""p1"", 1),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,199,"new EstimatedParameter(""p2"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,200,"new EstimatedParameter(""p3"", 3),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,201,"new EstimatedParameter(""p4"", 4),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,202,"new EstimatedParameter(""p5"", 5)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,205,double epsilon = 1.0e-7;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,206,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,208,// 4 elements sub-problem
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,209,"new LinearMeasurement(new double[] {  2.0,  1.0,  4.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,210,"new EstimatedParameter[] { p[0], p[1], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,211,"2.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,212,"new LinearMeasurement(new double[] { -4.0, -2.0,   3.0, -7.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,213,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,214,"-9.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,215,"new LinearMeasurement(new double[] {  4.0,  1.0,  -2.0,  8.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,216,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,217,"2.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,218,"new LinearMeasurement(new double[] { -3.0, -12.0, -1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,219,"new EstimatedParameter[] { p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,220,"2.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,222,// 2 elements sub-problem
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,223,"new LinearMeasurement(new double[] { epsilon, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,224,"new EstimatedParameter[] { p[4], p[5] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,225,"1.0 + epsilon * epsilon),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,226,"new LinearMeasurement(new double[] {  1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,227,"new EstimatedParameter[] { p[4], p[5] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,228,2.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,232,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,233,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,234,"assertEquals(0, estimator.getRMS(problem), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,235,"assertEquals( 3.0, p[0].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,236,"assertEquals( 4.0, p[1].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,237,"assertEquals(-1.0, p[2].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,238,"assertEquals(-2.0, p[3].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,239,"assertEquals( 1.0 + epsilon, p[4].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,240,"assertEquals( 1.0 - epsilon, p[5].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,244,public void testNonInversible() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,246,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,247,"new EstimatedParameter(""p0"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,248,"new EstimatedParameter(""p1"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,249,"new EstimatedParameter(""p2"", 0)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,251,LinearMeasurement[] m = new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,252,"new LinearMeasurement(new double[] {  1.0, 2.0, -3.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,253,"new EstimatedParameter[] { p[0], p[1], p[2] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,254,"1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,255,"new LinearMeasurement(new double[] {  2.0, 1.0,  3.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,256,"new EstimatedParameter[] { p[0], p[1], p[2] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,257,"1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,258,"new LinearMeasurement(new double[] { -3.0, -9.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,259,"new EstimatedParameter[] { p[0], p[2] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,260,1.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,262,LinearProblem problem = new LinearProblem(m);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,264,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,265,try {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,266,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,267,"fail(""an exception should have been caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,268,} catch (EstimationException ee) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,269,// expected behavior
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,270,} catch (Exception e) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,271,"fail(""wrong exception type caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,275,public void testIllConditioned() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,276,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,277,"new EstimatedParameter(""p0"", 0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,278,"new EstimatedParameter(""p1"", 1),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,279,"new EstimatedParameter(""p2"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,280,"new EstimatedParameter(""p3"", 3)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,283,LinearProblem problem1 = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,284,"new LinearMeasurement(new double[] { 10.0, 7.0,  8.0,  7.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,285,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,286,"32.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,287,"new LinearMeasurement(new double[] {  7.0, 5.0,  6.0,  5.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,288,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,289,"23.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,290,"new LinearMeasurement(new double[] {  8.0, 6.0, 10.0,  9.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,291,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,292,"33.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,293,"new LinearMeasurement(new double[] {  7.0, 5.0,  9.0, 10.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,294,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,295,31.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,297,"GaussNewtonEstimator estimator1 = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,298,estimator1.estimate(problem1);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,299,"assertEquals(0, estimator1.getRMS(problem1), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,300,"assertEquals(1.0, p[0].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,301,"assertEquals(1.0, p[1].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,302,"assertEquals(1.0, p[2].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,303,"assertEquals(1.0, p[3].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,305,LinearProblem problem2 = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,306,"new LinearMeasurement(new double[] { 10.0, 7.0,  8.1,  7.2 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,307,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,308,"32.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,309,"new LinearMeasurement(new double[] {  7.08, 5.04,  6.0,  5.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,310,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,311,"23.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,312,"new LinearMeasurement(new double[] {  8.0, 5.98, 9.89,  9.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,313,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,314,"33.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,315,"new LinearMeasurement(new double[] {  6.99, 4.99,  9.0, 9.98 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,316,"new EstimatedParameter[] { p[0], p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,317,31.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,319,"GaussNewtonEstimator estimator2 = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,320,estimator2.estimate(problem2);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,321,"assertEquals(0, estimator2.getRMS(problem2), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,322,"assertEquals(-81.0, p[0].getEstimate(), 1.0e-8);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,323,"assertEquals(137.0, p[1].getEstimate(), 1.0e-8);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,324,"assertEquals(-34.0, p[2].getEstimate(), 1.0e-8);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,325,"assertEquals( 22.0, p[3].getEstimate(), 1.0e-8);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,329,public void testMoreEstimatedParametersSimple() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,331,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,332,"new EstimatedParameter(""p0"", 7),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,333,"new EstimatedParameter(""p1"", 6),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,334,"new EstimatedParameter(""p2"", 5),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,335,"new EstimatedParameter(""p3"", 4)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,337,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,338,"new LinearMeasurement(new double[] { 3.0, 2.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,339,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,340,"7.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,341,"new LinearMeasurement(new double[] { 1.0, -1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,342,"new EstimatedParameter[] { p[1], p[2], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,343,"3.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,344,"new LinearMeasurement(new double[] { 2.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,345,"new EstimatedParameter[] { p[0], p[2] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,346,5.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,349,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,350,try {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,351,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,352,"fail(""an exception should have been caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,353,} catch (EstimationException ee) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,354,// expected behavior
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,355,} catch (Exception e) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,356,"fail(""wrong exception type caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,361,public void testMoreEstimatedParametersUnsorted() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,362,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,363,"new EstimatedParameter(""p0"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,364,"new EstimatedParameter(""p1"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,365,"new EstimatedParameter(""p2"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,366,"new EstimatedParameter(""p3"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,367,"new EstimatedParameter(""p4"", 2),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,368,"new EstimatedParameter(""p5"", 2)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,370,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,371,"new LinearMeasurement(new double[] { 1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,372,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,373,"3.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,374,"new LinearMeasurement(new double[] { 1.0, 1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,375,"new EstimatedParameter[] { p[2], p[3], p[4] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,376,"12.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,377,"new LinearMeasurement(new double[] { 1.0, -1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,378,"new EstimatedParameter[] { p[4], p[5] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,379,"-1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,380,"new LinearMeasurement(new double[] { 1.0, -1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,381,"new EstimatedParameter[] { p[3], p[2], p[5] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,382,"7.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,383,"new LinearMeasurement(new double[] { 1.0, -1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,384,"new EstimatedParameter[] { p[4], p[3] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,385,1.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,388,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,389,try {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,390,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,391,"fail(""an exception should have been caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,392,} catch (EstimationException ee) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,393,// expected behavior
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,394,} catch (Exception e) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,395,"fail(""wrong exception type caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,400,public void testRedundantEquations() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,401,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,402,"new EstimatedParameter(""p0"", 1),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,403,"new EstimatedParameter(""p1"", 1)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,405,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,406,"new LinearMeasurement(new double[] { 1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,407,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,408,"3.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,409,"new LinearMeasurement(new double[] { 1.0, -1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,410,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,411,"1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,412,"new LinearMeasurement(new double[] { 1.0, 3.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,413,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,414,5.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,417,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,418,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,419,"assertEquals(0, estimator.getRMS(problem), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,420,"assertEquals(2.0, p[0].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,421,"assertEquals(1.0, p[1].getEstimate(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,425,public void testInconsistentEquations() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,426,EstimatedParameter[] p = {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,427,"new EstimatedParameter(""p0"", 1),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,428,"new EstimatedParameter(""p1"", 1)"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,430,LinearProblem problem = new LinearProblem(new LinearMeasurement[] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,431,"new LinearMeasurement(new double[] { 1.0, 1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,432,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,433,"3.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,434,"new LinearMeasurement(new double[] { 1.0, -1.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,435,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,436,"1.0),"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,437,"new LinearMeasurement(new double[] { 1.0, 3.0 },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,438,"new EstimatedParameter[] { p[0], p[1] },"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,439,4.0)
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,442,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,443,estimator.estimate(problem);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,444,assertTrue(estimator.getRMS(problem) > 0.1);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,448,public void testCircleFitting() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,449,"Circle circle = new Circle(98.680, 47.345);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,450,"circle.addPoint( 30.0,  68.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,451,"circle.addPoint( 50.0,  -6.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,452,"circle.addPoint(110.0, -20.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,453,"circle.addPoint( 35.0,  15.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,454,"circle.addPoint( 45.0,  97.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,455,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-10, 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,456,estimator.estimate(circle);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,457,double rms = estimator.getRMS(circle);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,458,"assertEquals(1.768262623567235,  Math.sqrt(circle.getM()) * rms,  1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,459,"assertEquals(69.96016176931406, circle.getRadius(), 1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,460,"assertEquals(96.07590211815305, circle.getX(),      1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,461,"assertEquals(48.13516790438953, circle.getY(),      1.0e-10);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,464,public void testCircleFittingBadInit() throws EstimationException {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,465,"Circle circle = new Circle(-12, -12);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,466,double[][] points = new double[][] {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,467,"{-0.312967,  0.072366}, {-0.339248,  0.132965}, {-0.379780,  0.202724},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,468,"{-0.390426,  0.260487}, {-0.361212,  0.328325}, {-0.346039,  0.392619},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,469,"{-0.280579,  0.444306}, {-0.216035,  0.470009}, {-0.149127,  0.493832},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,470,"{-0.075133,  0.483271}, {-0.007759,  0.452680}, { 0.060071,  0.410235},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,471,"{ 0.103037,  0.341076}, { 0.118438,  0.273884}, { 0.131293,  0.192201},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,472,"{ 0.115869,  0.129797}, { 0.072223,  0.058396}, { 0.022884,  0.000718},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,473,"{-0.053355, -0.020405}, {-0.123584, -0.032451}, {-0.216248, -0.032862},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,474,"{-0.278592, -0.005008}, {-0.337655,  0.056658}, {-0.385899,  0.112526},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,475,"{-0.405517,  0.186957}, {-0.415374,  0.262071}, {-0.387482,  0.343398},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,476,"{-0.347322,  0.397943}, {-0.287623,  0.458425}, {-0.223502,  0.475513},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,477,"{-0.135352,  0.478186}, {-0.061221,  0.483371}, { 0.003711,  0.422737},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,478,"{ 0.065054,  0.375830}, { 0.108108,  0.297099}, { 0.123882,  0.222850},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,479,"{ 0.117729,  0.134382}, { 0.085195,  0.056820}, { 0.029800, -0.019138},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,480,"{-0.027520, -0.072374}, {-0.102268, -0.091555}, {-0.200299, -0.106578},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,481,"{-0.292731, -0.091473}, {-0.356288, -0.051108}, {-0.420561,  0.014926},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,482,"{-0.471036,  0.074716}, {-0.488638,  0.182508}, {-0.485990,  0.254068},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,483,"{-0.463943,  0.338438}, {-0.406453,  0.404704}, {-0.334287,  0.466119},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,484,"{-0.254244,  0.503188}, {-0.161548,  0.495769}, {-0.075733,  0.495560},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,485,"{ 0.001375,  0.434937}, { 0.082787,  0.385806}, { 0.115490,  0.323807},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,486,"{ 0.141089,  0.223450}, { 0.138693,  0.131703}, { 0.126415,  0.049174},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,487,"{ 0.066518, -0.010217}, {-0.005184, -0.070647}, {-0.080985, -0.103635},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,488,"{-0.177377, -0.116887}, {-0.260628, -0.100258}, {-0.335756, -0.056251},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,489,"{-0.405195, -0.000895}, {-0.444937,  0.085456}, {-0.484357,  0.175597},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,490,"{-0.472453,  0.248681}, {-0.438580,  0.347463}, {-0.402304,  0.422428},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,491,"{-0.326777,  0.479438}, {-0.247797,  0.505581}, {-0.152676,  0.519380},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,492,"{-0.071754,  0.516264}, { 0.015942,  0.472802}, { 0.076608,  0.419077},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,493,"{ 0.127673,  0.330264}, { 0.159951,  0.262150}, { 0.153530,  0.172681},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,494,"{ 0.140653,  0.089229}, { 0.078666,  0.024981}, { 0.023807, -0.037022},"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,495,"{-0.048837, -0.077056}, {-0.127729, -0.075338}, {-0.221271, -0.067526}"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,497,for (int i = 0; i < points.length; ++i) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,498,"circle.addPoint(points[i][0], points[i][1]);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,500,"GaussNewtonEstimator estimator = new GaussNewtonEstimator(100, 1.0e-6, 1.0e-6);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,501,try {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,502,estimator.estimate(circle);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,503,"fail(""an exception should have been caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,504,} catch (EstimationException ee) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,505,// expected behavior
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,506,} catch (Exception e) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,507,"fail(""wrong exception type caught"");"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,511,private static class LinearProblem extends SimpleEstimationProblem {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,513,public LinearProblem(LinearMeasurement[] measurements) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,514,HashSet set = new HashSet();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,515,for (int i = 0; i < measurements.length; ++i) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,516,addMeasurement(measurements[i]);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,517,EstimatedParameter[] parameters = measurements[i].getParameters();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,518,for (int j = 0; j < parameters.length; ++j) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,519,set.add(parameters[j]);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,522,for (Iterator iterator = set.iterator(); iterator.hasNext();) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,523,addParameter((EstimatedParameter) iterator.next());
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,529,private static class LinearMeasurement extends WeightedMeasurement {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,531,"public LinearMeasurement(double[] factors, EstimatedParameter[] parameters,"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,532,double setPoint) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,533,"super(1.0, setPoint, true);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,534,this.factors = factors;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,535,this.parameters = parameters;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,536,setIgnored(false);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,539,public double getTheoreticalValue() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,540,double v = 0;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,541,for (int i = 0; i < factors.length; ++i) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,542,v += factors[i] * parameters[i].getEstimate();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,544,return v;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,547,public double getPartial(EstimatedParameter parameter) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,548,for (int i = 0; i < parameters.length; ++i) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,549,if (parameters[i] == parameter) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,550,return factors[i];
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,553,return 0;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,556,public EstimatedParameter[] getParameters() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,557,return parameters;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,560,private double[] factors;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,561,private EstimatedParameter[] parameters;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,562,private static final long serialVersionUID = -3922448707008868580L;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,566,private static class Circle implements EstimationProblem {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,568,"public Circle(double cx, double cy) {"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,569,"this.cx = new EstimatedParameter(""cx"", cx);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,570,"this.cy = new EstimatedParameter(new EstimatedParameter(""cy"", cy));"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,571,points  = new ArrayList();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,574,"public void addPoint(double px, double py) {"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,575,"points.add(new PointModel(px, py));"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,578,public int getM() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,579,return points.size();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,582,public WeightedMeasurement[] getMeasurements() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,583,return (WeightedMeasurement[]) points.toArray(new PointModel[points.size()]);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,586,public EstimatedParameter[] getAllParameters() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,587,"return new EstimatedParameter[] { cx, cy };"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,590,public EstimatedParameter[] getUnboundParameters() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,591,"return new EstimatedParameter[] { cx, cy };"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,594,public double getPartialRadiusX() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,595,double dRdX = 0;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,596,for (Iterator iterator = points.iterator(); iterator.hasNext();) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,597,dRdX += ((PointModel) iterator.next()).getPartialDiX();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,599,return dRdX / points.size();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,602,public double getPartialRadiusY() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,603,double dRdY = 0;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,604,for (Iterator iterator = points.iterator(); iterator.hasNext();) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,605,dRdY += ((PointModel) iterator.next()).getPartialDiY();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,607,return dRdY / points.size();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,610,public double getRadius() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,611,double r = 0;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,612,for (Iterator iterator = points.iterator(); iterator.hasNext();) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,613,r += ((PointModel) iterator.next()).getCenterDistance();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,615,return r / points.size();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,618,public double getX() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,619,return cx.getEstimate();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,622,public double getY() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,623,return cy.getEstimate();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,626,private class PointModel extends WeightedMeasurement {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,628,"public PointModel(double px, double py) {"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,629,"super(1.0, 0.0);"
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,630,this.px = px;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,631,this.py = py;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,634,public double getPartial(EstimatedParameter parameter) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,635,if (parameter == cx) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,636,return getPartialDiX() - getPartialRadiusX();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,637,} else if (parameter == cy) {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,638,return getPartialDiY() - getPartialRadiusY();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,640,return 0;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,643,public double getCenterDistance() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,644,double dx = px - cx.getEstimate();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,645,double dy = py - cy.getEstimate();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,646,return Math.sqrt(dx * dx + dy * dy);
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,649,public double getPartialDiX() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,650,return (cx.getEstimate() - px) / getCenterDistance();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,653,public double getPartialDiY() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,654,return (cy.getEstimate() - py) / getCenterDistance();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,657,public double getTheoreticalValue() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,658,return getCenterDistance() - getRadius();
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,661,private double px;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,662,private double py;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,663,private static final long serialVersionUID = 1L;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,667,private EstimatedParameter cx;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,668,private EstimatedParameter cy;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,669,private ArrayList points;
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,673,public static Test suite() {
True,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java,674,return new TestSuite(GaussNewtonEstimatorTest.class);
