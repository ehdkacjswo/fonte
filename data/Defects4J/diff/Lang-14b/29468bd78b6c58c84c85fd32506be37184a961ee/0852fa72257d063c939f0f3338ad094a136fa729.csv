is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,554,f ((ch0 == 'y' || ch0 == 'Y') ||
False,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,555,ch0 == 't' || ch0 == 'T')) {
True,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,554,if (ch0 == 'y' || ch0 == 'Y' ||
True,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,555,ch0 == 't' || ch0 == 'T') {
False,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,558,f ((ch0 == 'n' || ch0 == 'N') ||
False,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,559,ch0 == 'f' || ch0 == 'F')) {
True,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,558,if (ch0 == 'n' || ch0 == 'N' ||
True,src/main/java/org/apache/commons/lang3/BooleanUtils.java,src/main/java/org/apache/commons/lang3/BooleanUtils.java,559,ch0 == 'f' || ch0 == 'F') {
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,190,"eturn ((String) cs).regionMatches(ignoreCase, thisStart, ((String) substring), start, length);"
True,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,190,"return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);"
False,src/main/java/org/apache/commons/lang3/CharSet.java,src/main/java/org/apache/commons/lang3/CharSet.java,181,nt remainder = (len - pos);
True,src/main/java/org/apache/commons/lang3/CharSet.java,src/main/java/org/apache/commons/lang3/CharSet.java,181,int remainder = len - pos;
False,src/main/java/org/apache/commons/lang3/ClassUtils.java,src/main/java/org/apache/commons/lang3/ClassUtils.java,625,eturn !(toClass.isPrimitive());
True,src/main/java/org/apache/commons/lang3/ClassUtils.java,src/main/java/org/apache/commons/lang3/ClassUtils.java,625,return !toClass.isPrimitive();
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,139,otal |= (1 << constant.ordinal());
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,139,total |= 1 << constant.ordinal();
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,182,f ((value & (1 << constant.ordinal())) != 0) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,182,if ((value & 1 << constant.ordinal()) != 0) {
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,155,f ((object1 == null) || (object2 == null)) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,155,if (object1 == null || object2 == null) {
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,199,eturn (obj == null) ? 0 : obj.hashCode();
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,199,return obj == null ? 0 : obj.hashCode();
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,412,eturn (nullGreater ? 1 : -1);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,412,return nullGreater ? 1 : -1;
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,414,eturn (nullGreater ? -1 : 1);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,414,return nullGreater ? -1 : 1;
False,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,230,f ((start == 0) && (end == 0)) {
True,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,230,if (start == 0 && end == 0) {
False,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,249,f ((letters && Character.isLetter(ch))
False,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,250,| (numbers && Character.isDigit(ch))
False,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,251,| (!letters && !numbers)) {
True,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,249,if (letters && Character.isLetter(ch)
True,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,250,|| numbers && Character.isDigit(ch)
True,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,src/main/java/org/apache/commons/lang3/RandomStringUtils.java,251,|| !letters && !numbers) {
False,src/main/java/org/apache/commons/lang3/Range.java,src/main/java/org/apache/commons/lang3/Range.java,222,"eturn (comparator.compare(element, minimum) > -1) && (comparator.compare(element, maximum) < 1);"
True,src/main/java/org/apache/commons/lang3/Range.java,src/main/java/org/apache/commons/lang3/Range.java,222,"return comparator.compare(element, minimum) > -1 && comparator.compare(element, maximum) < 1;"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,228,f ((Character.isWhitespace(cs.charAt(i)) == false)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,228,if (Character.isWhitespace(cs.charAt(i)) == false) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,487,hile ((start != strLen) && Character.isWhitespace(str.charAt(start))) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,487,while (start != strLen && Character.isWhitespace(str.charAt(start))) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,493,hile ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,493,while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,532,hile ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,532,while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,538,hile ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,538,while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1090,nt endLimit = (str.length() - searchStr.length()) + 1;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1090,int endLimit = str.length() - searchStr.length() + 1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1336,f (startPos > (str.length() - searchStr.length())) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1336,if (startPos > str.length() - searchStr.length()) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1949,eturn (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1949,return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2215,f (str.length() <= (pos + len)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2215,if (str.length() <= pos + len) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2381,f (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2381,if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2489,hile (pos < (strLen - closeLen)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2489,while (pos < strLen - closeLen) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2776,f ((separator == null) || (EMPTY.equals(separator))) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2776,if (separator == null || EMPTY.equals(separator)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2935,f (match || (preserveAllTokens && lastMatch)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2935,if (match || preserveAllTokens && lastMatch) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3111,f (match || (preserveAllTokens && lastMatch)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3111,if (match || preserveAllTokens && lastMatch) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3302,nt noOfItems = (endIndex - startIndex);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3302,int noOfItems = endIndex - startIndex;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3387,nt noOfItems = (endIndex - startIndex);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3387,int noOfItems = endIndex - startIndex;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3870,ncrease = (increase < 0 ? 0 : increase);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3871,ncrease *= (max < 0 ? 16 : (max > 64 ? 64 : max));
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3870,increase = increase < 0 ? 0 : increase;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,3871,increase *= max < 0 ? 16 : max > 64 ? 64 : max;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5217,f ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5217,if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5287,f ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5287,if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5399,f ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5399,if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5432,f ((Character.isWhitespace(cs.charAt(i)) == false)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5432,if (Character.isWhitespace(cs.charAt(i)) == false) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5729,f ((str.length() - offset) < (maxWidth - 3)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5729,if (str.length() - offset < maxWidth - 3) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5739,f ((offset + (maxWidth - 3)) < str.length()) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5739,if (offset + maxWidth - 3 < str.length()) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5779,f (length >= str.length() || length < (middle.length()+2)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5779,if (length >= str.length() || length < middle.length()+2) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5937,f (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5937,if (allStringsNull || longestStrLen == 0 && !anyStringNull) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6368,eturn (str == null && prefix == null);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6368,return str == null && prefix == null;
False,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,184,eturn (initializer != null) ? initializer.get() : null;
True,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,184,return initializer != null ? initializer.get() : null;
False,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,247,eturn (result != null) ? result : value;
True,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java,247,return result != null ? result : value;
False,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,91,eturn (getObject() != null) ? getObject().hashCode() : 0;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,91,return getObject() != null ? getObject().hashCode() : 0;
False,src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java,src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java,361,eturn (periodCount == 0) ? 0 : (double) totalAcquireCount
True,src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java,src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java,361,return periodCount == 0 ? 0 : (double) totalAcquireCount
False,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,181,eturn (list.size() < 2 ? null : (Throwable)list.get(list.size() - 1));
True,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,181,return list.size() < 2 ? null : (Throwable)list.get(list.size() - 1);
False,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,693,oot = (root == null ? th : root);
True,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java,693,root = root == null ? th : root;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,250,nt sign = (value < 0 ? -1 : 1);
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,250,int sign = value < 0 ? -1 : 1;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,294, while ((delta1 > delta2) && (denom2 <= 10000) && (denom2 > 0) && (i < 25));
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,294,} while (delta1 > delta2 && denom2 <= 10000 && denom2 > 0 && i < 25);
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,443,eturn ((float) numerator) / ((float) denominator);
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,443,return (float) numerator / (float) denominator;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,454,eturn ((double) numerator) / ((double) denominator);
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,454,return (double) numerator / (double) denominator;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,558,f ((power % 2) == 0) { // if even...
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,558,if (power % 2 == 0) { // if even...
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,578,f ((u == 0) || (v == 0)) {
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,579,f ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,578,if (u == 0 || v == 0) {
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,579,if (u == Integer.MIN_VALUE || v == Integer.MIN_VALUE) {
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,604,nt t = ((u&1)==1) ? v : -(u/2)/*B3*/;
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,604,int t = (u&1)==1 ? v : -(u/2)/*B3*/;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,640,ong m = ((long)x)*((long)y);
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,640,long m = (long)x*(long)y;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,659,ong m = ((long)x)*((long)y);
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,659,long m = (long)x*(long)y;
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,773,"nt d2 = (tmodd1==0)?d1:greatestCommonDivisor(tmodd1, d1);"
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,773,"int d2 = tmodd1==0?d1:greatestCommonDivisor(tmodd1, d1);"
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,852,eturn (getNumerator() == other.getNumerator() &&
False,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,853,etDenominator() == other.getDenominator());
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,852,return getNumerator() == other.getNumerator() &&
True,src/main/java/org/apache/commons/lang3/math/Fraction.java,src/main/java/org/apache/commons/lang3/math/Fraction.java,853,getDenominator() == other.getDenominator();
False,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,274,eturn (obj instanceof MutableDouble)
False,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,275,& (Double.doubleToLongBits(((MutableDouble) obj).value) == Double.doubleToLongBits(value));
True,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,274,return obj instanceof MutableDouble
True,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,275,&& Double.doubleToLongBits(((MutableDouble) obj).value) == Double.doubleToLongBits(value);
False,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,286,eturn (int) (bits ^ (bits >>> 32));
True,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java,286,return (int) (bits ^ bits >>> 32);
False,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,276,eturn (obj instanceof MutableFloat)
False,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,277,& (Float.floatToIntBits(((MutableFloat) obj).value) == Float.floatToIntBits(value));
True,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,276,return obj instanceof MutableFloat
True,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java,277,&& Float.floatToIntBits(((MutableFloat) obj).value) == Float.floatToIntBits(value);
False,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,583,oolean top = (priorVariables == null);
True,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,583,boolean top = priorVariables == null;
False,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,659, (varLen - (endPos - startPos));
True,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,659,+ varLen - (endPos - startPos);
False,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,681,eturn (altered ? 1 : 0);
True,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java,681,return altered ? 1 : 0;
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,731,oolean quoting = (quoteLen > 0);
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,731,boolean quoting = quoteLen > 0;
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,749,os += (quoteLen * 2);
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,749,pos += quoteLen * 2;
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,823,f ((pos + i) >= len || chars[pos + i] != chars[quoteStart + i]) {
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,823,if (pos + i >= len || chars[pos + i] != chars[quoteStart + i]) {
False,src/main/java/org/apache/commons/lang3/text/WordUtils.java,src/main/java/org/apache/commons/lang3/text/WordUtils.java,102,hile ((inputLineLength - offset) > wrapLength) {
True,src/main/java/org/apache/commons/lang3/text/WordUtils.java,src/main/java/org/apache/commons/lang3/text/WordUtils.java,102,while (inputLineLength - offset > wrapLength) {
False,src/main/java/org/apache/commons/lang3/text/WordUtils.java,src/main/java/org/apache/commons/lang3/text/WordUtils.java,270,nt delimLen = (delimiters == null ? -1 : delimiters.length);
True,src/main/java/org/apache/commons/lang3/text/WordUtils.java,src/main/java/org/apache/commons/lang3/text/WordUtils.java,270,int delimLen = delimiters == null ? -1 : delimiters.length;
False,src/main/java/org/apache/commons/lang3/text/WordUtils.java,src/main/java/org/apache/commons/lang3/text/WordUtils.java,326,nt delimLen = (delimiters == null ? -1 : delimiters.length);
True,src/main/java/org/apache/commons/lang3/text/WordUtils.java,src/main/java/org/apache/commons/lang3/text/WordUtils.java,326,int delimLen = delimiters == null ? -1 : delimiters.length;
False,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,71,eturn (options == null) ? false : options.contains(option);
True,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,71,return options == null ? false : options.contains(option);
False,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,98,hile(end < seqEnd && ( (input.charAt(end) >= '0' && input.charAt(end) <= '9') ||
False,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,99,input.charAt(end) >= 'a' && input.charAt(end) <= 'f') ||
False,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,100,input.charAt(end) >= 'A' && input.charAt(end) <= 'F') ) )
True,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,98,while(end < seqEnd && ( input.charAt(end) >= '0' && input.charAt(end) <= '9' ||
True,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,99,input.charAt(end) >= 'a' && input.charAt(end) <= 'f' ||
True,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,100,input.charAt(end) >= 'A' && input.charAt(end) <= 'F' ) )
False,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,105,oolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');
True,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,105,boolean semiNext = end != seqEnd && input.charAt(end) == ';';
False,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,135,eturn 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);
True,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java,135,return 2 + end - start + (isHex ? 1 : 0) + (semiNext ? 1 : 0);
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,37,f (input.charAt(index) == '\\' && (index + 1 < input.length()) && input.charAt(index + 1) == 'u') {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,37,if (input.charAt(index) == '\\' && index + 1 < input.length() && input.charAt(index + 1) == 'u') {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,40,hile ((index + i < input.length()) && input.charAt(index + i) == 'u') {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,40,while (index + i < input.length() && input.charAt(index + i) == 'u') {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,44,f ((index + i < input.length()) && (input.charAt(index + i) == '+')) {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,44,if (index + i < input.length() && input.charAt(index + i) == '+') {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,48,f ((index + i + 4 <= input.length())) {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,48,if (index + i + 4 <= input.length()) {
False,src/main/java/org/apache/commons/lang3/time/StopWatch.java,src/main/java/org/apache/commons/lang3/time/StopWatch.java,251,his.startTime += (System.nanoTime() - this.stopTime);
True,src/main/java/org/apache/commons/lang3/time/StopWatch.java,src/main/java/org/apache/commons/lang3/time/StopWatch.java,251,this.startTime += System.nanoTime() - this.stopTime;
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,200,"ssertTrue(Arrays.equals((new String[]{""a""}), newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,201,"ssertTrue(Arrays.equals((new Object[]{""a""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,200,"assertTrue(Arrays.equals(new String[]{""a""}, newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,201,"assertTrue(Arrays.equals(new Object[]{""a""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,206,"ssertTrue(Arrays.equals((new String[]{""a""}), newStringArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,207,"ssertTrue(Arrays.equals((new Object[]{""a""}), newStringArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,206,"assertTrue(Arrays.equals(new String[]{""a""}, newStringArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,207,"assertTrue(Arrays.equals(new Object[]{""a""}, newStringArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,212,"ssertTrue(Arrays.equals((new String[]{""a"", ""b"", ""c"", null}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,212,"assertTrue(Arrays.equals(new String[]{""a"", ""b"", ""c"", null}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,216,"ssertTrue(Arrays.equals((new String[]{""a"", ""b"", ""c"", ""d""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,216,"assertTrue(Arrays.equals(new String[]{""a"", ""b"", ""c"", ""d""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,221,"ssertTrue(Arrays.equals((new Number[]{Integer.valueOf(1), Double.valueOf(2), Float.valueOf(3)}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,221,"assertTrue(Arrays.equals(new Number[]{Integer.valueOf(1), Double.valueOf(2), Float.valueOf(3)}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,226,"ssertTrue(Arrays.equals((new Float[]{Float.valueOf(3)}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,226,"assertTrue(Arrays.equals(new Float[]{Float.valueOf(3)}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,259,"ssertTrue(Arrays.equals((new String[]{""a"", ""b"", ""c""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,259,"assertTrue(Arrays.equals(new String[]{""a"", ""b"", ""c""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,264,"ssertTrue(Arrays.equals((new String[]{""1"", ""2"", ""3""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,264,"assertTrue(Arrays.equals(new String[]{""1"", ""2"", ""3""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,267,"ssertTrue(Arrays.equals((new String[]{""a"", ""b"", ""c"", ""1"", ""2"", ""3""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,267,"assertTrue(Arrays.equals(new String[]{""a"", ""b"", ""c"", ""1"", ""2"", ""3""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,271,"ssertTrue(Arrays.equals((new String[]{}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,271,"assertTrue(Arrays.equals(new String[]{}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,275,"ssertTrue(Arrays.equals((new String[]{}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,275,"assertTrue(Arrays.equals(new String[]{}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,279,"ssertTrue(Arrays.equals((new String[]{}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,279,"assertTrue(Arrays.equals(new String[]{}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,283,"ssertTrue(Arrays.equals((new String[]{null, null}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,283,"assertTrue(Arrays.equals(new String[]{null, null}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,372,"ssertTrue(Arrays.equals((new String[]{""a""}), newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,373,"ssertTrue(Arrays.equals((new Object[]{""a""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,372,"assertTrue(Arrays.equals(new String[]{""a""}, newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,373,"assertTrue(Arrays.equals(new Object[]{""a""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,377,"ssertTrue(Arrays.equals((new String[]{null, ""a"", ""b"", ""c""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,377,"assertTrue(Arrays.equals(new String[]{null, ""a"", ""b"", ""c""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,380,"ssertTrue(Arrays.equals((new String[]{""a"", null, ""b"", ""c""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,380,"assertTrue(Arrays.equals(new String[]{""a"", null, ""b"", ""c""}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,383,"ssertTrue(Arrays.equals((new String[]{""a"", ""b"", ""c"", null}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,383,"assertTrue(Arrays.equals(new String[]{""a"", ""b"", ""c"", null}, newArray));"
False,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,386,"ssertTrue(Arrays.equals((new String[]{""a"", ""b"", ""c"", ""d""}), newArray));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,386,"assertTrue(Arrays.equals(new String[]{""a"", ""b"", ""c"", ""d""}, newArray));"
False,src/test/java/org/apache/commons/lang3/BitFieldTest.java,src/test/java/org/apache/commons/lang3/BitFieldTest.java,152,"ssertEquals(bf_zero.setShortValue((short) 0, (short) j), (short) (0));"
True,src/test/java/org/apache/commons/lang3/BitFieldTest.java,src/test/java/org/apache/commons/lang3/BitFieldTest.java,152,"assertEquals(bf_zero.setShortValue((short) 0, (short) j), (short) 0);"
False,src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java,src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java,151,oolean b = (ch >= '0' && ch <= '9');
True,src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java,src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java,151,boolean b = ch >= '0' && ch <= '9';
False,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,289,ev = (observed[i] - expected[i]);
True,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,289,dev = observed[i] - expected[i];
False,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,314,"ssertEquals(""differs at "" + i + ""("" + Integer.toHexString((new Character(o)).hashCode()) + "","" +"
False,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,315,"nteger.toHexString((new Character(c)).hashCode()) + "")"", o, c);"
True,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,314,"assertEquals(""differs at "" + i + ""("" + Integer.toHexString(new Character(o).hashCode()) + "","" +"
True,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java,315,"Integer.toHexString(new Character(c).hashCode()) + "")"", o, c);"
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,49,eturn (a == rhs.a);
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,49,return a == rhs.a;
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,60,eturn (a < rhs.a) ? -1 : (a > rhs.a) ? +1 : 0;
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,60,return a < rhs.a ? -1 : a > rhs.a ? +1 : 0;
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,82,eturn super.equals(o) && (b == rhs.b);
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,82,return super.equals(o) && b == rhs.b;
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,234,"ssertTrue((CompareToBuilder.reflectionCompare(x, y, testTransients) ==0 ) == EqualsBuilder.reflectionEquals(x, y, testTransients));"
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,234,"assertTrue(CompareToBuilder.reflectionCompare(x, y, testTransients) ==0 == EqualsBuilder.reflectionEquals(x, y, testTransients));"
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,826,rray1[i][j] = ((i + 1) * (j + 1));
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,827,rray2[i][j] = ((i + 1) * (j + 1));
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,828,rray3[i][j] = ((i + 1) * (j + 1));
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,826,array1[i][j] = (i + 1) * (j + 1);
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,827,array2[i][j] = (i + 1) * (j + 1);
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,828,array3[i][j] = (i + 1) * (j + 1);
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,850,rray1[i][j] = ((i + 1) * (j + 1));
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,851,rray2[i][j] = ((i + 1) * (j + 1));
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,852,rray3[i][j] = ((i + 1) * (j + 1));
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,850,array1[i][j] = (i + 1) * (j + 1);
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,851,array2[i][j] = (i + 1) * (j + 1);
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,852,array3[i][j] = (i + 1) * (j + 1);
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,874,rray1[i][j] = ((i == 1) ^ (j == 1));
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,875,rray2[i][j] = ((i == 1) ^ (j == 1));
False,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,876,rray3[i][j] = ((i == 1) ^ (j == 1));
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,874,array1[i][j] = i == 1 ^ j == 1;
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,875,array2[i][j] = i == 1 ^ j == 1;
True,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java,876,array3[i][j] = i == 1 ^ j == 1;
False,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,53,eturn (a == rhs.a);
True,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,53,return a == rhs.a;
False,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,83,eturn super.equals(o) && (b == rhs.b);
True,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,83,return super.equals(o) && b == rhs.b;
False,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,715,rray1[i][j] = (i == 1) || (j == 1);
False,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,716,rray2[i][j] = (i == 1) || (j == 1);
True,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,715,array1[i][j] = i == 1 || j == 1;
True,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java,716,array2[i][j] = i == 1 || j == 1;
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,97,eturn (a == rhs.a);
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,97,return a == rhs.a;
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,134,eturn super.equals(o) && (b == rhs.b);
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,134,return super.equals(o) && b == rhs.b;
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,207,"ssertEquals(17 * 37 + (19 * 41 + obj.hashCode()), new HashCodeBuilder(17, 37).appendSuper("
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,207,"assertEquals(17 * 37 + 19 * 41 + obj.hashCode(), new HashCodeBuilder(17, 37).appendSuper("
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,231,"ssertEquals(17 * 37 + (int) (123456789L ^ (123456789L >> 32)), new HashCodeBuilder(17, 37).append("
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,231,"assertEquals(17 * 37 + (int) (123456789L ^ 123456789L >> 32), new HashCodeBuilder(17, 37).append("
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,266,"ssertEquals(17 * 37 + (int) (l ^ (l >> 32)), new HashCodeBuilder(17, 37).append(d).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,266,"assertEquals(17 * 37 + (int) (l ^ l >> 32), new HashCodeBuilder(17, 37).append(d).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,288,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,288,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,299,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,299,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,311,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,311,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,313,nt h1 = (int) (5L ^ (5L >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,313,int h1 = (int) (5L ^ 5L >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,316,nt h2 = (int) (6L ^ (6L >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,316,int h2 = (int) (6L ^ 6L >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,323,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,323,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,325,nt h1 = (int) (5L ^ (5L >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,325,int h1 = (int) (5L ^ 5L >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,328,nt h2 = (int) (6L ^ (6L >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,328,int h2 = (int) (6L ^ 6L >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,336,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,336,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,346,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,346,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,357,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,357,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,367,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,367,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,378,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,378,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,388,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,388,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,399,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,399,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,409,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,409,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,420,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,420,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,423,nt h1 = (int) (l1 ^ (l1 >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,423,int h1 = (int) (l1 ^ l1 >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,427,nt h2 = (int) (l2 ^ (l2 >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,427,int h2 = (int) (l2 ^ l2 >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,434,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,434,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,437,nt h1 = (int) (l1 ^ (l1 >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,437,int h1 = (int) (l1 ^ l1 >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,441,nt h2 = (int) (l2 ^ (l2 >> 32));
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,441,int h2 = (int) (l2 ^ l2 >> 32);
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,449,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,449,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,461,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,461,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,494,"ssertEquals((17 * 37) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,494,"assertEquals(17 * 37 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,504,"ssertEquals((((17 * 37 + 0) * 37 + 1) * 37 + 1), new HashCodeBuilder(17, 37).append(obj).toHashCode());"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,504,"assertEquals(((17 * 37 + 0) * 37 + 1) * 37 + 1, new HashCodeBuilder(17, 37).append(obj).toHashCode());"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,511,"ssertEquals((((17 * 37 + 1) * 37 + 2) * 37 + 3), HashCodeBuilder.reflectionHashCode(x));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,511,"assertEquals(((17 * 37 + 1) * 37 + 2) * 37 + 3, HashCodeBuilder.reflectionHashCode(x));"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,513,"ssertEquals((((17 * 37 + 1) * 37 + 2) * 37 + 3), HashCodeBuilder.reflectionHashCode(x, (String[]) null));"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,514,"ssertEquals((((17 * 37 + 1) * 37 + 2) * 37 + 3), HashCodeBuilder.reflectionHashCode(x, new String[]{}));"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,515,"ssertEquals((((17 * 37 + 1) * 37 + 2) * 37 + 3), HashCodeBuilder.reflectionHashCode(x, new String[]{""xxx""}));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,513,"assertEquals(((17 * 37 + 1) * 37 + 2) * 37 + 3, HashCodeBuilder.reflectionHashCode(x, (String[]) null));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,514,"assertEquals(((17 * 37 + 1) * 37 + 2) * 37 + 3, HashCodeBuilder.reflectionHashCode(x, new String[]{}));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,515,"assertEquals(((17 * 37 + 1) * 37 + 2) * 37 + 3, HashCodeBuilder.reflectionHashCode(x, new String[]{""xxx""}));"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,517,"ssertEquals(((17 * 37 + 1) * 37 + 3), HashCodeBuilder.reflectionHashCode(x, new String[]{""two""}));"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,518,"ssertEquals(((17 * 37 + 1) * 37 + 2), HashCodeBuilder.reflectionHashCode(x, new String[]{""three""}));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,517,"assertEquals((17 * 37 + 1) * 37 + 3, HashCodeBuilder.reflectionHashCode(x, new String[]{""two""}));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,518,"assertEquals((17 * 37 + 1) * 37 + 2, HashCodeBuilder.reflectionHashCode(x, new String[]{""three""}));"
False,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,520,"ssertEquals((17 * 37 + 1), HashCodeBuilder.reflectionHashCode(x, new String[]{""two"", ""three""}));"
True,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java,520,"assertEquals(17 * 37 + 1, HashCodeBuilder.reflectionHashCode(x, new String[]{""two"", ""three""}));"
False,src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java,src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java,431,eturn (schedFuture != null) ? schedFuture : super.startTimer();
True,src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java,src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java,431,return schedFuture != null ? schedFuture : super.startTimer();
False,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,554,bject notCloned = (new StrTokenizer() {
True,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,554,Object notCloned = new StrTokenizer() {
False,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,559,).clone();
True,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java,559,}.clone();
