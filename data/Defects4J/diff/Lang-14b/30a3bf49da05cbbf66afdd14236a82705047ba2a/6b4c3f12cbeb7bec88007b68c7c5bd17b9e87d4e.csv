is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,19,mport java.io.FileNotFoundException;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,20,mport java.io.IOException;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,21,mport java.io.Serializable;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,22,mport java.util.Collections;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,23,mport java.util.Comparator;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,24,mport java.util.LinkedList;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,25,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,28, Abstract test class for testing the Comparator interface.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,29, <p>
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,30, Concrete subclasses declare the comparator to be tested.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,31, They also declare certain aspects of the tests.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,33, @author Stephen Colebourne
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,35,ublic abstract class AbstractTestComparator<T> extends AbstractTestObject {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,38, JUnit constructor.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,40, @param testName  the test class name
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,42,ublic AbstractTestComparator(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,43,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,49, Implement this method to return a list of sorted objects.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,51, @return sorted objects
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,53,ublic abstract List<T> getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,57, Implements the abstract superclass method to return the comparator.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,59, @return a full iterator
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,61,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,62,ublic abstract Comparator<T> makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,65, Overrides superclass to block tests.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,67,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,68,ublic boolean supportsEmptyCollections() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,69,eturn false;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,73, Overrides superclass to block tests.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,75,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,76,ublic boolean supportsFullCollections() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,77,eturn false;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,81, Overrides superclass to set the compatability to version 2
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,82, as there were no Comparators in version 1.x.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,84,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,85,ublic String getCompatibilityVersion() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,86,"eturn ""2"";"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,91, Reverse the list.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,93,rotected void reverseObjects(List<?> list) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,94,ollections.reverse(list);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,98, Randomize the list.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,100,rotected void randomizeObjects(List<?> list) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,101,ollections.shuffle(list);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,105, Sort the list.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,107,"rotected void sortObjects(List<T> list, Comparator<? super T> comparator) {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,108,"ollections.sort(list, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,113, Test sorting an empty list
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,115,ublic void testEmptyListSort() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,116,ist<T> list = new LinkedList<T>();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,117,"ortObjects(list, makeObject());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,119,ist<T> list2 = new LinkedList<T>();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,121,"ssertTrue(""Comparator cannot sort empty lists"", list2.equals(list));"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,125, Test sorting a reversed list.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,127,ublic void testReverseListSort() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,128,omparator<T> comparator = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,130,ist<T> randomList = getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,131,everseObjects(randomList);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,132,"ortObjects(randomList, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,134,ist<T> orderedList = getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,136,"ssertTrue(""Comparator did not reorder the List correctly"","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,137,rderedList.equals(randomList));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,141, Test sorting a random list.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,143,ublic void testRandomListSort() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,144,omparator<T> comparator = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,146,ist<T> randomList = getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,147,andomizeObjects(randomList);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,148,"ortObjects(randomList,comparator);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,150,ist<T> orderedList = getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,152,* debug
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,153,terator i = randomList.iterator();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,154,hile (i.hasNext()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,155,ystem.out.println(i.next());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,159,"ssertTrue(""Comparator did not reorder the List correctly"","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,160,rderedList.equals(randomList));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,165, Nearly all Comparators should be Serializable.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,167,ublic void testComparatorIsSerializable() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,168,omparator<T> comparator = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,169,"ssertTrue(""This comparator should be Serializable."","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,170,omparator instanceof Serializable);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,173,ublic String getCanonicalComparatorName(Object object) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,174,tringBuilder retval = new StringBuilder();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,175,"etval.append(""data/test/"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,176,tring colName = object.getClass().getName();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,177,"olName = colName.substring(colName.lastIndexOf(""."")+1,colName.length());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,178,etval.append(colName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,179,"etval.append("".version"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,180,etval.append(getCompatibilityVersion());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,181,"etval.append("".obj"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,182,eturn retval.toString();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,186, Compare the current serialized form of the Comparator
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,187, against the canonical version in SVN.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,189,"SuppressWarnings(""unchecked"")"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,190,"ublic void testComparatorCompatibility() throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,191,f (!skipSerializedCanonicalTests()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,192,omparator<T> comparator = null;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,194,/ test to make sure the canonical form has been preserved
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,195,ry {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,196,omparator = (Comparator<T>) readExternalFormFromDisk(getCanonicalComparatorName(makeObject()));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,197, catch (FileNotFoundException exception) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,199,oolean autoCreateSerialized = false;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,201,f (autoCreateSerialized) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,202,omparator = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,203,tring fileName = getCanonicalComparatorName(comparator);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,204,"riteExternalFormToDisk((Serializable) comparator, fileName);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,205,"ail(""Serialized form could not be found.  A serialized version """
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,206," ""has now been written (and should be added to CVS): "" + fileName);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,207, else {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,208,"ail(""The Serialized form could be located to test serialization """
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,209," ""compatibility: "" + exception.getMessage());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,214,/ make sure the canonical form produces the ordering we currently
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,215,/ expect
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,216,ist<T> randomList = getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,217,everseObjects(randomList);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,218,"ortObjects(randomList, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,220,ist<T> orderedList = getComparableObjectsOrdered();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,222,"ssertTrue(""Comparator did not reorder the List correctly"","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestComparator.java,223,rderedList.equals(randomList));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,19,mport java.util.Comparator;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,20,mport java.util.LinkedList;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,21,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,23,mport junit.framework.Test;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,24,mport junit.framework.TestSuite;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,27, Test the NullComparator.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,29, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,31, @author Michael A. Smith
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,33,ublic abstract class AbstractTestNullComparator extends AbstractTestComparator<Integer> {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,35,ublic AbstractTestNullComparator(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,36,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,39,ublic static Test suite() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,40,estSuite suite = new TestSuite(AbstractTestNullComparator.class.getName());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,41,uite.addTest(new TestSuite(TestNullComparator1.class));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,42,uite.addTest(new TestSuite(TestNullComparator2.class));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,43,eturn suite;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,47,"  Test the NullComparator with nulls high, using comparable comparator"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,49,ublic static class TestNullComparator1 extends AbstractTestNullComparator {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,51,ublic TestNullComparator1(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,52,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,55,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,56,ublic Comparator<Integer> makeObject() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,57,eturn new NullComparator<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,60,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,61,ublic List<Integer> getComparableObjectsOrdered() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,62,ist<Integer> list = new LinkedList<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,63,ist.add(new Integer(1));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,64,ist.add(new Integer(2));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,65,ist.add(new Integer(3));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,66,ist.add(new Integer(4));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,67,ist.add(new Integer(5));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,68,ist.add(null);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,69,eturn list;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,72,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,73,ublic String getCanonicalComparatorName(Object object) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,74,"eturn super.getCanonicalComparatorName(object) + ""1"";"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,79,  Test the NullComparator with nulls low using the comparable comparator
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,81,ublic static class TestNullComparator2 extends AbstractTestNullComparator {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,83,ublic TestNullComparator2(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,84,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,87,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,88,ublic Comparator<Integer> makeObject() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,89,eturn new NullComparator<Integer>(false);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,92,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,93,ublic List<Integer> getComparableObjectsOrdered() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,94,ist<Integer> list = new LinkedList<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,95,ist.add(null);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,96,ist.add(new Integer(1));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,97,ist.add(new Integer(2));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,98,ist.add(new Integer(3));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,99,ist.add(new Integer(4));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,100,ist.add(new Integer(5));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,101,eturn list;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,104,Override
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,105,ublic String getCanonicalComparatorName(Object object) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestNullComparator.java,106,"eturn super.getCanonicalComparatorName(object) + ""2"";"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,19,mport java.io.ByteArrayInputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,20,mport java.io.ByteArrayOutputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,21,mport java.io.File;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,22,mport java.io.FileInputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,23,mport java.io.FileOutputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,24,mport java.io.IOException;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,25,mport java.io.InputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,26,mport java.io.ObjectInputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,27,mport java.io.ObjectOutputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,28,mport java.io.OutputStream;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,29,mport java.io.Serializable;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,32, Abstract test class for {@link java.lang.Object} methods and contracts.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,33, <p>
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,34," To use, simply extend this class, and implement"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,35, the {@link #makeObject()} method.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,36, <p>
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,37," If your {@link Object} fails one of these tests by design,"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,38, you may still use this base set of cases.  Simply override the
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,39, test case (method) your {@link Object} fails.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,41, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,43, @author Rodney Waldhoff
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,44, @author Stephen Colebourne
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,45, @author Anonymous
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,47,bstract class AbstractTestObject extends BulkTest {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,49,** Current major release for Collections */
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,50,ublic static final int COLLECTIONS_MAJOR_VERSION = 3;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,53, JUnit constructor.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,55, @param testName  the test class name
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,57,ublic AbstractTestObject(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,58,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,63, Implement this method to return the object to test.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,65, @return the object to test
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,67,ublic abstract Object makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,70, Override this method if a subclass is testing an object
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,71," that cannot serialize an ""empty"" Collection."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,72, (e.g. Comparators have no contents)
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,74, @return true
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,76,ublic boolean supportsEmptyCollections() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,77,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,81, Override this method if a subclass is testing an object
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,82," that cannot serialize a ""full"" Collection."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,83, (e.g. Comparators have no contents)
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,85, @return true
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,87,ublic boolean supportsFullCollections() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,88,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,92, Is serialization testing supported.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,93, Default is true.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,95,ublic boolean isTestSerialization() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,96,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,100, Returns true to indicate that the collection supports equals() comparisons.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,101, This implementation returns true;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,103,ublic boolean isEqualsCheckable() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,104,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,108,ublic void testObjectEqualsSelf() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,109,bject obj = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,110,"ssertEquals(""A Object should equal itself"", obj, obj);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,113,ublic void testEqualsNull() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,114,bject obj = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,115,"ssertEquals(false, obj.equals(null)); // make sure this doesn't throw NPE either"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,118,ublic void testObjectHashCodeEqualsSelfHashCode() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,119,bject obj = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,120,"ssertEquals(""hashCode should be repeatable"", obj.hashCode(), obj.hashCode());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,123,ublic void testObjectHashCodeEqualsContract() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,124,bject obj1 = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,125,f (obj1.equals(obj1)) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,126,ssertEquals(
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,127,"[1] When two objects are equal, their hashCodes should be also."","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,128,"bj1.hashCode(), obj1.hashCode());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,130,bject obj2 = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,131,f (obj1.equals(obj2)) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,132,ssertEquals(
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,133,"[2] When two objects are equal, their hashCodes should be also."","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,134,"bj1.hashCode(), obj2.hashCode());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,135,ssertTrue(
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,136,"When obj1.equals(obj2) is true, then obj2.equals(obj1) should also be true"","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,137,bj2.equals(obj1));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,141,rotected Object serializeDeserialize(Object obj) throws Exception {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,142,yteArrayOutputStream buffer = new ByteArrayOutputStream();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,143,bjectOutputStream out = new ObjectOutputStream(buffer);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,144,ut.writeObject(obj);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,145,ut.close();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,147,bjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray()));
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,148,bject dest = in.readObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,149,n.close();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,151,eturn dest;
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,154,ublic void testSerializeDeserializeThenCompare() throws Exception {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,155,bject obj = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,156,f (obj instanceof Serializable && isTestSerialization()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,157,bject dest = serializeDeserialize(obj);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,158,f (isEqualsCheckable()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,159,"ssertEquals(""obj != deserialize(serialize(obj))"", obj, dest);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,165," Sanity check method, makes sure that any Serializable"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,166," class can be serialized and de-serialized in memory,"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,167, using the handy makeObject() method
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,169, @throws IOException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,170, @throws ClassNotFoundException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,172,ublic void testSimpleSerialization() throws Exception {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,173,bject o = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,174,f (o instanceof Serializable && isTestSerialization()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,175,yte[] objekt = writeExternalFormToBytes((Serializable) o);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,176,eadExternalFormFromBytes(objekt);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,181, Tests serialization by comparing against a previously stored version in SVN.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,182," If the test object is serializable, confirm that a canonical form exists."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,184,ublic void testCanonicalEmptyCollectionExists() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,185,f (supportsEmptyCollections() && isTestSerialization() && !skipSerializedCanonicalTests()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,186,bject object = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,187,f (object instanceof Serializable) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,188,tring name = getCanonicalEmptyCollectionName(object);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,189,ssertTrue(
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,190,"Canonical empty collection ("" + name + "") is not in SVN"","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,191,ew File(name).exists());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,197, Tests serialization by comparing against a previously stored version in SVN.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,198," If the test object is serializable, confirm that a canonical form exists."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,200,ublic void testCanonicalFullCollectionExists() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,201,f (supportsFullCollections() && isTestSerialization() && !skipSerializedCanonicalTests()) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,202,bject object = makeObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,203,f (object instanceof Serializable) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,204,tring name = getCanonicalFullCollectionName(object);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,205,ssertTrue(
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,206,"Canonical full collection ("" + name + "") is not in SVN"","
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,207,ew File(name).exists());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,212,/ protected implementation
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,215, Get the version of Collections that this object tries to
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,216," maintain serialization compatibility with. Defaults to 1, the"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,217, earliest Collections version. (Note: some collections did not
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,218, even exist in this version).
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,220," This constant makes it possible for TestMap (and other subclasses,"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,221, if necessary) to automatically check SVN for a versionX copy of a
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,222," Serialized object, so we can make sure that compatibility is maintained."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,223," See, for example, TestMap.getCanonicalFullMapName(Map map)."
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,224," Subclasses can override this variable, indicating compatibility"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,225, with earlier Collections versions.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,227," @return The version, or <code>null</code> if this object shouldn't be"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,228, tested for compatibility with previous versions.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,230,ublic String getCompatibilityVersion() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,231,"eturn ""1"";"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,234,rotected String getCanonicalEmptyCollectionName(Object object) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,235,tringBuilder retval = new StringBuilder();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,236,"etval.append(""data/test/"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,237,tring colName = object.getClass().getName();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,238,"olName = colName.substring(colName.lastIndexOf(""."") + 1, colName.length());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,239,etval.append(colName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,240,"etval.append("".emptyCollection.version"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,241,etval.append(getCompatibilityVersion());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,242,"etval.append("".obj"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,243,eturn retval.toString();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,246,rotected String getCanonicalFullCollectionName(Object object) {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,247,tringBuilder retval = new StringBuilder();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,248,"etval.append(""data/test/"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,249,tring colName = object.getClass().getName();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,250,"olName = colName.substring(colName.lastIndexOf(""."") + 1, colName.length());"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,251,etval.append(colName);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,252,"etval.append("".fullCollection.version"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,253,etval.append(getCompatibilityVersion());
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,254,"etval.append("".obj"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,255,eturn retval.toString();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,259, Write a Serializable or Externalizable object as
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,260, a file at the given path.  NOT USEFUL as part
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,261, of a unit test; this is just a utility method
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,262, for creating disk-based objects in SVN that can become
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,263, the basis for compatibility tests using
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,264, readExternalFormFromDisk(String path)
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,266, @param o Object to serialize
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,267, @param path path to write the serialized Object
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,268, @exception IOException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,270,"rotected void writeExternalFormToDisk(Serializable o, String path) throws IOException {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,271,ileOutputStream fileStream = new FileOutputStream(path);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,272,"riteExternalFormToStream(o, fileStream);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,276, Converts a Serializable or Externalizable object to
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,277, bytes.  Useful for in-memory tests of serialization
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,279, @param o Object to convert to bytes
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,280, @return serialized form of the Object
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,281, @exception IOException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,283,rotected byte[] writeExternalFormToBytes(Serializable o) throws IOException {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,284,yteArrayOutputStream byteStream = new ByteArrayOutputStream();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,285,"riteExternalFormToStream(o, byteStream);"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,286,eturn byteStream.toByteArray();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,290, Reads a Serialized or Externalized Object from disk.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,291, Useful for creating compatibility tests between
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,292, different SVN versions of the same class
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,294, @param path path to the serialized Object
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,295, @return the Object at the given path
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,296, @exception IOException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,297, @exception ClassNotFoundException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,299,"rotected Object readExternalFormFromDisk(String path) throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,300,ileInputStream stream = new FileInputStream(path);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,301,eturn readExternalFormFromStream(stream);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,305, Read a Serialized or Externalized Object from bytes.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,306, Useful for verifying serialization in memory.
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,308, @param b byte array containing a serialized Object
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,309, @return Object contained in the bytes
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,310, @exception IOException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,311, @exception ClassNotFoundException
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,313,"rotected Object readExternalFormFromBytes(byte[] b) throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,314,yteArrayInputStream stream = new ByteArrayInputStream(b);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,315,eturn readExternalFormFromStream(stream);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,318,rotected boolean skipSerializedCanonicalTests() {
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,319,"eturn Boolean.getBoolean(""org.apache.commons.lang3:with-clover"");"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,322,/ private implementation
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,324,"rivate Object readExternalFormFromStream(InputStream stream) throws IOException, ClassNotFoundException {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,325,bjectInputStream oStream = new ObjectInputStream(stream);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,326,eturn oStream.readObject();
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,329,"rivate void writeExternalFormToStream(Serializable o, OutputStream stream) throws IOException {"
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,330,bjectOutputStream oStream = new ObjectOutputStream(stream);
False,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,src/test/java/org/apache/commons/lang3/compare/AbstractTestObject.java,331,Stream.writeObject(o);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,19,mport java.lang.reflect.Constructor;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,20,mport java.lang.reflect.InvocationTargetException;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,21,mport java.lang.reflect.Method;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,22,mport java.lang.reflect.Modifier;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,23,mport java.util.ArrayList;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,24,mport java.util.Arrays;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,25,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,27,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,28,mport junit.framework.TestSuite;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,31, A {@link TestCase} that can define both simple and bulk test methods.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,32, <p>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,33, A <I>simple test method</I> is the type of test traditionally
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,34," supplied by by {@link TestCase}.  To define a simple test, create a public"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,35," no-argument method whose name starts with ""test"".  You can specify the"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,36, the name of simple test in the constructor of <code>BulkTest</code>;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,37, a subsequent call to {@link TestCase#run} will run that simple test.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,38, <p>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,39," A <I>bulk test method</I>, on the other hand, returns a new instance"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,40," of <code>BulkTest</code>, which can itself define new simple and bulk"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,41," test methods.  By using the {@link #makeSuite} method, you can"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,42, automatically create a hierarchal suite of tests and child bulk tests.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,43, <p>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,44," For instance, consider the following two classes:"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,46, <Pre>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,47,  public class TestSet extends BulkTest {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,49,      private Set set;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,51,      public TestSet(Set set) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,52,          this.set = set;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,55,      public void testContains() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,56,          boolean r = set.contains(set.iterator().next()));
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,57,"          assertTrue(""Set should contain first element, r);"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,60,      public void testClear() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,61,          set.clear();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,62,"          assertTrue(""Set should be empty after clear"", set.isEmpty());"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,67,  public class TestHashMap extends BulkTest {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,69,      private Map makeFullMap() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,70,          HashMap result = new HashMap();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,71,"          result.put(""1"", ""One"");"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,72,"          result.put(""2"", ""Two"");"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,73,          return result;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,76,      public void testClear() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,77,          Map map = makeFullMap();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,78,          map.clear();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,79,"          assertTrue(""Map empty after clear"", map.isEmpty());"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,82,      public BulkTest bulkTestKeySet() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,83,          return new TestSet(makeFullMap().keySet());
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,86,      public BulkTest bulkTestEntrySet() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,87,          return new TestSet(makeFullMap().entrySet());
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,90,  </Pre>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,92,"  In the above examples, <code>TestSet</code> defines two"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,93,  simple test methods and no bulk test methods; <code>TestHashMap</code>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,94,  defines one simple test method and two bulk test methods.  When
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,95,"  <code>makeSuite(TestHashMap.class).run</code> is executed,"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,96,"  <I>five</I> simple test methods will be run, in this order:<P>"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,98,  <Ol>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,99,  <Li>TestHashMap.testClear()
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,100,  <Li>TestHashMap.bulkTestKeySet().testContains();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,101,  <Li>TestHashMap.bulkTestKeySet().testClear();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,102,  <Li>TestHashMap.bulkTestEntrySet().testContains();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,103,  <Li>TestHashMap.bulkTestEntrySet().testClear();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,104,  </Ol>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,106,"  In the graphical junit test runners, the tests would be displayed in"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,107,  the following tree:<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,109,  <UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,110,  <LI>TestHashMap</LI>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,111,      <UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,112,      <LI>testClear
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,113,      <LI>bulkTestKeySet
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,114,          <UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,115,          <LI>testContains
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,116,          <LI>testClear
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,117,          </UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,118,      <LI>bulkTestEntrySet
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,119,          <UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,120,          <LI>testContains
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,121,          <LI>testClear
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,122,          </UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,123,      </UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,124,  </UL>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,126,  A subclass can override a superclass's bulk test by
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,127,  returning <code>null</code> from the bulk test method.  If you only
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,128,"  want to override specific simple tests within a bulk test, use the"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,129,  {@link #ignoredTests} method.<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,131,"  Note that if you want to use the bulk test methods, you <I>must</I>"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,132,  define your <code>suite()</code> method to use {@link #makeSuite}.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,133,  The ordinary {@link TestSuite} constructor doesn't know how to
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,134,  interpret bulk test methods.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,136,  @author Paul Jack
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,137,  @version $Id$
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,139,lass BulkTest extends TestCase implements Cloneable {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,142,/ Note:  BulkTest is Cloneable to make it easier to construct
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,143,/ BulkTest instances for simple test methods that are defined in
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,144,/ anonymous inner classes.  Basically we don't have to worry about
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,145,"/ finding weird constructors.  (And even if we found them, technically"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,146,/ it'd be illegal for anyone but the outer class to invoke them).
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,147,"/ Given one BulkTest instance, we can just clone it and reset the"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,148,/ method name for every simple test it defines.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,152,  The full name of this bulk test instance.  This is the full name
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,153,  that is compared to {@link #ignoredTests} to see if this
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,154,  test should be ignored.  It's also displayed in the text runner
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,155,  to ease debugging.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,157,tring verboseName;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,161,  Constructs a new <code>BulkTest</code> instance that will run the
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,162,  specified simple test.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,164,  @param name  the name of the simple test method to run
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,166,ublic BulkTest(String name) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,167,uper(name);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,168,his.verboseName = getClass().getName();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,173,  Creates a clone of this <code>BulkTest</code>.<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,175,  @return  a clone of this <code>BulkTest</code>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,177,Override
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,178,ublic Object clone() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,179,ry {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,180,eturn super.clone();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,181, catch (CloneNotSupportedException e) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,182,hrow new Error(); // should never happen
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,188,  Returns an array of test names to ignore.<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,190,  If a test that's defined by this <code>BulkTest</code> or
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,191,  by one of its bulk test methods has a name that's in the returned
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,192,"  array, then that simple test will not be executed.<P>"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,194,  A test's name is formed by taking the class name of the
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,195,"  root <code>BulkTest</code>, eliminating the package name, then"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,196,  appending the names of any bulk test methods that were invoked
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,197,"  to get to the simple test, and then appending the simple test"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,198,  method name.  The method names are delimited by periods:
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,200,  <pre>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,201,  TestHashMap.bulkTestEntrySet.testClear
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,202,  </pre>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,204,  is the name of one of the simple tests defined in the sample classes
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,205,  described above.  If the sample <code>TestHashMap</code> class
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,206,  included this method:
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,208,  <pre>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,209,  public String[] ignoredTests() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,210,"      return new String[] { ""TestHashMap.bulkTestEntrySet.testClear"" };"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,212,  </pre>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,214,"  then the entry set's clear method wouldn't be tested, but the key"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,215,  set's clear method would.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,217,"  @return an array of the names of tests to ignore, or null if"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,218,   no tests should be ignored
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,220,ublic String[] ignoredTests() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,221,eturn null;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,226,  Returns the display name of this <code>BulkTest</code>.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,228,  @return the display name of this <code>BulkTest</code>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,230,Override
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,231,ublic String toString() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,232,"eturn getName() + ""("" + verboseName + "") "";"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,237,  Returns a {@link TestSuite} for testing all of the simple tests
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,238,  <I>and</I> all the bulk tests defined by the given class.<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,240,  The class is examined for simple and bulk test methods; any child
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,241,  bulk tests are also examined recursively; and the results are stored
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,242,  in a hierarchal {@link TestSuite}.<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,244,  The given class must be a subclass of <code>BulkTest</code> and must
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,245,  not be abstract.<P>
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,247,  @param c  the class to examine for simple and bulk tests
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,248,  @return  a {@link TestSuite} containing all the simple and bulk tests
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,249,    defined by that class
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,251,ublic static TestSuite makeSuite(Class<? extends BulkTest> c) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,252,f (Modifier.isAbstract(c.getModifiers())) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,253,"hrow new IllegalArgumentException(""Class must not be abstract."");"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,255,f (!BulkTest.class.isAssignableFrom(c)) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,256,"hrow new IllegalArgumentException(""Class must extend BulkTest."");"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,258,eturn new BulkTestSuiteMaker(c).make();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,264,/ It was easier to use a separate class to do all the reflection stuff
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,265,/ for making the TestSuite instances.  Having permanent state around makes
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,266,/ it easier to handle the recursion.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,267,lass BulkTestSuiteMaker {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,269,** The class that defines simple and bulk tests methods. */
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,270,rivate Class<? extends BulkTest> startingClass;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,272,** List of ignored simple test names. */
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,273,rivate List<String> ignored;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,275,** The TestSuite we're currently populating.  Can change over time. */
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,276,rivate TestSuite result;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,279,  The prefix for simple test methods.  Used to check if a test is in
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,280,  the ignored list.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,282,rivate String prefix;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,285,  Constructor.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,287,  @param startingClass  the starting class
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,289,ublic BulkTestSuiteMaker(Class<? extends BulkTest> startingClass) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,290,his.startingClass = startingClass;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,294,  Makes a hierarchal TestSuite based on the starting class.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,296,  @return  the hierarchal TestSuite for startingClass
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,298,ublic TestSuite make() {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,299,his.result = new TestSuite();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,300,his.prefix = getBaseName(startingClass);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,301,esult.setName(prefix);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,303,ulkTest bulk = makeFirstTestCase(startingClass);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,304,gnored = new ArrayList<String>();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,305,tring[] s = bulk.ignoredTests();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,306,f (s != null) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,307,gnored.addAll(Arrays.asList(s));
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,309,ake(bulk);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,310,eturn result;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,314,  Appends all the simple tests and bulk tests defined by the given
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,315,  instance's class to the current TestSuite.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,317,  @param bulk  An instance of the class that defines simple and bulk
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,318,    tests for us to append
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,320,oid make(BulkTest bulk) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,321,lass<? extends BulkTest> c = bulk.getClass();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,322,ethod[] all = c.getMethods();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,323,or (int i = 0; i < all.length; i++) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,324,"f (isTest(all[i])) addTest(bulk, all[i]);"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,325,"f (isBulk(all[i])) addBulk(bulk, all[i]);"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,330,  Adds the simple test defined by the given method to the TestSuite.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,332,  @param bulk  The instance of the class that defined the method
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,333,"   (I know it's weird.  But the point is, we can clone the instance"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,334,   and not have to worry about constructors.)
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,335,  @param m  The simple test method
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,337,"oid addTest(BulkTest bulk, Method m) {"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,338,ulkTest bulk2 = (BulkTest)bulk.clone();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,339,ulk2.setName(m.getName());
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,340,"ulk2.verboseName = prefix + ""."" + m.getName();"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,341,f (ignored.contains(bulk2.verboseName)) return;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,342,esult.addTest(bulk2);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,346,  Adds a whole new suite of tests that are defined by the result of
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,347,"  the given bulk test method.  In other words, the given bulk test"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,348,"  method is invoked, and the resulting BulkTest instance is examined"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,349,  for yet more simple and bulk tests.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,351,  @param bulk  The instance of the class that defined the method
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,352,  @param m  The bulk test method
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,354,"oid addBulk(BulkTest bulk, Method m) {"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,355,"tring verboseName = prefix + ""."" + m.getName();"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,356,f (ignored.contains(verboseName)) return;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,358,ulkTest bulk2;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,359,ry {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,360,"ulk2 = (BulkTest)m.invoke(bulk, (Object[]) null);"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,361,f (bulk2 == null) return;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,362, catch (InvocationTargetException ex) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,363,x.getTargetException().printStackTrace();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,364,hrow new Error(); // FIXME;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,365, catch (IllegalAccessException ex) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,366,x.printStackTrace();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,367,hrow new Error(); // FIXME;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,370,/ Save current state on the stack.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,371,tring oldPrefix = prefix;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,372,estSuite oldResult = result;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,374,"refix = prefix + ""."" + m.getName();"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,375,esult = new TestSuite();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,376,esult.setName(m.getName());
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,378,ake(bulk2);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,380,ldResult.addTest(result);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,382,/ Restore the old state
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,383,refix = oldPrefix;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,384,esult = oldResult;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,388,  Returns the base name of the given class.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,390,  @param c  the class
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,391,"  @return the name of that class, minus any package names"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,393,rivate static String getBaseName(Class<?> c) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,394,tring name = c.getName();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,395,nt p = name.lastIndexOf('.');
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,396,f (p > 0) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,397,ame = name.substring(p + 1);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,399,eturn name;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,403,/ These three methods are used to create a valid BulkTest instance
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,404,/ from a class.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,406,rivate static <T> Constructor<T> getTestCaseConstructor(Class<T> c) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,407,ry {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,408,eturn c.getConstructor(new Class[] { String.class });
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,409, catch (NoSuchMethodException e) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,410,"hrow new IllegalArgumentException(c + "" must provide "" +"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,411,"a (String) constructor"");"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,415,"rivate static <T extends BulkTest> BulkTest makeTestCase(Class<T> c, Method m) {"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,416,onstructor<T> con = getTestCaseConstructor(c);
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,417,ry {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,418,eturn con.newInstance(new Object[] { m.getName() });
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,419, catch (InvocationTargetException e) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,420,.printStackTrace();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,421,hrow new RuntimeException(); // FIXME;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,422, catch (IllegalAccessException e) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,423,hrow new Error(); // should never occur
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,424, catch (InstantiationException e) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,425,hrow new RuntimeException(); // FIXME;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,429,rivate static <T extends BulkTest> BulkTest makeFirstTestCase(Class<T> c) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,430,ethod[] all = c.getMethods();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,431,or (int i = 0; i < all.length; i++) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,432,"f (isTest(all[i])) return makeTestCase(c, all[i]);"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,434,"hrow new IllegalArgumentException(c.getName() + "" must provide """
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,435," "" at least one test method."");"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,439,  Returns true if the given method is a simple test method.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,441,rivate static boolean isTest(Method m) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,442,"f (!m.getName().startsWith(""test"")) return false;"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,443,f (m.getReturnType() != Void.TYPE) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,444,f (m.getParameterTypes().length != 0) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,445,nt mods = m.getModifiers();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,446,f (Modifier.isStatic(mods)) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,447,f (Modifier.isAbstract(mods)) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,448,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,452,  Returns true if the given method is a bulk test method.
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,454,rivate static boolean isBulk(Method m) {
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,455,"f (!m.getName().startsWith(""bulkTest"")) return false;"
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,456,f (m.getReturnType() != BulkTest.class) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,457,f (m.getParameterTypes().length != 0) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,458,nt mods = m.getModifiers();
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,459,f (Modifier.isStatic(mods)) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,460,f (Modifier.isAbstract(mods)) return false;
False,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,src/test/java/org/apache/commons/lang3/compare/BulkTest.java,461,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,19,mport java.util.Comparator;
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,20,mport java.util.LinkedList;
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,21,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,24, Tests for ComparableComparator.
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,26, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,29,"SuppressWarnings(""boxing"")"
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,30,ublic class TestComparableComparator extends AbstractTestComparator<Integer> {
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,32,ublic TestComparableComparator(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,33,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,36,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,37,ublic Comparator<Integer> makeObject() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,38,eturn new ComparableComparator<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,41,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,42,ublic List<Integer> getComparableObjectsOrdered() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,43,ist<Integer> list = new LinkedList<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,44,ist.add(1);
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,45,ist.add(2);
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,46,ist.add(3);
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,47,ist.add(4);
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,48,ist.add(5);
False,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,src/test/java/org/apache/commons/lang3/compare/TestComparableComparator.java,49,eturn list;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,19,mport java.io.Serializable;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,20,mport java.util.Comparator;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,21,mport java.util.LinkedList;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,22,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,25, Tests for ComparatorChain.
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,27, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,29, @author Unknown
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,31,ublic class TestComparatorChain extends AbstractTestComparator<TestComparatorChain.PseudoRow> {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,33,ublic TestComparatorChain(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,34,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,37,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,38,ublic Comparator<PseudoRow> makeObject() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,39,omparatorChain<PseudoRow> chain = new ComparatorChain<PseudoRow>(new ColumnComparator(0));
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,40,"hain.addComparator(new ColumnComparator(1), true); // reverse the second column"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,41,"hain.addComparator(new ColumnComparator(2), false);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,42,eturn chain;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,45,ublic void testNoopComparatorChain() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,46,omparatorChain<Integer> chain = new ComparatorChain<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,47,nteger i1 = new Integer(4);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,48,nteger i2 = new Integer(6);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,49,hain.addComparator(new ComparableComparator<Integer>());
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,51,nt correctValue = i1.compareTo(i2);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,52,"ssertTrue(""Comparison returns the right order"", chain.compare(i1, i2) == correctValue);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,55,ublic void testBadNoopComparatorChain() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,56,omparatorChain<Integer> chain = new ComparatorChain<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,57,nteger i1 = new Integer(4);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,58,nteger i2 = new Integer(6);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,59,ry {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,60,"hain.compare(i1,i2);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,61,"ail(""An exception should be thrown when a chain contains zero comparators."");"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,62, catch (UnsupportedOperationException e) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,66,ublic void testListComparatorChain() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,67,ist<Comparator<Integer>> list = new LinkedList<Comparator<Integer>>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,68,ist.add(new ComparableComparator<Integer>());
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,69,omparatorChain<Integer> chain = new ComparatorChain<Integer>(list);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,70,nteger i1 = new Integer(4);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,71,nteger i2 = new Integer(6);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,73,nt correctValue = i1.compareTo(i2);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,74,"ssertTrue(""Comparison returns the right order"", chain.compare(i1, i2) == correctValue);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,77,ublic void testBadListComparatorChain() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,78,ist<Comparator<Integer>> list = new LinkedList<Comparator<Integer>>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,79,omparatorChain<Integer> chain = new ComparatorChain<Integer>(list);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,80,nteger i1 = new Integer(4);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,81,nteger i2 = new Integer(6);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,82,ry {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,83,"hain.compare(i1, i2);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,84,"ail(""An exception should be thrown when a chain contains zero comparators."");"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,85, catch (UnsupportedOperationException e) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,89,ublic void testComparatorChainOnMinvaluedCompatator() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,90,"/ -1 * Integer.MIN_VALUE is less than 0,"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,91,/ test that ComparatorChain handles this edge case correctly
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,92,omparatorChain<Integer> chain = new ComparatorChain<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,93,hain.addComparator(new Comparator<Integer>() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,94,"ublic int compare(Integer a, Integer b) {"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,95,nt result = a.compareTo(b);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,96,f (result < 0) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,97,eturn Integer.MIN_VALUE;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,99,f (result > 0) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,100,eturn Integer.MAX_VALUE;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,102,eturn 0;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,104,", true);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,106,"ssertTrue(chain.compare(new Integer(4), new Integer(5)) > 0);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,107,"ssertTrue(chain.compare(new Integer(5), new Integer(4)) < 0);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,108,"ssertTrue(chain.compare(new Integer(4), new Integer(4)) == 0);"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,111,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,112,ublic List<PseudoRow> getComparableObjectsOrdered() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,113,ist<PseudoRow> list = new LinkedList<PseudoRow>();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,114,/ this is the correct order assuming a
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,115,"/ ""0th forward, 1st reverse, 2nd forward"" sort"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,116,"ist.add(new PseudoRow(1, 2, 3));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,117,"ist.add(new PseudoRow(2, 3, 5));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,118,"ist.add(new PseudoRow(2, 2, 4));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,119,"ist.add(new PseudoRow(2, 2, 8));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,120,"ist.add(new PseudoRow(3, 1, 0));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,121,"ist.add(new PseudoRow(4, 4, 4));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,122,"ist.add(new PseudoRow(4, 4, 7));"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,123,eturn list;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,126,"SuppressWarnings(""serial"")"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,127,ublic static class PseudoRow implements Serializable {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,129,ublic int cols[] = new int[3];
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,131,"ublic PseudoRow(int col1, int col2, int col3) {"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,132,ols[0] = col1;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,133,ols[1] = col2;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,134,ols[2] = col3;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,137,ublic int getColumn(int colIndex) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,138,eturn cols[colIndex];
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,141,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,142,ublic String toString() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,143,tringBuilder buf = new StringBuilder();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,144,"uf.append(""["");"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,145,uf.append(cols[0]);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,146,"uf.append("","");"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,147,uf.append(cols[1]);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,148,"uf.append("","");"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,149,uf.append(cols[2]);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,150,"uf.append(""]"");"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,151,eturn buf.toString();
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,154,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,155,ublic boolean equals(Object o) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,156,f (!(o instanceof PseudoRow)) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,157,eturn false;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,160,seudoRow row = (PseudoRow) o;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,161,f (getColumn(0) != row.getColumn(0)) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,162,eturn false;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,165,f (getColumn(1) != row.getColumn(1)) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,166,eturn false;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,169,f (getColumn(2) != row.getColumn(2)) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,170,eturn false;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,173,eturn true;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,178,"ublic static class ColumnComparator implements Comparator<PseudoRow>, Serializable {"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,179,rivate static final long serialVersionUID = -2284880866328872105L;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,181,rotected int colIndex = 0;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,183,ublic ColumnComparator(int colIndex) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,184,his.colIndex = colIndex;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,187,"ublic int compare(PseudoRow o1, PseudoRow o2) {"
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,189,nt col1 = o1.getColumn(colIndex);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,190,nt col2 = o2.getColumn(colIndex);
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,192,f (col1 > col2) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,193,eturn 1;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,195,f (col1 < col2) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,196,eturn -1;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,198,eturn 0;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,201,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,202,ublic int hashCode() {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,203,eturn colIndex;
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,206,Override
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,207,ublic boolean equals(Object that) {
False,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,src/test/java/org/apache/commons/lang3/compare/TestComparatorChain.java,208,eturn that instanceof ColumnComparator && colIndex == ((ColumnComparator) that).colIndex;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,19,mport java.util.Arrays;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,20,mport java.util.Comparator;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,21,mport java.util.LinkedList;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,22,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,23,mport java.util.Random;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,25,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,28, Test class for FixedOrderComparator.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,30, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,32, @author David Leppik
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,33, @author Stephen Colebourne
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,35,ublic class TestFixedOrderComparator extends TestCase {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,38," Top cities of the world, by population including metro areas."
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,40,rivate static final String topCities[] = new String[] {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,41,"Tokyo"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,42,"Mexico City"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,43,"Mumbai"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,44,"Sao Paulo"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,45,"New York"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,46,"Shanghai"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,47,"Lagos"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,48,"Los Angeles"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,49,"Calcutta"","
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,50,"Buenos Aires"""
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,54,/ Initialization and busywork
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,57,ublic TestFixedOrderComparator(String name) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,58,uper(name);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,62,/ Set up and tear down
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,68,/ The tests
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,72, Tests that the constructor plus add method compares items properly.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,74,ublic void testConstructorPlusAdd() {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,75,ixedOrderComparator<String> comparator = new FixedOrderComparator<String>();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,76,or (int i = 0; i < topCities.length; i++) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,77,omparator.add(topCities[i]);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,79,tring[] keys = topCities.clone();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,80,"ssertComparatorYieldsOrder(keys, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,84, Tests that the array constructor compares items properly.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,86,ublic void testArrayConstructor() {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,87,tring[] keys = topCities.clone();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,88,tring[] topCitiesForTest = topCities.clone();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,89,ixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCitiesForTest);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,90,"ssertComparatorYieldsOrder(keys, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,91,/ test that changing input after constructor has no effect
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,92,"opCitiesForTest[0] = ""Brighton"";"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,93,"ssertComparatorYieldsOrder(keys, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,97, Tests the list constructor.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,99,ublic void testListConstructor() {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,100,tring[] keys = topCities.clone();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,101,ist<String> topCitiesForTest = new LinkedList<String>(Arrays.asList(topCities));
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,102,ixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCitiesForTest);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,103,"ssertComparatorYieldsOrder(keys, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,104,/ test that changing input after constructor has no effect
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,105,"opCitiesForTest.set(0, ""Brighton"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,106,"ssertComparatorYieldsOrder(keys, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,110, Tests addAsEqual method.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,112,ublic void testAddAsEqual() {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,113,ixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCities);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,114,"omparator.addAsEqual(""New York"", ""Minneapolis"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,115,"ssertEquals(0, comparator.compare(""New York"", ""Minneapolis""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,116,"ssertEquals(-1, comparator.compare(""Tokyo"", ""Minneapolis""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,117,"ssertEquals(1, comparator.compare(""Shanghai"", ""Minneapolis""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,121, Tests whether or not updates are disabled after a comparison is made.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,123,ublic void testLock() {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,124,ixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCities);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,125,"ssertEquals(false, comparator.isLocked());"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,126,"omparator.compare(""New York"", ""Tokyo"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,127,"ssertEquals(true, comparator.isLocked());"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,128,ry {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,129,"omparator.add(""Minneapolis"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,130,"ail(""Should have thrown an UnsupportedOperationException"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,131, catch (UnsupportedOperationException e) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,132,/ success -- ignore
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,135,ry {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,136,"omparator.addAsEqual(""New York"", ""Minneapolis"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,137,"ail(""Should have thrown an UnsupportedOperationException"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,138, catch (UnsupportedOperationException e) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,139,/ success -- ignore
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,143,ublic void testUnknownObjectBehavior() {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,144,ixedOrderComparator<String> comparator = new FixedOrderComparator<String>(topCities);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,145,ry {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,146,"omparator.compare(""New York"", ""Minneapolis"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,147,"ail(""Should have thrown a IllegalArgumentException"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,148, catch (IllegalArgumentException e) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,149,/ success-- ignore
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,151,ry {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,152,"omparator.compare(""Minneapolis"", ""New York"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,153,"ail(""Should have thrown a IllegalArgumentException"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,154, catch (IllegalArgumentException e) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,155,/ success-- ignore
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,157,"ssertEquals(FixedOrderComparator.UnknownObjectBehavior.EXCEPTION, comparator.getUnknownObjectBehavior());"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,159,omparator = new FixedOrderComparator<String>(topCities);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,160,omparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.BEFORE);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,161,"ssertEquals(FixedOrderComparator.UnknownObjectBehavior.BEFORE, comparator.getUnknownObjectBehavior());"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,162,inkedList<String> keys = new LinkedList<String>(Arrays.asList(topCities));
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,163,"eys.addFirst(""Minneapolis"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,164,"ssertComparatorYieldsOrder(keys.toArray(new String[0]), comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,166,"ssertEquals(-1, comparator.compare(""Minneapolis"", ""New York""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,167,"ssertEquals( 1, comparator.compare(""New York"", ""Minneapolis""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,168,"ssertEquals( 0, comparator.compare(""Minneapolis"", ""St Paul""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,170,omparator = new FixedOrderComparator<String>(topCities);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,171,omparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.AFTER);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,172,eys = new LinkedList<String>(Arrays.asList(topCities));
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,173,"eys.add(""Minneapolis"");"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,174,"ssertComparatorYieldsOrder(keys.toArray(new String[0]), comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,176,"ssertEquals( 1, comparator.compare(""Minneapolis"", ""New York""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,177,"ssertEquals(-1, comparator.compare(""New York"", ""Minneapolis""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,178,"ssertEquals( 0, comparator.compare(""Minneapolis"", ""St Paul""));"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,183,/ Helper methods
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,186,** Shuffles the keys and asserts that the comparator sorts them back to
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,187, their original order.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,189,"SuppressWarnings(""unused"")"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,190,"rivate void assertComparatorYieldsOrder(String[] orderedObjects,"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,191,omparator<String> comparator) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,192,tring[] keys = orderedObjects.clone();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,194,/ shuffle until the order changes.  It's extremely rare that
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,195,/ this requires more than one shuffle.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,197,oolean isInNewOrder = false;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,198,andom rand = new Random();
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,199,hile (keys.length > 1 && isInNewOrder == false) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,200,/ shuffle:
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,201,or (int i = keys.length-1; i > 0; i--) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,202,tring swap = keys[i];
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,203,nt j = rand.nextInt(i+1);
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,204,eys[i] = keys[j];
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,205,eys[j] = swap;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,208,/ testShuffle
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,209,or (int i = 0; i < keys.length && !isInNewOrder; i++) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,210,f( !orderedObjects[i].equals(keys[i])) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,211,sInNewOrder = true;
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,216,/ The real test:  sort and make sure they come out right.
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,218,"rrays.sort(keys, comparator);"
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,220,or (int i = 0; i < orderedObjects.length; i++) {
False,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,src/test/java/org/apache/commons/lang3/compare/TestFixedOrderComparator.java,221,"ssertEquals(orderedObjects[i], keys[i]);"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,17,ackage org.apache.commons.lang3.compare;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,19,mport java.io.ByteArrayInputStream;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,20,mport java.io.ByteArrayOutputStream;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,21,mport java.io.ObjectInputStream;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,22,mport java.io.ObjectOutputStream;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,23,mport java.util.Collections;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,24,mport java.util.Comparator;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,25,mport java.util.LinkedList;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,26,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,29, Tests for ReverseComparator.
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,31, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,33, @author Unknown
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,35,ublic class TestReverseComparator extends AbstractTestComparator<Integer> {
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,37,ublic TestReverseComparator(String testName) {
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,38,uper(testName);
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,42," For the purposes of this test, return a"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,43, ReverseComparator that wraps the java.util.Collections.reverseOrder()
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,44, Comparator.  The resulting comparator should
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,45, sort according to natural Order.  (Note: we wrap
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,46, a Comparator taken from the JDK so that we can
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,47," save a ""canonical"" form in SVN."
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,49," @return Comparator that returns ""natural"" order"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,51,Override
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,52,ublic Comparator<Integer> makeObject() {
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,53,eturn new ReverseComparator<Integer>(Collections.<Integer>reverseOrder());
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,56,Override
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,57,ublic List<Integer> getComparableObjectsOrdered() {
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,58,ist<Integer> list = new LinkedList<Integer>();
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,59,ist.add(new Integer(1));
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,60,ist.add(new Integer(2));
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,61,ist.add(new Integer(3));
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,62,ist.add(new Integer(4));
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,63,ist.add(new Integer(5));
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,64,eturn list;
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,68, Override this inherited test since Collections.reverseOrder
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,69," doesn't adhere to the ""soft"" Comparator contract, and we've"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,70," already ""cannonized"" the comparator returned by makeComparator."
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,72,Override
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,73,"SuppressWarnings(""unchecked"")"
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,74,ublic void testSerializeDeserializeThenCompare() throws Exception {
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,75,omparator comp = new ReverseComparator(new ComparableComparator());
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,77,yteArrayOutputStream buffer = new ByteArrayOutputStream();
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,78,bjectOutputStream out = new ObjectOutputStream(buffer);
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,79,ut.writeObject(comp);
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,80,ut.close();
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,82,bjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(buffer.toByteArray()));
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,83,bject dest = in.readObject();
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,84,n.close();
False,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,src/test/java/org/apache/commons/lang3/compare/TestReverseComparator.java,85,"ssertEquals(""obj != deserialize(serialize(obj))"",comp,dest);"
