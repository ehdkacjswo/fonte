is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,17,package org.apache.commons.collections.comparators;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,19,import java.io.Serializable;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,20,import java.util.ArrayList;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,21,import java.util.BitSet;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,22,import java.util.Comparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,23,import java.util.Iterator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,24,import java.util.List;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,27,* <p>A ComparatorChain is a Comparator that wraps one or
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,28,* more Comparators in sequence.  The ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,29,* calls each Comparator in sequence until either 1)
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,30,* any single Comparator returns a non-zero result
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,31,"* (and that result is then returned),"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,32,* or 2) the ComparatorChain is exhausted (and zero is
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,33,* returned).  This type of sorting is very similar
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,34,"* to multi-column sorting in SQL, and this class"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,35,* allows Java classes to emulate that kind of behaviour
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,36,* when sorting a List.</p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,38,"* <p>To further facilitate SQL-like sorting, the order of"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,39,* any single Comparator in the list can be reversed.</p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,41,* <p>Calling a method that adds new Comparators or
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,42,"* changes the ascend/descend sort <i>after compare(Object,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,43,* Object) has been called</i> will result in an
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,44,"* UnsupportedOperationException.  However, <i>take care</i>"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,45,* to not alter the underlying List of Comparators
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,46,* or the BitSet that defines the sort order.</p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,48,* <p>Instances of ComparatorChain are not synchronized.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,49,"* The class is not thread-safe at construction time, but"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,50,* it <i>is</i> thread-safe to perform multiple comparisons
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,51,* after all the setup operations are complete.</p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,53,* @since Commons Collections 2.0
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,54,* @author Morgan Delagrange
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,55,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,57,"public class ComparatorChain<E> implements Comparator<E>, Serializable {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,59,/** Serialization version from Collections 2.0. */
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,60,private static final long serialVersionUID = -721644942746081630L;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,62,/** The list of comparators in the chain. */
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,63,protected List<Comparator<E>> comparatorChain = null;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,64,/** Order - false (clear) = ascend; true (set) = descend. */
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,65,protected BitSet orderingBits = null;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,66,"/** Whether the chain has been ""locked"". */"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,67,protected boolean isLocked = false;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,71,* Construct a ComparatorChain with no Comparators.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,72,* You must add at least one Comparator before calling
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,73,"* the compare(Object,Object) method, or an"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,74,* UnsupportedOperationException is thrown
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,76,public ComparatorChain() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,77,"this(new ArrayList<Comparator<E>>(), new BitSet());"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,81,"* Construct a ComparatorChain with a single Comparator,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,82,* sorting in the forward order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,84,* @param comparator First comparator in the Comparator chain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,86,public ComparatorChain(Comparator<E> comparator) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,87,"this(comparator, false);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,91,"* Construct a Comparator chain with a single Comparator,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,92,* sorting in the given order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,94,* @param comparator First Comparator in the ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,95,* @param reverse    false = forward sort; true = reverse sort
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,97,"public ComparatorChain(Comparator<E> comparator, boolean reverse) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,98,comparatorChain = new ArrayList<Comparator<E>>(1);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,99,comparatorChain.add(comparator);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,100,orderingBits = new BitSet(1);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,101,if (reverse == true) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,102,orderingBits.set(0);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,107,* Construct a ComparatorChain from the Comparators in the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,108,* List.  All Comparators will default to the forward
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,109,* sort order.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,111,* @param list   List of Comparators
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,112,"* @see #ComparatorChain(List,BitSet)"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,114,public ComparatorChain(List<Comparator<E>> list) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,115,"this(list, new BitSet(list.size()));"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,119,* Construct a ComparatorChain from the Comparators in the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,120,* given List.  The sort order of each column will be
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,121,* drawn from the given BitSet.  When determining the sort
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,122,"* order for Comparator at index <i>i</i> in the List,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,123,* the ComparatorChain will call BitSet.get(<i>i</i>).
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,124,"* If that method returns <i>false</i>, the forward"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,125,* sort order is used; a return value of <i>true</i>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,126,* indicates reverse sort order.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,128,* @param list   List of Comparators.  NOTE: This constructor does not perform a
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,129,*               defensive copy of the list
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,130,"* @param bits   Sort order for each Comparator.  Extra bits are ignored,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,131,*               unless extra Comparators are added by another method.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,133,"public ComparatorChain(List<Comparator<E>> list, BitSet bits) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,134,comparatorChain = list;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,135,orderingBits = bits;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,140,* Add a Comparator to the end of the chain using the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,141,* forward sort order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,143,* @param comparator Comparator with the forward sort order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,145,public void addComparator(Comparator<E> comparator) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,146,"addComparator(comparator, false);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,150,* Add a Comparator to the end of the chain using the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,151,* given sort order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,153,* @param comparator Comparator to add to the end of the chain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,154,* @param reverse    false = forward sort order; true = reverse sort order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,156,"public void addComparator(Comparator<E> comparator, boolean reverse) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,157,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,159,comparatorChain.add(comparator);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,160,if (reverse == true) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,161,orderingBits.set(comparatorChain.size() - 1);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,166,"* Replace the Comparator at the given index, maintaining"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,167,* the existing sort order.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,169,* @param index      index of the Comparator to replace
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,170,* @param comparator Comparator to place at the given index
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,171,* @exception IndexOutOfBoundsException
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,172,*                   if index &lt; 0 or index &gt;= size()
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,174,"public void setComparator(int index, Comparator<E> comparator) throws IndexOutOfBoundsException {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,175,"setComparator(index, comparator, false);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,179,* Replace the Comparator at the given index in the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,180,"* ComparatorChain, using the given sort order"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,182,* @param index      index of the Comparator to replace
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,183,* @param comparator Comparator to set
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,184,* @param reverse    false = forward sort order; true = reverse sort order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,186,"public void setComparator(int index, Comparator<E> comparator, boolean reverse) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,187,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,189,"comparatorChain.set(index,comparator);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,190,if (reverse == true) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,191,orderingBits.set(index);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,192,} else {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,193,orderingBits.clear(index);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,198,* Change the sort order at the given index in the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,199,* ComparatorChain to a forward sort.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,201,* @param index  Index of the ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,203,public void setForwardSort(int index) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,204,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,205,orderingBits.clear(index);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,209,* Change the sort order at the given index in the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,210,* ComparatorChain to a reverse sort.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,212,* @param index  Index of the ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,214,public void setReverseSort(int index) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,215,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,216,orderingBits.set(index);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,220,* Number of Comparators in the current ComparatorChain.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,222,* @return Comparator count
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,224,public int size() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,225,return comparatorChain.size();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,229,* Determine if modifications can still be made to the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,230,* ComparatorChain.  ComparatorChains cannot be modified
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,231,* once they have performed a comparison.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,233,* @return true = ComparatorChain cannot be modified; false =
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,234,*         ComparatorChain can still be modified.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,236,public boolean isLocked() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,237,return isLocked;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,240,// throw an exception if the ComparatorChain is locked
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,241,private void checkLocked() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,242,if (isLocked == true) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,243,"throw new UnsupportedOperationException(""Comparator ordering cannot be changed after the first comparison is performed"");"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,247,private void checkChainIntegrity() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,248,if (comparatorChain.size() == 0) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,249,"throw new UnsupportedOperationException(""ComparatorChains must contain at least one Comparator"");"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,255,* Perform comparisons on the Objects as per
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,256,"* Comparator.compare(o1,o2)."
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,258,* @param o1  the first object to compare
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,259,* @param o2  the second object to compare
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,260,"* @return -1, 0, or 1"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,261,* @exception UnsupportedOperationException
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,262,*                   if the ComparatorChain does not contain at least one
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,263,*                   Comparator
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,265,"public int compare(E o1, E o2) throws UnsupportedOperationException {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,266,if (isLocked == false) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,267,checkChainIntegrity();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,268,isLocked = true;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,271,// iterate over all comparators in the chain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,272,Iterator<Comparator<E>> comparators = comparatorChain.iterator();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,273,for (int comparatorIndex = 0; comparators.hasNext(); ++comparatorIndex) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,275,Comparator<E> comparator = comparators.next();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,276,"int retval = comparator.compare(o1,o2);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,277,if (retval != 0) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,278,// invert the order if it is a reverse sort
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,279,if (orderingBits.get(comparatorIndex) == true) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,280,if(Integer.MIN_VALUE == retval) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,281,retval = Integer.MAX_VALUE;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,282,} else {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,283,retval *= -1;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,286,return retval;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,290,"// if comparators are exhausted, return 0"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,291,return 0;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,296,* Implement a hash code for this comparator that is consistent with
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,297,* {@link #equals(Object) equals}.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,299,* @return a suitable hash code
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,300,* @since Commons Collections 3.0
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,302,@Override
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,303,public int hashCode() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,304,int hash = 0;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,305,if (null != comparatorChain) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,306,hash ^= comparatorChain.hashCode();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,308,if (null != orderingBits) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,309,hash ^= orderingBits.hashCode();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,311,return hash;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,315,* Returns <code>true</code> iff <i>that</i> Object is
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,316,* is a {@link Comparator} whose ordering is known to be
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,317,* equivalent to mine.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,318,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,319,* This implementation returns <code>true</code>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,320,* iff <code><i>object</i>.{@link Object#getClass() getClass()}</code>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,321,"* equals <code>this.getClass()</code>, and the underlying"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,322,* comparators and order bits are equal.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,323,* Subclasses may want to override this behavior to remain consistent
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,324,* with the {@link Comparator#equals(Object)} contract.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,326,* @param object  the object to compare with
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,327,* @return true if equal
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,328,* @since Commons Collections 3.0
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,330,@Override
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,331,public boolean equals(Object object) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,332,if (this == object) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,333,return true;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,335,if (null == object) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,336,return false;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,338,if (object.getClass().equals(this.getClass())) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,339,ComparatorChain<?> chain = (ComparatorChain<?>) object;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,340,return ((null == orderingBits ? null == chain.orderingBits : orderingBits
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,341,.equals(chain.orderingBits)) && (null == comparatorChain ? null == chain.comparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,342,: comparatorChain.equals(chain.comparatorChain)));
True,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,src/main/java/org/apache/commons/lang3/compare/ComparatorChain.java,344,return false;
