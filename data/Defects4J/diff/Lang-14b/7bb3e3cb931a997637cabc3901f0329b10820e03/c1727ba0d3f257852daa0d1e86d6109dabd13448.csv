is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,63," @version $Id: LongRange.java,v 1.5 2003/08/18 02:22:24 bayard Exp $"
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,63,"* @version $Id: LongRange.java,v 1.6 2003/12/29 00:58:27 ggregory Exp $"
False,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,267, <p>Gets the maximum number in this range as a <code>int</code>.</p>
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,267,* <p>Gets the maximum number in this range cast to an <code>int</code>.</p>
True,src/java/org/apache/commons/lang/math/LongRange.java,src/java/org/apache/commons/lang/math/LongRange.java,271,* @return the maximum number in this range cast to an <code>int</code>.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,64,* @author Gary D. Gregory
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,65," @version $Id: RandomUtils.java,v 1.6 2003/08/18 02:22:24 bayard Exp $"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,66,"* @version $Id: RandomUtils.java,v 1.7 2003/12/29 00:58:27 ggregory Exp $"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,71,* An instance of {@link JVMRandom}.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,85,ublic static int nextInt(Random rnd) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,86,eturn rnd.nextInt();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,91,"* <p>Returns the next pseudorandom, uniformly distributed int value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,92,* from the given <code>random</code> sequence.</p>
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,94,* @param random the Random sequence generator.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,95,* @return the random int
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,97,public static int nextInt(Random random) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,98,return random.nextInt();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,100,"ublic static int nextInt(Random rnd, int n) {"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,114,"* <p>Returns a pseudorandom, uniformly distributed int value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,115,* between <code>0</code> (inclusive) and the specified value
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,116,"* (exclusive), from the given Random sequence.</p>"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,118,* @param random the Random sequence generator.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,119,* @param n  the specified exclusive max-value
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,120,* @return the random int
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,122,"public static int nextInt(Random random, int n) {"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,102,eturn rnd.nextInt(n);
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,124,return random.nextInt(n);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,113,ublic static long nextLong(Random rnd) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,114,eturn rnd.nextLong();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,138,"* <p>Returns the next pseudorandom, uniformly distributed long value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,139,* from the given Random sequence.</p>
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,141,* @param random the Random sequence generator.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,142,* @return the random long
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,144,public static long nextLong(Random random) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,145,return random.nextLong();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,125,ublic static boolean nextBoolean(Random rnd) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,126,eturn rnd.nextBoolean();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,159,"* <p>Returns the next pseudorandom, uniformly distributed boolean value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,160,* from the given random sequence.</p>
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,162,* @param random the Random sequence generator.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,163,* @return the random boolean
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,165,public static boolean nextBoolean(Random random) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,166,return random.nextBoolean();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,138,ublic static float nextFloat(Random rnd) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,139,eturn rnd.nextFloat();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,181,"* <p>Returns the next pseudorandom, uniformly distributed float value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,182,* between <code>0.0</code> and <code>1.0</code> from the given Random
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,183,* sequence.</p>
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,185,* @param random the Random sequence generator.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,186,* @return the random float
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,188,public static float nextFloat(Random random) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,189,return random.nextFloat();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,142, <p>Synonymous to the Math.random() call.</p>
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,193,"* <p>Returns the next pseudorandom, uniformly distributed float value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,194,* between <code>0.0</code> and <code>1.0</code> from the Math.random()
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,195,* sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,149,ublic static double nextDouble(Random rnd) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,150,eturn rnd.nextDouble();
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,204,"* <p>Returns the next pseudorandom, uniformly distributed float value"
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,205,* between <code>0.0</code> and <code>1.0</code> from the given Random
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,206,* sequence.</p>
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,208,* @param random the Random sequence generator.
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,209,* @return the random double
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,211,public static double nextDouble(Random random) {
True,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,212,return random.nextDouble();
