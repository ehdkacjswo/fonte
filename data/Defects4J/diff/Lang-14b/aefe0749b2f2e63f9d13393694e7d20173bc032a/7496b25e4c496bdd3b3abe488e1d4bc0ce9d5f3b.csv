is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,26, unicode.
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,26,* unicode. It supports multiple 'u' characters and will work with or
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,27,* without the +.
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,33,ublic static enum OPTION { escapePlus }
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,35,/ TODO?: Create an OptionsSet class to hide some of the conditional logic below
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,36,rivate final EnumSet<OPTION> options;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,39, Create a UnicodeUnescaper.
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,41," The constructor takes a list of options, only one of which is currently"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,42, available (whether to expect a plus sign after the 'u').
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,44," For example, to handle ""\\u+0047"":"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,45,    new UnicodeUnescaper(UnicodeUnescaper.OPTION.escapePlus)
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,47, @param options to apply to this unescaper
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,49,ublic UnicodeUnescaper(OPTION... options) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,50,f(options.length > 0) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,51,his.options = EnumSet.copyOf(Arrays.asList(options));
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,52, else {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,53,his.options = null;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,58, Whether the passed in option is currently set.
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,60, @param option to check state of
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,61, @return whether the option is set
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,63,ublic boolean isSet(OPTION option) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,64,eturn (options == null) ? false : options.contains(option);
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,80,/ consume + symbol in \\u+0045
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,81,f(isSet(OPTION.escapePlus)) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,82,f( (index + i < input.length()) && (input.charAt(index + i) == '+') ) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,83,++;
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,47,if( (index + i < input.length()) && (input.charAt(index + i) == '+') ) {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,48,i++;
False,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,33,ry {
False,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,34,u.translate(input);
False,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,35,"ail(""Default behaviour should not parse u+"");"
False,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,36, catch(IllegalArgumentException iae) {
False,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,37,/ expected
False,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,src/test/java/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java,40,u = new UnicodeUnescaper(UnicodeUnescaper.OPTION.escapePlus);
