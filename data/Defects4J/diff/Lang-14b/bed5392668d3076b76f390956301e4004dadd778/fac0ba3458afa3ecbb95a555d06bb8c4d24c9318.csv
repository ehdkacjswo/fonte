is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,14, limitations under the License.
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,16,ackage org.apache.commons.lang.text;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,21,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,23,mport java.util.Map;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,24,mport java.util.HashMap;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,27, Unit tests {@link org.apache.commons.lang.text.Interpolation}.
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,29, @author Henri Yandell
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,30, @author Ken Fitzpatrick
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,31, @version $Id$
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,33,ublic class InterpolationTest extends TestCase {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,35,"rivate static final String INPUT_TEMPLATE     = ""The ${animal} jumped over the ${target}."";"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,36,"rivate static final String EXPECTED_RESULTS_1 = ""The quick brown fox jumped over the lazy dog."";"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,37,"rivate static final String EXPECTED_RESULTS_2 = ""The cow jumped over the moon."";"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,39,ublic InterpolationTest(String name) {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,40,uper(name);
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,43,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,44,estRunner.run(suite());
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,47,ublic static Test suite() {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,48,estSuite suite = new TestSuite(InterpolationTest.class);
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,49,"uite.setName(""Interpolation Tests"");"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,50,eturn suite;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,53,rotected void setUp() throws Exception {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,54,uper.setUp();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,57,rotected void tearDown() throws Exception {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,58,uper.tearDown();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,61,ublic void testSimpleVariableSubstitution() {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,63,"/ test case: ""The quick brown fox jumped over the lazy dog."""
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,64,ap valuesMap = new HashMap();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,65,"aluesMap.put( ""animal"", ""quick brown fox"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,66,"aluesMap.put( ""target"", ""lazy dog"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,67,"ssertEquals( ""Test case 1: simple variable substitution"", EXPECTED_RESULTS_1,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,68,"nterpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,70,"/ test case: ""The cow jumped over the moon."""
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,71,aluesMap = new HashMap();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,72,"aluesMap.put( ""animal"", ""cow"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,73,"aluesMap.put( ""target"", ""moon"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,74,"ssertEquals( ""Test case 2: template reuse, different results"" ,EXPECTED_RESULTS_2,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,75,"nterpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,78,ublic void testNullMap() {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,79,/ negative test case: Map == null
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,80,ap valuesMap = null;
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,81,"ssertEquals( ""Test case 3: Map == null"", INPUT_TEMPLATE,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,82,"nterpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,85,ublic void testEmptyMap() {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,86,/ negative test case: Map.isEmpty()
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,87,ap valuesMap = new HashMap();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,88,"ssertEquals( ""Test case 4: Map.isEmpty()"", INPUT_TEMPLATE,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,89,"nterpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,92,ublic void testNullTemplate() {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,93,/ negative test case: INPUT_TEMPLATE == null
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,94,ap valuesMap = new HashMap();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,95,"aluesMap.put( ""animal"", ""cow"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,96,"aluesMap.put( ""target"", ""moon"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,97,"ssertNull( ""Test case 5: template == null"","
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,98,"nterpolation.interpolate( null, valuesMap) );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,101,ublic void testRecursive() {
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,102,/ test case: process repeatedly
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,103,ap valuesMap = new HashMap();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,104,"aluesMap.put( ""animal"", ""${critter}"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,105,"aluesMap.put( ""target"", ""${pet}"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,106,"aluesMap.put( ""pet"", ""${petCharacteristic} dog"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,107,"aluesMap.put( ""petCharacteristic"", ""lazy"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,108,"aluesMap.put( ""critter"", ""${critterSpeed} ${critterColor} ${critterType}"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,109,"aluesMap.put( ""critterSpeed"", ""quick"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,110,"aluesMap.put( ""critterColor"", ""brown"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,111,"aluesMap.put( ""critterType"", ""fox"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,112,"ssertEquals( ""Test case 6: interpolateRepeatedly"", EXPECTED_RESULTS_1,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,113,"nterpolation.interpolateRepeatedly( INPUT_TEMPLATE, valuesMap ) );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,115,/ test case: process repeatedly
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,116,aluesMap = new HashMap();
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,117,"aluesMap.put( ""animal"", ""cow"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,118,"aluesMap.put( ""target"", ""${celestialObject}"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,119,"aluesMap.put( ""celestialObject"", ""moon"" );"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,120,"ssertEquals( ""Test case 8: interpolateRepeatedly"", EXPECTED_RESULTS_2,"
False,src/test/org/apache/commons/lang/text/InterpolationTest.java,src/test/org/apache/commons/lang/text/InterpolationTest.java,121,"nterpolation.interpolateRepeatedly( INPUT_TEMPLATE, valuesMap ) );"
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,51,uite.addTest(InterpolationTest.suite());
