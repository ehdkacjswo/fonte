is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,431," <p>If the string starts with <code>0x</code> or <code>-0x</code>, it"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,431,"* <p>If the string starts with <code>0x</code> or <code>-0x</code> (lower or upper case), it"
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,441, @return Number created from the string
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,441,* @return Number created from the string (or null if the input is null)
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,458,"f (str.startsWith(""0x"") || str.startsWith(""-0x"")) {"
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,458,"if (str.startsWith(""0x"") || str.startsWith(""-0x"") || str.startsWith(""0X"") || str.startsWith(""-0X"")) {"
False,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,196,"ssertTrue(""createNumber(String) 9 failed"", 0xFADE == NumberUtils.createNumber(""0xFADE"").intValue());"
False,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,197,"ssertTrue(""createNumber(String) 10 failed"", -0xFADE == NumberUtils.createNumber(""-0xFADE"").intValue());"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,196,"assertTrue(""createNumber(String) 9a failed"", 0xFADE == NumberUtils.createNumber(""0xFADE"").intValue());"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,197,"assertTrue(""createNumber(String) 9b failed"", 0xFADE == NumberUtils.createNumber(""0Xfade"").intValue());"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,198,"assertTrue(""createNumber(String) 10a failed"", -0xFADE == NumberUtils.createNumber(""-0xFADE"").intValue());"
True,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java,199,"assertTrue(""createNumber(String) 10b failed"", -0xFADE == NumberUtils.createNumber(""-0Xfade"").intValue());"
