is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34," @version $Id: DateUtils.java,v 1.28 2004/09/21 02:11:06 ggregory Exp $"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34,"* @version $Id: DateUtils.java,v 1.29 2004/09/26 05:45:33 bayard Exp $"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,60,tatic final long MILLIS_PER_YEAR = 365 * MILLIS_PER_DAY;
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,60,static final long MILLIS_PER_YEAR = 365 * MILLIS_PER_DAY + 6 * MILLIS_PER_HOUR;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,28, @since 2.0
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,29," @version $Id: DurationFormatUtils.java,v 1.13 2004/09/01 17:40:55 ggregory Exp $"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,28,* @author Henri Yandell
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,29,* @since 2.1
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,30,"* @version $Id: DurationFormatUtils.java,v 1.14 2004/09/26 05:45:33 bayard Exp $"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,67,ublic static final FastDateFormat ISO_EXTENDED_FORMAT =
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,68,astDateFormat.getInstance(ISO_EXTENDED_FORMAT_PATTERN);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,68,//    public static final FastDateFormat ISO_EXTENDED_FORMAT =
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,69,//        FastDateFormat.getInstance(ISO_EXTENDED_FORMAT_PATTERN);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,101,"return format(millis, format, true);"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,103,"public static String format(long millis, String format, boolean padWithZeros) {"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,154,"uffer.append( StringUtils.leftPad(""""+years, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,158,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+years, count, ""0"") : """"+years );"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,157,"uffer.append( StringUtils.leftPad(""""+months, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,161,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+months, count, ""0"") : """"+months );"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,160,"uffer.append( StringUtils.leftPad(""""+days, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,164,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+days, count, ""0"") : """"+days );"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,163,"uffer.append( StringUtils.leftPad(""""+hours, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,167,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+hours, count, ""0"") : """"+hours );"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,166,"uffer.append( StringUtils.leftPad(""""+minutes, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,170,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+minutes, count, ""0"") : """"+minutes );"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,169,"uffer.append( StringUtils.leftPad(""""+seconds, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,173,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+seconds, count, ""0"") : """"+seconds );"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,172,"uffer.append( StringUtils.leftPad(""""+milliseconds, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,176,"buffer.append( padWithZeros ? StringUtils.leftPad(""""+milliseconds, count, ""0"") : """"+milliseconds );"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,36,* @author Henri Yandell
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,159,ext = DurationFormatUtils.ISO_EXTENDED_FORMAT.format(cal);
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,160,"ssertEquals(""P2002Y2M23DT9H11M12.1S"", text);"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,160,"text = DurationFormatUtils.format(cal.getTime().getTime(), DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN, false);"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,161,// TODO: The 1H41M here should be 9H11M. Again the year/month assumption.
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,162,"System.err.println(""T: ""+text);"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,163,"assertEquals(""P32Y1M23DT1H41M12.1S"", text);"
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,162,"al.set(1, 1, 3, 10, 30, 0);"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,165,"cal.set(1971, 1, 3, 10, 30, 0);"
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,164,ext = DurationFormatUtils.ISO_EXTENDED_FORMAT.format(cal);
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,165,/ TODO: This is broken and needs fixing.
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,166,"/        assertEquals(""P1Y2M3DT10H30M0.0S"", text);"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,167,"text = DurationFormatUtils.format(cal.getTime().getTime(), DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN, false);"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,168,// TODO: The 2D21H here is wrong and should be larger. The Year/Month assumption in DurationFormatUtils.
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,169,"assertEquals(""P1Y1M2DT21H0M0.0S"", text);"
