is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,17,package org.apache.commons.collections.comparators;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,19,import java.util.Comparator;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,20,import java.util.HashMap;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,21,import java.util.List;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,22,import java.util.Map;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,25,* A Comparator which imposes a specific order on a specific set of Objects.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,26,* Objects are presented to the FixedOrderComparator in a specified order and
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,27,"* subsequent calls to {@link #compare(Object, Object) compare} yield that order."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,28,* For example:
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,29,* <pre>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,30,"* String[] planets = {""Mercury"", ""Venus"", ""Earth"", ""Mars""};"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,31,* FixedOrderComparator distanceFromSun = new FixedOrderComparator(planets);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,32,* Arrays.sort(planets);                     // Sort to alphabetical order
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,33,"* Arrays.sort(planets, distanceFromSun);    // Back to original order"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,34,* </pre>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,35,* <p>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,36,"* Once <code>compare</code> has been called, the FixedOrderComparator is locked"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,37,* and attempts to modify it yield an UnsupportedOperationException.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,38,* <p>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,39,* Instances of FixedOrderComparator are not synchronized.  The class is not
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,40,"* thread-safe at construction time, but it is thread-safe to perform"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,41,* multiple comparisons  after all the setup operations are complete.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,43,* @since Commons Collections 3.0
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,44,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,46,* @author David Leppik
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,47,* @author Stephen Colebourne
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,48,* @author Janek Bogucki
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,50,public class FixedOrderComparator<T> implements Comparator<T> {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,53,* Unknown object behavior enum.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,54,* @since Commons Collections 5
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,56,public static enum UnknownObjectBehavior {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,57,"BEFORE, AFTER, EXCEPTION;"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,60,/** Internal map of object to position */
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,61,"private final Map<T, Integer> map = new HashMap<T, Integer>();"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,63,/** Counter used in determining the position in the map */
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,64,private int counter = 0;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,66,/** Is the comparator locked against further change */
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,67,private boolean isLocked = false;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,69,/** The behaviour in the case of an unknown object */
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,70,private UnknownObjectBehavior unknownObjectBehavior = UnknownObjectBehavior.EXCEPTION;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,72,// Constructors
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,75,* Constructs an empty FixedOrderComparator.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,77,public FixedOrderComparator() {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,78,super();
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,82,* Constructs a FixedOrderComparator which uses the order of the given array
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,83,* to compare the objects.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,84,* <p>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,85,"* The array is copied, so later changes will not affect the comparator."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,87,* @param items  the items that the comparator can compare in order
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,88,* @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,90,public FixedOrderComparator(T[] items) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,91,super();
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,92,if (items == null) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,93,"throw new IllegalArgumentException(""The list of items must not be null"");"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,95,for (int i = 0; i < items.length; i++) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,96,add(items[i]);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,101,* Constructs a FixedOrderComparator which uses the order of the given list
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,102,* to compare the objects.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,103,* <p>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,104,"* The list is copied, so later changes will not affect the comparator."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,106,* @param items  the items that the comparator can compare in order
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,107,* @throws IllegalArgumentException if the list is null
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,109,public FixedOrderComparator(List<T> items) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,110,super();
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,111,if (items == null) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,112,"throw new IllegalArgumentException(""The list of items must not be null"");"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,114,for (T t : items) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,115,add(t);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,119,// Bean methods / state querying methods
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,122,* Returns true if modifications cannot be made to the FixedOrderComparator.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,123,* FixedOrderComparators cannot be modified once they have performed a comparison.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,125,* @return true if attempts to change the FixedOrderComparator yield an
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,126,"*  UnsupportedOperationException, false if it can be changed."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,128,public boolean isLocked() {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,129,return isLocked;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,133,* Checks to see whether the comparator is now locked against further changes.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,135,* @throws UnsupportedOperationException if the comparator is locked
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,137,protected void checkLocked() {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,138,if (isLocked()) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,139,"throw new UnsupportedOperationException(""Cannot modify a FixedOrderComparator after a comparison"");"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,144,* Gets the behavior for comparing unknown objects.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,146,* @return {@link UnknownObjectBehavior}
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,148,public UnknownObjectBehavior getUnknownObjectBehavior() {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,149,return unknownObjectBehavior;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,153,* Sets the behavior for comparing unknown objects.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,155,* @param unknownObjectBehavior  the flag for unknown behaviour -
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,156,"* UNKNOWN_AFTER, UNKNOWN_BEFORE or UNKNOWN_THROW_EXCEPTION"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,157,* @throws UnsupportedOperationException if a comparison has been performed
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,158,* @throws IllegalArgumentException if the unknown flag is not valid
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,160,public void setUnknownObjectBehavior(UnknownObjectBehavior unknownObjectBehavior) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,161,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,162,if (unknownObjectBehavior == null) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,163,"throw new IllegalArgumentException(""Unknown object behavior must not be null"");"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,165,this.unknownObjectBehavior = unknownObjectBehavior;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,168,// Methods for adding items
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,171,"* Adds an item, which compares as after all items known to the Comparator."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,172,"* If the item is already known to the Comparator, its old position is"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,173,* replaced with the new position.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,175,* @param obj  the item to be added to the Comparator.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,176,"* @return true if obj has been added for the first time, false if"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,177,*  it was already known to the Comparator.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,178,* @throws UnsupportedOperationException if a comparison has already been made
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,180,public boolean add(T obj) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,181,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,182,"Integer position = map.put(obj, new Integer(counter++));"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,183,return (position == null);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,187,"* Adds a new item, which compares as equal to the given existing item."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,189,* @param existingObj  an item already in the Comparator's set of
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,190,*  known objects
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,191,* @param newObj  an item to be added to the Comparator's set of
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,192,*  known objects
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,193,"* @return true if newObj has been added for the first time, false if"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,194,*  it was already known to the Comparator.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,195,* @throws IllegalArgumentException if existingObject is not in the
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,196,*  Comparator's set of known objects.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,197,* @throws UnsupportedOperationException if a comparison has already been made
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,199,"public boolean addAsEqual(T existingObj, T newObj) {"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,200,checkLocked();
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,201,Integer position = map.get(existingObj);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,202,if (position == null) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,203,"throw new IllegalArgumentException(existingObj + "" not known to "" + this);"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,205,"Integer result = map.put(newObj, position);"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,206,return (result == null);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,209,// Comparator methods
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,212,* Compares two objects according to the order of this Comparator.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,213,* <p>
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,214,* It is important to note that this class will throw an IllegalArgumentException
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,215,* in the case of an unrecognised object. This is not specified in the
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,216,"* Comparator interface, but is the most appropriate exception."
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,218,* @param obj1  the first object to compare
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,219,* @param obj2  the second object to compare
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,220,"* @return negative if obj1 is less, positive if greater, zero if equal"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,221,* @throws IllegalArgumentException if obj1 or obj2 are not known
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,222,*  to this Comparator and an alternative behavior has not been set
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,223,*  via {@link #setUnknownObjectBehavior(UnknownObjectBehavior)}.
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,225,"public int compare(T obj1, T obj2) {"
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,226,isLocked = true;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,227,Integer position1 = map.get(obj1);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,228,Integer position2 = map.get(obj2);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,229,if (position1 == null || position2 == null) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,230,switch (unknownObjectBehavior) {
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,231,case BEFORE:
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,232,return position1 == null ? position2 == null ? 0 : -1 : 1;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,233,case AFTER:
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,234,return position1 == null ? position2 == null ? 0 : 1 : -1;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,235,case EXCEPTION:
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,236,Object unknownObj = (position1 == null) ? obj1 : obj2;
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,237,"throw new IllegalArgumentException(""Attempting to compare unknown object """
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,238,+ unknownObj);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,239,default: //could be null
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,240,"throw new UnsupportedOperationException(""Unknown unknownObjectBehavior: """
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,241,+ unknownObjectBehavior);
True,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,src/main/java/org/apache/commons/lang3/compare/FixedOrderComparator.java,244,return position1.compareTo(position2);
