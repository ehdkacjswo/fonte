is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java,26, Returns the name of this entry.
False,src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java,27, @return the name of this entry
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,68," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,69," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,70," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,71, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,72, @see TarInputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,73, @see TarArchiveOutputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,32, @param out
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,36," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,37," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,38, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,24," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,25," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,26, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,31," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,32," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,33," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,34, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,35, @see TarInputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,36, @see TarArchiveEntry
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,31," @author Timothy Gerard Endres <a href=""mailto:time@ice.com"">time@ice.com</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,32," @author <a href=""mailto:peter@apache.org"">Peter Donald</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,33, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,34, @see TarInputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,35, @see TarArchiveEntry
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,24," @author <a href=""mailto:time@ice.com"">Timothy Gerard Endres</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,25," @author <a href=""mailto:stefano@apache.org"">Stefano Mazzocchi</a>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,26, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,46," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,47, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,28," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,29, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java,src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java,24," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java,src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java,25, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,27," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,28, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,32," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,33, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,30," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,31,<<<<<< HEAD:src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,32, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,34, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,35,>>>>>> 75cb63ff7005344589b57d17338b64783f8f430c:src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,31," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,32, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,25," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,26, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,45," @author <a href=""stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,46, @version $Revision$
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,25," @author <a href=""mailto:stefan.bodewig@epost.de"">Stefan Bodewig</a>"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,26, @version $Revision$
False,src/main/java/org/apache/commons/compress/changes/Change.java,src/main/java/org/apache/commons/compress/changes/Change.java,21,mport org.apache.commons.compress.archivers.ArchiveInputStream;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,27," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,28, <keiron@aftexsw.com> to whom the Ant project is very grateful for his great
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,29, code.
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,36," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,27," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,28, <keiron@aftexsw.com> to whom the Ant project is very grateful for his great
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,29, code.
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,35," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,569,"nt nGroups, nBytes;"
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,562,int nGroups;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,563,//int nBytes;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,800,Bytes = bytesOut;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,794,//nBytes = bytesOut;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,824,Bytes = bytesOut;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,818,//nBytes = bytesOut;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,835,Bytes = bytesOut;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,829,//nBytes = bytesOut;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,854,Bytes = bytesOut;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,848,//nBytes = bytesOut;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,23," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,24, <keiron@aftexsw.com> to whom the Ant project is very grateful for his great
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,25, code.
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Constants.java,32," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,22," This package is based on the work done by Keiron Liddle, Aftex Software"
False,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,23, <keiron@aftexsw.com> to whom the Ant project is very grateful for his great
False,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,24, code.
False,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java,31," @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,1,package org.apache.commons.compress;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,3,import java.io.File;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,5,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,7,public abstract class AbstractTestCase extends TestCase {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,9,protected File dir;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,11,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,12,"dir = File.createTempFile(""dir"", """");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,13,dir.delete();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,14,dir.mkdir();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,17,protected void tearDown() throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,18,dir.delete();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,19,dir = null;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,19,package org.apache.commons.compress;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,21,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,22,import java.io.File;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,23,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,25,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,27,import org.apache.commons.compress.archivers.ArchiveInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,28,import org.apache.commons.compress.archivers.ArchiveStreamFactory;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,29,import org.apache.commons.compress.archivers.ar.ArArchiveInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,30,import org.apache.commons.compress.archivers.jar.JarArchiveInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,31,import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,32,import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,34,public final class DetectArchiverTestCase extends TestCase {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,35,public void testDetection() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,36,final ArchiveStreamFactory factory = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,38,final ArchiveInputStream ar = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,39,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,40,"new File(getClass().getClassLoader().getResource(""bla.ar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,41,assertTrue(ar instanceof ArArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,43,final ArchiveInputStream tar = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,44,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,45,"new File(getClass().getClassLoader().getResource(""bla.tar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,46,assertTrue(tar instanceof TarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,48,final ArchiveInputStream zip = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,49,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,50,"new File(getClass().getClassLoader().getResource(""bla.zip"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,51,assertTrue(zip instanceof ZipArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,53,final ArchiveInputStream jar = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,54,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,55,"new File(getClass().getClassLoader().getResource(""bla.jar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,56,assertTrue(jar instanceof JarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,58,//		final ArchiveInputStream tgz = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,59,//				new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,60,"//						new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,61,//		assertTrue(tgz instanceof TarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,19,package org.apache.commons.compress;
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,23,public final class DetectCompressorTestCase extends TestCase {
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,24,public void testDetection() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,19,package org.apache.commons.compress.archivers;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,27,import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,30,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,32,public final class ArTestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,33,public void testArArchiveCreation() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,34,"final File output = new File(dir, ""bla.ar"");"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,36,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,37,"final File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,39,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,40,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", out);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,41,"os.putArchiveEntry(new ArArchiveEntry(""test1.xml"", file1.length()));"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,42,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,43,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,45,"os.putArchiveEntry(new ArArchiveEntry(""test2.xml"", file2.length()));"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,46,"IOUtils.copy(new FileInputStream(file2), os);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,47,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,49,os.close();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,52,public void testArUnarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,53,"final File output = new File(dir, ""bla.ar"");"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,55,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,56,"final File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,58,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,59,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", out);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,60,"os.putArchiveEntry(new ArArchiveEntry(""test1.xml"", file1.length()));"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,61,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,62,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,64,"os.putArchiveEntry(new ArArchiveEntry(""test2.xml"", file2.length()));"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,65,"IOUtils.copy(new FileInputStream(file2), os);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,66,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,67,os.close();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,70,// UnArArchive Operation
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,71,final File input = output;
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,72,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,73,"final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,74,final ArArchiveEntry entry = (ArArchiveEntry)in.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,76,"File target = new File(dir, entry.getName());"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,77,final OutputStream out = new FileOutputStream(target);
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,79,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,81,out.close();
True,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,src/test/java/org/apache/commons/compress/archivers/ArTestCase.java,82,in.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,4, distributed with this work for additional information
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,7," ""License""); you may not use this file except in compliance"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,8, with the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,13, software distributed under the License is distributed on an
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,15," KIND, either express or implied.  See the License for the"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,16, specific language governing permissions and limitations
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,17, under the License.
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,19,ackage org.apache.commons.compress.archivers;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,21,mport java.io.BufferedInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,22,mport java.io.File;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,23,mport java.io.FileInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,24,mport java.io.FileOutputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,25,mport java.io.InputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,26,mport java.io.OutputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,28,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,30,mport org.apache.commons.compress.archivers.ar.ArArchiveEntry;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,31,mport org.apache.commons.compress.archivers.ar.ArArchiveInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,32,mport org.apache.commons.compress.archivers.jar.JarArchiveInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,33,mport org.apache.commons.compress.archivers.tar.TarArchiveEntry;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,34,mport org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,35,mport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,36,mport org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,37,mport org.apache.commons.compress.compressors.CompressorInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,38,mport org.apache.commons.compress.compressors.CompressorOutputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,39,mport org.apache.commons.compress.compressors.CompressorStreamFactory;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,40,mport org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,41,mport org.apache.commons.compress.utils.IOUtils;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,43,ublic final class CompressTestCase extends TestCase {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,45,rivate File dir;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,47,rotected void setUp() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,48,"ir = File.createTempFile(""dir"", """");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,49,ir.delete();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,50,ir.mkdir();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,53,rotected void tearDown() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,54,ir.delete();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,55,ir = null;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,59,ublic void testGzipCreation()  throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,60,"inal File output = new File(dir, ""bla.gz"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,61,"inal File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,62,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,63,"ompressorOutputStream cos = new CompressorStreamFactory().createCompressorOutputStream(""gz"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,64,"OUtils.copy(new FileInputStream(file1), cos);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,65,os.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,68,ublic void testGzipUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,69,"inal File output = new File(dir, ""bla-entpackt.tar"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,70,"inal File input = new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,71,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,72,"inal CompressorInputStream in = new CompressorStreamFactory().createCompressorInputStream(""gz"", is);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,73,"OUtils.copy(in, new FileOutputStream(output));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,74,n.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,77,ublic void testBzipCreation()  throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,78,"inal File output = new File(dir, ""bla.txt.bz2"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,79,ystem.out.println(dir);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,80,"inal File file1 = new File(getClass().getClassLoader().getResource(""test.txt"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,81,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,82,"ompressorOutputStream cos = new CompressorStreamFactory().createCompressorOutputStream(""bzip2"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,83,"OUtils.copy(new FileInputStream(file1), cos);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,84,os.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,87,ublic void testBzip2Unarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,88,"inal File output = new File(dir, ""test-entpackt.txt"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,89,ystem.out.println(dir);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,90,"inal File input = new File(getClass().getClassLoader().getResource(""bla.txt.bz2"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,91,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,92,"/final CompressorInputStream in = new CompressorStreamFactory().createCompressorInputStream(""bzip2"", is);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,93,inal CompressorInputStream in = new BZip2CompressorInputStream(is);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,94,"OUtils.copy(in, new FileOutputStream(output));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,95,n.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,98,ublic void testJarArchiveCreation() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,99,"inal File output = new File(dir, ""bla.jar"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,101,"inal File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,102,"inal File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,104,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,106,"inal ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,108,"s.putArchiveEntry(new ZipArchiveEntry(""testdata/test1.xml""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,109,"OUtils.copy(new FileInputStream(file1), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,110,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,112,"s.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,113,"OUtils.copy(new FileInputStream(file2), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,114,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,116,s.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,119,ublic void testJarUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,120,"inal File input = new File(getClass().getClassLoader().getResource(""bla.jar"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,121,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,122,"inal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,124,ipArchiveEntry entry = (ZipArchiveEntry)in.getNextEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,125,"ile o = new File(dir, entry.getName());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,126,.getParentFile().mkdirs();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,127,utputStream out = new FileOutputStream(o);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,128,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,129,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,131,ntry = (ZipArchiveEntry)in.getNextEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,132," = new File(dir, entry.getName());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,133,.getParentFile().mkdirs();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,134,ut = new FileOutputStream(o);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,135,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,136,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,138,ntry = (ZipArchiveEntry)in.getNextEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,139," = new File(dir, entry.getName());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,140,.getParentFile().mkdirs();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,141,ut = new FileOutputStream(o);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,142,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,143,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,145,n.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,149,ublic void testDetection() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,150,inal ArchiveStreamFactory factory = new ArchiveStreamFactory();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,152,inal ArchiveInputStream ar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,153,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,154,"ew File(getClass().getClassLoader().getResource(""bla.ar"").getFile()))));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,155,ssertTrue(ar instanceof ArArchiveInputStream);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,157,inal ArchiveInputStream tar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,158,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,159,"ew File(getClass().getClassLoader().getResource(""bla.tar"").getFile()))));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,160,ssertTrue(tar instanceof TarArchiveInputStream);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,162,inal ArchiveInputStream zip = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,163,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,164,"ew File(getClass().getClassLoader().getResource(""bla.zip"").getFile()))));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,165,ssertTrue(zip instanceof ZipArchiveInputStream);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,167,inal ArchiveInputStream jar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,168,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,169,"ew File(getClass().getClassLoader().getResource(""bla.jar"").getFile()))));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,170,ssertTrue(jar instanceof JarArchiveInputStream);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,172,/		final ArchiveInputStream tgz = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,173,/				new BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,174,"/						new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile()))));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,175,/		assertTrue(tgz instanceof TarArchiveInputStream);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,179,ublic void testArArchiveCreation() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,180,"inal File output = new File(dir, ""bla.ar"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,182,"inal File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,183,"inal File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,185,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,186,"inal ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,187,"s.putArchiveEntry(new ArArchiveEntry(""test1.xml"", file1.length()));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,188,"OUtils.copy(new FileInputStream(file1), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,189,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,191,"s.putArchiveEntry(new ArArchiveEntry(""test2.xml"", file2.length()));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,192,"OUtils.copy(new FileInputStream(file2), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,193,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,195,s.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,198,ublic void testArUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,199,"inal File output = new File(dir, ""bla.ar"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,201,"inal File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,202,"inal File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,204,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,205,"inal ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,206,"s.putArchiveEntry(new ArArchiveEntry(""test1.xml"", file1.length()));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,207,"OUtils.copy(new FileInputStream(file1), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,208,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,210,"s.putArchiveEntry(new ArArchiveEntry(""test2.xml"", file2.length()));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,211,"OUtils.copy(new FileInputStream(file2), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,212,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,213,s.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,216,/ UnArArchive Operation
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,217,inal File input = output;
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,218,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,219,"inal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,220,inal ArArchiveEntry entry = (ArArchiveEntry)in.getNextEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,222,"ile target = new File(dir, entry.getName());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,223,inal OutputStream out = new FileOutputStream(target);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,225,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,227,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,228,n.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,231,ublic void testZipArchiveCreation() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,233,"inal File output = new File(dir, ""bla.zip"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,235,"inal File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,236,"inal File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,238,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,240,"inal ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,242,"s.putArchiveEntry(new ZipArchiveEntry(""testdata/test1.xml""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,243,"OUtils.copy(new FileInputStream(file1), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,244,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,246,"s.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,247,"OUtils.copy(new FileInputStream(file2), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,248,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,250,s.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,253,ublic void testTarArchiveCreation() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,255,"inal File output = new File(dir, ""bla.tar"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,257,"inal File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,259,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,261,"inal ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,263,"inal TarArchiveEntry entry = new TarArchiveEntry(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,264,ntry.setModTime(0);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,265,ntry.setSize(file1.length());
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,266,ntry.setUserID(0);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,267,ntry.setGroupID(0);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,268,"ntry.setUserName(""avalon"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,269,"ntry.setGroupName(""excalibur"");"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,270,ntry.setMode(0100000);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,272,s.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,273,"OUtils.copy(new FileInputStream(file1), os);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,275,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,276,s.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,279,ublic void testZipUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,281,"inal File input = new File(getClass().getClassLoader().getResource(""bla.zip"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,283,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,284,"inal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,286,inal ZipArchiveEntry entry = (ZipArchiveEntry)in.getNextEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,287,"inal OutputStream out = new FileOutputStream(new File(dir, entry.getName()));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,289,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,291,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,292,n.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,295,ublic void testTarUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,296,"inal File input = new File(getClass().getClassLoader().getResource(""bla.tar"").getFile());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,297,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,298,"inal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,299,inal TarArchiveEntry entry = (TarArchiveEntry)in.getNextEntry();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,300,"inal OutputStream out = new FileOutputStream(new File(dir, entry.getName()));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,301,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,302,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,303,n.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,306,/  public void testZipUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,307,/        ZipInputStream zip =
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,308,"/            new ZipInputStream(new FileInputStream(""C:\\dev\\sources\\compress\\testdata\\bla.zip""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,309,/        Iterator iterator = zip.getEntryIterator();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,310,/        while (iterator.hasNext()) {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,311,/            ArchiveEntry entry = (ArchiveEntry) iterator.next();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,312,"/            OutputStream output = new FileOutputStream(""testdata\\blub\\"" + entry.getName());"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,313,"/            IOUtils.copy(zip, output);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,315,/        zip.close();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,319,/	public void xtestFactoryUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,320,"/		CompressUtils.unpack(new FileInputStream(""bla.tgz""), new File(""output""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,324,/	public void xtestArUnarchive() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,325,"/		ArchiveInputStream ar = new ArArchiveInputStream(new FileInputStream(""bla.tgz""));"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,326,/		Iterator iterator = ar.getEntryIterator();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,327,/		while(iterator.hasNext()) {
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,328,/			ArchiveEntry entry = (ArchiveEntry) iterator.next();
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,329,/			OutputStream output = new FileOutputStream(entry.getName());
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,330,"/			IOUtils.copy(ar, output);"
False,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,src/test/java/org/apache/commons/compress/archivers/CompressTestCase.java,332,/		ar.close();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,19,package org.apache.commons.compress.archivers;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,27,import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,30,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,32,public final class JarTestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,33,public void testJarArchiveCreation() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,34,"final File output = new File(dir, ""bla.jar"");"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,36,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,37,"final File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,39,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,41,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", out);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,43,"os.putArchiveEntry(new ZipArchiveEntry(""testdata/test1.xml""));"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,44,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,45,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,47,"os.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,48,"IOUtils.copy(new FileInputStream(file2), os);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,49,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,51,os.close();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,55,public void testJarUnarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,56,"final File input = new File(getClass().getClassLoader().getResource(""bla.jar"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,57,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,58,"final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,60,ZipArchiveEntry entry = (ZipArchiveEntry)in.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,61,"File o = new File(dir, entry.getName());"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,62,o.getParentFile().mkdirs();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,63,OutputStream out = new FileOutputStream(o);
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,64,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,65,out.close();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,67,entry = (ZipArchiveEntry)in.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,68,"o = new File(dir, entry.getName());"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,69,o.getParentFile().mkdirs();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,70,out = new FileOutputStream(o);
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,71,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,72,out.close();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,74,entry = (ZipArchiveEntry)in.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,75,"o = new File(dir, entry.getName());"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,76,o.getParentFile().mkdirs();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,77,out = new FileOutputStream(o);
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,78,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,79,out.close();
True,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,src/test/java/org/apache/commons/compress/archivers/JarTestCase.java,81,in.close();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,19,package org.apache.commons.compress.archivers;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,27,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,28,import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,29,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,31,public final class TarTestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,32,public void testTarArchiveCreation() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,34,"final File output = new File(dir, ""bla.tar"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,36,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,38,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,40,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", out);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,42,"final TarArchiveEntry entry = new TarArchiveEntry(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,43,entry.setModTime(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,44,entry.setSize(file1.length());
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,45,entry.setUserID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,46,entry.setGroupID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,47,"entry.setUserName(""avalon"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,48,"entry.setGroupName(""excalibur"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,49,entry.setMode(0100000);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,51,os.putArchiveEntry(entry);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,52,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,54,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,55,os.close();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,57,public void testTarUnarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,58,"final File input = new File(getClass().getClassLoader().getResource(""bla.tar"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,59,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,60,"final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,61,final TarArchiveEntry entry = (TarArchiveEntry)in.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,62,"final OutputStream out = new FileOutputStream(new File(dir, entry.getName()));"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,63,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,64,out.close();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,65,in.close();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,19,package org.apache.commons.compress.archivers;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,27,import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,30,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,32,public final class ZipTestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,33,public void testZipArchiveCreation() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,35,"final File output = new File(dir, ""bla.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,37,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,38,"final File file2 = new File(getClass().getClassLoader().getResource(""test2.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,40,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,42,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", out);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,44,"os.putArchiveEntry(new ZipArchiveEntry(""testdata/test1.xml""));"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,45,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,46,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,48,"os.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,49,"IOUtils.copy(new FileInputStream(file2), os);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,50,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,52,os.close();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,54,public void testZipUnarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,56,"final File input = new File(getClass().getClassLoader().getResource(""bla.zip"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,58,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,59,"final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,61,final ZipArchiveEntry entry = (ZipArchiveEntry)in.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,62,"final OutputStream out = new FileOutputStream(new File(dir, entry.getName()));"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,64,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,66,out.close();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,67,in.close();
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,19,package org.apache.commons.compress.compressors;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,27,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,28,import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,29,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,31,public final class BZip2TestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,32,public void testBzipCreation()  throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,33,"final File output = new File(dir, ""bla.txt.bz2"");"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,34,System.out.println(dir);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,35,"final File file1 = new File(getClass().getClassLoader().getResource(""test.txt"").getFile());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,36,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,37,"CompressorOutputStream cos = new CompressorStreamFactory().createCompressorOutputStream(""bzip2"", out);"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,38,"IOUtils.copy(new FileInputStream(file1), cos);"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,39,cos.close();
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,42,public void testBzip2Unarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,43,"final File output = new File(dir, ""test-entpackt.txt"");"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,44,System.out.println(dir);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,45,"final File input = new File(getClass().getClassLoader().getResource(""bla.txt.bz2"").getFile());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,46,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,47,"//final CompressorInputStream in = new CompressorStreamFactory().createCompressorInputStream(""bzip2"", is);"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,48,final CompressorInputStream in = new BZip2CompressorInputStream(is);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,49,"IOUtils.copy(in, new FileOutputStream(output));"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,50,in.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,19,package org.apache.commons.compress.compressors;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,27,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,28,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,30,public final class GZipTestCase extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,31,public void testGzipCreation()  throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,32,"final File output = new File(dir, ""bla.gz"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,33,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,34,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,35,"CompressorOutputStream cos = new CompressorStreamFactory().createCompressorOutputStream(""gz"", out);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,36,"IOUtils.copy(new FileInputStream(file1), cos);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,37,cos.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,40,public void testGzipUnarchive() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,41,"final File output = new File(dir, ""bla-entpackt.tar"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,42,"final File input = new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,43,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,44,"final CompressorInputStream in = new CompressorStreamFactory().createCompressorInputStream(""gz"", is);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,45,"IOUtils.copy(in, new FileOutputStream(output));"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,46,in.close();
