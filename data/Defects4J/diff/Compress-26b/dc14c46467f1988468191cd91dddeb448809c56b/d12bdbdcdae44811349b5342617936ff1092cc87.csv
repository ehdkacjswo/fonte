is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,24,import java.io.FileNotFoundException;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,29,import java.util.ArrayList;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,45,rivate File archive;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,47,private File archive; // used to delete the archive in tearDown
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,48,protected List archiveList; // Lists the content of the archive as originally created
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,50,private ArchiveStreamFactory factory = new ArchiveStreamFactory();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,95, Creates an archive of 5 textbased files in several directories. The
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,100,* Creates an archive of textbased files in several directories. The
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,110,* <li>bla/test5.xml</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,111,* <li>bla/blubber/test6.xml</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,128,archiveList = new ArrayList();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,123,ut = new ArchiveStreamFactory().createArchiveOutputStream(
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,124,"rchivename, stream);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,131,"out = factory.createArchiveOutputStream(archivename, stream);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,133,"ipArchiveEntry entry = new ZipArchiveEntry(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,134,ntry.setSize(file1.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,135,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,136,"OUtils.copy(new FileInputStream(file1), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,137,ut.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,140,"addArchiveEntry(out, ""testdata/test1.xml"", file1);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,141,"addArchiveEntry(out, ""testdata/test2.xml"", file2);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,142,"addArchiveEntry(out, ""test/test3.xml"", file3);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,143,"addArchiveEntry(out, ""bla/test4.xml"", file4);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,144,"addArchiveEntry(out, ""bla/test5.xml"", file4);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,145,"addArchiveEntry(out, ""bla/blubber/test6.xml"", file4);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,146,"addArchiveEntry(out, ""test.txt"", file5);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,147,"addArchiveEntry(out, ""something/bla"", file6);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,148,"addArchiveEntry(out, ""test with spaces.txt"", file6);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,139,"ntry = new ZipArchiveEntry(""testdata/test2.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,140,ntry.setSize(file2.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,141,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,142,"OUtils.copy(new FileInputStream(file2), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,143,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,145,"ntry = new ZipArchiveEntry(""test/test3.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,146,ntry.setSize(file3.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,147,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,148,"OUtils.copy(new FileInputStream(file3), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,149,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,151,"ntry = new ZipArchiveEntry(""bla/test4.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,152,ntry.setSize(file4.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,153,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,154,"OUtils.copy(new FileInputStream(file4), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,155,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,157,"ntry = new ZipArchiveEntry(""bla/test5.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,158,ntry.setSize(file4.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,159,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,160,"OUtils.copy(new FileInputStream(file4), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,161,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,163,"ntry = new ZipArchiveEntry(""bla/blubber/test6.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,164,ntry.setSize(file4.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,165,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,166,"OUtils.copy(new FileInputStream(file4), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,167,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,169,"ntry = new ZipArchiveEntry(""test.txt"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,170,ntry.setSize(file5.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,171,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,172,"OUtils.copy(new FileInputStream(file5), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,173,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,175,"ntry = new ZipArchiveEntry(""something/bla"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,176,ntry.setSize(file6.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,177,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,178,"OUtils.copy(new FileInputStream(file6), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,179,ut.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,150,return archive;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,151,} finally {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,152,if (out != null) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,153,out.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,154,} else if (stream != null) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,155,stream.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,181,"ntry = new ZipArchiveEntry(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,182,ntry.setSize(file6.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,183,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,184,"OUtils.copy(new FileInputStream(file6), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,185,ut.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,161,"* Add an entry to the archive, and keep track of the names in archiveList."
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,163,* @param out
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,164,* @param file1
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,165,* @throws IOException
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,166,* @throws FileNotFoundException
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,168,"private void addArchiveEntry(ArchiveOutputStream out, String filename, final File infile)"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,169,"throws IOException, FileNotFoundException {"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,170,ZipArchiveEntry entry = new ZipArchiveEntry(filename);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,171,entry.setSize(infile.length());
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,172,out.putArchiveEntry(entry);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,173,"IOUtils.copy(new FileInputStream(infile), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,174,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,175,archiveList.add(filename);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,187,eturn archive;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,179,* Create an empty archive.
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,180,* @param archivename
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,181,* @return the archive File
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,182,* @throws Exception
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,184,protected File createEmptyArchive(String archivename) throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,185,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,186,OutputStream stream = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,187,try {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,188,"archive = File.createTempFile(""empty"", ""."" + archivename);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,189,stream = new FileOutputStream(archive);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,190,"out = factory.createArchiveOutputStream(archivename, stream);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,198,return archive;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,211,inal ArchiveInputStream in = new ArchiveStreamFactory()
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,212,createArchiveInputStream(buf);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,215,final ArchiveInputStream in = factory.createArchiveInputStream(buf);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,225,rchiveEntry entry = null;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,226,hile ((entry = in.getNextEntry()) != null) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,227,"ile outfile = new File(result.getCanonicalPath() + ""/result/"""
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,228, entry.getName());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,229,utfile.getParentFile().mkdirs();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,230,utputStream out = new FileOutputStream(outfile);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,231,ong copied=0;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,232,ry {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,233,"opied=IOUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,234, finally {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,235,ut.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,228,try {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,229,ArchiveEntry entry = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,230,while ((entry = in.getNextEntry()) != null) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,231,"File outfile = new File(result.getCanonicalPath() + ""/result/"""
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,232,+ entry.getName());
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,233,outfile.getParentFile().mkdirs();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,234,OutputStream out = new FileOutputStream(outfile);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,235,long copied=0;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,236,try {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,237,"copied=IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,238,} finally {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,239,out.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,238,f (entry.getSize() != -1) {// some test cases don't set the size
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,239,"ssertEquals(entry.getSize(), copied);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,242,if (entry.getSize() != -1) {// some test cases don't set the size
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,243,"assertEquals(entry.getSize(), copied);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,242,f (!outfile.exists()) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,243,"ail(""extraction failed: "" + entry.getName());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,245,f (!expected.remove(entry.getName())) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,246,"ail(""unexpected entry: "" + entry.getName());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,246,if (!outfile.exists()) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,247,"fail(""extraction failed: "" + entry.getName());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,249,if (!expected.remove(entry.getName())) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,250,"fail(""unexpected entry: "" + entry.getName());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,249,n.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,250,f (expected.size() > 0) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,251,or (Iterator iterator = expected.iterator(); iterator.hasNext();) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,252,tring name = (String) iterator.next();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,253,"ail(""Expected entry: "" + name);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,253,in.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,254,if (expected.size() > 0) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,255,for (Iterator iterator = expected.iterator(); iterator.hasNext();) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,256,String name = (String) iterator.next();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,257,"fail(""Expected entry: "" + name);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,260,"assertEquals(0, expected.size());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,261,} finally {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,262,rmdir(result);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,256,"ssertEquals(0, expected.size());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,257,mdir(result);
