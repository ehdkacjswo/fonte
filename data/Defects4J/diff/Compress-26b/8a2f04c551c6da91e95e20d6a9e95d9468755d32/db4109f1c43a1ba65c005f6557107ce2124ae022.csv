is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,161,esult = prime * result + ((name == null) ? 0 : name.hashCode());
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,161,result = prime * result + (name == null ? 0 : name.hashCode());
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,262,ffset += (ret > 0 ? ret : 0);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,262,offset += ret > 0 ? ret : 0;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,80,f ((entryOffset % 2) != 0) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,80,if (entryOffset % 2 != 0) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,150,"inal String m = """" + (pEntry.getLastModified());"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,150,"final String m = """" + pEntry.getLastModified();"
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveEntry.java,86,ong ts = isHostOsUnix() ? (localFileHeader.dateTimeModified * 1000l)
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveEntry.java,86,long ts = isHostOsUnix() ? localFileHeader.dateTimeModified * 1000l
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,528,isDirectory() ? 2 : 1)
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,528,isDirectory() ? 2 : 1
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,864,esult = prime * result + ((name == null) ? 0 : name.hashCode());
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,864,result = prime * result + (name == null ? 0 : name.hashCode());
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,137,f ((p.getOriginalName() == null) || (q.getOriginalName() == null)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,137,if (p.getOriginalName() == null || q.getOriginalName() == null) {
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,324,DumpArchiveConstants.SEGMENT_TYPE.ADDR == entry.getHeaderType())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,324,DumpArchiveConstants.SEGMENT_TYPE.ADDR == entry.getHeaderType()) {
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,331,DumpArchiveConstants.SEGMENT_TYPE.INODE == entry.getHeaderType())) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,331,DumpArchiveConstants.SEGMENT_TYPE.INODE == entry.getHeaderType()) {
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,347,or (int i = 0; (i < (datalen - 8)) && (i < (size - 8));
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,347,for (int i = 0; i < datalen - 8 && i < size - 8;
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,464,f (hasHitEOF || isClosed || (entryOffset >= entrySize)) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,464,if (hasHitEOF || isClosed || entryOffset >= entrySize) {
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,468,f ((len + entryOffset) > entrySize) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,468,if (len + entryOffset > entrySize) {
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,473,nt sz = (len > (readBuf.length - recordOffset))
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,474, (readBuf.length - recordOffset) : len;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,473,int sz = len > readBuf.length - recordOffset
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,474,? readBuf.length - recordOffset : len;
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,477,f ((recordOffset + sz) <= readBuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,477,if (recordOffset + sz <= readBuf.length) {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,146,f (currentEntryIndex >= (archive.files.length - 1)) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,146,if (currentEntryIndex >= archive.files.length - 1) {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,427,or (int i = 0; i < (folder.numUnpackSubStreams - 1); i++) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,427,for (int i = 0; i < folder.numUnpackSubStreams - 1; i++) {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,492,inal boolean isSimple = ((bits & 0x10) == 0);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,493,inal boolean hasAttributes = ((bits & 0x20) != 0);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,494,inal boolean moreAlternativeMethods = ((bits & 0x80) != 0);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,492,final boolean isSimple = (bits & 0x10) == 0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,493,final boolean hasAttributes = (bits & 0x20) != 0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,494,final boolean moreAlternativeMethods = (bits & 0x80) != 0;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,628,f (((size - 1) & 1) != 0) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,628,if ((size - 1 & 1) != 0) {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,724,iles[i].setHasStream((isEmptyStream == null) ? true : !isEmptyStream.get(i));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,724,files[i].setHasStream(isEmptyStream == null ? true : !isEmptyStream.get(i));
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,733,iles[i].setDirectory((isEmptyFile == null) ? true : !isEmptyFile.get(emptyFileCounter));
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,734,iles[i].setAntiItem((isAnti == null) ? false : isAnti.get(emptyFileCounter));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,733,files[i].setDirectory(isEmptyFile == null ? true : !isEmptyFile.get(emptyFileCounter));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,734,files[i].setAntiItem(isAnti == null ? false : isAnti.get(emptyFileCounter));
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,748,inal int numFolders = (archive.folders != null) ? archive.folders.length : 0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,748,final int numFolders = archive.folders != null ? archive.folders.length : 0;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,756,inal int numPackSizes = (archive.packSizes != null) ? archive.packSizes.length : 0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,756,final int numPackSizes = archive.packSizes != null ? archive.packSizes.length : 0;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,905,eturn value | ((firstByte & (mask - 1)) << (8 * i));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,905,return value | (firstByte & mask - 1) << 8 * i;
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,908,alue |= (nextByte << (8 * i));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,908,value |= nextByte << 8 * i;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,225,his.modTime = (new Date()).getTime() / MILLIS_PER_SECOND;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,225,this.modTime = new Date().getTime() / MILLIS_PER_SECOND;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,900,| value >= (1l << (3 * (length - 1))))) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,900,|| value >= 1l << 3 * (length - 1))) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,1033,& ((ch1 >= 'a' && ch1 <= 'z')
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,1034,| (ch1 >= 'A' && ch1 <= 'Z'))) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,1033,&& (ch1 >= 'a' && ch1 <= 'z'
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,1034,|| ch1 >= 'A' && ch1 <= 'Z')) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,372,f ((currBytes + numToWrite) > currSize) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,372,if (currBytes + numToWrite > currSize) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,388,f ((assemLen + numToWrite) >= recordBuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,388,if (assemLen + numToWrite >= recordBuf.length) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,546,f ((offset + recordSize) > buf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,546,if (offset + recordSize > buf.length) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,31,nt DEFAULT_RCDSIZE = (512);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,31,int DEFAULT_RCDSIZE = 512;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,34,nt DEFAULT_BLKSIZE = (DEFAULT_RCDSIZE * 20);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,34,int DEFAULT_BLKSIZE = DEFAULT_RCDSIZE * 20;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,200,"al ^= ((long) Math.pow(2, (length - 1) * 8) - 1);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,200,"val ^= (long) Math.pow(2, (length - 1) * 8) - 1;"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,137,"nt length = (new ZipShort(data, start + 2)).getValue();"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,137,"int length = new ZipShort(data, start + 2).getValue();"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,183,tart += (length + WORD);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,183,start += length + WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,215,tart += (local.length + WORD);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,215,start += local.length + WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,248,tart += (local.length + WORD);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,248,start += local.length + WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,185,.slidingDictionarySize = ((generalPurposeFlag & SLIDING_DICTIONARY_SIZE_FLAG) != 0) ? 8192 : 4096;
False,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,186,.numberOfShannonFanoTrees = ((generalPurposeFlag & NUMBER_OF_SHANNON_FANO_TREES_FLAG) != 0) ? 3 : 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,185,b.slidingDictionarySize = (generalPurposeFlag & SLIDING_DICTIONARY_SIZE_FLAG) != 0 ? 8192 : 4096;
True,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java,186,b.numberOfShannonFanoTrees = (generalPurposeFlag & NUMBER_OF_SHANNON_FANO_TREES_FLAG) != 0 ? 3 : 2;
False,src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java,src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java,262,nt hc = (-1234567 * version);
True,src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java,src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java,262,int hc = -1234567 * version;
False,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,271,eturn (current = nestedEnum.nextElement());
True,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,271,return current = nestedEnum.nextElement();
False,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,46,tring size = Long.toString((entry.getSize()));
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,46,String size = Long.toString(entry.getSize());
False,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,95,eturn (available - numToSkip);
True,src/main/java/org/apache/commons/compress/utils/IOUtils.java,src/main/java/org/apache/commons/compress/utils/IOUtils.java,95,return available - numToSkip;
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,205,esults.add((entry.getName()));
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,205,results.add(entry.getName());
False,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,36,"ystem.out.println(""XZTestCase: HeapMax=""+max+"" bytes ""+((double)max/(1024*1024))+"" MB"");"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,36,"System.out.println(""XZTestCase: HeapMax=""+max+"" bytes ""+(double)max/(1024*1024)+"" MB"");"
