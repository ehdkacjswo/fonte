is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,19,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,21,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,22,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,23,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,24,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,25,import java.util.Enumeration;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,26,import org.apache.commons.compress.archivers.ArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,29,* Simple command line application that lists the contents of a ZIP archive.
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,31,* <p>The name of the archive must be given as a command line argument.</p>
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,33,* <p>Optional command line arguments specify the encoding to assume
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,34,* and whether to use ZipFile or ZipArchiveInputStream.</p>
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,36,public final class Lister {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,37,private static class CommandLine {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,38,String archive;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,39,boolean useStream = false;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,40,String encoding;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,43,public static void main(String[] args) throws IOException {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,44,CommandLine cl = parse(args);
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,45,File f = new File(cl.archive);
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,46,if (!f.isFile()) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,47,"System.err.println(f + "" doesn't exists or is a directory"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,48,usage();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,50,if (cl.useStream) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,51,BufferedInputStream fs =
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,52,new BufferedInputStream(new FileInputStream(f));
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,53,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,54,ZipArchiveInputStream zs =
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,55,"new ZipArchiveInputStream(fs, cl.encoding, true);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,56,for (ArchiveEntry entry = zs.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,57,entry != null;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,58,entry = zs.getNextEntry()) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,59,list((ZipArchiveEntry) entry);
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,61,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,62,fs.close();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,64,} else {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,65,"ZipFile zf = new ZipFile(f, cl.encoding);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,66,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,67,for (Enumeration entries = zf.getEntries();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,68,entries.hasMoreElements(); ) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,69,list((ZipArchiveEntry) entries.nextElement());
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,71,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,72,zf.close();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,77,private static void list(ZipArchiveEntry entry) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,78,System.out.println(entry.getName());
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,81,private static CommandLine parse(String[] args) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,82,CommandLine cl = new CommandLine();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,83,boolean error = false;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,84,for (int i = 0; i < args.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,85,"if (args[i].equals(""-enc"")) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,86,if (args.length > i + 1) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,87,cl.encoding = args[++i];
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,88,} else {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,89,"System.err.println(""missing argument to -enc"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,90,error = true;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,92,"} else if (args[i].equals(""-stream"")) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,93,cl.useStream = true;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,94,"} else if (args[i].equals(""-file"")) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,95,cl.useStream = false;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,96,} else if (cl.archive != null) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,97,"System.err.println(""Only one archive"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,98,error = true;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,99,} else {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,100,cl.archive = args[i];
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,103,if (error || cl.archive == null) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,104,usage();
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,106,return cl;
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,109,private static void usage() {
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,110,"System.err.println(""lister [-enc encoding] [-stream] [-file] archive"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,src/test/java/org/apache/commons/compress/archivers/zip/Lister.java,111,System.exit(1);
