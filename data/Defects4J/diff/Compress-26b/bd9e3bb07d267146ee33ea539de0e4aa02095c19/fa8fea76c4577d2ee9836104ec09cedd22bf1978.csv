is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,29,rivate final InputStream input;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,30,rivate long offset = 0;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,32,ublic ArArchiveInputStream( final InputStream pInput ) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,33,nput = pInput;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,36,ublic ArchiveEntry getNextEntry() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,38,f (offset == 0) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,39,"inal byte[] expected = ""!<arch>\n"".getBytes();"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,40,inal byte[] realized = new byte[expected.length];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,41,inal int read = read(realized);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,42,f (read != expected.length) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,43,"hrow new IOException(""failed to read header"");"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,45,or (int i = 0; i < expected.length; i++) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,46,f (expected[i] != realized[i]) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,47,"hrow new IOException(""invalid header "" + new String(realized));"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,29,private final InputStream input;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,30,private long offset = 0;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,32,public ArArchiveInputStream( final InputStream pInput ) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,33,input = pInput;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,36,public ArchiveEntry getNextEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,38,if (offset == 0) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,39,"final byte[] expected = ""!<arch>\n"".getBytes();"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,40,final byte[] realized = new byte[expected.length];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,41,final int read = read(realized);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,42,if (read != expected.length) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,43,"throw new IOException(""failed to read header"");"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,45,for (int i = 0; i < expected.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,46,if (expected[i] != realized[i]) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,47,"throw new IOException(""invalid header "" + new String(realized));"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,52,f (input.available() == 0) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,53,eturn null;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,56,f (offset % 2 != 0) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,57,ead();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,52,if (input.available() == 0) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,53,return null;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,56,if (offset % 2 != 0) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,57,read();
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,60,inal byte[] name = new byte[16];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,61,inal byte[] lastmodified = new byte[12];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,62,inal byte[] userid = new byte[6];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,63,inal byte[] groupid = new byte[6];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,64,inal byte[] filemode = new byte[8];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,65,inal byte[] length = new byte[10];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,67,ead(name);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,68,ead(lastmodified);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,69,ead(userid);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,70,ead(groupid);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,71,ead(filemode);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,72,ead(length);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,60,final byte[] name = new byte[16];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,61,final byte[] lastmodified = new byte[12];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,62,final byte[] userid = new byte[6];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,63,final byte[] groupid = new byte[6];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,64,final byte[] filemode = new byte[8];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,65,final byte[] length = new byte[10];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,67,read(name);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,68,read(lastmodified);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,69,read(userid);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,70,read(groupid);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,71,read(filemode);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,72,read(length);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,75,"inal byte[] expected = ""`\012"".getBytes();"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,76,inal byte[] realized = new byte[expected.length];
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,77,inal int read = read(realized);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,78,f (read != expected.length) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,79,"hrow new IOException(""failed to read entry header"");"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,81,or (int i = 0; i < expected.length; i++) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,82,f (expected[i] != realized[i]) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,83,"hrow new IOException(""invalid entry header. not read the content?"");"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,88,"eturn new ArArchiveEntry(new String(name).trim(), Long.parseLong(new String(length).trim()));"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,93,ublic int read() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,94,inal int ret = input.read();
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,95,ffset++;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,96,eturn ret;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,99,ublic int read(byte b[]) throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,100,"inal int ret = read(b, 0, b.length);"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,101,ffset = offset + b.length;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,102,eturn ret;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,75,"final byte[] expected = ""`\012"".getBytes();"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,76,final byte[] realized = new byte[expected.length];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,77,final int read = read(realized);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,78,if (read != expected.length) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,79,"throw new IOException(""failed to read entry header"");"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,81,for (int i = 0; i < expected.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,82,if (expected[i] != realized[i]) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,83,"throw new IOException(""invalid entry header. not read the content?"");"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,88,"return new ArArchiveEntry(new String(name).trim(), Long.parseLong(new String(length).trim()));"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,93,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,94,final int ret = input.read();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,95,offset++;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,96,return ret;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,99,public int read(byte b[]) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,100,"final int ret = read(b, 0, b.length);"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,101,offset = offset + b.length;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,102,return ret;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,105,"ublic int read(byte[] b, int off, int len) throws IOException {"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,106,"inal int ret = this.input.read(b, off, len);"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,107,ffset = offset + off;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,108,eturn ret;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,111,ublic static boolean matches( byte[] signature ) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,112,/ 3c21 7261 6863 0a3e
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,114,f (signature[0] != 0x21) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,115,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,117,f (signature[1] != 0x3c) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,118,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,120,f (signature[2] != 0x61) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,121,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,123,f (signature[3] != 0x72) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,124,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,126,f (signature[4] != 0x63) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,127,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,129,f (signature[5] != 0x68) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,130,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,132,f (signature[6] != 0x3e) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,133,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,135,f (signature[7] != 0x0a) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,136,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,139,eturn true;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,105,"public int read(byte[] b, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,106,"final int ret = this.input.read(b, off, len);"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,107,offset = offset + off;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,108,return ret;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,111,public static boolean matches( byte[] signature ) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,112,// 3c21 7261 6863 0a3e
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,114,if (signature[0] != 0x21) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,115,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,117,if (signature[1] != 0x3c) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,118,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,120,if (signature[2] != 0x61) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,121,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,123,if (signature[3] != 0x72) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,124,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,126,if (signature[4] != 0x63) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,127,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,129,if (signature[5] != 0x68) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,130,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,132,if (signature[6] != 0x3e) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,133,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,135,if (signature[7] != 0x0a) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,136,return false;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,139,return true;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,205,ore_magic.length);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,205,more_magic.length);
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,247, this.singleByteBuf[0] & 0xff;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,247,: this.singleByteBuf[0] & 0xff;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,263,hrows IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,263,throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,289, this.entryBytesRead);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,289,- this.entryBytesRead);
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,306,hrows IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,306,throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,322,hrows IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,322,throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,329,hrows IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,329,throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,381,hrows IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,381,throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,437,ublic ArchiveEntry getNextEntry() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,438,pioArchiveEntry entry = this.getNextCPIOEntry();
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,439,f(entry == null) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,440,eturn null;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,442,eturn (ArchiveEntry)entry;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,445,ublic static boolean matches( byte[] signature ) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,446,/ 3037 3037 30
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,448,f (signature[0] != 0x30) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,449,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,451,f (signature[1] != 0x37) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,452,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,454,f (signature[2] != 0x30) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,455,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,457,f (signature[3] != 0x37) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,458,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,460,f (signature[4] != 0x30) {
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,461,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,464,eturn true;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,437,public ArchiveEntry getNextEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,438,CpioArchiveEntry entry = this.getNextCPIOEntry();
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,439,if(entry == null) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,440,return null;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,442,return (ArchiveEntry)entry;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,445,public static boolean matches( byte[] signature ) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,446,// 3037 3037 30
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,448,if (signature[0] != 0x30) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,449,return false;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,451,if (signature[1] != 0x37) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,452,return false;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,454,if (signature[2] != 0x30) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,455,return false;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,457,if (signature[3] != 0x37) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,458,return false;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,460,if (signature[4] != 0x30) {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,461,return false;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,464,return true;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,30,ublic JarArchiveInputStream( final InputStream inputStream ) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,31,uper(inputStream);
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,34,ublic ArchiveEntry getNextEntry() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,35,ipArchiveEntry entry = (ZipArchiveEntry)super.getNextEntry();
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,36,f(entry == null) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,37,eturn null;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,38, else {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,39,eturn (ArchiveEntry)new JarArchiveEntry(entry);
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,43,ublic static boolean matches( byte[] signature ) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,44,/ 4b50 0403 0014 0008
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,30,public JarArchiveInputStream( final InputStream inputStream ) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,31,super(inputStream);
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,34,public ArchiveEntry getNextEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,35,ZipArchiveEntry entry = (ZipArchiveEntry)super.getNextEntry();
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,36,if(entry == null) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,37,return null;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,38,} else {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,39,return (ArchiveEntry)new JarArchiveEntry(entry);
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,43,public static boolean matches( byte[] signature ) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,44,// 4b50 0403 0014 0008
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,46,f (signature[0] != 0x50) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,47,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,49,f (signature[1] != 0x4b) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,50,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,52,f (signature[2] != 0x03) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,53,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,55,f (signature[3] != 0x04) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,56,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,58,f (signature[4] != 0x14) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,59,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,61,f (signature[5] != 0x00) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,62,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,64,f (signature[6] != 0x08) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,65,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,67,f (signature[7] != 0x00) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,68,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,71,eturn true;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,46,if (signature[0] != 0x50) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,47,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,49,if (signature[1] != 0x4b) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,50,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,52,if (signature[2] != 0x03) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,53,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,55,if (signature[3] != 0x04) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,56,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,58,if (signature[4] != 0x14) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,59,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,61,if (signature[5] != 0x00) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,62,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,64,if (signature[6] != 0x08) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,65,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,67,if (signature[7] != 0x00) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,68,return false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,71,return true;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,29,rivate final TarInputStream in;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,29,private final TarInputStream in;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,31,ublic TarArchiveInputStream( InputStream inputStream ) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,32,n = new TarInputStream(inputStream);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,31,public TarArchiveInputStream( InputStream inputStream ) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,32,in = new TarInputStream(inputStream);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,48,/ 6574 7473 2e31 6d78
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,50,f (signature[0] != 0x74) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,51,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,53,f (signature[1] != 0x65) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,54,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,56,f (signature[2] != 0x73) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,57,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,59,f (signature[3] != 0x74) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,60,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,62,f (signature[4] != 0x31) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,63,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,65,f (signature[5] != 0x2e) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,66,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,68,f (signature[6] != 0x78) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,69,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,71,f (signature[7] != 0x6d) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,72,eturn false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,75,eturn true;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,48,// 6574 7473 2e31 6d78
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,50,if (signature[0] != 0x74) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,51,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,53,if (signature[1] != 0x65) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,54,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,56,if (signature[2] != 0x73) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,57,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,59,if (signature[3] != 0x74) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,60,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,62,if (signature[4] != 0x31) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,63,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,65,if (signature[5] != 0x2e) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,66,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,68,if (signature[6] != 0x78) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,69,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,71,if (signature[7] != 0x6d) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,72,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,75,return true;
