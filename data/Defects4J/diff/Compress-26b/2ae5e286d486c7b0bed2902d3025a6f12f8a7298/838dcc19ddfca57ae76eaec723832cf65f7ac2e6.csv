is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,20,mport java.util.Hashtable;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,21,mport java.util.Vector;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,20,import java.util.ArrayList;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,21,import java.util.HashMap;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,22,import java.util.List;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,23,import java.util.Map;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,38,rivate static Hashtable implementations;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,40,private static final Map implementations;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,41,mplementations = new Hashtable();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,43,implementations = new HashMap();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,97,ector v = new Vector();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,99,List v = new ArrayList();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,109,.addElement(ze);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,111,v.add(ze);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,119,.copyInto(result);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,120,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,121,return (ZipExtraField[]) v.toArray(result);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,20,mport java.util.Vector;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,20,import java.util.LinkedHashMap;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,38,rivate Vector/*<ZipExtraField>*/ extraFields = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,38,"private LinkedHashMap/*<ZipShort, ZipExtraField>*/ extraFields = null;"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,95,.extraFields = extraFields != null ? (Vector) extraFields.clone() : null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,95,e.extraFields = extraFields != null ? (LinkedHashMap) extraFields.clone() : null;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,194,xtraFields = new Vector();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,194,extraFields = new LinkedHashMap();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,196,xtraFields.addElement(fields[i]);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,196,"extraFields.put(fields[i].getHeaderId(), fields[i]);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,211,xtraFields.copyInto(result);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,212,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,211,return (ZipExtraField[]) extraFields.values().toArray(result);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,223,xtraFields = new Vector();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,225,ipShort type = ze.getHeaderId();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,226,oolean done = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,227,"or (int i = 0, fieldsSize = extraFields.size(); !done && i < fieldsSize; i++) {"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,228,f (((ZipExtraField) extraFields.elementAt(i)).getHeaderId().equals(type)) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,229,"xtraFields.setElementAt(ze, i);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,230,one = true;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,233,f (!done) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,234,xtraFields.addElement(ze);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,222,extraFields = new LinkedHashMap();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,224,"extraFields.put(ze.getHeaderId(), ze);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,246,xtraFields = new Vector();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,248,oolean done = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,249,"or (int i = 0, fieldsSize = extraFields.size(); !done && i < fieldsSize; i++) {"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,250,f (((ZipExtraField) extraFields.elementAt(i)).getHeaderId().equals(type)) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,251,xtraFields.removeElementAt(i);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,252,one = true;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,235,throw new java.util.NoSuchElementException();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,255,f (!done) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,237,if (extraFields.remove(type) == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,26,import java.util.Collections;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,28,mport java.util.Hashtable;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,29,import java.util.HashMap;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,30,import java.util.Map;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,75,rivate Hashtable entries = new Hashtable(HASH_SIZE);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,77,private final Map entries = new HashMap(HASH_SIZE);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,80,rivate Hashtable nameMap = new Hashtable(HASH_SIZE);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,82,private final Map nameMap = new HashMap(HASH_SIZE);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,203,eturn entries.keys();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,205,return Collections.enumeration(entries.keySet());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,28,mport java.util.Hashtable;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,29,mport java.util.Vector;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,28,import java.util.HashMap;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,29,import java.util.Iterator;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,30,import java.util.LinkedList;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,31,import java.util.List;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,32,import java.util.Map;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,131,rivate Vector entries = new Vector();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,134,private final List entries = new LinkedList();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,138,rivate CRC32 crc = new CRC32();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,141,private final CRC32 crc = new CRC32();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,195,rivate Hashtable offsets = new Hashtable();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,198,private final Map offsets = new HashMap();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,326,"or (int i = 0, entriesSize = entries.size(); i < entriesSize; i++) {"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,327,riteCentralFileHeader((ZipEntry) entries.elementAt(i));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,329,for (Iterator i = entries.iterator(); i.hasNext(); ) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,330,writeCentralFileHeader((ZipEntry) i.next());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,332,ntries.removeAllElements();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,335,entries.clear();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,412,ntries.addElement(entry);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,415,entries.add(entry);
