is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,200,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,201,um += data[i].getLocalFileDataLength().getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,200,for (ZipExtraField element : data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,201,sum += element.getLocalFileDataLength().getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,234,or (int i = 0; i < data.length; i++) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,235,um += data[i].getCentralDirectoryLength().getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,234,for (ZipExtraField element : data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,235,sum += element.getCentralDirectoryLength().getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,293,or (int i = 0; i < fields.length; i++) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,294,f (fields[i] instanceof UnparseableExtraFieldData) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,295,nparseableExtra = (UnparseableExtraFieldData) fields[i];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,293,for (ZipExtraField field : fields) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,294,if (field instanceof UnparseableExtraFieldData) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,295,unparseableExtra = (UnparseableExtraFieldData) field;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,297,"xtraFields.put(fields[i].getHeaderId(), fields[i]);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,297,"extraFields.put(field.getHeaderId(), field);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,617,or (int i = 0; i < f.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,617,for (ZipExtraField element : f) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,619,f (f[i] instanceof UnparseableExtraFieldData) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,619,if (element instanceof UnparseableExtraFieldData) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,622,xisting = getExtraField(f[i].getHeaderId());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,622,existing = getExtraField(element.getHeaderId());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,625,ddExtraField(f[i]);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,625,addExtraField(element);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,628,yte[] b = f[i].getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,628,byte[] b = element.getLocalFileDataData();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,631,yte[] b = f[i].getCentralDirectoryData();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,631,byte[] b = element.getCentralDirectoryData();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,30,mport java.util.Iterator;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,92,or (int i = 0; i < s.length; i++) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,93,"inal File file = new File(f, s[i]);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,91,for (String element : s) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,92,"final File file = new File(f, element);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,99,"ystem.out.println(""Failed to delete ""+s[i]+"" in ""+f.getPath());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,98,"System.out.println(""Failed to delete ""+element+"" in ""+f.getPath());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,349,or (Iterator<String> iterator = expected.iterator(); iterator.hasNext();) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,350,tring name = iterator.next();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,348,for (String name : expected) {
False,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,76,or (int i=0; i<files.length; i++){
False,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,77,inal File file = files[i];
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,76,for (final File file : files) {
False,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,104,or (int i=0; i<byteTest.length; i++){
False,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,105,os1.write(byteTest[i]);
True,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,104,for (byte element : byteTest) {
True,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,105,aos1.write(element);
False,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,81,or (int i=0; i<files.length; i++){
False,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,82,inal File file = files[i];
True,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,81,for (final File file : files) {
False,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,81,or (int i = 0; i < ENTRIES.length; i++) {
False,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,82,"ssertEquals(ENTRIES[i], zi.getNextEntry().getName());"
True,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,81,for (String element : ENTRIES) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java,82,"assertEquals(element, zi.getNextEntry().getName());"
