is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,285,public void testPropertySetMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,286,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,287,DateMidnight copy = test.monthOfYear().setCopy(8);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,288,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,289,"assertEquals(8, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,290,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,293,public void testPropertySetTextMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,294,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,295,"DateMidnight copy = test.monthOfYear().setCopy(""8"");"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,296,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,297,"assertEquals(8, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,298,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,301,public void testPropertySetTextLocaleMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,302,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,303,"DateMidnight copy = test.monthOfYear().setCopy(""mars"", Locale.FRENCH);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,304,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,305,"assertEquals(3, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,306,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,309,public void testPropertyAddMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,310,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,311,DateMidnight copy = test.monthOfYear().addToCopy(8);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,312,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,313,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,314,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,317,public void testPropertyAddLongMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,318,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,319,DateMidnight copy = test.monthOfYear().addToCopy(8L);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,320,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,321,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,322,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,325,public void testPropertyAddWrapFieldMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,326,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,327,DateMidnight copy = test.monthOfYear().addWrapFieldToCopy(8);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,328,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,329,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,330,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,333,public void testPropertyGetDifferenceMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,334,"DateMidnight test1 = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,335,"DateMidnight test2 = new DateMidnight(2004, 8, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,336,"assertEquals(-2, test1.monthOfYear().getDifference(test2));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,337,"assertEquals(2, test2.monthOfYear().getDifference(test1));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,338,"assertEquals(-2L, test1.monthOfYear().getDifferenceAsLong(test2));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,339,"assertEquals(2L, test2.monthOfYear().getDifferenceAsLong(test1));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,342,public void testPropertyRoundFloorMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,343,"DateMidnight test = new DateMidnight(2004, 7, 16);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,344,DateMidnight copy = test.monthOfYear().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,345,"assertEquals(""2004-07-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,348,public void testPropertyRoundCeilingMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,349,"DateMidnight test = new DateMidnight(2004, 7, 16);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,350,DateMidnight copy = test.monthOfYear().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,351,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,354,public void testPropertyRoundHalfFloorMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,355,"DateMidnight test = new DateMidnight(2004, 7, 16);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,356,DateMidnight copy = test.monthOfYear().roundHalfFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,357,"assertEquals(""2004-07-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,359,"test = new DateMidnight(2004, 7, 17);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,360,copy = test.monthOfYear().roundHalfFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,361,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,363,"test = new DateMidnight(2004, 7, 15);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,364,copy = test.monthOfYear().roundHalfFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,365,"assertEquals(""2004-07-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,368,public void testPropertyRoundHalfCeilingMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,369,"DateMidnight test = new DateMidnight(2004, 7, 16);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,370,DateMidnight copy = test.monthOfYear().roundHalfCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,371,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,373,"test = new DateMidnight(2004, 7, 17);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,374,copy = test.monthOfYear().roundHalfCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,375,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,377,"test = new DateMidnight(2004, 7, 15);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,378,copy = test.monthOfYear().roundHalfCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,379,"assertEquals(""2004-07-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,382,public void testPropertyRoundHalfEvenMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,383,"DateMidnight test = new DateMidnight(2004, 7, 16);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,384,DateMidnight copy = test.monthOfYear().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,385,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,387,"test = new DateMidnight(2004, 8, 16);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,388,copy = test.monthOfYear().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,389,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,391,"test = new DateMidnight(2004, 7, 17);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,392,copy = test.monthOfYear().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,393,"assertEquals(""2004-08-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,395,"test = new DateMidnight(2004, 7, 15);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,396,copy = test.monthOfYear().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,397,"assertEquals(""2004-07-00T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,400,public void testPropertyRemainderMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,401,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,402,"assertEquals(9L * DateTimeConstants.MILLIS_PER_DAY, test.monthOfYear().remainder());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,974,public void testPropertyAddLongDayOfWeek() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,975,"DateTime test = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,976,DateTime copy = test.dayOfWeek().addToCopy(1L);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,977,"assertEquals(""2004-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,978,"assertEquals(""2004-06-10T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1069,public void testPropertyGetDifferenceHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1070,"DateTime test1 = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1071,"DateTime test2 = new DateTime(2004, 6, 9, 15, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1072,"assertEquals(-2, test1.hourOfDay().getDifference(test2));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1073,"assertEquals(2, test2.hourOfDay().getDifference(test1));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1074,"assertEquals(-2L, test1.hourOfDay().getDifferenceAsLong(test2));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1075,"assertEquals(2L, test2.hourOfDay().getDifferenceAsLong(test1));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1077,DateTime test = new DateTime(TEST_TIME_NOW + (13L * DateTimeConstants.MILLIS_PER_HOUR));
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1078,"assertEquals(13, test.hourOfDay().getDifference(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1079,"assertEquals(13L, test.hourOfDay().getDifferenceAsLong(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1082,public void testPropertyRoundFloorHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1083,"DateTime test = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1084,DateTime copy = test.hourOfDay().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1085,"assertEquals(""2004-06-09T13:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1088,public void testPropertyRoundCeilingHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1089,"DateTime test = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1090,DateTime copy = test.hourOfDay().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1091,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1094,public void testPropertyRoundHalfFloorHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1095,"DateTime test = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1096,DateTime copy = test.hourOfDay().roundHalfFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1097,"assertEquals(""2004-06-09T13:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1099,"test = new DateTime(2004, 6, 9, 13, 30, 0, 1);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1100,copy = test.hourOfDay().roundHalfFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1101,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1103,"test = new DateTime(2004, 6, 9, 13, 29, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1104,copy = test.hourOfDay().roundHalfFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1105,"assertEquals(""2004-06-09T13:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1108,public void testPropertyRoundHalfCeilingHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1109,"DateTime test = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1110,DateTime copy = test.hourOfDay().roundHalfCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1111,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1113,"test = new DateTime(2004, 6, 9, 13, 30, 0, 1);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1114,copy = test.hourOfDay().roundHalfCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1115,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1117,"test = new DateTime(2004, 6, 9, 13, 29, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1118,copy = test.hourOfDay().roundHalfCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1119,"assertEquals(""2004-06-09T13:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1122,public void testPropertyRoundHalfEvenHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1123,"DateTime test = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1124,DateTime copy = test.hourOfDay().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1125,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1127,"test = new DateTime(2004, 6, 9, 14, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1128,copy = test.hourOfDay().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1129,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1131,"test = new DateTime(2004, 6, 9, 13, 30, 0, 1);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1132,copy = test.hourOfDay().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1133,"assertEquals(""2004-06-09T14:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1135,"test = new DateTime(2004, 6, 9, 13, 29, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1136,copy = test.hourOfDay().roundHalfEvenCopy();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1137,"assertEquals(""2004-06-09T13:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1140,public void testPropertyRemainderHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1141,"DateTime test = new DateTime(2004, 6, 9, 13, 30, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1142,"assertEquals(30L * DateTimeConstants.MILLIS_PER_MINUTE, test.hourOfDay().remainder());"
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,75,suite.addTest(TestConverterManager.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,76,suite.addTest(TestConverterSet.suite());
False,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,79,uite.addTest(TestReadableInstantConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,83,suite.addTest(TestReadableInstantConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,84,suite.addTest(TestStringConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,56,import java.io.Serializable;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,57,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,58,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,59,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,60,import java.security.AllPermission;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,61,import java.security.CodeSource;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,62,import java.security.Permission;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,63,import java.security.PermissionCollection;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,64,import java.security.Permissions;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,65,import java.security.Policy;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,66,import java.security.ProtectionDomain;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,67,import java.util.Calendar;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,68,import java.util.Date;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,69,import java.util.GregorianCalendar;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,71,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,72,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,74,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,75,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,76,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,77,import org.joda.time.Duration;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,78,import org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,79,import org.joda.time.Interval;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,80,import org.joda.time.JodaTimePermission;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,81,import org.joda.time.ReadWritableDuration;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,82,import org.joda.time.ReadWritableInterval;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,83,import org.joda.time.ReadableDateTime;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,84,import org.joda.time.ReadableDuration;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,85,import org.joda.time.ReadableInstant;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,86,import org.joda.time.ReadableInterval;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,89,* This class is a JUnit test for ConverterManager.
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,91,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,93,public class TestConverterManager extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,95,private static final Policy RESTRICT;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,96,private static final Policy ALLOW;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,97,static {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,98,// don't call Policy.getPolicy()
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,99,RESTRICT = new Policy() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,100,public PermissionCollection getPermissions(CodeSource codesource) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,101,Permissions p = new Permissions();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,102,p.add(new AllPermission());  // enable everything
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,103,return p;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,105,public void refresh() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,107,"public boolean implies(ProtectionDomain domain, Permission permission) {"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,108,if (permission instanceof JodaTimePermission) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,109,return false;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,111,"return super.implies(domain, permission);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,114,ALLOW = new Policy() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,115,public PermissionCollection getPermissions(CodeSource codesource) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,116,Permissions p = new Permissions();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,117,p.add(new AllPermission());  // enable everything
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,118,return p;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,120,public void refresh() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,125,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,126,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,129,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,130,return new TestSuite(TestConverterManager.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,133,public TestConverterManager(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,134,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,138,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,139,Class cls = ConverterManager.class;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,140,"assertEquals(true, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,142,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,143,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,144,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,146,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,147,"assertEquals(true, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,151,public void testGetInstantConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,152,InstantConverter c = ConverterManager.getInstance().getInstantConverter(new Long(0L));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,153,"assertEquals(Long.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,155,c = ConverterManager.getInstance().getInstantConverter(new DateTime());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,156,"assertEquals(ReadableInstant.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,158,"c = ConverterManager.getInstance().getInstantConverter("""");"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,159,"assertEquals(String.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,161,c = ConverterManager.getInstance().getInstantConverter(new Date());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,162,"assertEquals(Date.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,164,c = ConverterManager.getInstance().getInstantConverter(new GregorianCalendar());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,165,"assertEquals(Calendar.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,167,c = ConverterManager.getInstance().getInstantConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,168,"assertEquals(null, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,170,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,171,ConverterManager.getInstance().getInstantConverter(Boolean.TRUE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,172,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,173,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,176,public void testGetInstantConverterRemovedNull() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,177,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,178,ConverterManager.getInstance().removeInstantConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,179,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,180,ConverterManager.getInstance().getInstantConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,181,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,182,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,183,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,184,ConverterManager.getInstance().addInstantConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,186,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,189,public void testGetInstantConverterOKMultipleMatches() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,190,InstantConverter c = new InstantConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,191,public long getInstantMillis(Object object) { return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,192,"public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,193,"public long getInstantMillis(Object object, Chronology chrono) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,194,public Chronology getChronology(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,195,"public Chronology getChronology(Object object, DateTimeZone zone) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,196,"public Chronology getChronology(Object object, Chronology chrono) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,197,public Class getSupportedType() {return ReadableDateTime.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,199,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,200,ConverterManager.getInstance().addInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,201,InstantConverter ok = ConverterManager.getInstance().getInstantConverter(new DateTime());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,202,"// ReadableDateTime and ReadableInstant both match, but RI discarded as less specific"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,203,"assertEquals(ReadableDateTime.class, ok.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,204,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,205,ConverterManager.getInstance().removeInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,207,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,210,public void testGetInstantConverterBadMultipleMatches() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,211,InstantConverter c = new InstantConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,212,public long getInstantMillis(Object object) { return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,213,"public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,214,"public long getInstantMillis(Object object, Chronology chrono) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,215,public Chronology getChronology(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,216,"public Chronology getChronology(Object object, DateTimeZone zone) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,217,"public Chronology getChronology(Object object, Chronology chrono) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,218,public Class getSupportedType() {return Serializable.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,220,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,221,ConverterManager.getInstance().addInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,222,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,223,ConverterManager.getInstance().getInstantConverter(new DateTime());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,224,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,225,} catch (IllegalStateException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,226,"// Serializable and ReadableInstant both match, so cannot pick"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,228,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,229,ConverterManager.getInstance().removeInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,231,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,235,public void testGetInstantConverters() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,236,InstantConverter[] array = ConverterManager.getInstance().getInstantConverters();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,237,"assertEquals(6, array.length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,241,public void testAddInstantConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,242,InstantConverter c = new InstantConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,243,public long getInstantMillis(Object object) { return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,244,"public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,245,"public long getInstantMillis(Object object, Chronology chrono) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,246,public Chronology getChronology(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,247,"public Chronology getChronology(Object object, DateTimeZone zone) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,248,"public Chronology getChronology(Object object, Chronology chrono) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,249,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,251,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,252,InstantConverter removed = ConverterManager.getInstance().addInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,253,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,254,"assertEquals(Boolean.class, ConverterManager.getInstance().getInstantConverter(Boolean.TRUE).getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,255,"assertEquals(7, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,256,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,257,ConverterManager.getInstance().removeInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,259,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,262,public void testAddInstantConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,263,InstantConverter c = new InstantConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,264,public long getInstantMillis(Object object) { return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,265,"public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,266,"public long getInstantMillis(Object object, Chronology chrono) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,267,public Chronology getChronology(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,268,"public Chronology getChronology(Object object, DateTimeZone zone) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,269,"public Chronology getChronology(Object object, Chronology chrono) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,270,public Class getSupportedType() {return String.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,272,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,273,InstantConverter removed = ConverterManager.getInstance().addInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,274,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,275,"assertEquals(String.class, ConverterManager.getInstance().getInstantConverter("""").getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,276,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,277,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,278,ConverterManager.getInstance().addInstantConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,280,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,283,public void testAddInstantConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,284,InstantConverter removed = ConverterManager.getInstance().addInstantConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,285,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,286,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,289,public void testAddInstantConverter4() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,290,InstantConverter removed = ConverterManager.getInstance().addInstantConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,291,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,292,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,295,public void testAddInstantConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,296,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,297,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,298,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,299,ConverterManager.getInstance().addInstantConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,300,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,301,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,302,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,303,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,304,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,305,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,307,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,311,public void testRemoveInstantConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,312,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,313,InstantConverter removed = ConverterManager.getInstance().removeInstantConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,314,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,315,"assertEquals(5, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,316,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,317,ConverterManager.getInstance().addInstantConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,319,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,322,public void testRemoveInstantConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,323,InstantConverter c = new InstantConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,324,public long getInstantMillis(Object object) { return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,325,"public long getInstantMillis(Object object, DateTimeZone zone) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,326,"public long getInstantMillis(Object object, Chronology chrono) {return 0;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,327,public Chronology getChronology(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,328,"public Chronology getChronology(Object object, DateTimeZone zone) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,329,"public Chronology getChronology(Object object, Chronology chrono) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,330,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,332,InstantConverter removed = ConverterManager.getInstance().removeInstantConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,333,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,334,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,337,public void testRemoveInstantConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,338,InstantConverter removed = ConverterManager.getInstance().removeInstantConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,339,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,340,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,343,public void testRemoveInstantConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,344,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,345,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,346,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,347,ConverterManager.getInstance().removeInstantConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,348,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,349,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,350,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,351,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,352,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,353,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,355,"assertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,360,public void testGetDurationConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,361,DurationConverter c = ConverterManager.getInstance().getDurationConverter(new Long(0L));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,362,"assertEquals(Long.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,364,c = ConverterManager.getInstance().getDurationConverter(new Duration(DurationType.getMillisType()));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,365,"assertEquals(ReadableDuration.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,367,"c = ConverterManager.getInstance().getDurationConverter(new Interval(0L, 1000L));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,368,"assertEquals(ReadableInterval.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,370,"c = ConverterManager.getInstance().getDurationConverter("""");"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,371,"assertEquals(String.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,373,c = ConverterManager.getInstance().getDurationConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,374,"assertEquals(null, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,376,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,377,ConverterManager.getInstance().getDurationConverter(Boolean.TRUE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,378,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,379,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,382,public void testGetDurationConverterRemovedNull() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,383,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,384,ConverterManager.getInstance().removeDurationConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,385,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,386,ConverterManager.getInstance().getDurationConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,387,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,388,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,389,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,390,ConverterManager.getInstance().addDurationConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,392,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,396,public void testGetDurationConverters() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,397,DurationConverter[] array = ConverterManager.getInstance().getDurationConverters();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,398,"assertEquals(5, array.length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,402,public void testAddDurationConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,403,DurationConverter c = new DurationConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,404,public boolean isPrecise(Object object) {return false;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,405,public long getDurationMillis(Object object) {return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,406,"public void setInto(ReadWritableDuration duration, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,407,public DurationType getDurationType(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,408,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,410,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,411,DurationConverter removed = ConverterManager.getInstance().addDurationConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,412,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,413,"assertEquals(Boolean.class, ConverterManager.getInstance().getDurationConverter(Boolean.TRUE).getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,414,"assertEquals(6, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,415,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,416,ConverterManager.getInstance().removeDurationConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,418,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,421,public void testAddDurationConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,422,DurationConverter c = new DurationConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,423,public boolean isPrecise(Object object) {return false;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,424,public long getDurationMillis(Object object) {return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,425,"public void setInto(ReadWritableDuration duration, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,426,public DurationType getDurationType(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,427,public Class getSupportedType() {return String.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,429,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,430,DurationConverter removed = ConverterManager.getInstance().addDurationConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,431,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,432,"assertEquals(String.class, ConverterManager.getInstance().getDurationConverter("""").getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,433,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,434,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,435,ConverterManager.getInstance().addDurationConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,437,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,440,public void testAddDurationConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,441,DurationConverter removed = ConverterManager.getInstance().addDurationConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,442,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,443,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,446,public void testAddDurationConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,447,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,448,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,449,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,450,ConverterManager.getInstance().addDurationConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,451,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,452,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,453,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,454,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,455,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,456,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,458,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,462,public void testRemoveDurationConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,463,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,464,DurationConverter removed = ConverterManager.getInstance().removeDurationConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,465,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,466,"assertEquals(4, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,467,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,468,ConverterManager.getInstance().addDurationConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,470,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,473,public void testRemoveDurationConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,474,DurationConverter c = new DurationConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,475,public boolean isPrecise(Object object) {return false;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,476,public long getDurationMillis(Object object) {return 0;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,477,"public void setInto(ReadWritableDuration duration, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,478,public DurationType getDurationType(Object object) {return null;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,479,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,481,DurationConverter removed = ConverterManager.getInstance().removeDurationConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,482,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,483,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,486,public void testRemoveDurationConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,487,DurationConverter removed = ConverterManager.getInstance().removeDurationConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,488,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,489,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,492,public void testRemoveDurationConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,493,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,494,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,495,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,496,ConverterManager.getInstance().removeDurationConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,497,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,498,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,499,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,500,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,501,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,502,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,504,"assertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,509,public void testGetIntervalConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,510,"IntervalConverter c = ConverterManager.getInstance().getIntervalConverter(new Interval(0L, 1000L));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,511,"assertEquals(ReadableInterval.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,513,"c = ConverterManager.getInstance().getIntervalConverter("""");"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,514,"assertEquals(String.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,516,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,517,ConverterManager.getInstance().getIntervalConverter(Boolean.TRUE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,518,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,519,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,520,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,521,ConverterManager.getInstance().getIntervalConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,522,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,523,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,527,public void testGetIntervalConverters() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,528,IntervalConverter[] array = ConverterManager.getInstance().getIntervalConverters();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,529,"assertEquals(2, array.length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,533,public void testAddIntervalConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,534,IntervalConverter c = new IntervalConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,535,"public void setInto(ReadWritableInterval interval, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,536,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,538,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,539,IntervalConverter removed = ConverterManager.getInstance().addIntervalConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,540,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,541,"assertEquals(Boolean.class, ConverterManager.getInstance().getIntervalConverter(Boolean.TRUE).getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,542,"assertEquals(3, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,543,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,544,ConverterManager.getInstance().removeIntervalConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,546,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,549,public void testAddIntervalConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,550,IntervalConverter c = new IntervalConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,551,"public void setInto(ReadWritableInterval interval, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,552,public Class getSupportedType() {return String.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,554,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,555,IntervalConverter removed = ConverterManager.getInstance().addIntervalConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,556,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,557,"assertEquals(String.class, ConverterManager.getInstance().getIntervalConverter("""").getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,558,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,559,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,560,ConverterManager.getInstance().addIntervalConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,562,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,565,public void testAddIntervalConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,566,IntervalConverter removed = ConverterManager.getInstance().addIntervalConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,567,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,568,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,571,public void testAddIntervalConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,572,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,573,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,574,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,575,ConverterManager.getInstance().addIntervalConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,576,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,577,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,578,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,579,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,580,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,581,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,583,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,587,public void testRemoveIntervalConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,588,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,589,IntervalConverter removed = ConverterManager.getInstance().removeIntervalConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,590,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,591,"assertEquals(1, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,592,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,593,ConverterManager.getInstance().addIntervalConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,595,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,598,public void testRemoveIntervalConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,599,IntervalConverter c = new IntervalConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,600,"public void setInto(ReadWritableInterval interval, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,601,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,603,IntervalConverter removed = ConverterManager.getInstance().removeIntervalConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,604,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,605,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,608,public void testRemoveIntervalConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,609,IntervalConverter removed = ConverterManager.getInstance().removeIntervalConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,610,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,611,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,614,public void testRemoveIntervalConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,615,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,616,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,617,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,618,ConverterManager.getInstance().removeIntervalConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,619,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,620,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,621,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,622,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,623,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,624,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,626,"assertEquals(2, ConverterManager.getInstance().getIntervalConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,630,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,631,"assertEquals(""ConverterManager[6 instant,5 duration,2 interval]"", ConverterManager.getInstance().toString());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,57,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,58,import java.util.Calendar;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,59,import java.util.Date;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,60,import java.util.GregorianCalendar;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,62,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,63,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,65,import org.joda.time.DateMidnight;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,66,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,67,import org.joda.time.ReadWritableDateTime;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,68,import org.joda.time.ReadWritableInstant;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,69,import org.joda.time.ReadableDateTime;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,70,import org.joda.time.ReadableInstant;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,73,* This class is a JUnit test for ConverterSet.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,74,* Mostly for coverage.
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,76,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,78,public class TestConverterSet extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,80,private static final Converter c1 = new Converter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,81,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,83,private static final Converter c2 = new Converter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,84,public Class getSupportedType() {return Character.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,86,private static final Converter c3 = new Converter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,87,public Class getSupportedType() {return Byte.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,89,private static final Converter c4 = new Converter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,90,public Class getSupportedType() {return Short.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,92,private static final Converter c4a = new Converter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,93,public Class getSupportedType() {return Short.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,95,private static final Converter c5 = new Converter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,96,public Class getSupportedType() {return Integer.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,99,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,100,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,103,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,104,return new TestSuite(TestConverterSet.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,107,public TestConverterSet(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,108,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,112,public void testClass() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,113,Class cls = ConverterSet.class;
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,114,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,115,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,116,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,118,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,119,Constructor con = cls.getDeclaredConstructors()[0];
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,120,"assertEquals(false, Modifier.isPublic(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,121,"assertEquals(false, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,122,"assertEquals(false, Modifier.isPrivate(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,126,public void testBigHashtable() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,127,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,128,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,130,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,131,set.select(Boolean.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,132,set.select(Character.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,133,set.select(Byte.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,134,set.select(Short.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,135,set.select(Integer.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,136,set.select(Long.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,137,set.select(Float.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,138,set.select(Double.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,139,set.select(Date.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,140,set.select(Calendar.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,141,set.select(GregorianCalendar.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,142,set.select(DateTime.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,143,set.select(DateMidnight.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,144,set.select(ReadableInstant.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,145,set.select(ReadableDateTime.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,146,set.select(ReadWritableInstant.class);  // 16
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,147,set.select(ReadWritableDateTime.class);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,148,"assertEquals(4, set.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,152,public void testAddNullRemoved1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,153,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,154,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,156,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,157,"ConverterSet result = set.add(c5, null);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,158,"assertEquals(4, set.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,159,"assertEquals(5, result.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,162,public void testAddNullRemoved2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,163,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,164,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,166,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,167,"ConverterSet result = set.add(c4, null);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,168,"assertSame(set, result);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,171,public void testAddNullRemoved3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,172,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,173,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,175,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,176,"ConverterSet result = set.add(c4a, null);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,177,"assertNotSame(set, result);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,178,"assertEquals(4, set.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,179,"assertEquals(4, result.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,183,public void testRemoveNullRemoved1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,184,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,185,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,187,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,188,"ConverterSet result = set.remove(c3, null);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,189,"assertEquals(4, set.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,190,"assertEquals(3, result.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,194,public void testRemoveBadIndex1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,195,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,196,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,198,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,199,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,200,"set.remove(200, null);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,201,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,202,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,203,"assertEquals(4, set.size());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,206,public void testRemoveBadIndex2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,207,Converter[] array = new Converter[] {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,208,"c1, c2, c3, c4,"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,210,ConverterSet set = new ConverterSet(array);
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,211,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,212,"set.remove(-1, null);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,213,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,214,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,JodaTime/src/test/org/joda/time/convert/TestConverterSet.java,215,"assertEquals(4, set.size());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,59,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,61,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,62,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,64,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,65,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,66,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,67,import org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,68,import org.joda.time.MutableDuration;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,69,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,70,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,73,* This class is a Junit unit test for StringConverter.
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,75,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,77,public class TestStringConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,79,"private static final DateTimeZone ONE_HOUR = DateTimeZone.getInstance(""+01:00"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,80,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,81,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,82,"private static final DateTimeZone LONDON = DateTimeZone.getInstance(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,83,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,84,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,85,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,87,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,88,private Locale locale = null;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,90,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,91,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,94,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,95,return new TestSuite(TestStringConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,98,public TestStringConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,99,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,102,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,103,zone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,104,locale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,105,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,106,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,109,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,110,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,111,Locale.setDefault(locale);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,112,zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,116,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,117,Class cls = StringConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,118,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,119,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,120,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,122,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,123,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,124,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,126,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,127,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,128,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,129,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,133,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,134,"assertEquals(String.class, StringConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,138,public void testGetInstantMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,139,"DateTime dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,140,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,142,"dt = new DateTime(2004, 1, 1, 0, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,143,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004T+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,145,"dt = new DateTime(2004, 6, 1, 0, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,146,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06T+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,148,"dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,149,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,151,"dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,152,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-161T+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,154,"dt = new DateTime(2004, 6, 9, 0, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,155,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-W24-3T+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,157,"dt = new DateTime(2004, 6, 7, 0, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,158,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-W24T+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,160,"dt = new DateTime(2004, 6, 9, 12, 0, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,161,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,163,"dt = new DateTime(2004, 6, 9, 12, 24, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,164,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,166,"dt = new DateTime(2004, 6, 9, 12, 24, 48, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,167,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,169,"dt = new DateTime(2004, 6, 9, 12, 30, 0, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,170,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12.5+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,172,"dt = new DateTime(2004, 6, 9, 12, 24, 30, 0, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,173,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24.5+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,175,"dt = new DateTime(2004, 6, 9, 12, 24, 48, 500, ONE_HOUR);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,176,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.5+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,179,public void testGetInstantMillis_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,180,"DateTime dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, PARIS);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,181,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501+02:00"", PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,183,"dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, LONDON);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,184,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501+01:00"", (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,186,"dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, PARIS);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,187,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501"", PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,189,"dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, LONDON);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,190,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501"", (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,193,public void testGetInstantMillis_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,194,"DateTime dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, JulianChronology.getInstance(LONDON));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,195,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501+01:00"", JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,197,"dt = new DateTime(2004, 6, 9, 12, 24, 48, 501, ISOChronology.getInstance(LONDON));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,198,"assertEquals(dt.getMillis(), StringConverter.INSTANCE.getInstantMillis(""2004-06-09T12:24:48.501+01:00"", (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,201,public void testGetInstantMillisInvalid() {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,202,try {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,203,"StringConverter.INSTANCE.getInstantMillis("""");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,204,fail();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,205,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,206,try {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,207,"StringConverter.INSTANCE.getInstantMillis(""X"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,208,fail();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,209,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,213,public void testGetChronology_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,214,"assertEquals(ISOChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501+01:00""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,215,"assertEquals(ISOChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,218,public void testGetChronology_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,219,"assertEquals(ISOChronology.getInstance(PARIS), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501+01:00"", PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,220,"assertEquals(ISOChronology.getInstance(PARIS), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501"", PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,221,"assertEquals(ISOChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501+01:00"", (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,222,"assertEquals(ISOChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501"", (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,225,public void testGetChronology_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,226,"assertEquals(JulianChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501+01:00"", JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,227,"assertEquals(JulianChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501"", JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,228,"assertEquals(ISOChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501+01:00"", (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,229,"assertEquals(ISOChronology.getInstance(LONDON), StringConverter.INSTANCE.getChronology(""2004-06-09T12:24:48.501"", (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,233,public void testGetDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,234,"DateTime base = new DateTime(2004, 6, 9, 12, 24, 48, 501, PARIS);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,235,"DateTime test = new DateTime(base.toString(), PARIS);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,236,"assertEquals(base, test);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,239,public void testGetDateTime1() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,240,"DateTime test = new DateTime(""2004-06-09T12:24:48.501+01:00"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,241,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,242,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,243,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,244,"assertEquals(12, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,245,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,246,"assertEquals(48, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,247,"assertEquals(501, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,248,"assertEquals(LONDON, test.getZone());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,251,public void testGetDateTime2() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,252,"DateTime test = new DateTime(""2004-06-09T12:24:48.501"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,253,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,254,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,255,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,256,"assertEquals(12, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,257,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,258,"assertEquals(48, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,259,"assertEquals(501, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,260,"assertEquals(LONDON, test.getZone());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,263,public void testGetDateTime3() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,264,"DateTime test = new DateTime(""2004-06-09T12:24:48.501+02:00"", PARIS);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,265,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,266,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,267,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,268,"assertEquals(12, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,269,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,270,"assertEquals(48, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,271,"assertEquals(501, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,272,"assertEquals(PARIS, test.getZone());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,275,public void testGetDateTime4() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,276,"DateTime test = new DateTime(""2004-06-09T12:24:48.501"", PARIS);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,277,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,278,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,279,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,280,"assertEquals(12, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,281,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,282,"assertEquals(48, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,283,"assertEquals(501, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,284,"assertEquals(PARIS, test.getZone());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,287,public void testGetDateTime5() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,288,"DateTime test = new DateTime(""2004-06-09T12:24:48.501+02:00"", JulianChronology.getInstance(PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,289,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,290,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,291,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,292,"assertEquals(12, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,293,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,294,"assertEquals(48, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,295,"assertEquals(501, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,296,"assertEquals(PARIS, test.getZone());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,299,public void testGetDateTime6() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,300,"DateTime test = new DateTime(""2004-06-09T12:24:48.501"", JulianChronology.getInstance(PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,301,"assertEquals(2004, test.getYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,302,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,303,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,304,"assertEquals(12, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,305,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,306,"assertEquals(48, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,307,"assertEquals(501, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,308,"assertEquals(PARIS, test.getZone());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,312,public void testGetDurationMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,313,try {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,314,"StringConverter.INSTANCE.getDurationMillis(""P2Y6M9D"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,315,fail();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,316,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,319,public void testGetDurationType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,320,"assertEquals(DurationType.getYearMonthType(), StringConverter.INSTANCE.getDurationType(""P2Y6M9D""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,321,"assertEquals(DurationType.getYearWeekType(), StringConverter.INSTANCE.getDurationType(""P2Y6W4D""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,324,public void testIsPrecise_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,325,"assertEquals(false, StringConverter.INSTANCE.isPrecise(""P2Y6M9D""));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,328,public void testSetInto_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,329,MutableDuration m = new MutableDuration(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,330,"StringConverter.INSTANCE.setInto(m, ""P2Y6M9DT12H24M48S"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,331,"assertEquals(2, m.getYears());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,332,"assertEquals(6, m.getMonths());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,333,"assertEquals(9, m.getDays());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,334,"assertEquals(12, m.getHours());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,335,"assertEquals(24, m.getMinutes());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,336,"assertEquals(48, m.getSeconds());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,337,"assertEquals(0, m.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,339,m = new MutableDuration(DurationType.getYearWeekType());
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,340,"StringConverter.INSTANCE.setInto(m, ""P2Y4W3DT12H24M48S"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,341,"assertEquals(2, m.getYears());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,342,"assertEquals(4, m.getWeeks());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,343,"assertEquals(3, m.getDays());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,344,"assertEquals(12, m.getHours());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,345,"assertEquals(24, m.getMinutes());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,346,"assertEquals(48, m.getSeconds());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,347,"assertEquals(0, m.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,349,"m = new MutableDuration(DurationType.getYearWeekType(), 1, 0, 1, 1, 1, 1, 1, 1);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,350,"StringConverter.INSTANCE.setInto(m, ""P2Y4W3D"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,351,"assertEquals(2, m.getYears());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,352,"assertEquals(4, m.getWeeks());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,353,"assertEquals(3, m.getDays());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,354,"assertEquals(0, m.getHours());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,355,"assertEquals(0, m.getMinutes());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,356,"assertEquals(0, m.getSeconds());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,357,"assertEquals(0, m.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,359,try {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,360,"StringConverter.INSTANCE.setInto(m, """");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,361,fail();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,362,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,364,try {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,365,"StringConverter.INSTANCE.setInto(m, ""PXY"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,366,fail();
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,367,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,371,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,372,"assertEquals(""Converter[java.lang.String]"", StringConverter.INSTANCE.toString());"
