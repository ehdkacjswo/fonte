is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,25,import org.joda.time.Interval;
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,42,* @author Mike Schrag
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,344,* Returns the interval that represents the range of the minimum
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,345,* and maximum values of this field.
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,346,* <p>
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,347,"* For example, <code>datetime.monthOfYear().toInterval()</code>"
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,348,* will return an interval over the whole month.
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,350,* @return the interval of this field
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,351,* @since 1.2
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,353,public Interval toInterval() {
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,354,DateTimeField field = getField();
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,355,long start = field.roundFloor(getMillis());
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,356,"long end = field.add(start, 1);"
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,357,"Interval interval = new Interval(start, end);"
True,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java,358,return interval;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,27,* @author Mike Schrag
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,32,"rivate static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,33,"//private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,459,public void testPropertyToIntervalYearOfEra() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,460,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,461,Interval testInterval = test.yearOfEra().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,462,"assertEquals(new DateMidnight(2004, 1, 1), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,463,"assertEquals(new DateMidnight(2005, 1, 1), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,466,public void testPropertyToIntervalYearOfCentury() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,467,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,468,Interval testInterval = test.yearOfCentury().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,469,"assertEquals(new DateMidnight(2004, 1, 1), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,470,"assertEquals(new DateMidnight(2005, 1, 1), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,473,public void testPropertyToIntervalYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,474,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,475,Interval testInterval = test.year().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,476,"assertEquals(new DateMidnight(2004, 1, 1), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,477,"assertEquals(new DateMidnight(2005, 1, 1), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,480,public void testPropertyToIntervalMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,481,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,482,Interval testInterval = test.monthOfYear().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,483,"assertEquals(new DateMidnight(2004, 6, 1), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,484,"assertEquals(new DateMidnight(2004, 7, 1), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,487,public void testPropertyToIntervalDayOfMonth() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,488,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,489,Interval testInterval = test.dayOfMonth().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,490,"assertEquals(new DateMidnight(2004, 6, 9), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,491,"assertEquals(new DateMidnight(2004, 6, 10), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,493,"DateMidnight febTest = new DateMidnight(2004, 2, 29);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,494,Interval febTestInterval = febTest.dayOfMonth().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,495,"assertEquals(new DateMidnight(2004, 2, 29), febTestInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,496,"assertEquals(new DateMidnight(2004, 3, 1), febTestInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,27,* @author Mike Schrag
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,32,"rivate static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,33,"//private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1250,public void testPropertyToIntervalYearOfEra() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1251,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1252,Interval testInterval = test.yearOfEra().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1253,"assertEquals(new DateTime(2004, 1, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1254,"assertEquals(new DateTime(2005, 1, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1257,public void testPropertyToIntervalYearOfCentury() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1258,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1259,Interval testInterval = test.yearOfCentury().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1260,"assertEquals(new DateTime(2004, 1, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1261,"assertEquals(new DateTime(2005, 1, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1264,public void testPropertyToIntervalYear() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1265,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1266,Interval testInterval = test.year().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1267,"assertEquals(new DateTime(2004, 1, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1268,"assertEquals(new DateTime(2005, 1, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1271,public void testPropertyToIntervalMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1272,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1273,Interval testInterval = test.monthOfYear().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1274,"assertEquals(new DateTime(2004, 6, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1275,"assertEquals(new DateTime(2004, 7, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1278,public void testPropertyToIntervalDayOfMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1279,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1280,Interval testInterval = test.dayOfMonth().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1281,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1282,"assertEquals(new DateTime(2004, 6, 10, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1284,"DateTime febTest = new DateTime(2004, 2, 29, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1285,Interval febTestInterval = febTest.dayOfMonth().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1286,"assertEquals(new DateTime(2004, 2, 29, 0, 0, 0, 0), febTestInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1287,"assertEquals(new DateTime(2004, 3, 1, 0, 0, 0, 0), febTestInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1290,public void testPropertyToIntervalHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1291,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1292,Interval testInterval = test.hourOfDay().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1293,"assertEquals(new DateTime(2004, 6, 9, 13, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1294,"assertEquals(new DateTime(2004, 6, 9, 14, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1296,"DateTime midnightTest = new DateTime(2004, 6, 9, 23, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1297,Interval midnightTestInterval = midnightTest.hourOfDay().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1298,"assertEquals(new DateTime(2004, 6, 9, 23, 0, 0, 0), midnightTestInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1299,"assertEquals(new DateTime(2004, 6, 10, 0, 0, 0, 0), midnightTestInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1302,public void testPropertyToIntervalMinuteOfHour() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1303,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1304,Interval testInterval = test.minuteOfHour().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1305,"assertEquals(new DateTime(2004, 6, 9, 13, 23, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1306,"assertEquals(new DateTime(2004, 6, 9, 13, 24, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1309,public void testPropertyToIntervalSecondOfMinute() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1310,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1311,Interval testInterval = test.secondOfMinute().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1312,"assertEquals(new DateTime(2004, 6, 9, 13, 23, 43, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1313,"assertEquals(new DateTime(2004, 6, 9, 13, 23, 44, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1316,public void testPropertyToIntervalMillisOfSecond() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1317,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1318,Interval testInterval = test.millisOfSecond().toInterval();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1319,"assertEquals(new DateTime(2004, 6, 9, 13, 23, 43, 53), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1320,"assertEquals(new DateTime(2004, 6, 9, 13, 23, 43, 54), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,27,* @author Mike Schrag
False,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,32,"rivate static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,33,"//private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,692,public void testPropertyToIntervalYearOfEra() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,693,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,694,Interval testInterval = test.yearOfEra().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,695,"assertEquals(new MutableDateTime(2004, 1, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,696,"assertEquals(new MutableDateTime(2005, 1, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,697,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,700,public void testPropertyToIntervalYearOfCentury() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,701,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,702,Interval testInterval = test.yearOfCentury().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,703,"assertEquals(new MutableDateTime(2004, 1, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,704,"assertEquals(new MutableDateTime(2005, 1, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,705,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,708,public void testPropertyToIntervalYear() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,709,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,710,Interval testInterval = test.year().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,711,"assertEquals(new MutableDateTime(2004, 1, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,712,"assertEquals(new MutableDateTime(2005, 1, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,713,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,716,public void testPropertyToIntervalMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,717,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,718,Interval testInterval = test.monthOfYear().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,719,"assertEquals(new MutableDateTime(2004, 6, 1, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,720,"assertEquals(new MutableDateTime(2004, 7, 1, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,721,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,724,public void testPropertyToIntervalDayOfMonth() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,725,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,726,Interval testInterval = test.dayOfMonth().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,727,"assertEquals(new MutableDateTime(2004, 6, 9, 0, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,728,"assertEquals(new MutableDateTime(2004, 6, 10, 0, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,729,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,731,"MutableDateTime febTest = new MutableDateTime(2004, 2, 29, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,732,Interval febTestInterval = febTest.dayOfMonth().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,733,"assertEquals(new MutableDateTime(2004, 2, 29, 0, 0, 0, 0), febTestInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,734,"assertEquals(new MutableDateTime(2004, 3, 1, 0, 0, 0, 0), febTestInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,735,"assertEquals(new MutableDateTime(2004, 2, 29, 13, 23, 43, 53), febTest);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,738,public void testPropertyToIntervalHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,739,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,740,Interval testInterval = test.hourOfDay().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,741,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 0, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,742,"assertEquals(new MutableDateTime(2004, 6, 9, 14, 0, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,743,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,745,"MutableDateTime midnightTest = new MutableDateTime(2004, 6, 9, 23, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,746,Interval midnightTestInterval = midnightTest.hourOfDay().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,747,"assertEquals(new MutableDateTime(2004, 6, 9, 23, 0, 0, 0), midnightTestInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,748,"assertEquals(new MutableDateTime(2004, 6, 10, 0, 0, 0, 0), midnightTestInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,749,"assertEquals(new MutableDateTime(2004, 6, 9, 23, 23, 43, 53), midnightTest);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,752,public void testPropertyToIntervalMinuteOfHour() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,753,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,754,Interval testInterval = test.minuteOfHour().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,755,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 0, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,756,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 24, 0, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,757,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,760,public void testPropertyToIntervalSecondOfMinute() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,761,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,762,Interval testInterval = test.secondOfMinute().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,763,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 0), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,764,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 44, 0), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,765,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,768,public void testPropertyToIntervalMillisOfSecond() {
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,769,"MutableDateTime test = new MutableDateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,770,Interval testInterval = test.millisOfSecond().toInterval();
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,771,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), testInterval.getStart());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,772,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 54), testInterval.getEnd());"
True,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java,773,"assertEquals(new MutableDateTime(2004, 6, 9, 13, 23, 43, 53), test);"
