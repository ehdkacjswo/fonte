is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,56,import org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,237,* Validates whether the fields stored in a partial instant are valid.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,239,* @param instant  the partial instant to validate
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,240,* @throws IllegalArgumentException if the instant is invalid
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,242,void validate(PartialInstant instant);
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,59,/ Import for @link support
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,60,mport org.joda.time.DateTimeConstants;
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,64,import org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,276,* Validates whether the fields stored in a partial instant are valid.
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,277,* <p>
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,278,* This implementation uses {@link DateTimeField#getMinimumValue()} and
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,279,* {@link DateTimeField#getMaximumValue()}.
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,281,* @param instant  the partial instant to validate
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,282,* @throws IllegalArgumentException if the instant is invalid
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,284,public void validate(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,285,DateTimeField[] fields = instant.getFields();
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,286,int[] values = instant.getValues();
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,287,for (int i = 0; i < fields.length; i++) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,288,if (values[i] < fields[i].getMinimumValue()) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,289,"throw new IllegalArgumentException(""Value "" + values[i] +"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,290,""" for "" + fields[i].getName() + "" is less than minimum"");"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,292,if (values[i] > fields[i].getMaximumValue()) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,293,"throw new IllegalArgumentException(""Value "" + values[i] +"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,294,""" for "" + fields[i].getName() + "" is greater than maximum"");"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,297,for (int i = 0; i < fields.length; i++) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,298,if (values[i] < fields[i].getMinimumValue(instant)) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,299,"throw new IllegalArgumentException(""Value "" + values[i] +"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,300,""" for "" + fields[i].getName() + "" is less than minimum"");"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,302,if (values[i] > fields[i].getMaximumValue(instant)) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,303,"throw new IllegalArgumentException(""Value "" + values[i] +"
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,304,""" for "" + fields[i].getName() + "" is greater than maximum"");"
False,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,434, <p>DayOfWeek values are defined in {@link DateTimeConstants}.
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,467,* <p>DayOfWeek values are defined in
True,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractChronology.java,468,* {@link org.joda.time.DateTimeConstants DateTimeConstants}.
