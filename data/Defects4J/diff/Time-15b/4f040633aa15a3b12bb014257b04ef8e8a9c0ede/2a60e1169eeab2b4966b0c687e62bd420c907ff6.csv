is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,56,import org.joda.time.chrono.BuddhistChronology;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,57,import org.joda.time.chrono.CopticChronology;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,58,import org.joda.time.chrono.GJChronology;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,59,import org.joda.time.chrono.GregorianChronology;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,60,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,61,import org.joda.time.chrono.JulianChronology;
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,58, chronological calendar system. Various chronologies are supported by
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,59, subclasses including ISO and GregorianJulian.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,65,* chronological calendar system.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,66,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,67,* Various chronologies are supported by subclasses including ISO and GregorianJulian.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,68,* This class provides static factory methods to access these chronologies.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,69,"* For example, to obtain the current time in the coptic calendar system:"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,70,* <pre>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,71,* DateTime dt = new DateTime(Chronology.getCoptic());
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,72,* </pre>
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,61, This interface defines a number of fields with names from the ISO8601
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,62," standard. Chronology does not 'strongly' define these fields however, thus"
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,63, implementations are free to interpret the field names as they wish. For
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,64," example, a week could be defined as 10 days and a month as 40 days in a"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,74,* The provided chronology implementations are:
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,75,* <ul>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,76,* <li>ISO - Based on the ISO8601 standard and suitable for use after about 1600
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,77,* <li>GJ - Historically accurate calendar with Julian followed by Gregorian
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,78,* <li>Gregorian - The Gregorian calendar system used for all time (proleptic)
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,79,* <li>Julian - The Julian calendar system used for all time (proleptic)
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,80,* <li>Buddhist - The Buddhist calendar system which is an offset in years from GJ
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,81,* <li>Coptic - The Coptic calendar system which defines 30 day months
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,82,* </ul>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,83,* Hopefully future releases will contain more chronologies.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,84,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,85,* This class defines a number of fields with names from the ISO8601 standard.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,86,"* It does not 'strongly' define these fields however, thus implementations"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,87,* are free to interpret the field names as they wish.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,88,"* For example, a week could be defined as 10 days and a month as 40 days in a"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,106,* Gets an instance of the ISOChronology in the default zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,107,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,108,* {@link ISOChronology} defines all fields in line with the ISO8601 standard.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,109,"* This chronology is the default, and is suitable for all normal datetime processing."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,110,"* It is <i>unsuitable</i> for historical datetimes before October 15, 1582"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,111,* as it applies the modern Gregorian calendar rules before that date.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,113,* @return the ISO chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,115,public static Chronology getISO() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,116,return ISOChronology.getInstance();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,120,* Gets an instance of the ISOChronology in the UTC zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,121,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,122,* {@link ISOChronology} defines all fields in line with the ISO8601 standard.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,123,"* This chronology is the default, and is suitable for all normal datetime processing."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,124,"* It is <i>unsuitable</i> for historical datetimes before October 15, 1582"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,125,* as it applies the modern Gregorian calendar rules before that date.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,127,* @return the ISO chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,129,public static Chronology getISOUTC() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,130,return ISOChronology.getInstanceUTC();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,134,* Gets an instance of the ISOChronology in the specified zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,135,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,136,* {@link ISOChronology} defines all fields in line with the ISO8601 standard.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,137,"* This chronology is the default, and is suitable for all normal datetime processing."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,138,"* It is <i>unsuitable</i> for historical datetimes before October 15, 1582"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,139,* as it applies the modern Gregorian calendar rules before that date.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,141,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,142,* @return the ISO chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,144,public static Chronology getISO(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,145,return ISOChronology.getInstance(zone);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,150,* Gets an instance of the GJChronology in the default zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,151,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,152,* {@link GJChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,153,* This chronology is intended to be used as a replacement for <code>GregorianCalendar</code>.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,154,"* The Gregorian calendar system is used after October 15, 1582, while the"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,155,* Julian calendar system is used before.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,156,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,157,"* Unlike <code>GregorianCalendar</code>, this chronology returns a year of -1"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,158,"* for 1 BCE, -2 for 2 BCE and so on. Thus there is no year zero."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,159,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,160,* This method uses the standard Julian to Gregorian cutover date of
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,161,"* October 15th 1582. If you require a cutover on a different date, then use"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,162,* the factories on <code>GJChronology</code> itself.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,163,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,164,"* When dealing solely with dates in the modern era, from 1600 onwards,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,165,"* we recommend using ISOChronology, which is the default."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,167,* @return the GJ chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,169,public static Chronology getGJ() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,170,return GJChronology.getInstance();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,174,* Gets an instance of the GJChronology in the UTC zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,175,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,176,* {@link GJChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,177,* This chronology is intended to be used as a replacement for <code>GregorianCalendar</code>.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,178,"* The Gregorian calendar system is used after October 15, 1582, while the"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,179,* Julian calendar system is used before.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,180,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,181,"* Unlike <code>GregorianCalendar</code>, this chronology returns a year of -1"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,182,"* for 1 BCE, -2 for 2 BCE and so on. Thus there is no year zero."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,183,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,184,* This method uses the standard Julian to Gregorian cutover date of
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,185,"* October 15th 1582. If you require a cutover on a different date, then use"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,186,* the factories on <code>GJChronology</code> itself.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,187,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,188,"* When dealing solely with dates in the modern era, from 1600 onwards,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,189,"* we recommend using ISOChronology, which is the default."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,191,* @return the GJ chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,193,public static Chronology getGJUTC() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,194,return GJChronology.getInstanceUTC();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,198,* Gets an instance of the GJChronology in the specified zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,199,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,200,* {@link GJChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,201,* This chronology is intended to be used as a replacement for <code>GregorianCalendar</code>.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,202,"* The Gregorian calendar system is used after October 15, 1582, while the"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,203,* Julian calendar system is used before.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,204,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,205,"* Unlike <code>GregorianCalendar</code>, this chronology returns a year of -1"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,206,"* for 1 BCE, -2 for 2 BCE and so on. Thus there is no year zero."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,207,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,208,* This method uses the standard Julian to Gregorian cutover date of
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,209,"* October 15th 1582. If you require a cutover on a different date, then use"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,210,* the factories on <code>GJChronology</code> itself.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,211,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,212,"* When dealing solely with dates in the modern era, from 1600 onwards,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,213,"* we recommend using ISOChronology, which is the default."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,215,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,216,* @return the GJ chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,218,public static Chronology getGJ(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,219,return GJChronology.getInstance(zone);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,224,* Gets an instance of the GregorianChronology in the default zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,225,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,226,* {@link GregorianChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,227,* It uses the Gregorian calendar rules <i>for all time</i> (proleptic)
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,228,* thus it is NOT a replacement for <code>GregorianCalendar</code>.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,229,"* For that purpose, you should use {@link #getGJ()}."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,230,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,231,"* The Gregorian calendar system defines a leap year every four years,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,232,"* except that every 100 years is not leap, but every 400 is leap."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,233,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,234,"* Technically, this chronology is almost identical to the ISO chronology,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,235,"* thus we recommend using ISOChronology instead, which is the default."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,237,* @return the Gregorian chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,239,public static Chronology getGregorian() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,240,return GregorianChronology.getInstance();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,244,* Gets an instance of the GregorianChronology in the UTC zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,245,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,246,* {@link GregorianChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,247,* It uses the Gregorian calendar rules <i>for all time</i> (proleptic)
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,248,* thus it is NOT a replacement for <code>GregorianCalendar</code>.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,249,"* For that purpose, you should use {@link #getGJ()}."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,250,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,251,"* The Gregorian calendar system defines a leap year every four years,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,252,"* except that every 100 years is not leap, but every 400 is leap."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,253,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,254,"* Technically, this chronology is almost identical to the ISO chronology,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,255,"* thus we recommend using ISOChronology instead, which is the default."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,257,* @return the Gregorian chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,259,public static Chronology getGregorianUTC() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,260,return GregorianChronology.getInstanceUTC();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,264,* Gets an instance of the GregorianChronology in the specified zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,265,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,266,* {@link GregorianChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,267,* It uses the Gregorian calendar rules <i>for all time</i> (proleptic)
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,268,* thus it is NOT a replacement for <code>GregorianCalendar</code>.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,269,"* For that purpose, you should use {@link #getGJ()}."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,270,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,271,"* The Gregorian calendar system defines a leap year every four years,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,272,"* except that every 100 years is not leap, but every 400 is leap."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,273,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,274,"* Technically, this chronology is almost identical to the ISO chronology,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,275,"* thus we recommend using ISOChronology instead, which is the default."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,277,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,278,* @return the Gregorian chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,280,public static Chronology getGregorian(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,281,return GregorianChronology.getInstance(zone);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,286,* Gets an instance of the JulianChronology in the default zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,287,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,288,* {@link JulianChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,289,* It uses the Julian calendar rules <i>for all time</i> (proleptic).
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,290,* The Julian calendar system defines a leap year every four years.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,292,* @return the Julian chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,294,public static Chronology getJulian() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,295,return JulianChronology.getInstance();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,299,* Gets an instance of the JulianChronology in the UTC zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,300,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,301,* {@link JulianChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,302,* It uses the Julian calendar rules <i>for all time</i> (proleptic).
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,303,* The Julian calendar system defines a leap year every four years.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,305,* @return the Julian chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,307,public static Chronology getJulianUTC() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,308,return JulianChronology.getInstanceUTC();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,312,* Gets an instance of the JulianChronology in the specified zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,313,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,314,* {@link JulianChronology} defines all fields using standard meanings.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,315,* It uses the Julian calendar rules <i>for all time</i> (proleptic).
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,316,* The Julian calendar system defines a leap year every four years.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,318,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,319,* @return the Julian chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,321,public static Chronology getJulian(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,322,return JulianChronology.getInstance(zone);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,327,* Gets an instance of the BuddhistChronology in the default zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,328,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,329,"* {@link BuddhistChronology} defines all fields using standard meanings,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,330,* however the year is offset by 543. The chronology cannot be used before
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,331,* year 1 in the Buddhist calendar.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,333,* @return the Buddhist chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,335,public static Chronology getBuddhist() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,336,return BuddhistChronology.getInstance();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,340,* Gets an instance of the BuddhistChronology in the UTC zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,341,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,342,"* {@link BuddhistChronology} defines all fields using standard meanings,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,343,* however the year is offset by 543. The chronology cannot be used before
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,344,* year 1 in the Buddhist calendar.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,346,* @return the Buddhist chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,348,public static Chronology getBuddhistUTC() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,349,return BuddhistChronology.getInstanceUTC();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,353,* Gets an instance of the BuddhistChronology in the specified zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,354,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,355,"* {@link BuddhistChronology} defines all fields using standard meanings,"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,356,* however the year is offset by 543. The chronology cannot be used before
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,357,* year 1 in the Buddhist calendar.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,359,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,360,* @return the Buddhist chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,362,public static Chronology getBuddhist(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,363,return BuddhistChronology.getInstance(zone);
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,368,* Gets an instance of the CopticChronology in the default zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,369,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,370,* {@link CopticChronology} defines fields sensibly for the Coptic calendar system.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,371,* The Coptic calendar system defines every fourth year as leap.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,372,"* The year is broken down into 12 months, each 30 days in length."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,373,* An extra period at the end of the year is either 5 or 6 days in length
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,374,* and is returned as a 13th month.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,375,"* Year 1 in the Coptic calendar began on August 29, 284 CE (Julian)."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,376,* The chronology cannot be used before the first Coptic year.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,378,* @return the Coptic chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,380,public static Chronology getCoptic() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,381,return CopticChronology.getInstance();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,385,* Gets an instance of the CopticChronology in the UTC zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,386,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,387,* {@link CopticChronology} defines fields sensibly for the Coptic calendar system.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,388,* The Coptic calendar system defines every fourth year as leap.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,389,"* The year is broken down into 12 months, each 30 days in length."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,390,* An extra period at the end of the year is either 5 or 6 days in length
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,391,* and is returned as a 13th month.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,392,"* Year 1 in the Coptic calendar began on August 29, 284 CE (Julian)."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,393,* The chronology cannot be used before the first Coptic year.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,395,* @return the Coptic chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,397,public static Chronology getCopticUTC() {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,398,return CopticChronology.getInstanceUTC();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,402,* Gets an instance of the CopticChronology in the specified zone.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,403,* <p>
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,404,* {@link CopticChronology} defines fields sensibly for the Coptic calendar system.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,405,* The Coptic calendar system defines every fourth year as leap.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,406,"* The year is broken down into 12 months, each 30 days in length."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,407,* An extra period at the end of the year is either 5 or 6 days in length
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,408,* and is returned as a 13th month.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,409,"* Year 1 in the Coptic calendar began on August 29, 284 CE (Julian)."
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,410,* The chronology cannot be used before the first Coptic year.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,412,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,413,* @return the Coptic chronology
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,415,public static Chronology getCoptic(DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,416,return CopticChronology.getInstance(zone);
