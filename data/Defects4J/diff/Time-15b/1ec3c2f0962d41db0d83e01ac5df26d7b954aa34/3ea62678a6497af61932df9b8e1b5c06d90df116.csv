is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,708,f (iOffsetParsed && bucket.getOffset() != null) {
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,709,nt parsedOffset = bucket.getOffset();
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,708,if (iOffsetParsed && bucket.getOffsetInteger() != null) {
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,709,int parsedOffset = bucket.getOffsetInteger();
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,809,f (bucket.getOffset() != null) {  // treat withOffsetParsed() as being true
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,810,nt parsedOffset = bucket.getOffset();
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,809,if (bucket.getOffsetInteger() != null) {  // treat withOffsetParsed() as being true
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,810,int parsedOffset = bucket.getOffsetInteger();
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,850,f (iOffsetParsed && bucket.getOffset() != null) {
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,851,nt parsedOffset = bucket.getOffset();
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,850,if (iOffsetParsed && bucket.getOffsetInteger() != null) {
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,851,int parsedOffset = bucket.getOffsetInteger();
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,895,f (iOffsetParsed && bucket.getOffset() != null) {
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,896,nt parsedOffset = bucket.getOffset();
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,895,if (iOffsetParsed && bucket.getOffsetInteger() != null) {
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,896,int parsedOffset = bucket.getOffsetInteger();
False,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2252,ucket.setOffset(0);
True,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2252,bucket.setOffset(Integer.valueOf(0));
False,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2256,ucket.setOffset(0);
True,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2256,bucket.setOffset(Integer.valueOf(0));
False,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2406,ucket.setOffset(negative ? -offset : offset);
True,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2406,bucket.setOffset(Integer.valueOf(negative ? -offset : offset));
False,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,61,"/ TimeZone to switch to in computeMillis. If null, use offset."
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,61,"/** The parsed zone, initialised to formatter zone. */"
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,63,/** The parsed offset. */
False,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,157," @param zone the date time zone to operate in, not null"
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,165,* Returns the time zone offset in milliseconds used by computeMillis.
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,166,* @deprecated use Integer version
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,168,@Deprecated
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,169,public int getOffset() {
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,170,return (iOffset != null ? iOffset : 0);
False,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,168,ublic Integer getOffset() {
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,176,public Integer getOffsetInteger() {
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,181,* Set a time zone offset to be used when computeMillis is called.
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,182,* @deprecated use Integer version
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,184,@Deprecated
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,185,public void setOffset(int offset) {
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,186,iSavedState = null;
True,src/main/java/org/joda/time/format/DateTimeParserBucket.java,src/main/java/org/joda/time/format/DateTimeParserBucket.java,187,iOffset = offset;
