is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,460,* @throws IllegalArgumentException if the values are invalid
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,461,"ublic abstract long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay)"
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,462,hrows IllegalArgumentException;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,462,"public abstract long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay);"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,482,* @throws IllegalArgumentException if the values are invalid
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,485,"nt secondOfMinute, int millisOfSecond)"
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,486,hrows IllegalArgumentException;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,486,"int secondOfMinute, int millisOfSecond);"
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,504,* @throws IllegalArgumentException if the values are invalid
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,507,"nt secondOfMinute, int millisOfSecond)"
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,508,hrows IllegalArgumentException;
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,508,"int secondOfMinute, int millisOfSecond);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,310,"* @return the updated instant, rounded to midnight"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,243,* @return the resolved singleton instance
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,466,* @param instant  the instant to check for leap status
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,477,* @param instant  the instant to check for leap status
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,478,"* @return the amount, in units of the leap duration field, that the field is leap"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,486,"* @return the leap duration field if field can be leap, null if it can't"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,83,/ Ordinals for standard field types.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,83,/** Ordinal values for standard field types. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,467,rivate transient final DurationFieldType iUnitType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,467,private final transient DurationFieldType iUnitType;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,469,rivate transient final DurationFieldType iRangeType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,469,private final transient DurationFieldType iRangeType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,475,* @param ordinal  the byte value for the oridinal index
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,476,* @param unitType  the unit duration type
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,477,* @param rangeType  the range duration type
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,487,/** @inheritdoc */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,492,/** @inheritdoc */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,497,/** @inheritdoc */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,496,ase ERA:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,497,eturn chronology.era();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,498,ase YEAR_OF_ERA:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,499,eturn chronology.yearOfEra();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,500,ase CENTURY_OF_ERA:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,501,eturn chronology.centuryOfEra();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,502,ase YEAR_OF_CENTURY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,503,eturn chronology.yearOfCentury();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,504,ase YEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,505,eturn chronology.year();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,506,ase DAY_OF_YEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,507,eturn chronology.dayOfYear();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,508,ase MONTH_OF_YEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,509,eturn chronology.monthOfYear();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,510,ase DAY_OF_MONTH:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,511,eturn chronology.dayOfMonth();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,512,ase WEEKYEAR_OF_CENTURY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,513,eturn chronology.weekyearOfCentury();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,514,ase WEEKYEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,515,eturn chronology.weekyear();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,516,ase WEEK_OF_WEEKYEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,517,eturn chronology.weekOfWeekyear();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,518,ase DAY_OF_WEEK:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,519,eturn chronology.dayOfWeek();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,520,ase HALFDAY_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,521,eturn chronology.halfdayOfDay();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,522,ase HOUR_OF_HALFDAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,523,eturn chronology.hourOfHalfday();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,524,ase CLOCKHOUR_OF_HALFDAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,525,eturn chronology.clockhourOfHalfday();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,526,ase CLOCKHOUR_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,527,eturn chronology.clockhourOfDay();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,528,ase HOUR_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,529,eturn chronology.hourOfDay();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,530,ase MINUTE_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,531,eturn chronology.minuteOfDay();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,532,ase MINUTE_OF_HOUR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,533,eturn chronology.minuteOfHour();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,534,ase SECOND_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,535,eturn chronology.secondOfDay();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,536,ase SECOND_OF_MINUTE:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,537,eturn chronology.secondOfMinute();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,538,ase MILLIS_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,539,eturn chronology.millisOfDay();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,540,ase MILLIS_OF_SECOND:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,541,eturn chronology.millisOfSecond();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,542,efault:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,543,/ Shouldn't happen.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,544,hrow new InternalError();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,502,case ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,503,return chronology.era();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,504,case YEAR_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,505,return chronology.yearOfEra();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,506,case CENTURY_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,507,return chronology.centuryOfEra();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,508,case YEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,509,return chronology.yearOfCentury();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,510,case YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,511,return chronology.year();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,512,case DAY_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,513,return chronology.dayOfYear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,514,case MONTH_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,515,return chronology.monthOfYear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,516,case DAY_OF_MONTH:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,517,return chronology.dayOfMonth();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,518,case WEEKYEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,519,return chronology.weekyearOfCentury();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,520,case WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,521,return chronology.weekyear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,522,case WEEK_OF_WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,523,return chronology.weekOfWeekyear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,524,case DAY_OF_WEEK:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,525,return chronology.dayOfWeek();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,526,case HALFDAY_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,527,return chronology.halfdayOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,528,case HOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,529,return chronology.hourOfHalfday();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,530,case CLOCKHOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,531,return chronology.clockhourOfHalfday();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,532,case CLOCKHOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,533,return chronology.clockhourOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,534,case HOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,535,return chronology.hourOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,536,case MINUTE_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,537,return chronology.minuteOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,538,case MINUTE_OF_HOUR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,539,return chronology.minuteOfHour();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,540,case SECOND_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,541,return chronology.secondOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,542,case SECOND_OF_MINUTE:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,543,return chronology.secondOfMinute();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,544,case MILLIS_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,545,return chronology.millisOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,546,case MILLIS_OF_SECOND:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,547,return chronology.millisOfSecond();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,548,default:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,549,// Shouldn't happen.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,550,throw new InternalError();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,555,ase ERA:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,556,eturn ERA_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,557,ase YEAR_OF_ERA:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,558,eturn YEAR_OF_ERA_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,559,ase CENTURY_OF_ERA:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,560,eturn CENTURY_OF_ERA_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,561,ase YEAR_OF_CENTURY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,562,eturn YEAR_OF_CENTURY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,563,ase YEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,564,eturn YEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,565,ase DAY_OF_YEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,566,eturn DAY_OF_YEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,567,ase MONTH_OF_YEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,568,eturn MONTH_OF_YEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,569,ase DAY_OF_MONTH:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,570,eturn DAY_OF_MONTH_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,571,ase WEEKYEAR_OF_CENTURY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,572,eturn WEEKYEAR_OF_CENTURY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,573,ase WEEKYEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,574,eturn WEEKYEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,575,ase WEEK_OF_WEEKYEAR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,576,eturn WEEK_OF_WEEKYEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,577,ase DAY_OF_WEEK:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,578,eturn DAY_OF_WEEK_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,579,ase HALFDAY_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,580,eturn HALFDAY_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,581,ase HOUR_OF_HALFDAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,582,eturn HOUR_OF_HALFDAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,583,ase CLOCKHOUR_OF_HALFDAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,584,eturn CLOCKHOUR_OF_HALFDAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,585,ase CLOCKHOUR_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,586,eturn CLOCKHOUR_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,587,ase HOUR_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,588,eturn HOUR_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,589,ase MINUTE_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,590,eturn MINUTE_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,591,ase MINUTE_OF_HOUR:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,592,eturn MINUTE_OF_HOUR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,593,ase SECOND_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,594,eturn SECOND_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,595,ase SECOND_OF_MINUTE:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,596,eturn SECOND_OF_MINUTE_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,597,ase MILLIS_OF_DAY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,598,eturn MILLIS_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,599,ase MILLIS_OF_SECOND:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,600,eturn MILLIS_OF_SECOND_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,601,efault:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,602,/ Shouldn't happen.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,603,eturn this;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,561,case ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,562,return ERA_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,563,case YEAR_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,564,return YEAR_OF_ERA_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,565,case CENTURY_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,566,return CENTURY_OF_ERA_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,567,case YEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,568,return YEAR_OF_CENTURY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,569,case YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,570,return YEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,571,case DAY_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,572,return DAY_OF_YEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,573,case MONTH_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,574,return MONTH_OF_YEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,575,case DAY_OF_MONTH:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,576,return DAY_OF_MONTH_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,577,case WEEKYEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,578,return WEEKYEAR_OF_CENTURY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,579,case WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,580,return WEEKYEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,581,case WEEK_OF_WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,582,return WEEK_OF_WEEKYEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,583,case DAY_OF_WEEK:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,584,return DAY_OF_WEEK_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,585,case HALFDAY_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,586,return HALFDAY_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,587,case HOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,588,return HOUR_OF_HALFDAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,589,case CLOCKHOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,590,return CLOCKHOUR_OF_HALFDAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,591,case CLOCKHOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,592,return CLOCKHOUR_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,593,case HOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,594,return HOUR_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,595,case MINUTE_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,596,return MINUTE_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,597,case MINUTE_OF_HOUR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,598,return MINUTE_OF_HOUR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,599,case SECOND_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,600,return SECOND_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,601,case SECOND_OF_MINUTE:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,602,return SECOND_OF_MINUTE_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,603,case MILLIS_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,604,return MILLIS_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,605,case MILLIS_OF_SECOND:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,606,return MILLIS_OF_SECOND_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,607,default:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,608,// Shouldn't happen.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,609,return this;
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,100,* @throws SecurityException if the application does not have sufficient security rights
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,114,* @throws SecurityException if the application does not have sufficient security rights
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,129,* @throws SecurityException if the application does not have sufficient security rights
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,302,tatic abstract class MillisProvider {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,306,abstract static class MillisProvider {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,308,* Gets the current time.
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,309,* @return the current time in millis
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,319,* Gets the current time.
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,320,* @return the current time in millis
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,331,/** The fixed millis value. */
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,335,* Constructor.
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,336,* @param offsetMillis  the millis offset
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,343,* Gets the current time.
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,344,* @return the current time in millis
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,355,/** The millis offset. */
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,359,* Constructor.
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,360,* @param offsetMillis  the millis offset
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,367,* Gets the current time.
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,368,* @return the current time in millis
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,130,/** The instance that is providing time zones. */
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,132,/** The instance that is providing time zone names. */
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,134,/** The set of ID strings. */
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,136,/** The default time zone. */
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,138,/** A formatter for printing and parsing zones. */
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,162, catch (RuntimeException ignored) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,165,} catch (RuntimeException ex) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,166,// ignored
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,167, catch (IllegalArgumentException ignored) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,171,} catch (IllegalArgumentException ex) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,172,// ignored
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,194,* @throws SecurityException if the application has insufficient security rights
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,329,nt offset = -(int)offsetFormatter().parseMillis(convId);
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,335,int offset = -(int) offsetFormatter().parseMillis(convId);
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,349,* Gets the zone using a fixed offset amount.
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,351,* @param id  the zone id
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,352,* @param offset  the offset in millis
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,353,* @return the zone
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,441,rovider = (Provider)Class.forName(providerClass).newInstance();
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,443,atch (Exception ex) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,454,provider = (Provider) Class.forName(providerClass).newInstance();
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,455,} catch (Exception ex) {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,461,// ignored
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,625,ffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR;
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,638,offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,722,* @param locale  the locale to get the name for
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,762,* @param locale  the locale to get the name for
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,907,* @return the id of the zone
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,917,* @return a stub object to go in the stream
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,927,/** Serialization lock. */
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,929,/** The ID of the zone. */
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,933,* Constructor.
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,934,* @param id  the id of the zone
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,926,rotected Object readResolve() throws ObjectStreamException {
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,948,private Object readResolve() throws ObjectStreamException {
