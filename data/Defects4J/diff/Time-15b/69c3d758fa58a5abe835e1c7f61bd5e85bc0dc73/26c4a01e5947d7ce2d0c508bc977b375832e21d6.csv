is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,27,import org.joda.time.ReadablePartial;
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,452,public int getMinimumValue(ReadablePartial instant) {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,453,return iField.getMinimumValue(instant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,456,"public int getMinimumValue(ReadablePartial instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,457,"return iField.getMinimumValue(instant, values);"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,468,public int getMaximumValue(ReadablePartial instant) {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,469,return iField.getMaximumValue(instant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,472,"public int getMaximumValue(ReadablePartial instant, int[] values) {"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,473,"return iField.getMaximumValue(instant, values);"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,24,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,25,import org.joda.time.DateMidnight;
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,29,import org.joda.time.YearMonthDay;
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,259,public void testMaximumValue() {
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,260,"YearMonthDay ymd1 = new YearMonthDay(1999, DateTimeConstants.FEBRUARY, 1);"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,261,"DateMidnight dm1 = new DateMidnight(1999, DateTimeConstants.FEBRUARY, 1);"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,262,Chronology chrono = Chronology.getGregorian();
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,263,"assertEquals(28, chrono.dayOfMonth().getMaximumValue(ymd1));"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,264,"assertEquals(28, chrono.dayOfMonth().getMaximumValue(dm1.getMillis()));"
