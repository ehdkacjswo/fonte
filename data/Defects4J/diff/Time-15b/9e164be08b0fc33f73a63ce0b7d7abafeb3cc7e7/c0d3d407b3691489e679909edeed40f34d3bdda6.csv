is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,5,* Copyright (c) 2001-03 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,6,* All rights reserved.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,10,* are met:
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,18,*    distribution.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,33,*    permission of the Joda project.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,46,* SUCH DAMAGE.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,54,package org.joda.time.property;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,56,import java.util.Locale;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,57,import java.io.Serializable;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,58,import org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,59,import org.joda.time.DurationField;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,60,import org.joda.time.ReadableInstant;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,63,* AbstractDateTimeFieldProperty is a base class for binding a
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,64,* ReadableInstant to a DateTimeField.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,65,* <p>
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,66,* It allows the date and time manipulation code to be field based yet
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,67,* still easy to use.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,68,* <p>
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,69,"* AbstractDateTimeFieldPropery itself is thread-safe and immutable, but the"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,70,* ReadableInstant being operated on may be mutable and not thread-safe.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,72,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,73,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,74,* @since 1.0
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,76,public abstract class AbstractDateTimeFieldProperty implements Serializable {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,78,static final long serialVersionUID = 1971226328211649661L;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,81,* Constructor.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,83,public AbstractDateTimeFieldProperty() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,84,super();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,89,* Gets the field being used.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,91,* @return the field
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,93,public abstract DateTimeField getField();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,96,* Gets the name of the field.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,98,* @return the field name
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,100,public String getName() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,101,return getField().getName();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,105,* Gets the instant being used.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,107,* @return the instant
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,109,public abstract ReadableInstant getInstant();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,113,* Gets a value from the instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,115,* @return the current value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,116,* @see DateTimeField#get
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,118,public int get() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,119,return getField().get(getInstant().getMillis());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,123,* Gets a text value from the instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,125,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,126,* @return the current text value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,127,* @see DateTimeField#getAsText
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,129,public String getAsText(Locale locale) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,130,"return getField().getAsText(getInstant().getMillis(), locale);"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,134,* Gets a text value from the instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,136,* @return the current text value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,137,* @see DateTimeField#getAsText
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,139,public final String getAsText() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,140,"return getField().getAsText(getInstant().getMillis(), null);"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,144,* Gets a short text value from the instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,146,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,147,* @return the current text value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,148,* @see DateTimeField#getAsShortText
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,150,public String getAsShortText(Locale locale) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,151,"return getField().getAsShortText(getInstant().getMillis(), locale);"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,155,* Gets a short text value from the instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,157,* @return the current text value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,158,* @see DateTimeField#getAsShortText
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,160,public final String getAsShortText() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,161,return getAsShortText(null);
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,166,* Returns the difference between this field property instant and the one
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,167,"* passed in, in the units of this field. The sign of the difference"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,168,"* matches that of compareTo. In other words, this field property's instant"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,169,* is the minuend.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,171,* @param instant the subtrahend
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,172,* @return the difference in the units of this field
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,173,* @see DateTimeField#getDifference
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,175,public int getDifference(ReadableInstant instant) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,176,if (instant == null) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,177,"throw new IllegalArgumentException(""The instant must not be null"");"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,179,"return getField().getDifference(getInstant().getMillis(), instant.getMillis());"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,183,* Returns the difference between this field property instant and the one
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,184,"* passed in, in the units of this field. The sign of the difference"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,185,"* matches that of compareTo. In other words, this field property's instant"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,186,* is the minuend.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,188,* @param instant the subtrahend
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,189,* @return the difference in the units of this field
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,190,* @see DateTimeField#getDifference
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,192,public long getDifferenceAsLong(ReadableInstant instant) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,193,if (instant == null) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,194,"throw new IllegalArgumentException(""The instant must not be null"");"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,196,"return getField().getDifferenceAsLong(getInstant().getMillis(), instant.getMillis());"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,201,"* Returns the duration per unit value of this field. For example, if this"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,202,"* field represents ""hour of day"", then the duration is an hour."
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,204,"* @return the duration of this field, or UnsupportedDurationField"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,206,public DurationField getDurationField() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,207,return getField().getDurationField();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,211,"* Returns the range duration of this field. For example, if this field"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,212,"* represents ""hour of day"", then the range duration is a day."
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,214,"* @return the range duration of this field, or null if field has no range"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,216,public DurationField getRangeDurationField() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,217,return getField().getRangeDurationField();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,221,* Gets whether this field is leap.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,223,* @return true if a leap field
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,224,* @see DateTimeField#isLeap
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,226,public boolean isLeap() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,227,return getField().isLeap(getInstant().getMillis());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,231,* Gets the amount by which this field is leap.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,233,* @return the amount by which the field is leap
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,234,* @see DateTimeField#getLeapAmount
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,236,public int getLeapAmount() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,237,return getField().getLeapAmount(getInstant().getMillis());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,241,"* If this field were to leap, then it would be in units described by the"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,242,"* returned duration. If this field doesn't ever leap, null is returned."
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,244,public DurationField getLeapDurationField() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,245,return getField().getLeapDurationField();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,250,* Gets the minimum value for the field ignoring the current time.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,252,* @return the minimum value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,253,* @see DateTimeField#getMinimumValue
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,255,public int getMinimumValueOverall() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,256,return getField().getMinimumValue();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,260,* Gets the minimum value for the field.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,262,* @return the minimum value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,263,* @see DateTimeField#getMinimumValue
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,265,public int getMinimumValue() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,266,return getField().getMinimumValue(getInstant().getMillis());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,270,* Gets the maximum value for the field ignoring the current time.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,272,* @return the maximum value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,273,* @see DateTimeField#getMaximumValue
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,275,public int getMaximumValueOverall() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,276,return getField().getMaximumValue();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,280,* Gets the maximum value for the field.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,282,* @return the maximum value
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,283,* @see DateTimeField#getMaximumValue
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,285,public int getMaximumValue() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,286,return getField().getMaximumValue(getInstant().getMillis());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,290,* Gets the maximum text length for the field.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,292,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,293,* @return the maximum length
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,294,* @see DateTimeField#getMaximumTextLength
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,296,public int getMaximumTextLength(Locale locale) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,297,return getField().getMaximumTextLength(locale);
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,301,* Gets the maximum short text length for the field.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,303,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,304,* @return the maximum length
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,305,* @see DateTimeField#getMaximumShortTextLength
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,307,public int getMaximumShortTextLength(Locale locale) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,308,return getField().getMaximumShortTextLength(locale);
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,313,* Returns the fractional duration milliseconds of this field.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,315,* @see DateTimeField#remainder
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,316,"* @return remainder duration, in milliseconds"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,318,public long remainder() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,319,return getField().remainder(getInstant().getMillis());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,324,* Compare this field to the same field on another instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,325,* <p>
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,326,* The {@link #get()} method is used to obtain the value to compare for
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,327,* this instant and the {@link ReadableInstant#get(DateTimeField)} method
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,328,* is used for the specified instant.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,330,* @param instant  the instant to compare to
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,331,"* @return negative value if this is less, 0 if equal, or positive value if greater"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,332,* @throws IllegalArgumentException if the instant is null
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,334,public int compareTo(ReadableInstant instant) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,335,if (instant == null) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,336,"throw new IllegalArgumentException(""The instant must not be null"");"
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,338,int thisValue = get();
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,339,int otherValue = instant.get(getField());
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,340,if (thisValue < otherValue) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,341,return -1;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,342,} else if (thisValue > otherValue) {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,343,return 1;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,344,} else {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,345,return 0;
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,351,* Output a debugging string.
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,353,* @return debugging string
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,355,public String toString() {
True,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/AbstractDateTimeFieldProperty.java,356,"return ""Property["" + getName() + ""]"";"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,5,* Copyright (c) 2001-03 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,6,* All rights reserved.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,10,* are met:
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,18,*    distribution.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,33,*    permission of the Joda project.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,46,* SUCH DAMAGE.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,54,package org.joda.time.property;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,56,import java.util.Locale;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,57,import org.joda.time.DateTime;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,58,import org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,59,// Import for @link support
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,60,import org.joda.time.MutableDateTime;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,61,import org.joda.time.ReadableInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,64,* DateTimeFieldProperty binds a DateTime to a DateTimeField allowing powerful
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,65,* datetime functionality to be easily accessed.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,66,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,67,"* The simplest use of this class is as an alternative get method, here used to"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,68,* get the year '1972' (as an int) and the month 'December' (as a String).
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,69,* <pre>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,70,"* DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,71,* int year = dt.year().get();
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,72,* String monthStr = dt.month().getAsText();
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,73,* </pre>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,74,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,75,* Methods are also provided that allow date modification. These return new instances
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,76,* of DateTime - they do not modify the original. The example below yields two
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,77,* independent immutable date objects 20 years apart.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,78,* <pre>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,79,"* DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,80,* DateTime dt20 = dt.year().addToCopy(20);
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,81,* </pre>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,82,* Serious modification of dates (ie. more than just changing one or two fields)
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,83,* should use the {@link MutableDateTime} class.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,84,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,85,"* DateTimeFieldPropery itself is thread-safe and immutable, as well as the"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,86,* DateTime being operated on.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,88,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,89,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,90,* @since 1.0
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,92,public class DateTimeFieldProperty extends AbstractDateTimeFieldProperty {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,94,static final long serialVersionUID = -6983323811635733510L;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,96,/** The instant this property is working against */
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,97,private final DateTime iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,98,/** The field this property is working against */
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,99,private final DateTimeField iField;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,102,* Constructor.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,104,* @param instant  the instant to set
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,105,* @param field  the field to use
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,107,"public DateTimeFieldProperty(DateTime instant, DateTimeField field) {"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,108,super();
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,109,iInstant = instant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,110,iField = field;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,115,* Gets the field being used.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,117,* @return the field
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,119,public DateTimeField getField() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,120,return iField;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,124,* Gets the instant being used.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,126,* @return the instant
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,128,public ReadableInstant getInstant() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,129,return iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,134,* Adds to this field in a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,135,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,136,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,137,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,138,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,139,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,141,* @param value  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,142,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,143,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,145,public DateTime addToCopy(int value) {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,146,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,147,"return (DateTime)instant.toCopy(iField.add(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,151,* Adds to this field in a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,152,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,153,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,154,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,155,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,156,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,158,* @param value  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,159,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,160,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,162,public DateTime addToCopy(long value) {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,163,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,164,"return (DateTime)instant.toCopy(iField.add(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,168,"* Adds to this field, possibly wrapped, in a copy of this DateTime."
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,169,* A wrapped operation only changes this field.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,170,* Thus 31st January addWrapped one day goes to the 1st January.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,171,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,172,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,173,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,174,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,175,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,177,* @param value  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,178,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,179,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,181,public DateTime addWrappedToCopy(int value) {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,182,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,183,"return (DateTime)instant.toCopy(iField.addWrapped(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,188,* Sets this field in a copy of the DateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,189,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,190,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,191,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,192,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,193,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,195,* @param value  the value to set the field in the copy to
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,196,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,197,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,199,public DateTime setCopy(int value) {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,200,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,201,"return (DateTime)instant.toCopy(iField.set(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,205,* Sets this field in a copy of the DateTime to a parsed text value.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,206,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,207,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,208,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,209,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,210,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,212,* @param text  the text value to set
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,213,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,214,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,215,* @throws IllegalArgumentException if the text value isn't valid
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,217,"public DateTime setCopy(String text, Locale locale) {"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,218,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,219,"return (DateTime)instant.toCopy(iField.set(instant.getMillis(), text, locale));"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,223,* Sets this field in a copy of the DateTime to a parsed text value.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,224,* <p>
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,225,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,226,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,227,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,228,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,230,* @param text  the text value to set
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,231,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,232,* @throws IllegalArgumentException if the text value isn't valid
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,234,public final DateTime setCopy(String text) {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,235,"return setCopy(text, null);"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,240,* Rounds to the lowest whole unit of this field on a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,242,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,244,public DateTime roundFloorCopy() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,245,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,246,return (DateTime)instant.toCopy(iField.roundFloor(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,250,* Rounds to the highest whole unit of this field on a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,252,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,254,public DateTime roundCeilingCopy() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,255,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,256,return (DateTime)instant.toCopy(iField.roundCeiling(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,260,"* Rounds to the nearest whole unit of this field on a copy of this DateTime,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,261,* favoring the floor if halfway.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,263,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,265,public DateTime roundHalfFloorCopy() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,266,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,267,return (DateTime)instant.toCopy(iField.roundHalfFloor(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,271,"* Rounds to the nearest whole unit of this field on a copy of this DateTime,"
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,272,* favoring the ceiling if halfway.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,274,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,276,public DateTime roundHalfCeilingCopy() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,277,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,278,return (DateTime)instant.toCopy(iField.roundHalfCeiling(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,282,* Rounds to the nearest whole unit of this field on a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,283,"* If halfway, the ceiling is favored over the floor only if it makes this field's value even."
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,285,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,287,public DateTime roundHalfEvenCopy() {
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,288,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,289,return (DateTime)instant.toCopy(iField.roundHalfEven(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,5,* Copyright (c) 2001-03 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,6,* All rights reserved.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,10,* are met:
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,18,*    distribution.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,33,*    permission of the Joda project.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,46,* SUCH DAMAGE.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,54,package org.joda.time.property;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,56,import java.util.Locale;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,57,import org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,58,import org.joda.time.ReadableInstant;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,59,import org.joda.time.ReadWritableInstant;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,62,* MutableDateTimeFieldProperty binds a ReadWritableInstant to a DateTimeField
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,63,* allowing powerful datetime functionality to be easily accessed.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,64,* <p>
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,65,* The example below shows how to use the property to change the value of a
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,66,* MutableDateTime object.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,67,* <pre>
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,68,"* MutableDateTime dt = new MutableDateTime(1972, 12, 3, 0, 0, 0, 0);"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,69,* dt.year().add(20);
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,70,* dt.second().roundFloor();
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,71,* dt.minute().set(10);
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,72,* </pre>
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,73,* <p>
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,74,"* MutableDateTimeFieldPropery itself is thread-safe and immutable, but the"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,75,* ReadWritableInstant being operated on may not be thread-safe.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,77,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,78,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,79,* @since 1.0
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,81,public class MutableDateTimeFieldProperty extends AbstractDateTimeFieldProperty {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,83,static final long serialVersionUID = -4481126543819298617L;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,85,/** The instant this property is working against */
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,86,private final ReadWritableInstant iInstant;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,87,/** The field this property is working against */
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,88,private final DateTimeField iField;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,91,* Constructor.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,93,* @param instant  the instant to set
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,94,* @param field  the field to use
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,96,"public MutableDateTimeFieldProperty(ReadWritableInstant instant, DateTimeField field) {"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,97,super();
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,98,iInstant = instant;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,99,iField = field;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,104,* Gets the field being used.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,106,* @return the field
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,108,public DateTimeField getField() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,109,return iField;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,113,* Gets the instant being used.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,115,* @return the instant
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,117,public ReadableInstant getInstant() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,118,return iInstant;
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,123,* Adds a value to the millis value.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,125,* @param value  the value to add
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,126,"* @see DateTimeField#add(long,int)"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,128,public void add(int value) {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,129,"iInstant.setMillis(getField().add(iInstant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,133,* Adds a value to the millis value.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,135,* @param value  the value to add
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,136,"* @see DateTimeField#add(long,long)"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,138,public void add(long value) {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,139,"iInstant.setMillis(getField().add(iInstant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,143,"* Adds a value, possibly wrapped, to the millis value."
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,145,* @param value  the value to add
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,146,* @see DateTimeField#addWrapped
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,148,public void addWrapped(int value) {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,149,"iInstant.setMillis(getField().addWrapped(iInstant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,154,* Sets a value.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,156,* @param value  the value to set.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,157,"* @see DateTimeField#set(long,int)"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,159,public void set(int value) {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,160,"iInstant.setMillis(getField().set(iInstant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,164,* Sets a text value.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,166,* @param text  the text value to set
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,167,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,168,* @throws IllegalArgumentException if the text value isn't valid
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,169,"* @see DateTimeField#set(long,java.lang.String,java.util.Locale)"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,171,"public void set(String text, Locale locale) {"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,172,"iInstant.setMillis(getField().set(iInstant.getMillis(), text, locale));"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,176,* Sets a text value.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,178,* @param text  the text value to set
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,179,* @throws IllegalArgumentException if the text value isn't valid
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,180,"* @see DateTimeField#set(long,java.lang.String)"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,182,public final void set(String text) {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,183,"set(text, null);"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,188,* Round to the lowest whole unit of this field.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,190,* @see DateTimeField#roundFloor
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,192,public void roundFloor() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,193,iInstant.setMillis(getField().roundFloor(iInstant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,197,* Round to the highest whole unit of this field.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,199,* @see DateTimeField#roundCeiling
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,201,public void roundCeiling() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,202,iInstant.setMillis(getField().roundCeiling(iInstant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,206,"* Round to the nearest whole unit of this field, favoring the floor if"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,207,* halfway.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,209,* @see DateTimeField#roundHalfFloor
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,211,public void roundHalfFloor() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,212,iInstant.setMillis(getField().roundHalfFloor(iInstant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,216,"* Round to the nearest whole unit of this field, favoring the ceiling if"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,217,* halfway.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,219,* @see DateTimeField#roundHalfCeiling
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,221,public void roundHalfCeiling() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,222,iInstant.setMillis(getField().roundHalfCeiling(iInstant.getMillis()));
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,226,"* Round to the nearest whole unit of this field. If halfway, the ceiling"
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,227,* is favored over the floor only if it makes this field's value even.
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,229,* @see DateTimeField#roundHalfEven
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,231,public void roundHalfEven() {
True,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/MutableDateTimeFieldProperty.java,232,iInstant.setMillis(getField().roundHalfEven(iInstant.getMillis()));
