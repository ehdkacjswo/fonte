is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,294,eturn iTimeField ? iField.isPrecise() : this.iZone.isFixed();
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,294,return iTimeField ? iField.isPrecise() : iField.isPrecise() && this.iZone.isFixed();
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,197,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,198,"assertEquals(false, BuddhistChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,199,"assertEquals(false, BuddhistChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,200,"assertEquals(false, BuddhistChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,201,"assertEquals(false, BuddhistChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,202,"assertEquals(true, BuddhistChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,203,"assertEquals(true, BuddhistChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,204,"assertEquals(true, BuddhistChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,205,"assertEquals(true, BuddhistChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,206,"assertEquals(true, BuddhistChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,207,"assertEquals(true, BuddhistChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,208,"assertEquals(true, BuddhistChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,199,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,200,"assertEquals(false, CopticChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,201,"assertEquals(false, CopticChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,202,"assertEquals(false, CopticChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,203,"assertEquals(false, CopticChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,204,"assertEquals(true, CopticChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,205,"assertEquals(true, CopticChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,206,"assertEquals(true, CopticChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,207,"assertEquals(true, CopticChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,208,"assertEquals(true, CopticChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,209,"assertEquals(true, CopticChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,210,"assertEquals(true, CopticChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,199,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,200,"assertEquals(false, EthiopicChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,201,"assertEquals(false, EthiopicChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,202,"assertEquals(false, EthiopicChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,203,"assertEquals(false, EthiopicChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,204,"assertEquals(true, EthiopicChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,205,"assertEquals(true, EthiopicChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,206,"assertEquals(true, EthiopicChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,207,"assertEquals(true, EthiopicChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,208,"assertEquals(true, EthiopicChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,209,"assertEquals(true, EthiopicChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java,210,"assertEquals(true, EthiopicChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,247,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,248,"assertEquals(false, GJChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,249,"assertEquals(false, GJChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,250,"assertEquals(false, GJChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,251,"assertEquals(false, GJChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,252,"assertEquals(true, GJChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,253,"assertEquals(true, GJChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,254,"assertEquals(true, GJChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,255,"assertEquals(true, GJChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,256,"assertEquals(true, GJChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,257,"assertEquals(true, GJChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,258,"assertEquals(true, GJChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,204,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,205,"assertEquals(false, GregorianChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,206,"assertEquals(false, GregorianChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,207,"assertEquals(false, GregorianChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,208,"assertEquals(false, GregorianChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,209,"assertEquals(true, GregorianChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,210,"assertEquals(true, GregorianChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,211,"assertEquals(true, GregorianChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,212,"assertEquals(true, GregorianChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,213,"assertEquals(true, GregorianChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,214,"assertEquals(true, GregorianChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,215,"assertEquals(true, GregorianChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,194,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,195,"assertEquals(false, ISOChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,196,"assertEquals(false, ISOChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,197,"assertEquals(false, ISOChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,198,"assertEquals(false, ISOChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,199,"assertEquals(true, ISOChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,200,"assertEquals(true, ISOChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,201,"assertEquals(true, ISOChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,202,"assertEquals(true, ISOChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,203,"assertEquals(true, ISOChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,204,"assertEquals(true, ISOChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,205,"assertEquals(true, ISOChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,207,DateTimeZone offset = DateTimeZone.forOffsetHours(1);
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,208,"assertEquals(false, ISOChronology.getInstance(offset).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,209,"assertEquals(false, ISOChronology.getInstance(offset).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,210,"assertEquals(false, ISOChronology.getInstance(offset).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,211,"assertEquals(false, ISOChronology.getInstance(offset).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,212,"assertEquals(true, ISOChronology.getInstance(offset).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,213,"assertEquals(true, ISOChronology.getInstance(offset).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,214,"assertEquals(true, ISOChronology.getInstance(offset).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,215,"assertEquals(true, ISOChronology.getInstance(offset).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,216,"assertEquals(true, ISOChronology.getInstance(offset).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,217,"assertEquals(true, ISOChronology.getInstance(offset).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,218,"assertEquals(true, ISOChronology.getInstance(offset).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,196,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,197,"assertEquals(false, IslamicChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,198,"assertEquals(false, IslamicChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,199,"assertEquals(false, IslamicChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,200,"assertEquals(false, IslamicChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,201,"assertEquals(true, IslamicChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,202,"assertEquals(true, IslamicChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,203,"assertEquals(true, IslamicChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,204,"assertEquals(true, IslamicChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,205,"assertEquals(true, IslamicChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,206,"assertEquals(true, IslamicChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java,207,"assertEquals(true, IslamicChronology.getInstance(gmt).millis().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,201,"DateTimeZone gmt = DateTimeZone.forID(""Etc/GMT"");"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,202,"assertEquals(false, JulianChronology.getInstance(gmt).centuries().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,203,"assertEquals(false, JulianChronology.getInstance(gmt).years().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,204,"assertEquals(false, JulianChronology.getInstance(gmt).weekyears().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,205,"assertEquals(false, JulianChronology.getInstance(gmt).months().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,206,"assertEquals(true, JulianChronology.getInstance(gmt).weeks().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,207,"assertEquals(true, JulianChronology.getInstance(gmt).days().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,208,"assertEquals(true, JulianChronology.getInstance(gmt).halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,209,"assertEquals(true, JulianChronology.getInstance(gmt).hours().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,210,"assertEquals(true, JulianChronology.getInstance(gmt).minutes().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,211,"assertEquals(true, JulianChronology.getInstance(gmt).seconds().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,212,"assertEquals(true, JulianChronology.getInstance(gmt).millis().isPrecise());"
