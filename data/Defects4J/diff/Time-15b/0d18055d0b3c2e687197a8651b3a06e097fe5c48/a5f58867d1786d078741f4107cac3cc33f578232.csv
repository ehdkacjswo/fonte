is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,81," Get the name of the field, intended for debugging purposes only. By"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,82," convention, names follow a pattern of ""dddOfRrr"", where ""ddd"" represents"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,83," the (singular) duration field name and ""Rrr"" represents the (singular)"
False,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,84," range duration field name. If the range field is not applicable, then"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,81,* Get the name of the field.
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,82,* <p>
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,83,"* By convention, names follow a pattern of ""dddOfRrr"", where ""ddd"" represents"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,84,"* the (singular) duration unit field name and ""Rrr"" represents the (singular)"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,85,"* duration range field name. If the range field is not applicable, then"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,454,ublic DurationFieldType getUnitDurationType() {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,454,public DurationFieldType getDurationType() {
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,71," Get the name of the field, intended for debugging purposes only. By"
False,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,72," convention, names are plural."
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,71,* Get the type of the field.
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,73,* @return field type
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,75,public abstract DurationFieldType getType();
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,78,* Get the name of the field.
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,79,* <p>
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,80,"* By convention, names are plural."
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,571,"eturn UnsupportedDurationField.getInstance(""years"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,571,return UnsupportedDurationField.getInstance(DurationFieldType.years());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,580,"eturn UnsupportedDurationField.getInstance(""months"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,580,return UnsupportedDurationField.getInstance(DurationFieldType.months());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,589,"eturn UnsupportedDurationField.getInstance(""weeks"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,589,return UnsupportedDurationField.getInstance(DurationFieldType.weeks());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,598,"eturn UnsupportedDurationField.getInstance(""days"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,598,return UnsupportedDurationField.getInstance(DurationFieldType.days());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,607,"eturn UnsupportedDurationField.getInstance(""hours"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,607,return UnsupportedDurationField.getInstance(DurationFieldType.hours());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,616,"eturn UnsupportedDurationField.getInstance(""minutes"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,616,return UnsupportedDurationField.getInstance(DurationFieldType.minutes());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,625,"eturn UnsupportedDurationField.getInstance(""seconds"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,625,return UnsupportedDurationField.getInstance(DurationFieldType.seconds());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,634,"eturn UnsupportedDurationField.getInstance(""millis"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,634,return UnsupportedDurationField.getInstance(DurationFieldType.millis());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1092,"Years = new ScaledDurationField(chrono.days(), ""PreciseYears"", 365);"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1092,"iYears = new ScaledDurationField(chrono.days(), DurationFieldType.years(), 365);"
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1154,"Months = new ScaledDurationField(chrono.days(), ""PreciseMonths"", 30);"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1154,"iMonths = new ScaledDurationField(chrono.days(), DurationFieldType.months(), 30);"
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1257,"eturn UnsupportedDurationField.getInstance(""years"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1257,return UnsupportedDurationField.getInstance(DurationFieldType.years());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1264,"eturn UnsupportedDurationField.getInstance(""months"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1264,return UnsupportedDurationField.getInstance(DurationFieldType.months());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1271,"eturn UnsupportedDurationField.getInstance(""weeks"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1271,return UnsupportedDurationField.getInstance(DurationFieldType.weeks());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1278,"eturn UnsupportedDurationField.getInstance(""days"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1278,return UnsupportedDurationField.getInstance(DurationFieldType.days());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1285,"eturn UnsupportedDurationField.getInstance(""hours"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1285,return UnsupportedDurationField.getInstance(DurationFieldType.hours());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1292,"eturn UnsupportedDurationField.getInstance(""minutes"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1292,return UnsupportedDurationField.getInstance(DurationFieldType.minutes());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1299,"eturn UnsupportedDurationField.getInstance(""seconds"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1299,return UnsupportedDurationField.getInstance(DurationFieldType.seconds());
False,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1306,"eturn UnsupportedDurationField.getInstance(""millis"");"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,1306,return UnsupportedDurationField.getInstance(DurationFieldType.millis());
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,63,import org.joda.time.DurationFieldType;
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,304,* Get the field from the type.
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,305,* <p>
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,306,* This method obtains the <code>DurationField</code> for the <code>DurationFieldType</code>.
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,307,* It is essentially a generic way of calling one of the field methods.
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,309,"* @param type  a field type, usually obtained from DurationFieldType"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,310,* @return the chronology field
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,311,* @throws IllegalArgumentException if the field is null
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,313,public DurationField getField(DurationFieldType type) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,314,if (type == DurationFieldType.millis()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,315,return millis();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,316,} else if (type == DurationFieldType.seconds()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,317,return seconds();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,318,} else if (type == DurationFieldType.minutes()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,319,return minutes();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,320,} else if (type == DurationFieldType.hours()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,321,return hours();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,322,} else if (type == DurationFieldType.halfdays()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,323,return halfdays();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,324,} else if (type == DurationFieldType.days()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,325,return days();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,326,} else if (type == DurationFieldType.weeks()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,327,return weeks();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,328,} else if (type == DurationFieldType.weekyears()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,329,return weekyears();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,330,} else if (type == DurationFieldType.months()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,331,return months();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,332,} else if (type == DurationFieldType.years()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,333,return years();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,334,} else if (type == DurationFieldType.centuries()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,335,return centuries();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,336,} else if (type == DurationFieldType.eras()) {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,337,return eras();
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,338,} else {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,339,"throw new IllegalArgumentException(""Unrecognised field: "" + type);"
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,309,"eturn UnsupportedDurationField.getInstance(""millis"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,351,return UnsupportedDurationField.getInstance(DurationFieldType.millis());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,338,"eturn UnsupportedDurationField.getInstance(""seconds"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,380,return UnsupportedDurationField.getInstance(DurationFieldType.seconds());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,367,"eturn UnsupportedDurationField.getInstance(""minutes"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,409,return UnsupportedDurationField.getInstance(DurationFieldType.minutes());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,396,"eturn UnsupportedDurationField.getInstance(""hours"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,438,return UnsupportedDurationField.getInstance(DurationFieldType.hours());
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,460,* Get the halfdays duration field for this chronology.
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,462,* @return DurationField or UnsupportedDurationField if unsupported
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,464,public DurationField halfdays() {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,465,return UnsupportedDurationField.getInstance(DurationFieldType.halfdays());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,441,eturn UnsupportedDateTimeField.getInstance
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,442,"DateTimeFieldType.halfdayOfDay(), UnsupportedDurationField.getInstance(""halfdays""));"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,492,"return UnsupportedDateTimeField.getInstance(DateTimeFieldType.halfdayOfDay(), halfdays());"
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,453,"eturn UnsupportedDurationField.getInstance(""days"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,503,return UnsupportedDurationField.getInstance(DurationFieldType.days());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,495,"eturn UnsupportedDurationField.getInstance(""weeks"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,545,return UnsupportedDurationField.getInstance(DurationFieldType.weeks());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,513,"eturn UnsupportedDurationField.getInstance(""weekyears"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,563,return UnsupportedDurationField.getInstance(DurationFieldType.weekyears());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,533,"eturn UnsupportedDurationField.getInstance(""months"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,583,return UnsupportedDurationField.getInstance(DurationFieldType.months());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,553,"eturn UnsupportedDurationField.getInstance(""years"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,603,return UnsupportedDurationField.getInstance(DurationFieldType.years());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,589,"eturn UnsupportedDurationField.getInstance(""centuries"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,639,return UnsupportedDurationField.getInstance(DurationFieldType.centuries());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,607,"eturn UnsupportedDurationField.getInstance(""eras"");"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,657,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,64,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,148,"""seconds"", DateTimeConstants.MILLIS_PER_SECOND);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,149,"(DurationFieldType.seconds(), DateTimeConstants.MILLIS_PER_SECOND);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,150,"""minutes"", DateTimeConstants.MILLIS_PER_MINUTE);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,151,"(DurationFieldType.minutes(), DateTimeConstants.MILLIS_PER_MINUTE);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,152,"""hours"", DateTimeConstants.MILLIS_PER_HOUR);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,153,"(DurationFieldType.hours(), DateTimeConstants.MILLIS_PER_HOUR);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,154,"""halfdays"", DateTimeConstants.MILLIS_PER_DAY / 2);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,155,"(DurationFieldType.halfdays(), DateTimeConstants.MILLIS_PER_DAY / 2);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,156,"""days"", DateTimeConstants.MILLIS_PER_DAY);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,157,"(DurationFieldType.days(), DateTimeConstants.MILLIS_PER_DAY);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,158,"""weeks"", DateTimeConstants.MILLIS_PER_WEEK);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,159,"(DurationFieldType.weeks(), DateTimeConstants.MILLIS_PER_WEEK);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,344,"ield, DateTimeFieldType.centuryOfEra(), ""centuries"", 100);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,345,"field, DateTimeFieldType.centuryOfEra(), 100);"
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,223,"ield, DateTimeFieldType.centuryOfEra(), ""centuries"", 100);"
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,223,"field, DateTimeFieldType.centuryOfEra(), 100);"
True,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,61,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,62,mport org.joda.time.field.UnsupportedDurationField;
True,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,64,import org.joda.time.field.UnsupportedDurationField;
False,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,155,"eturn UnsupportedDurationField.getInstance(""eras"");"
True,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BuddhistEraDateTimeField.java,156,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,64,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,112,"""months"", 30L * DateTimeConstants.MILLIS_PER_DAY);"
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,113,"(DurationFieldType.months(), 30L * DateTimeConstants.MILLIS_PER_DAY);"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,61,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,62,mport org.joda.time.field.UnsupportedDurationField;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,64,import org.joda.time.field.UnsupportedDurationField;
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,154,"eturn UnsupportedDurationField.getInstance(""eras"");"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,155,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
False,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,76,"uper(DateTimeFieldType.year(), ""years"", chronology.getAverageMillisPerYear());"
True,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticYearDateTimeField.java,76,"super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());"
False,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,1032,"uper(durationField, durationField.getName());"
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,1032,"super(durationField, durationField.getType());"
True,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,61,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,62,mport org.joda.time.field.UnsupportedDurationField;
True,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,64,import org.joda.time.field.UnsupportedDurationField;
False,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,165,"eturn UnsupportedDurationField.getInstance(""eras"");"
True,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java,166,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,87,"uper(DateTimeFieldType.monthOfYear(), ""months"", chronology.getAverageMillisPerMonth());"
True,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,87,"super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());"
False,JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java,84,"uper(DateTimeFieldType.weekyear(), ""weekyears"", chronology.getAverageMillisPerYear());"
True,JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekyearDateTimeField.java,84,"super(DateTimeFieldType.weekyear(), chronology.getAverageMillisPerYear());"
False,JodaTime/src/java/org/joda/time/chrono/GJYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJYearDateTimeField.java,82,"uper(DateTimeFieldType.year(), ""years"", chronology.getAverageMillisPerYear());"
True,JodaTime/src/java/org/joda/time/chrono/GJYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJYearDateTimeField.java,82,"super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());"
False,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,210,"SOYearOfEraDateTimeField.INSTANCE, DateTimeFieldType.centuryOfEra(), ""centuries"", 100);"
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,210,"ISOYearOfEraDateTimeField.INSTANCE, DateTimeFieldType.centuryOfEra(), 100);"
False,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,382,"uper(field, field.getName());"
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,382,"super(field, field.getType());"
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,278,uper(field.getName());
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,278,super(field.getType());
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,58,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,79,rivate final String iName;
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,80,private final DurationFieldType iType;
False,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,81,rotected BaseDurationField(String name) {
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,82,protected BaseDurationField(DurationFieldType type) {
False,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,83,f (name == null) {
False,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,84,"hrow new IllegalArgumentException(""The name must not be null"");"
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,84,if (type == null) {
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,85,"throw new IllegalArgumentException(""The type must not be null"");"
False,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,86,Name = name;
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,87,iType = type;
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,90,public final DurationFieldType getType() {
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,91,return iType;
False,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,90,eturn iName;
True,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,JodaTime/src/java/org/joda/time/field/BaseDurationField.java,95,return iType.getName();
True,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,57,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,82, @param name allow name to be overridden
True,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,83,* Constructor.
True,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,85,* @param field  the base field
True,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,86,* @param type  the type to actually use
False,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,84,"ublic DecoratedDurationField(DurationField field, String name) {"
False,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,85,uper(name);
True,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,88,"public DecoratedDurationField(DurationField field, DurationFieldType type) {"
True,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java,89,super(type);
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,58,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,76,** A desriptive name for the field */
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,77,rivate final String iName;
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,77,/** The field type */
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,78,private final DurationFieldType iType;
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,81,* Constructor.
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,83,* @param field  the base field
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,84, @param name allow name to be overridden
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,90,* Constructor.
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,92,* @param field  the base field
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,93,* @param type  the field type to use
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,86,"rotected DelegatedDurationField(DurationField field, String name) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,95,"protected DelegatedDurationField(DurationField field, DurationFieldType type) {"
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,96,super();
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,91,Name = name;
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,101,iType = (type == null ? field.getType() : type);
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,114,public DurationFieldType getType() {
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,115,return iType;
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,104,eturn (iName == null) ? iField.getName() : iName;
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,119,return iType.getName();
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,175,eturn (iName == null) ? iField.toString() :
False,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,176,"""DurationField["" + iName + ']');"
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,190,return (iType == null) ? iField.toString() :
True,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java,191,"(""DurationField["" + iType + ']');"
False,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,89," @param durationName  short, descriptive name, like ""centuries""."
False,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,94,"ateTimeFieldType type, String durationName, int divisor) {"
True,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,93,"DateTimeFieldType type, int divisor) {"
False,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,105,"DurationField = new ScaledDurationField(unitField, durationName, divisor);"
True,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,104,iDurationField = new ScaledDurationField(
True,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java,105,"unitField, type.getDurationType(), divisor);"
True,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,58,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,88," @param durationName  short, descriptive name, like ""months""."
False,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,91,"ublic ImpreciseDateTimeField(DateTimeFieldType type, String durationName, long unitMillis) {"
True,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,91,"public ImpreciseDateTimeField(DateTimeFieldType type, long unitMillis) {"
False,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,94,DurationField = new LinkedDurationField(durationName);
True,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,94,iDurationField = new LinkedDurationField(type.getDurationType());
False,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,188,inkedDurationField(String name) {
False,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,189,uper(name);
True,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,188,LinkedDurationField(DurationFieldType type) {
True,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java,189,super(type);
True,JodaTime/src/java/org/joda/time/field/MillisDurationField.java,JodaTime/src/java/org/joda/time/field/MillisDurationField.java,59,import org.joda.time.DurationFieldType;
True,JodaTime/src/java/org/joda/time/field/MillisDurationField.java,JodaTime/src/java/org/joda/time/field/MillisDurationField.java,85,public DurationFieldType getType() {
True,JodaTime/src/java/org/joda/time/field/MillisDurationField.java,JodaTime/src/java/org/joda/time/field/MillisDurationField.java,86,return DurationFieldType.millis();
True,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,56,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,75," @param name  the name of the field, like ""seconds"""
True,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,77,* @param type  the field type
False,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,78,"ublic PreciseDurationField(String name, long unitMillis) {"
False,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,79,uper(name);
True,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,80,"public PreciseDurationField(DurationFieldType type, long unitMillis) {"
True,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,JodaTime/src/java/org/joda/time/field/PreciseDurationField.java,81,super(type);
False,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,85," @param rangeName  short, descriptive name, like ""centuries""."
False,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,90,"ateTimeFieldType type, String rangeName, int divisor) {"
True,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,89,"DateTimeFieldType type, int divisor) {"
False,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,101,"RangeField = new ScaledDurationField(rangeField, rangeName, divisor);"
True,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,100,iRangeField = new ScaledDurationField(
True,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java,101,"rangeField, type.getRangeDurationType(), divisor);"
True,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,57,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,78," @param name  short, descriptive name, like ""centuries""."
True,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,79,* @param type  the type this field will actually use
False,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,82,"ublic ScaledDurationField(DurationField field, String name, int scalar) {"
False,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,83,"uper(field, name);"
True,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,83,"public ScaledDurationField(DurationField field, DurationFieldType type, int scalar) {"
True,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,JodaTime/src/java/org/joda/time/field/ScaledDurationField.java,84,"super(field, type);"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,84, @param name  the name to obtain
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,84,* @param type  the type to obtain
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,59,import org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,80, @param name  the name to obtain
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,81,* @param type  the type to obtain
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,83,ublic static synchronized UnsupportedDurationField getInstance(String name) {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,84,public static synchronized UnsupportedDurationField getInstance(DurationFieldType type) {
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,89,ield = (UnsupportedDurationField)cCache.get(name);
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,90,field = (UnsupportedDurationField) cCache.get(type);
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,92,ield = new UnsupportedDurationField(name);
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,93,"Cache.put(name, field);"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,93,field = new UnsupportedDurationField(type);
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,94,"cCache.put(type, field);"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,99,rivate final String iName;
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,100,private final DurationFieldType iType;
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,104, @param name  the name to use
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,105,* @param type  the type to use
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,106,rivate UnsupportedDurationField(String name) {
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,107,Name = name;
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,107,private UnsupportedDurationField(DurationFieldType type) {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,108,iType = type;
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,115,public final DurationFieldType getType() {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,116,return iType;
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,115,eturn iName;
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,120,return iType.getName();
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,297,"eturn ""UnsupportedDurationField"";"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,302,"return ""UnsupportedDurationField["" + getName() + ']';"
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,304,eturn getInstance(iName);
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,309,return getInstance(iType);
False,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,308,"eturn new UnsupportedOperationException(iName + "" field is unsupported"");"
True,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java,313,"return new UnsupportedOperationException(iType + "" field is unsupported"");"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,293,"chronoUTC.weekyear(), DateTimeFieldType.weekyearOfCentury(), ""centuries"", 100);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,293,"(chronoUTC.weekyear(), DateTimeFieldType.weekyearOfCentury(), 100);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,297,"chronoUTC.year(), DateTimeFieldType.yearOfCentury(), ""centuries"", 100);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,297,"(chronoUTC.year(), DateTimeFieldType.yearOfCentury(), 100);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,301,"chronoUTC.yearOfEra(), DateTimeFieldType.yearOfCentury(), ""centuries"", 100);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,301,"(chronoUTC.yearOfEra(), DateTimeFieldType.yearOfCentury(), 100);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,66,"ublic TestGJDateTimeField(DateTimeFieldType type, String duratioName,"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,67,"ong unitMillis, TestGJChronology chrono) {"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,68,"uper(type, duratioName, unitMillis);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,66,"public TestGJDateTimeField(DateTimeFieldType type, long unitMillis, TestGJChronology chrono) {"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java,67,"super(type, unitMillis);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,65,"uper(DateTimeFieldType.dayOfMonth(), ""days"", chrono.MILLIS_PER_DAY, chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java,65,"super(DateTimeFieldType.dayOfMonth(), chrono.MILLIS_PER_DAY, chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,65,"uper(DateTimeFieldType.dayOfWeek(), ""days"", chrono.MILLIS_PER_DAY, chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java,65,"super(DateTimeFieldType.dayOfWeek(), chrono.MILLIS_PER_DAY, chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,65,"uper(DateTimeFieldType.dayOfYear(), ""days"", chrono.MILLIS_PER_DAY, chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java,65,"super(DateTimeFieldType.dayOfYear(), chrono.MILLIS_PER_DAY, chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,65,"uper(DateTimeFieldType.monthOfYear(), ""months"", chrono.millisPerMonth(), chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java,65,"super(DateTimeFieldType.monthOfYear(), chrono.millisPerMonth(), chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,65,"uper(DateTimeFieldType.weekOfWeekyear(), ""weeks"","
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java,65,"super(DateTimeFieldType.weekOfWeekyear(),"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekyearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekyearField.java,65,"uper(DateTimeFieldType.weekyear(), ""weekyears"", chrono.millisPerYear(), chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekyearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekyearField.java,65,"super(DateTimeFieldType.weekyear(), chrono.millisPerYear(), chrono);"
False,JodaTime/src/test/org/joda/time/chrono/gj/TestGJYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJYearField.java,65,"uper(DateTimeFieldType.year(), ""years"", chrono.millisPerYear(), chrono);"
True,JodaTime/src/test/org/joda/time/chrono/gj/TestGJYearField.java,JodaTime/src/test/org/joda/time/chrono/gj/TestGJYearField.java,65,"super(DateTimeFieldType.year(), chrono.millisPerYear(), chrono);"
