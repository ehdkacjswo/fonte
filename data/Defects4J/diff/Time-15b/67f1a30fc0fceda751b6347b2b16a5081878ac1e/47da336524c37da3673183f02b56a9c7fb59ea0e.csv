is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,51,rivate final long iMillis;
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,51,private volatile long iMillis;
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,53,rivate final Chronology iChronology;
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,53,private volatile Chronology iChronology;
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,313, <p>
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,314," In version 2.0 and later, this method uses reflection. This is because the"
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,315, instance variable has been changed to be final to satisfy the Java Memory Model.
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,316, This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,321,"nstant = checkInstant(instant, iChronology);"
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,322,"utableHelper.setDateTimeMillis(this, instant);"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,317,"iMillis = checkInstant(instant, iChronology);"
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,330, <p>
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,331," In version 2.0 and later, this method uses reflection. This is because the"
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,332, instance variable has been changed to be final to satisfy the Java Memory Model.
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,333, This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,338,hronology = checkChronology(chronology);
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,339,"utableHelper.setDateTimeChrono(this, chronology);"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,329,iChronology = checkChronology(chronology);
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,53,rivate final long iMillis;
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,53,private volatile long iMillis;
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,121, <p>
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,122," In version 2.0 and later, this method uses reflection. This is because the"
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,123, instance variable has been changed to be final to satisfy the Java Memory Model.
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,124, This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,129,"utableHelper.setDurationMillis(this, duration);"
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,125,iMillis = duration;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,23,import org.joda.time.ReadWritableInterval;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,55,rivate final Chronology iChronology;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,56,private volatile Chronology iChronology;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,57,rivate final long iStartMillis;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,58,private volatile long iStartMillis;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,59,rivate final long iEndMillis;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,60,private volatile long iEndMillis;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,196,} else if (this instanceof ReadWritableInterval) {
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,197,"converter.setInto((ReadWritableInterval) this, interval, chrono);"
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,238, <p>
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,239," In version 2.0 and later, this method uses reflection. This is because the"
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,240, instance variable has been changed to be final to satisfy the Java Memory Model.
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,241, This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,250,"utableHelper.setInterval(this, startInstant, endInstant, DateTimeUtils.getChronology(chrono));"
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,249,iStartMillis = startInstant;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,250,iEndMillis = endInstant;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,251,iChronology = DateTimeUtils.getChronology(chrono);
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,53,rivate final int iPeriod;
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,53,private volatile int iPeriod;
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,172, <p>
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,173," In version 2.0 and later, this method uses reflection. This is because the"
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,174, instance variable has been changed to be final to satisfy the Java Memory Model.
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,175, This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,180,"utableHelper.setSingleFieldPeriodValue(this, value);"
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,176,iPeriod = value;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,2,  Copyright 2001-2011 Stephen Colebourne
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,4,"  Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,5,  you may not use this file except in compliance with the License.
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,6,  You may obtain a copy of the License at
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,10,"  Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,11,"  distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,12,"  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,13,  See the License for the specific language governing permissions and
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,14,  limitations under the License.
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,16,ackage org.joda.time.base;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,18,mport java.lang.reflect.Field;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,20,mport org.joda.time.Chronology;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,23, Helper to handle mutable classes that are hard to deal with now there is
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,24, the Java Memory Model.
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,26, @author Stephen Colebourne
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,27, @since 2.0
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,29,inal class MutableHelper {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,31,rivate static final Field DATE_TIME_MILLIS;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,32,rivate static final Field DATE_TIME_CHRONO;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,33,rivate static final Field DURATION_MILLIS;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,34,rivate static final Field SINGLE_FIELD_PERIOD;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,35,rivate static final Field INTERVAL_START;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,36,rivate static final Field INTERVAL_END;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,37,rivate static final Field INTERVAL_CHRONO;
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,38,tatic {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,39,ry {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,40,"ATE_TIME_MILLIS = BaseDateTime.class.getDeclaredField(""iMillis"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,41,ATE_TIME_MILLIS.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,42,"ATE_TIME_CHRONO = BaseDateTime.class.getDeclaredField(""iChronology"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,43,ATE_TIME_CHRONO.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,44,"URATION_MILLIS = BaseDuration.class.getDeclaredField(""iMillis"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,45,URATION_MILLIS.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,46,"INGLE_FIELD_PERIOD = BaseSingleFieldPeriod.class.getDeclaredField(""iPeriod"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,47,INGLE_FIELD_PERIOD.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,48,"NTERVAL_START = BaseInterval.class.getDeclaredField(""iStartMillis"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,49,NTERVAL_START.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,50,"NTERVAL_END = BaseInterval.class.getDeclaredField(""iEndMillis"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,51,NTERVAL_END.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,52,"NTERVAL_CHRONO = BaseInterval.class.getDeclaredField(""iChronology"");"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,53,NTERVAL_CHRONO.setAccessible(true);
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,55, catch (Exception ex) {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,56,"hrow new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,60,rivate MutableHelper() {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,63,"tatic void setDateTimeMillis(BaseDateTime target, long instant) {"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,64,ry {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,65,"ATE_TIME_MILLIS.set(target, instant);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,66, catch (Exception ex) {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,67,"hrow new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,71,"tatic void setDateTimeChrono(BaseDateTime target, Chronology chrono) {"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,72,ry {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,73,"ATE_TIME_CHRONO.set(target, chrono);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,74, catch (Exception ex) {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,75,"hrow new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,79,"tatic void setDurationMillis(BaseDuration target, long duration) {"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,80,ry {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,81,"URATION_MILLIS.set(target, duration);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,82, catch (Exception ex) {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,83,"hrow new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,87,"tatic void setSingleFieldPeriodValue(BaseSingleFieldPeriod target, int value) {"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,88,ry {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,89,"INGLE_FIELD_PERIOD.set(target, value);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,90, catch (Exception ex) {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,91,"hrow new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,95,"tatic void setInterval(BaseInterval target, long startMillis, long endMillis, Chronology chrono) {"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,96,ry {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,97,"NTERVAL_START.set(target, startMillis);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,98,"NTERVAL_END.set(target, endMillis);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,99,"NTERVAL_CHRONO.set(target, chrono);"
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,100, catch (Exception ex) {
False,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,101,"hrow new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
