is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,56,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,57,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,58,import org.joda.time.chrono.AbstractChronology;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,61,* A basic mock testing class for an unknown calendar.
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,63,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,65,class MockBadChronology extends AbstractChronology {
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,67,MockBadChronology() {
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,68,super();
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,71,public Chronology withZone(DateTimeZone zone) {
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,72,return null;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,75,public DateTimeZone getZone() {
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,76,return null;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,78,public Chronology withUTC() {
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,79,return null;
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,81,public String toString() {
True,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,JodaTime/src/test/org/joda/time/convert/MockBadChronology.java,82,return null;
False,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,64,ublic class MockUnknownCalendar extends Calendar {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,64,class MockUnknownCalendar extends Calendar {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,56,import java.util.Date;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,57,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,58,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,61,* A basic mock testing class for an unknown time zone.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,63,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,65,class MockUnknownTimeZone extends TimeZone {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,67,MockUnknownTimeZone() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,68,super();
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,71,public String getID() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,72,"return ""!!!"";"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,74,"public String getDisplayName(boolean daylight, int style, Locale locale) {"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,75,"return ""!!!"";"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,78,"public int getOffset(int era, int year, int month, int day, int dayOfWeek, int milliseconds) {"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,79,return 0;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,81,public void setRawOffset(int offsetMillis) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,83,public int getRawOffset() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,84,return 0;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,86,public boolean useDaylightTime() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,87,return false;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,89,public boolean inDaylightTime(Date date) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java,90,return false;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,166,cal = new GregorianCalendar(new MockUnknownTimeZone());
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,167,"assertEquals(GJChronology.getInstance(), CalendarConverter.INSTANCE.getChronology(cal));"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,66,import org.joda.time.MutableDuration;
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,162,public void testSetInto_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,163,MutableDuration m = new MutableDuration(DurationType.getMillisType());
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,164,"LongConverter.INSTANCE.setInto(m, new Long(123L));"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,165,"assertEquals(123L, m.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,67,import org.joda.time.MutableDuration;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,140,public void testSetInto_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,141,MutableDuration m = new MutableDuration(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,142,"ReadableDurationConverter.INSTANCE.setInto(m, new Duration(DurationType.getYearMonthType(), 1, 2, 0, 3, 0, 0, 0, 0));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,143,"assertEquals(1, m.getYears());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,144,"assertEquals(2, m.getMonths());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,145,"assertEquals(0, m.getWeeks());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,146,"assertEquals(3, m.getDays());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,147,"assertEquals(0, m.getHours());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,148,"assertEquals(0, m.getMinutes());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,149,"assertEquals(0, m.getSeconds());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,150,"assertEquals(0, m.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,152,"assertEquals(ISO_PARIS, ReadableInstantConverter.INSTANCE.getChronology(new DateTime(123L, new MockBadChronology()), PARIS));"
