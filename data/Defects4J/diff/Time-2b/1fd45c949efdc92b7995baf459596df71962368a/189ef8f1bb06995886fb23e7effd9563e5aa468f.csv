is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/field/TestAll.java,JodaTime/src/test/org/joda/time/field/TestAll.java,84,suite.addTest(TestPreciseDurationDateTimeField.suite());
True,JodaTime/src/test/org/joda/time/field/TestAll.java,JodaTime/src/test/org/joda/time/field/TestAll.java,85,suite.addTest(TestPreciseDateTimeField.suite());
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,254,/ TODO
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,254,BaseDateTimeField field = new MockBaseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,255,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,256,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,257,"int[] result = field.addWrapField(new TimeOfDay(), 2, values, 0);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,258,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,260,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,261,"expected = new int[] {10, 20, 59, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,262,"result = field.addWrapField(new TimeOfDay(), 2, values, 29);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,263,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,265,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,266,"expected = new int[] {10, 20, 0, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,267,"result = field.addWrapField(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,268,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,270,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,271,"expected = new int[] {10, 20, 1, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,272,"result = field.addWrapField(new TimeOfDay(), 2, values, 31);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,273,"assertEquals(true, Arrays.equals(result, expected));"
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,280,/ TODO
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,299,BaseDateTimeField field = new MockBaseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,300,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,301,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,302,"int[] result = field.set(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,303,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,305,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,306,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,307,"result = field.set(new TimeOfDay(), 2, values, 29);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,308,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,310,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,311,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,312,try {
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,313,"field.set(new TimeOfDay(), 2, values, 60);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,314,fail();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,315,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,316,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,318,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,319,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,320,try {
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,321,"field.set(new TimeOfDay(), 2, values, -1);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,322,fail();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,323,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,324,"assertEquals(true, Arrays.equals(values, expected));"
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,285,"ssertEquals(0, field.set(0L, ""0"", null));"
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,286,"ssertEquals(29, field.set(0L, ""29"", Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,329,"assertEquals(1000, field.set(0L, ""0"", null));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,330,"assertEquals(1029, field.set(0L, ""29"", Locale.ENGLISH));"
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,291,"ssertEquals(0, field.set(0L, ""0""));"
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,292,"ssertEquals(29, field.set(0L, ""29""));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,335,"assertEquals(1000, field.set(0L, ""0""));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,336,"assertEquals(1029, field.set(0L, ""29""));"
False,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,296,/ TODO
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,340,BaseDateTimeField field = new MockBaseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,341,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,342,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,343,"int[] result = field.set(new TimeOfDay(), 2, values, ""30"", null);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,344,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,346,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,347,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,348,"result = field.set(new TimeOfDay(), 2, values, ""29"", Locale.ENGLISH);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,349,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,351,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,352,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,353,try {
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,354,"field.set(new TimeOfDay(), 2, values, ""60"", null);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,355,fail();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,356,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,357,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,359,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,360,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,361,try {
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,362,"field.set(new TimeOfDay(), 2, values, ""-1"", null);"
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,363,fail();
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,364,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java,365,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,10,* are met:
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,54,package org.joda.time.field;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,56,import java.util.Arrays;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,57,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,59,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,60,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,62,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,63,import org.joda.time.DateTimeFieldType;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,64,import org.joda.time.DurationField;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,65,import org.joda.time.DurationFieldType;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,66,import org.joda.time.TimeOfDay;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,69,* This class is a Junit unit test for PreciseDateTimeField.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,71,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,73,public class TestPreciseDateTimeField extends TestCase {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,75,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,76,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,79,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,80,return new TestSuite(TestPreciseDateTimeField.class);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,83,public TestPreciseDateTimeField(String name) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,84,super(name);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,87,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,90,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,94,public void test_constructor() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,95,BaseDateTimeField field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,96,"DateTimeFieldType.secondOfMinute(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,97,"Chronology.getISOUTC().millis(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,98,Chronology.getISOUTC().hours()
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,100,"assertEquals(DateTimeFieldType.secondOfMinute(), field.getType());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,101,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,102,"field = new PreciseDateTimeField(null, null, null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,103,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,104,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,105,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,106,field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,107,"DateTimeFieldType.minuteOfHour(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,108,"new MockImpreciseDurationField(DurationFieldType.minutes()),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,109,Chronology.getISOUTC().hours());
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,110,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,111,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,112,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,113,field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,114,"DateTimeFieldType.minuteOfHour(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,115,"Chronology.getISOUTC().hours(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,116,new MockImpreciseDurationField(DurationFieldType.minutes()));
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,117,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,118,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,119,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,120,field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,121,"DateTimeFieldType.minuteOfHour(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,122,"Chronology.getISOUTC().hours(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,123,Chronology.getISOUTC().hours());
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,124,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,125,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,126,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,127,field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,128,"DateTimeFieldType.minuteOfHour(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,129,"new MockZeroDurationField(DurationFieldType.minutes()),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,130,Chronology.getISOUTC().hours());
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,131,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,132,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,135,public void test_getType() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,136,BaseDateTimeField field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,137,"DateTimeFieldType.secondOfDay(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,138,"Chronology.getISOUTC().millis(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,139,Chronology.getISOUTC().hours()
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,141,"assertEquals(DateTimeFieldType.secondOfDay(), field.getType());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,144,public void test_getName() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,145,BaseDateTimeField field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,146,"DateTimeFieldType.secondOfDay(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,147,"Chronology.getISOUTC().millis(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,148,Chronology.getISOUTC().hours()
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,150,"assertEquals(""secondOfDay"", field.getName());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,153,public void test_toString() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,154,BaseDateTimeField field = new PreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,155,"DateTimeFieldType.secondOfDay(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,156,"Chronology.getISOUTC().millis(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,157,Chronology.getISOUTC().hours()
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,159,"assertEquals(""DateTimeField[secondOfDay]"", field.toString());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,162,public void test_isSupported() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,163,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,164,"assertEquals(true, field.isSupported());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,167,public void test_get() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,168,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,169,"assertEquals(0, field.get(0));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,170,"assertEquals(1, field.get(60));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,171,"assertEquals(2, field.get(123));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,175,public void test_getAsText_long_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,176,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,177,"assertEquals(""29"", field.getAsText(60L * 29, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,178,"assertEquals(""29"", field.getAsText(60L * 29, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,181,public void test_getAsText_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,182,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,183,"assertEquals(""29"", field.getAsText(60L * 29));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,186,public void test_getAsText_RP_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,187,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,188,"assertEquals(""20"", field.getAsText(new TimeOfDay(12, 30, 40, 50), 20, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,189,"assertEquals(""20"", field.getAsText(new TimeOfDay(12, 30, 40, 50), 20, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,192,public void test_getAsText_RP_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,193,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,194,"assertEquals(""40"", field.getAsText(new TimeOfDay(12, 30, 40, 50), Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,195,"assertEquals(""40"", field.getAsText(new TimeOfDay(12, 30, 40, 50), null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,198,public void test_getAsText_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,199,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,200,"assertEquals(""80"", field.getAsText(80, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,201,"assertEquals(""80"", field.getAsText(80, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,205,public void test_getAsShortText_long_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,206,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,207,"assertEquals(""29"", field.getAsShortText(60L * 29, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,208,"assertEquals(""29"", field.getAsShortText(60L * 29, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,211,public void test_getAsShortText_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,212,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,213,"assertEquals(""29"", field.getAsShortText(60L * 29));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,216,public void test_getAsShortText_RP_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,217,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,218,"assertEquals(""20"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), 20, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,219,"assertEquals(""20"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), 20, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,222,public void test_getAsShortText_RP_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,223,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,224,"assertEquals(""40"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,225,"assertEquals(""40"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,228,public void test_getAsShortText_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,229,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,230,"assertEquals(""80"", field.getAsShortText(80, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,231,"assertEquals(""80"", field.getAsShortText(80, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,235,public void test_add_long_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,236,MockCountingDurationField.add_int = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,237,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,238,"assertEquals(61, field.add(1L, 1));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,239,"assertEquals(1, MockCountingDurationField.add_int);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,242,public void test_add_long_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,243,MockCountingDurationField.add_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,244,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,245,"assertEquals(61, field.add(1L, 1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,246,"assertEquals(1, MockCountingDurationField.add_long);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,249,public void test_add_RP_int_intarray_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,250,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,251,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,252,BaseDateTimeField field = new MockStandardDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,253,"int[] result = field.add(new TimeOfDay(), 2, values, 0);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,254,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,256,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,257,"expected = new int[] {10, 20, 31, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,258,"result = field.add(new TimeOfDay(), 2, values, 1);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,259,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,261,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,262,"expected = new int[] {10, 21, 0, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,263,"result = field.add(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,264,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,266,"values = new int[] {23, 59, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,267,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,268,"field.add(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,269,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,270,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,272,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,273,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,274,"result = field.add(new TimeOfDay(), 2, values, -1);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,275,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,277,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,278,"expected = new int[] {10, 19, 59, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,279,"result = field.add(new TimeOfDay(), 2, values, -31);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,280,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,282,"values = new int[] {0, 0, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,283,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,284,"field.add(new TimeOfDay(), 2, values, -31);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,285,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,286,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,290,public void test_addWrapField_long_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,291,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,292,"assertEquals(29 * 60L, field.addWrapField(60L * 29, 0));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,293,"assertEquals(59 * 60L, field.addWrapField(60L * 29, 30));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,294,"assertEquals(0 * 60L, field.addWrapField(60L * 29, 31));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,297,public void test_addWrapField_RP_int_intarray_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,298,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,299,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,300,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,301,"int[] result = field.addWrapField(new TimeOfDay(), 2, values, 0);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,302,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,304,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,305,"expected = new int[] {10, 20, 59, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,306,"result = field.addWrapField(new TimeOfDay(), 2, values, 29);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,307,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,309,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,310,"expected = new int[] {10, 20, 0, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,311,"result = field.addWrapField(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,312,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,314,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,315,"expected = new int[] {10, 20, 1, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,316,"result = field.addWrapField(new TimeOfDay(), 2, values, 31);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,317,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,321,public void test_getDifference_long_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,322,MockCountingDurationField.difference_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,323,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,324,"assertEquals(30, field.getDifference(0L, 0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,325,"assertEquals(1, MockCountingDurationField.difference_long);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,328,public void test_getDifferenceAsLong_long_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,329,MockCountingDurationField.difference_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,330,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,331,"assertEquals(30, field.getDifferenceAsLong(0L, 0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,332,"assertEquals(1, MockCountingDurationField.difference_long);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,336,public void test_set_long_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,337,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,338,"assertEquals(0, field.set(120L, 0));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,339,"assertEquals(29 * 60, field.set(120L, 29));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,342,public void test_set_RP_int_intarray_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,343,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,344,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,345,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,346,"int[] result = field.set(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,347,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,349,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,350,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,351,"result = field.set(new TimeOfDay(), 2, values, 29);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,352,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,354,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,355,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,356,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,357,"field.set(new TimeOfDay(), 2, values, 60);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,358,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,359,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,360,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,362,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,363,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,364,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,365,"field.set(new TimeOfDay(), 2, values, -1);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,366,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,367,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,368,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,371,public void test_set_long_String_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,372,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,373,"assertEquals(0, field.set(0L, ""0"", null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,374,"assertEquals(29 * 60, field.set(0L, ""29"", Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,377,public void test_set_long_String() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,378,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,379,"assertEquals(0, field.set(0L, ""0""));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,380,"assertEquals(29 * 60, field.set(0L, ""29""));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,383,public void test_set_RP_int_intarray_String_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,384,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,385,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,386,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,387,"int[] result = field.set(new TimeOfDay(), 2, values, ""30"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,388,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,390,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,391,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,392,"result = field.set(new TimeOfDay(), 2, values, ""29"", Locale.ENGLISH);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,393,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,395,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,396,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,397,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,398,"field.set(new TimeOfDay(), 2, values, ""60"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,399,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,400,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,401,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,403,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,404,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,405,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,406,"field.set(new TimeOfDay(), 2, values, ""-1"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,407,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,408,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,409,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,412,public void test_convertText() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,413,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,414,"assertEquals(0, field.convertText(""0"", null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,415,"assertEquals(29, field.convertText(""29"", null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,416,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,417,"field.convertText(""2A"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,418,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,419,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,420,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,421,"field.convertText(null, null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,422,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,423,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,427,//    public abstract DurationField getDurationField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,429,//    public abstract DurationField getRangeDurationField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,431,public void test_isLeap_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,432,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,433,"assertEquals(false, field.isLeap(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,436,public void test_getLeapAmount_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,437,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,438,"assertEquals(0, field.getLeapAmount(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,441,public void test_getLeapDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,442,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,443,"assertEquals(null, field.getLeapDurationField());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,447,public void test_getMinimumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,448,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,449,"assertEquals(0, field.getMinimumValue());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,452,public void test_getMinimumValue_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,453,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,454,"assertEquals(0, field.getMinimumValue(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,457,public void test_getMinimumValue_RP() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,458,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,459,"assertEquals(0, field.getMinimumValue(new TimeOfDay()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,462,public void test_getMinimumValue_RP_intarray() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,463,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,464,"assertEquals(0, field.getMinimumValue(new TimeOfDay(), new int[4]));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,467,public void test_getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,468,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,469,"assertEquals(59, field.getMaximumValue());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,472,public void test_getMaximumValue_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,473,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,474,"assertEquals(59, field.getMaximumValue(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,477,public void test_getMaximumValue_RP() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,478,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,479,"assertEquals(59, field.getMaximumValue(new TimeOfDay()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,482,public void test_getMaximumValue_RP_intarray() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,483,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,484,"assertEquals(59, field.getMaximumValue(new TimeOfDay(), new int[4]));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,488,public void test_getMaximumTextLength_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,489,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,490,"assertEquals(2, field.getMaximumTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,493,public void test_getMaximumShortTextLength_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,494,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,495,"assertEquals(2, field.getMaximumShortTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,499,public void test_roundFloor_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,500,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,501,"assertEquals(-120L, field.roundFloor(-61L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,502,"assertEquals(-60L, field.roundFloor(-60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,503,"assertEquals(-60L, field.roundFloor(-59L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,504,"assertEquals(-60L, field.roundFloor(-1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,505,"assertEquals(0L, field.roundFloor(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,506,"assertEquals(0L, field.roundFloor(1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,507,"assertEquals(0L, field.roundFloor(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,508,"assertEquals(0L, field.roundFloor(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,509,"assertEquals(0L, field.roundFloor(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,510,"assertEquals(60L, field.roundFloor(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,513,public void test_roundCeiling_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,514,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,515,"assertEquals(-60L, field.roundCeiling(-61L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,516,"assertEquals(-60L, field.roundCeiling(-60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,517,"assertEquals(0L, field.roundCeiling(-59L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,518,"assertEquals(0L, field.roundCeiling(-1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,519,"assertEquals(0L, field.roundCeiling(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,520,"assertEquals(60L, field.roundCeiling(1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,521,"assertEquals(60L, field.roundCeiling(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,522,"assertEquals(60L, field.roundCeiling(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,523,"assertEquals(60L, field.roundCeiling(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,524,"assertEquals(60L, field.roundCeiling(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,527,public void test_roundHalfFloor_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,528,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,529,"assertEquals(0L, field.roundHalfFloor(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,530,"assertEquals(0L, field.roundHalfFloor(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,531,"assertEquals(0L, field.roundHalfFloor(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,532,"assertEquals(60L, field.roundHalfFloor(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,533,"assertEquals(60L, field.roundHalfFloor(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,536,public void test_roundHalfCeiling_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,537,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,538,"assertEquals(0L, field.roundHalfCeiling(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,539,"assertEquals(0L, field.roundHalfCeiling(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,540,"assertEquals(60L, field.roundHalfCeiling(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,541,"assertEquals(60L, field.roundHalfCeiling(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,542,"assertEquals(60L, field.roundHalfCeiling(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,545,public void test_roundHalfEven_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,546,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,547,"assertEquals(0L, field.roundHalfEven(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,548,"assertEquals(0L, field.roundHalfEven(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,549,"assertEquals(0L, field.roundHalfEven(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,550,"assertEquals(60L, field.roundHalfEven(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,551,"assertEquals(60L, field.roundHalfEven(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,552,"assertEquals(60L, field.roundHalfEven(89L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,553,"assertEquals(120L, field.roundHalfEven(90L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,554,"assertEquals(120L, field.roundHalfEven(91L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,557,public void test_remainder_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,558,BaseDateTimeField field = new MockPreciseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,559,"assertEquals(0L, field.remainder(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,560,"assertEquals(29L, field.remainder(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,561,"assertEquals(30L, field.remainder(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,562,"assertEquals(31L, field.remainder(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,563,"assertEquals(0L, field.remainder(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,567,static class MockPreciseDateTimeField extends PreciseDateTimeField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,568,protected MockPreciseDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,569,"super(DateTimeFieldType.secondOfMinute(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,570,"new MockCountingDurationField(DurationFieldType.seconds(), 60),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,571,"new MockCountingDurationField(DurationFieldType.minutes(), 60 * 60));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,573,protected MockPreciseDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,574,"DateTimeFieldType type, DurationField dur, DurationField range) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,575,"super(type, dur, range);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,579,static class MockStandardDateTimeField extends MockPreciseDateTimeField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,580,protected MockStandardDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,581,super();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,583,public DurationField getDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,584,return Chronology.getISOUTC().seconds();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,586,public DurationField getRangeDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,587,return Chronology.getISOUTC().minutes();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,592,static class MockCountingDurationField extends BaseDurationField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,593,static int add_int = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,594,static int add_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,595,static int difference_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,596,int unit;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,598,"protected MockCountingDurationField(DurationFieldType type, int unit) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,599,super(type);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,600,this.unit = unit;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,602,public boolean isPrecise() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,603,return true;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,605,public long getUnitMillis() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,606,return unit;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,608,"public long getValueAsLong(long duration, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,609,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,611,"public long getMillis(int value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,612,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,614,"public long getMillis(long value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,615,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,617,"public long add(long instant, int value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,618,add_int++;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,619,return instant + (value * 60L);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,621,"public long add(long instant, long value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,622,add_long++;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,623,return instant + (value * 60L);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,625,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,626,difference_long++;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,627,return 30;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,632,static class MockZeroDurationField extends BaseDurationField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,633,protected MockZeroDurationField(DurationFieldType type) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,634,super(type);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,636,public boolean isPrecise() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,637,return true;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,639,public long getUnitMillis() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,640,return 0;  // this is zero
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,642,"public long getValueAsLong(long duration, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,643,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,645,"public long getMillis(int value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,646,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,648,"public long getMillis(long value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,649,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,651,"public long add(long instant, int value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,652,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,654,"public long add(long instant, long value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,655,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,657,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,658,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,663,static class MockImpreciseDurationField extends BaseDurationField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,664,protected MockImpreciseDurationField(DurationFieldType type) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,665,super(type);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,667,public boolean isPrecise() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,668,return false;  // this is false
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,670,public long getUnitMillis() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,671,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,673,"public long getValueAsLong(long duration, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,674,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,676,"public long getMillis(int value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,677,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,679,"public long getMillis(long value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,680,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,682,"public long add(long instant, int value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,683,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,685,"public long add(long instant, long value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,686,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,688,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java,689,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,10,* are met:
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,54,package org.joda.time.field;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,56,import java.util.Arrays;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,57,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,59,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,60,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,62,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,63,import org.joda.time.DateTimeFieldType;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,64,import org.joda.time.DurationField;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,65,import org.joda.time.DurationFieldType;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,66,import org.joda.time.TimeOfDay;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,69,* This class is a Junit unit test for PreciseDurationDateTimeField.
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,71,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,73,public class TestPreciseDurationDateTimeField extends TestCase {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,75,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,76,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,79,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,80,return new TestSuite(TestPreciseDurationDateTimeField.class);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,83,public TestPreciseDurationDateTimeField(String name) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,84,super(name);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,87,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,90,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,94,public void test_constructor() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,95,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,96,"assertEquals(DateTimeFieldType.secondOfMinute(), field.getType());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,97,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,98,"field = new MockPreciseDurationDateTimeField(null, null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,99,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,100,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,101,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,102,field = new MockPreciseDurationDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,103,"DateTimeFieldType.minuteOfHour(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,104,new MockImpreciseDurationField(DurationFieldType.minutes()));
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,105,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,106,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,107,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,108,field = new MockPreciseDurationDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,109,"DateTimeFieldType.minuteOfHour(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,110,new MockZeroDurationField(DurationFieldType.minutes()));
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,111,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,112,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,115,public void test_getType() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,116,BaseDateTimeField field = new MockPreciseDurationDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,117,"DateTimeFieldType.secondOfDay(), new MockCountingDurationField(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,118,"assertEquals(DateTimeFieldType.secondOfDay(), field.getType());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,121,public void test_getName() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,122,BaseDateTimeField field = new MockPreciseDurationDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,123,"DateTimeFieldType.secondOfDay(), new MockCountingDurationField(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,124,"assertEquals(""secondOfDay"", field.getName());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,127,public void test_toString() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,128,BaseDateTimeField field = new MockPreciseDurationDateTimeField(
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,129,"DateTimeFieldType.secondOfDay(), new MockCountingDurationField(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,130,"assertEquals(""DateTimeField[secondOfDay]"", field.toString());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,133,public void test_isSupported() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,134,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,135,"assertEquals(true, field.isSupported());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,138,public void test_get() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,139,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,140,"assertEquals(0, field.get(0));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,141,"assertEquals(1, field.get(60));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,142,"assertEquals(2, field.get(123));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,146,public void test_getAsText_long_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,147,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,148,"assertEquals(""29"", field.getAsText(60L * 29, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,149,"assertEquals(""29"", field.getAsText(60L * 29, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,152,public void test_getAsText_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,153,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,154,"assertEquals(""29"", field.getAsText(60L * 29));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,157,public void test_getAsText_RP_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,158,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,159,"assertEquals(""20"", field.getAsText(new TimeOfDay(12, 30, 40, 50), 20, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,160,"assertEquals(""20"", field.getAsText(new TimeOfDay(12, 30, 40, 50), 20, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,163,public void test_getAsText_RP_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,164,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,165,"assertEquals(""40"", field.getAsText(new TimeOfDay(12, 30, 40, 50), Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,166,"assertEquals(""40"", field.getAsText(new TimeOfDay(12, 30, 40, 50), null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,169,public void test_getAsText_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,170,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,171,"assertEquals(""80"", field.getAsText(80, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,172,"assertEquals(""80"", field.getAsText(80, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,176,public void test_getAsShortText_long_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,177,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,178,"assertEquals(""29"", field.getAsShortText(60L * 29, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,179,"assertEquals(""29"", field.getAsShortText(60L * 29, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,182,public void test_getAsShortText_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,183,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,184,"assertEquals(""29"", field.getAsShortText(60L * 29));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,187,public void test_getAsShortText_RP_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,188,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,189,"assertEquals(""20"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), 20, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,190,"assertEquals(""20"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), 20, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,193,public void test_getAsShortText_RP_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,194,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,195,"assertEquals(""40"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,196,"assertEquals(""40"", field.getAsShortText(new TimeOfDay(12, 30, 40, 50), null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,199,public void test_getAsShortText_int_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,200,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,201,"assertEquals(""80"", field.getAsShortText(80, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,202,"assertEquals(""80"", field.getAsShortText(80, null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,206,public void test_add_long_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,207,MockCountingDurationField.add_int = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,208,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,209,"assertEquals(61, field.add(1L, 1));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,210,"assertEquals(1, MockCountingDurationField.add_int);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,213,public void test_add_long_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,214,MockCountingDurationField.add_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,215,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,216,"assertEquals(61, field.add(1L, 1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,217,"assertEquals(1, MockCountingDurationField.add_long);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,220,public void test_add_RP_int_intarray_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,221,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,222,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,223,BaseDateTimeField field = new MockStandardBaseDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,224,"int[] result = field.add(new TimeOfDay(), 2, values, 0);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,225,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,227,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,228,"expected = new int[] {10, 20, 31, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,229,"result = field.add(new TimeOfDay(), 2, values, 1);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,230,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,232,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,233,"expected = new int[] {10, 21, 0, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,234,"result = field.add(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,235,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,237,"values = new int[] {23, 59, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,238,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,239,"field.add(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,240,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,241,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,243,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,244,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,245,"result = field.add(new TimeOfDay(), 2, values, -1);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,246,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,248,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,249,"expected = new int[] {10, 19, 59, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,250,"result = field.add(new TimeOfDay(), 2, values, -31);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,251,"assertEquals(true, Arrays.equals(expected, result));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,253,"values = new int[] {0, 0, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,254,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,255,"field.add(new TimeOfDay(), 2, values, -31);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,256,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,257,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,261,public void test_addWrapField_long_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,262,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,263,"assertEquals(29 * 60L, field.addWrapField(60L * 29, 0));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,264,"assertEquals(59 * 60L, field.addWrapField(60L * 29, 30));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,265,"assertEquals(0 * 60L, field.addWrapField(60L * 29, 31));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,268,public void test_addWrapField_RP_int_intarray_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,269,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,270,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,271,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,272,"int[] result = field.addWrapField(new TimeOfDay(), 2, values, 0);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,273,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,275,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,276,"expected = new int[] {10, 20, 59, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,277,"result = field.addWrapField(new TimeOfDay(), 2, values, 29);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,278,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,280,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,281,"expected = new int[] {10, 20, 0, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,282,"result = field.addWrapField(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,283,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,285,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,286,"expected = new int[] {10, 20, 1, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,287,"result = field.addWrapField(new TimeOfDay(), 2, values, 31);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,288,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,292,public void test_getDifference_long_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,293,MockCountingDurationField.difference_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,294,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,295,"assertEquals(30, field.getDifference(0L, 0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,296,"assertEquals(1, MockCountingDurationField.difference_long);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,299,public void test_getDifferenceAsLong_long_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,300,MockCountingDurationField.difference_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,301,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,302,"assertEquals(30, field.getDifferenceAsLong(0L, 0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,303,"assertEquals(1, MockCountingDurationField.difference_long);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,307,public void test_set_long_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,308,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,309,"assertEquals(0, field.set(120L, 0));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,310,"assertEquals(29 * 60, field.set(120L, 29));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,313,public void test_set_RP_int_intarray_int() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,314,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,315,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,316,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,317,"int[] result = field.set(new TimeOfDay(), 2, values, 30);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,318,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,320,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,321,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,322,"result = field.set(new TimeOfDay(), 2, values, 29);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,323,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,325,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,326,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,327,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,328,"field.set(new TimeOfDay(), 2, values, 60);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,329,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,330,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,331,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,333,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,334,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,335,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,336,"field.set(new TimeOfDay(), 2, values, -1);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,337,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,338,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,339,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,342,public void test_set_long_String_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,343,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,344,"assertEquals(0, field.set(0L, ""0"", null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,345,"assertEquals(29 * 60, field.set(0L, ""29"", Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,348,public void test_set_long_String() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,349,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,350,"assertEquals(0, field.set(0L, ""0""));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,351,"assertEquals(29 * 60, field.set(0L, ""29""));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,354,public void test_set_RP_int_intarray_String_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,355,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,356,"int[] values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,357,"int[] expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,358,"int[] result = field.set(new TimeOfDay(), 2, values, ""30"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,359,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,361,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,362,"expected = new int[] {10, 20, 29, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,363,"result = field.set(new TimeOfDay(), 2, values, ""29"", Locale.ENGLISH);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,364,"assertEquals(true, Arrays.equals(result, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,366,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,367,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,368,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,369,"field.set(new TimeOfDay(), 2, values, ""60"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,370,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,371,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,372,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,374,"values = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,375,"expected = new int[] {10, 20, 30, 40};"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,376,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,377,"field.set(new TimeOfDay(), 2, values, ""-1"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,378,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,379,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,380,"assertEquals(true, Arrays.equals(values, expected));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,383,public void test_convertText() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,384,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,385,"assertEquals(0, field.convertText(""0"", null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,386,"assertEquals(29, field.convertText(""29"", null));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,387,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,388,"field.convertText(""2A"", null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,389,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,390,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,391,try {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,392,"field.convertText(null, null);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,393,fail();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,394,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,398,//    public abstract DurationField getDurationField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,400,//    public abstract DurationField getRangeDurationField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,402,public void test_isLeap_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,403,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,404,"assertEquals(false, field.isLeap(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,407,public void test_getLeapAmount_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,408,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,409,"assertEquals(0, field.getLeapAmount(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,412,public void test_getLeapDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,413,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,414,"assertEquals(null, field.getLeapDurationField());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,418,public void test_getMinimumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,419,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,420,"assertEquals(0, field.getMinimumValue());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,423,public void test_getMinimumValue_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,424,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,425,"assertEquals(0, field.getMinimumValue(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,428,public void test_getMinimumValue_RP() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,429,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,430,"assertEquals(0, field.getMinimumValue(new TimeOfDay()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,433,public void test_getMinimumValue_RP_intarray() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,434,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,435,"assertEquals(0, field.getMinimumValue(new TimeOfDay(), new int[4]));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,438,public void test_getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,439,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,440,"assertEquals(59, field.getMaximumValue());"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,443,public void test_getMaximumValue_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,444,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,445,"assertEquals(59, field.getMaximumValue(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,448,public void test_getMaximumValue_RP() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,449,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,450,"assertEquals(59, field.getMaximumValue(new TimeOfDay()));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,453,public void test_getMaximumValue_RP_intarray() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,454,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,455,"assertEquals(59, field.getMaximumValue(new TimeOfDay(), new int[4]));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,459,public void test_getMaximumTextLength_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,460,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,461,"assertEquals(2, field.getMaximumTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,463,field = new MockPreciseDurationDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,464,public int getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,465,return 5;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,468,"assertEquals(1, field.getMaximumTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,470,field = new MockPreciseDurationDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,471,public int getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,472,return 555;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,475,"assertEquals(3, field.getMaximumTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,477,field = new MockPreciseDurationDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,478,public int getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,479,return 5555;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,482,"assertEquals(4, field.getMaximumTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,484,field = new MockPreciseDurationDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,485,public int getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,486,return -1;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,489,"assertEquals(2, field.getMaximumTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,492,public void test_getMaximumShortTextLength_Locale() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,493,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,494,"assertEquals(2, field.getMaximumShortTextLength(Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,498,public void test_roundFloor_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,499,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,500,"assertEquals(-120L, field.roundFloor(-61L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,501,"assertEquals(-60L, field.roundFloor(-60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,502,"assertEquals(-60L, field.roundFloor(-59L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,503,"assertEquals(-60L, field.roundFloor(-1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,504,"assertEquals(0L, field.roundFloor(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,505,"assertEquals(0L, field.roundFloor(1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,506,"assertEquals(0L, field.roundFloor(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,507,"assertEquals(0L, field.roundFloor(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,508,"assertEquals(0L, field.roundFloor(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,509,"assertEquals(60L, field.roundFloor(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,512,public void test_roundCeiling_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,513,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,514,"assertEquals(-60L, field.roundCeiling(-61L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,515,"assertEquals(-60L, field.roundCeiling(-60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,516,"assertEquals(0L, field.roundCeiling(-59L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,517,"assertEquals(0L, field.roundCeiling(-1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,518,"assertEquals(0L, field.roundCeiling(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,519,"assertEquals(60L, field.roundCeiling(1L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,520,"assertEquals(60L, field.roundCeiling(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,521,"assertEquals(60L, field.roundCeiling(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,522,"assertEquals(60L, field.roundCeiling(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,523,"assertEquals(60L, field.roundCeiling(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,526,public void test_roundHalfFloor_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,527,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,528,"assertEquals(0L, field.roundHalfFloor(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,529,"assertEquals(0L, field.roundHalfFloor(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,530,"assertEquals(0L, field.roundHalfFloor(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,531,"assertEquals(60L, field.roundHalfFloor(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,532,"assertEquals(60L, field.roundHalfFloor(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,535,public void test_roundHalfCeiling_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,536,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,537,"assertEquals(0L, field.roundHalfCeiling(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,538,"assertEquals(0L, field.roundHalfCeiling(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,539,"assertEquals(60L, field.roundHalfCeiling(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,540,"assertEquals(60L, field.roundHalfCeiling(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,541,"assertEquals(60L, field.roundHalfCeiling(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,544,public void test_roundHalfEven_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,545,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,546,"assertEquals(0L, field.roundHalfEven(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,547,"assertEquals(0L, field.roundHalfEven(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,548,"assertEquals(0L, field.roundHalfEven(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,549,"assertEquals(60L, field.roundHalfEven(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,550,"assertEquals(60L, field.roundHalfEven(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,551,"assertEquals(60L, field.roundHalfEven(89L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,552,"assertEquals(120L, field.roundHalfEven(90L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,553,"assertEquals(120L, field.roundHalfEven(91L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,556,public void test_remainder_long() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,557,BaseDateTimeField field = new MockPreciseDurationDateTimeField();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,558,"assertEquals(0L, field.remainder(0L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,559,"assertEquals(29L, field.remainder(29L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,560,"assertEquals(30L, field.remainder(30L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,561,"assertEquals(31L, field.remainder(31L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,562,"assertEquals(0L, field.remainder(60L));"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,566,static class MockPreciseDurationDateTimeField extends PreciseDurationDateTimeField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,567,protected MockPreciseDurationDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,568,"super(DateTimeFieldType.secondOfMinute(),"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,569,new MockCountingDurationField(DurationFieldType.seconds()));
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,571,"protected MockPreciseDurationDateTimeField(DateTimeFieldType type, DurationField dur) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,572,"super(type, dur);"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,574,public int get(long instant) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,575,return (int) (instant / 60L);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,577,public DurationField getRangeDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,578,return new MockCountingDurationField(DurationFieldType.minutes());
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,580,public int getMaximumValue() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,581,return 59;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,585,static class MockStandardBaseDateTimeField extends MockPreciseDurationDateTimeField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,586,protected MockStandardBaseDateTimeField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,587,super();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,589,public DurationField getDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,590,return Chronology.getISOUTC().seconds();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,592,public DurationField getRangeDurationField() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,593,return Chronology.getISOUTC().minutes();
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,598,static class MockCountingDurationField extends BaseDurationField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,599,static int add_int = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,600,static int add_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,601,static int difference_long = 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,603,protected MockCountingDurationField(DurationFieldType type) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,604,super(type);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,606,public boolean isPrecise() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,607,return true;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,609,public long getUnitMillis() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,610,return 60;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,612,"public long getValueAsLong(long duration, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,613,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,615,"public long getMillis(int value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,616,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,618,"public long getMillis(long value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,619,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,621,"public long add(long instant, int value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,622,add_int++;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,623,return instant + (value * 60L);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,625,"public long add(long instant, long value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,626,add_long++;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,627,return instant + (value * 60L);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,629,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,630,difference_long++;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,631,return 30;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,636,static class MockZeroDurationField extends BaseDurationField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,637,protected MockZeroDurationField(DurationFieldType type) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,638,super(type);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,640,public boolean isPrecise() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,641,return true;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,643,public long getUnitMillis() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,644,return 0;  // this is zero
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,646,"public long getValueAsLong(long duration, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,647,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,649,"public long getMillis(int value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,650,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,652,"public long getMillis(long value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,653,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,655,"public long add(long instant, int value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,656,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,658,"public long add(long instant, long value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,659,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,661,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,662,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,667,static class MockImpreciseDurationField extends BaseDurationField {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,668,protected MockImpreciseDurationField(DurationFieldType type) {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,669,super(type);
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,671,public boolean isPrecise() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,672,return false;  // this is false
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,674,public long getUnitMillis() {
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,675,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,677,"public long getValueAsLong(long duration, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,678,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,680,"public long getMillis(int value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,681,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,683,"public long getMillis(long value, long instant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,684,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,686,"public long add(long instant, int value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,687,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,689,"public long add(long instant, long value) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,690,return 0;
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,692,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java,693,return 0;
