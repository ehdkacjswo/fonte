is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,390,* <p>
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,392," DateTime added = dt.withFieldAdded(DateTimeFieldType.dayOfMonth(), 6);"
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,393, DateTime added = dt.dayOfMonth().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,394, DateTime added = dt.property(DateTimeFieldType.dayOfMonth()).addToCopy(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,393,"* DateMidnight added = dt.withFieldAdded(DateTimeFieldType.year(), 6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,394,* DateMidnight added = dt.plusYears(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,395,* DateMidnight added = dt.year().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,455," To add or subtract on a single field use the properties, for example:"
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,456, <pre>
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,457, DateTime added = dt.dayOfMonth().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,458, </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,456,* This method is typically used to add multiple copies of complex
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,457,* period instances. Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,458,"* like {@link #withFieldAdded(DurationFieldType, int)}"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,459,* or {@link #plusYears(int)}.
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,479, @param duration  the duration to add to this one
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,480,"* @param duration  the duration, in millis, to add to this one"
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,505, The following two lines are identical in effect:
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,506, <pre>
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,507, DateTime added = dt.hourOfDay().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,508, DateTime added = dt.plus(Period.hours(6));
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,509, </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,506,* This method is typically used to add complex period instances.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,507,* Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,508,* like {@link #plusYears(int)}.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,520,* Returns a new datetime plus the specified number of years.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,521,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,522,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,523,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,524,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,525,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,526,* DateMidnight added = dt.plusYears(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,527,* DateMidnight added = dt.plus(Period.years(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,528,"* DateMidnight added = dt.withFieldAdded(DurationFieldType.years(), 6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,529,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,531,"* @param years  the amount of years to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,532,* @return the new datetime plus the increased years
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,533,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,535,public DateMidnight plusYears(int years) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,536,if (years == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,537,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,539,"long instant = getChronology().years().add(getMillis(), years);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,540,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,544,* Returns a new datetime plus the specified number of months.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,545,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,546,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,547,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,548,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,549,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,550,* DateMidnight added = dt.plusMonths(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,551,* DateMidnight added = dt.plus(Period.months(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,552,"* DateMidnight added = dt.withFieldAdded(DurationFieldType.months(), 6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,553,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,555,"* @param months  the amount of months to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,556,* @return the new datetime plus the increased months
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,557,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,559,public DateMidnight plusMonths(int months) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,560,if (months == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,561,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,563,"long instant = getChronology().months().add(getMillis(), months);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,564,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,568,* Returns a new datetime plus the specified number of weeks.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,569,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,570,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,571,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,572,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,573,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,574,* DateMidnight added = dt.plusWeeks(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,575,* DateMidnight added = dt.plus(Period.weeks(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,576,"* DateMidnight added = dt.withFieldAdded(DurationFieldType.weeks(), 6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,577,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,579,"* @param weeks  the amount of weeks to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,580,* @return the new datetime plus the increased weeks
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,581,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,583,public DateMidnight plusWeeks(int weeks) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,584,if (weeks == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,585,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,587,"long instant = getChronology().weeks().add(getMillis(), weeks);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,588,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,592,* Returns a new datetime plus the specified number of days.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,593,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,594,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,595,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,596,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,597,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,598,* DateMidnight added = dt.plusDays(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,599,* DateMidnight added = dt.plus(Period.days(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,600,"* DateMidnight added = dt.withFieldAdded(DurationFieldType.days(), 6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,601,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,603,"* @param days  the amount of days to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,604,* @return the new datetime plus the increased days
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,605,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,607,public DateMidnight plusDays(int days) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,608,if (days == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,609,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,611,"long instant = getChronology().days().add(getMillis(), days);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,612,return withMillis(instant);
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,525, @param duration  the duration to reduce this instant by
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,621,"* @param duration  the duration, in millis, to reduce this instant by"
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,551, The following two lines are identical in effect:
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,552, <pre>
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,553, DateTime added = dt.hourOfDay().addToCopy(-6);
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,554, DateTime added = dt.minus(Period.hours(6));
False,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,555, </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,647,* This method is typically used to subtract complex period instances.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,648,* Subtracting one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,649,* like {@link #minusYears(int)}.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,661,* Returns a new datetime minus the specified number of years.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,662,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,663,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,664,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,665,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,666,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,667,* DateTime subtracted = dt.minusYears(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,668,* DateTime subtracted = dt.minus(Period.years(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,669,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.years(), -6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,670,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,672,"* @param years  the amount of years to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,673,* @return the new datetime minus the increased years
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,674,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,676,public DateMidnight minusYears(int years) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,677,if (years == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,678,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,680,"long instant = getChronology().years().subtract(getMillis(), years);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,681,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,685,* Returns a new datetime minus the specified number of months.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,686,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,687,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,688,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,689,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,690,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,691,* DateMidnight subtracted = dt.minusMonths(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,692,* DateMidnight subtracted = dt.minus(Period.months(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,693,"* DateMidnight subtracted = dt.withFieldAdded(DurationFieldType.months(), -6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,694,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,696,"* @param months  the amount of months to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,697,* @return the new datetime minus the increased months
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,698,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,700,public DateMidnight minusMonths(int months) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,701,if (months == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,702,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,704,"long instant = getChronology().months().subtract(getMillis(), months);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,705,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,709,* Returns a new datetime minus the specified number of weeks.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,710,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,711,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,712,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,713,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,714,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,715,* DateMidnight subtracted = dt.minusWeeks(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,716,* DateMidnight subtracted = dt.minus(Period.weeks(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,717,"* DateMidnight subtracted = dt.withFieldAdded(DurationFieldType.weeks(), -6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,718,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,720,"* @param weeks  the amount of weeks to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,721,* @return the new datetime minus the increased weeks
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,722,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,724,public DateMidnight minusWeeks(int weeks) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,725,if (weeks == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,726,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,728,"long instant = getChronology().weeks().subtract(getMillis(), weeks);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,729,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,733,* Returns a new datetime minus the specified number of days.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,734,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,735,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,736,* <p>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,737,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,738,* <pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,739,* DateMidnight subtracted = dt.minusDays(6);
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,740,* DateMidnight subtracted = dt.minus(Period.days(6));
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,741,"* DateMidnight subtracted = dt.withFieldAdded(DurationFieldType.days(), -6);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,742,* </pre>
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,744,"* @param days  the amount of days to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,745,* @return the new datetime minus the increased days
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,746,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,748,public DateMidnight minusDays(int days) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,749,if (days == 0) {
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,750,return this;
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,752,"long instant = getChronology().days().subtract(getMillis(), days);"
True,JodaTime/src/java/org/joda/time/DateMidnight.java,JodaTime/src/java/org/joda/time/DateMidnight.java,753,return withMillis(instant);
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,522," DateTime added = dt.withField(DateTimeFieldType.dayOfMonth(), 6);"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,523, DateTime added = dt.dayOfMonth().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,524, DateTime added = dt.property(DateTimeFieldType.dayOfMonth()).addToCopy(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,522,"* DateTime added = dt.withFieldAdded(DurationFieldType.years(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,523,* DateTime added = dt.plusYears(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,524,* DateTime added = dt.plus(Period.years(6));
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,585," To add or subtract on a single field use the properties, for example:"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,586, <pre>
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,587, DateTime added = dt.hourOfDay().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,588, </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,585,* This method is typically used to add multiple copies of complex
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,586,* period instances. Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,587,"* like {@link #withFieldAdded(DurationFieldType, int)}"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,588,* or {@link #plusYears(int)}.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,609, @param duration  the duration to add to this one
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,609,"* @param duration  the duration, in millis, to add to this one"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,635, The following two lines are identical in effect:
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,636, <pre>
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,637, DateTime added = dt.hourOfDay().addToCopy(6);
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,638, DateTime added = dt.plus(Period.hours(6));
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,639, </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,635,* This method is typically used to add complex period instances.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,636,* Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,637,* like {@link #plusYears(int)}.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,649,* Returns a new datetime plus the specified number of years.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,650,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,651,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,652,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,653,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,654,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,655,* DateTime added = dt.plusYears(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,656,* DateTime added = dt.plus(Period.years(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,657,"* DateTime added = dt.withFieldAdded(DurationFieldType.years(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,658,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,660,"* @param years  the amount of years to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,661,* @return the new datetime plus the increased years
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,662,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,664,public DateTime plusYears(int years) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,665,if (years == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,666,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,668,"long instant = getChronology().years().add(getMillis(), years);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,669,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,673,* Returns a new datetime plus the specified number of months.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,674,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,675,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,676,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,677,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,678,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,679,* DateTime added = dt.plusMonths(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,680,* DateTime added = dt.plus(Period.months(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,681,"* DateTime added = dt.withFieldAdded(DurationFieldType.months(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,682,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,684,"* @param months  the amount of months to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,685,* @return the new datetime plus the increased months
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,686,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,688,public DateTime plusMonths(int months) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,689,if (months == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,690,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,692,"long instant = getChronology().months().add(getMillis(), months);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,693,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,697,* Returns a new datetime plus the specified number of weeks.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,698,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,699,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,700,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,701,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,702,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,703,* DateTime added = dt.plusWeeks(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,704,* DateTime added = dt.plus(Period.weeks(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,705,"* DateTime added = dt.withFieldAdded(DurationFieldType.weeks(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,706,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,708,"* @param weeks  the amount of weeks to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,709,* @return the new datetime plus the increased weeks
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,710,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,712,public DateTime plusWeeks(int weeks) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,713,if (weeks == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,714,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,716,"long instant = getChronology().weeks().add(getMillis(), weeks);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,717,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,721,* Returns a new datetime plus the specified number of days.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,722,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,723,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,724,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,725,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,726,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,727,* DateTime added = dt.plusDays(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,728,* DateTime added = dt.plus(Period.days(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,729,"* DateTime added = dt.withFieldAdded(DurationFieldType.days(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,730,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,732,"* @param days  the amount of days to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,733,* @return the new datetime plus the increased days
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,734,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,736,public DateTime plusDays(int days) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,737,if (days == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,738,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,740,"long instant = getChronology().days().add(getMillis(), days);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,741,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,745,* Returns a new datetime plus the specified number of hours.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,746,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,747,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,748,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,749,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,750,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,751,* DateTime added = dt.plusHours(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,752,* DateTime added = dt.plus(Period.hours(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,753,"* DateTime added = dt.withFieldAdded(DurationFieldType.hours(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,754,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,756,"* @param hours  the amount of hours to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,757,* @return the new datetime plus the increased hours
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,758,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,760,public DateTime plusHours(int hours) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,761,if (hours == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,762,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,764,"long instant = getChronology().hours().add(getMillis(), hours);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,765,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,769,* Returns a new datetime plus the specified number of minutes.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,770,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,771,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,772,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,773,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,774,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,775,* DateTime added = dt.plusMinutes(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,776,* DateTime added = dt.plus(Period.minutes(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,777,"* DateTime added = dt.withFieldAdded(DurationFieldType.minutes(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,778,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,780,"* @param minutes  the amount of minutes to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,781,* @return the new datetime plus the increased minutes
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,782,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,784,public DateTime plusMinutes(int minutes) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,785,if (minutes == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,786,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,788,"long instant = getChronology().minutes().add(getMillis(), minutes);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,789,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,793,* Returns a new datetime plus the specified number of seconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,794,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,795,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,796,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,797,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,798,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,799,* DateTime added = dt.plusSeconds(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,800,* DateTime added = dt.plus(Period.seconds(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,801,"* DateTime added = dt.withFieldAdded(DurationFieldType.seconds(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,802,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,804,"* @param seconds  the amount of seconds to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,805,* @return the new datetime plus the increased seconds
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,806,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,808,public DateTime plusSeconds(int seconds) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,809,if (seconds == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,810,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,812,"long instant = getChronology().seconds().add(getMillis(), seconds);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,813,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,817,* Returns a new datetime plus the specified number of millis.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,818,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,819,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,820,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,821,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,822,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,823,* DateTime added = dt.plusMillis(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,824,* DateTime added = dt.plus(Period.millis(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,825,"* DateTime added = dt.withFieldAdded(DurationFieldType.millis(), 6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,826,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,828,"* @param millis  the amount of millis to add, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,829,* @return the new datetime plus the increased millis
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,830,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,832,public DateTime plusMillis(int millis) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,833,if (millis == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,834,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,836,"long instant = getChronology().millis().add(getMillis(), millis);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,837,return withMillis(instant);
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,655, @param duration  the duration to reduce this instant by
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,846,"* @param duration  the duration, in millis, to reduce this instant by"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,681, The following two lines are identical in effect:
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,682, <pre>
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,683, DateTime added = dt.hourOfDay().addToCopy(-6);
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,684, DateTime added = dt.minus(Period.hours(6));
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,685, </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,872,* This method is typically used to subtract complex period instances.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,873,* Subtracting one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,874,* like {@link #minusYears(int)}.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,886,* Returns a new datetime minus the specified number of years.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,887,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,888,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,889,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,890,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,891,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,892,* DateTime subtracted = dt.minusYears(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,893,* DateTime subtracted = dt.minus(Period.years(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,894,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.years(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,895,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,897,"* @param years  the amount of years to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,898,* @return the new datetime minus the increased years
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,899,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,901,public DateTime minusYears(int years) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,902,if (years == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,903,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,905,"long instant = getChronology().years().subtract(getMillis(), years);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,906,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,910,* Returns a new datetime minus the specified number of months.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,911,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,912,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,913,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,914,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,915,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,916,* DateTime subtracted = dt.minusMonths(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,917,* DateTime subtracted = dt.minus(Period.months(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,918,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.months(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,919,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,921,"* @param months  the amount of months to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,922,* @return the new datetime minus the increased months
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,923,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,925,public DateTime minusMonths(int months) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,926,if (months == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,927,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,929,"long instant = getChronology().months().subtract(getMillis(), months);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,930,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,934,* Returns a new datetime minus the specified number of weeks.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,935,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,936,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,937,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,938,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,939,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,940,* DateTime subtracted = dt.minusWeeks(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,941,* DateTime subtracted = dt.minus(Period.weeks(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,942,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.weeks(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,943,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,945,"* @param weeks  the amount of weeks to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,946,* @return the new datetime minus the increased weeks
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,947,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,949,public DateTime minusWeeks(int weeks) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,950,if (weeks == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,951,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,953,"long instant = getChronology().weeks().subtract(getMillis(), weeks);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,954,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,958,* Returns a new datetime minus the specified number of days.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,959,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,960,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,961,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,962,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,963,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,964,* DateTime subtracted = dt.minusDays(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,965,* DateTime subtracted = dt.minus(Period.days(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,966,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.days(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,967,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,969,"* @param days  the amount of days to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,970,* @return the new datetime minus the increased days
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,971,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,973,public DateTime minusDays(int days) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,974,if (days == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,975,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,977,"long instant = getChronology().days().subtract(getMillis(), days);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,978,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,982,* Returns a new datetime minus the specified number of hours.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,983,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,984,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,985,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,986,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,987,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,988,* DateTime subtracted = dt.minusHours(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,989,* DateTime subtracted = dt.minus(Period.hours(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,990,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.hours(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,991,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,993,"* @param hours  the amount of hours to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,994,* @return the new datetime minus the increased hours
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,995,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,997,public DateTime minusHours(int hours) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,998,if (hours == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,999,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1001,"long instant = getChronology().hours().subtract(getMillis(), hours);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1002,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1006,* Returns a new datetime minus the specified number of minutes.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1007,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1008,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1009,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1010,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1011,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1012,* DateTime subtracted = dt.minusMinutes(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1013,* DateTime subtracted = dt.minus(Period.minutes(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1014,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.minutes(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1015,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1017,"* @param minutes  the amount of minutes to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1018,* @return the new datetime minus the increased minutes
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1019,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1021,public DateTime minusMinutes(int minutes) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1022,if (minutes == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1023,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1025,"long instant = getChronology().minutes().subtract(getMillis(), minutes);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1026,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1030,* Returns a new datetime minus the specified number of seconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1031,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1032,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1033,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1034,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1035,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1036,* DateTime subtracted = dt.minusSeconds(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1037,* DateTime subtracted = dt.minus(Period.seconds(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1038,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.seconds(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1039,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1041,"* @param seconds  the amount of seconds to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1042,* @return the new datetime minus the increased seconds
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1043,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1045,public DateTime minusSeconds(int seconds) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1046,if (seconds == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1047,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1049,"long instant = getChronology().seconds().subtract(getMillis(), seconds);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1050,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1054,* Returns a new datetime minus the specified number of millis.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1055,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1056,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1057,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1058,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1059,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1060,* DateTime subtracted = dt.minusMillis(6);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1061,* DateTime subtracted = dt.minus(Period.millis(6));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1062,"* DateTime subtracted = dt.withFieldAdded(DurationFieldType.millis(), -6);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1063,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1065,"* @param millis  the amount of millis to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1066,* @return the new datetime minus the increased millis
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1067,* @since 1.1
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1069,public DateTime minusMillis(int millis) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1070,if (millis == 0) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1071,return this;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1073,"long instant = getChronology().millis().subtract(getMillis(), millis);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1074,return withMillis(instant);
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,201,* Subtracts a duration value (which may be negative) from the instant.
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,203,* @param instant  the milliseconds from 1970-01-01T00:00:00Z to subtract from
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,204,"* @param value  the value to subtract, in the units of the field"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,205,* @return the updated milliseconds
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,207,"public long subtract(long instant, int value) {"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,208,if (value == Integer.MIN_VALUE) {
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,209,"return subtract(instant, (long) value);"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,211,"return add(instant, -value);"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,215,* Subtracts a duration value (which may be negative) from the instant.
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,217,* @param instant  the milliseconds from 1970-01-01T00:00:00Z to subtract from
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,218,"* @param value  the value to subtract, in the units of the field"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,219,* @return the updated milliseconds
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,221,"public long subtract(long instant, long value) {"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,222,if (value == Long.MIN_VALUE) {
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,223,"throw new ArithmeticException(""Long.MIN_VALUE cannot be negated"");"
True,JodaTime/src/java/org/joda/time/DurationField.java,JodaTime/src/java/org/joda/time/DurationField.java,225,"return add(instant, -value);"
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,458," TimeOfDay added = tod.withFieldAdded(DateTimeFieldType.minuteOfHour(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,458,"* TimeOfDay added = tod.withFieldAdded(DurationFieldType.minutes(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,459,* TimeOfDay added = tod.plusMinutes(6);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,460, TimeOfDay added = tod.property(DateTimeFieldType.minuteOfHour()).addToCopy(6);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,486, To add or subtract on a single field see
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,487," {@link #withFieldAdded(DurationFieldType, int)}."
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,486,* This method is typically used to add multiple copies of complex
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,487,* period instances. Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,488,"* like {@link #withFieldAdded(DurationFieldType, int)}"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,489,* or {@link #plusHours(int)}.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,516, The following two lines are identical in effect:
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,517, <pre>
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,518, TimeOfDay added = tod.minuteOfHour().addToCopy(6);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,519, TimeOfDay added = tod.plus(Period.days(6));
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,520, </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,519,* This method is typically used to add complex period instances.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,520,* Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,521,* like {@link #plusHours(int)}.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,533,* Returns a new time plus the specified number of hours.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,534,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,535,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,536,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,537,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,538,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,539,* TimeOfDay added = dt.plusHours(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,540,* TimeOfDay added = dt.plus(Period.hours(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,541,"* TimeOfDay added = dt.withFieldAdded(DurationFieldType.hours(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,542,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,544,"* @param hours  the amount of hours to add, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,545,* @return the new time plus the increased hours
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,546,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,548,public TimeOfDay plusHours(int hours) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,549,"return withFieldAdded(DurationFieldType.hours(), hours);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,553,* Returns a new time plus the specified number of minutes.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,554,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,555,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,556,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,557,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,558,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,559,* TimeOfDay added = dt.plusMinutes(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,560,* TimeOfDay added = dt.plus(Period.minutes(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,561,"* TimeOfDay added = dt.withFieldAdded(DurationFieldType.minutes(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,562,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,564,"* @param minutes  the amount of minutes to add, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,565,* @return the new time plus the increased minutes
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,566,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,568,public TimeOfDay plusMinutes(int minutes) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,569,"return withFieldAdded(DurationFieldType.minutes(), minutes);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,573,* Returns a new time plus the specified number of seconds.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,574,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,575,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,576,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,577,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,578,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,579,* TimeOfDay added = dt.plusSeconds(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,580,* TimeOfDay added = dt.plus(Period.seconds(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,581,"* TimeOfDay added = dt.withFieldAdded(DurationFieldType.seconds(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,582,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,584,"* @param seconds  the amount of seconds to add, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,585,* @return the new time plus the increased seconds
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,586,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,588,public TimeOfDay plusSeconds(int seconds) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,589,"return withFieldAdded(DurationFieldType.seconds(), seconds);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,593,* Returns a new time plus the specified number of millis.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,594,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,595,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,596,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,597,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,598,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,599,* TimeOfDay added = dt.plusMillis(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,600,* TimeOfDay added = dt.plus(Period.millis(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,601,"* TimeOfDay added = dt.withFieldAdded(DurationFieldType.millis(), 6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,602,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,604,"* @param millis  the amount of millis to add, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,605,* @return the new time plus the increased millis
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,606,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,608,public TimeOfDay plusMillis(int millis) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,609,"return withFieldAdded(DurationFieldType.millis(), millis);"
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,536, The following lines are identical in effect:
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,537, <pre>
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,538, TimeOfDay added = tod.minuteOfHour().addToCopy(-6);
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,539, TimeOfDay added = tod.minus(Period.days(6));
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,540, TimeOfDay added = tod.plus(Period.days(-6));
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,541, </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,619,* This method is typically used to subtract complex period instances.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,620,* Subtracting one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,621,* like {@link #minusHours(int)}.
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,545, @throws ArithmeticException if the new datetime exceeds the capacity of a long
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,625,* @throws ArithmeticException if the new time exceeds capacity
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,633,* Returns a new time minus the specified number of hours.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,634,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,635,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,636,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,637,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,638,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,639,* TimeOfDay subtracted = dt.minusHours(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,640,* TimeOfDay subtracted = dt.minus(Period.hours(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,641,"* TimeOfDay subtracted = dt.withFieldAdded(DurationFieldType.hours(), -6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,642,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,644,"* @param hours  the amount of hours to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,645,* @return the new time minus the increased hours
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,646,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,648,public TimeOfDay minusHours(int hours) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,649,"return withFieldAdded(DurationFieldType.hours(), FieldUtils.safeNegate(hours));"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,653,* Returns a new time minus the specified number of minutes.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,654,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,655,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,656,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,657,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,658,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,659,* TimeOfDay subtracted = dt.minusMinutes(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,660,* TimeOfDay subtracted = dt.minus(Period.minutes(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,661,"* TimeOfDay subtracted = dt.withFieldAdded(DurationFieldType.minutes(), -6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,662,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,664,"* @param minutes  the amount of minutes to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,665,* @return the new time minus the increased minutes
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,666,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,668,public TimeOfDay minusMinutes(int minutes) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,669,"return withFieldAdded(DurationFieldType.minutes(), FieldUtils.safeNegate(minutes));"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,673,* Returns a new time minus the specified number of seconds.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,674,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,675,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,676,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,677,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,678,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,679,* TimeOfDay subtracted = dt.minusSeconds(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,680,* TimeOfDay subtracted = dt.minus(Period.seconds(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,681,"* TimeOfDay subtracted = dt.withFieldAdded(DurationFieldType.seconds(), -6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,682,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,684,"* @param seconds  the amount of seconds to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,685,* @return the new time minus the increased seconds
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,686,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,688,public TimeOfDay minusSeconds(int seconds) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,689,"return withFieldAdded(DurationFieldType.seconds(), FieldUtils.safeNegate(seconds));"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,693,* Returns a new time minus the specified number of millis.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,694,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,695,* This time instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,696,* <p>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,697,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,698,* <pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,699,* TimeOfDay subtracted = dt.minusMillis(6);
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,700,* TimeOfDay subtracted = dt.minus(Period.millis(6));
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,701,"* TimeOfDay subtracted = dt.withFieldAdded(DurationFieldType.millis(), -6);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,702,* </pre>
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,704,"* @param millis  the amount of millis to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,705,* @return the new time minus the increased millis
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,706,* @since 1.1
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,708,public TimeOfDay minusMillis(int millis) {
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,709,"return withFieldAdded(DurationFieldType.millis(), FieldUtils.safeNegate(millis));"
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,349," YearMonthDay added = ymd.withFieldAdded(DateTimeFieldType.dayOfMonth(), 6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,349,"* YearMonthDay added = ymd.withFieldAdded(DurationFieldType.days(), 6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,350,* YearMonthDay added = ymd.plusDays(6);
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,351, YearMonthDay added = ymd.property(DateTimeFieldType.dayOfMonth()).addToCopy(6);
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,376, To add or subtract on a single field see
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,377," {@link #withFieldAdded(DurationFieldType, int)}."
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,376,* This method is typically used to add multiple copies of complex
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,377,* period instances. Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,378,"* like {@link #withFieldAdded(DurationFieldType, int)}"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,379,* or {@link #plusYears(int)}.
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,405, The following two lines are identical in effect:
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,406, <pre>
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,407, YearMonthDay added = ymd.dayOfMonth().addToCopy(6);
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,408, YearMonthDay added = ymd.plus(Period.days(6));
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,409, </pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,408,* This method is typically used to add complex period instances.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,409,* Adding one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,410,* like {@link #plusYears(int)}.
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,420, Gets a copy of this instance with the specified period take away.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,422,* Returns a new date plus the specified number of years.
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,422," If the amount is zero or null, then <code>this</code> is returned."
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,424,* This date instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,425,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,426,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,427,* <pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,428,* YearMonthDay added = dt.plusYears(6);
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,429,* YearMonthDay added = dt.plus(Period.years(6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,430,"* YearMonthDay added = dt.withFieldAdded(DurationFieldType.years(), 6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,431,* </pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,433,"* @param years  the amount of years to add, may be negative"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,434,* @return the new date plus the increased years
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,435,* @since 1.1
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,437,public YearMonthDay plusYears(int years) {
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,438,"return withFieldAdded(DurationFieldType.years(), years);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,442,* Returns a new date plus the specified number of months.
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,424, The following lines are identical in effect:
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,444,* This date instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,445,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,446,* The following three lines are identical in effect:
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,426, YearMonthDay added = ymd.dayOfMonth().addToCopy(-6);
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,427, YearMonthDay added = ymd.minus(Period.days(6));
False,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,428, YearMonthDay added = ymd.plus(Period.days(-6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,448,* YearMonthDay added = dt.plusMonths(6);
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,449,* YearMonthDay added = dt.plus(Period.months(6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,450,"* YearMonthDay added = dt.withFieldAdded(DurationFieldType.months(), 6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,453,"* @param months  the amount of months to add, may be negative"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,454,* @return the new date plus the increased months
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,455,* @since 1.1
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,457,public YearMonthDay plusMonths(int months) {
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,458,"return withFieldAdded(DurationFieldType.months(), months);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,462,* Returns a new date plus the specified number of days.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,463,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,464,* This date instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,465,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,466,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,467,* <pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,468,* YearMonthDay added = dt.plusDays(6);
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,469,* YearMonthDay added = dt.plus(Period.days(6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,470,"* YearMonthDay added = dt.withFieldAdded(DurationFieldType.days(), 6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,471,* </pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,473,"* @param days  the amount of days to add, may be negative"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,474,* @return the new date plus the increased days
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,475,* @since 1.1
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,477,public YearMonthDay plusDays(int days) {
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,478,"return withFieldAdded(DurationFieldType.days(), days);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,483,* Gets a copy of this instance with the specified period take away.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,484,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,485,"* If the amount is zero or null, then <code>this</code> is returned."
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,486,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,487,* This method is typically used to subtract complex period instances.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,488,* Subtracting one field is best achieved using methods
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,489,* like {@link #minusYears(int)}.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,501,* Returns a new datetime minus the specified number of years.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,502,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,503,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,504,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,505,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,506,* <pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,507,* YearMonthDay subtracted = dt.minusYears(6);
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,508,* YearMonthDay subtracted = dt.minus(Period.years(6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,509,"* YearMonthDay subtracted = dt.withFieldAdded(DurationFieldType.years(), -6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,510,* </pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,512,"* @param years  the amount of years to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,513,* @return the new datetime minus the increased years
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,514,* @since 1.1
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,516,public YearMonthDay minusYears(int years) {
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,517,"return withFieldAdded(DurationFieldType.years(), FieldUtils.safeNegate(years));"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,521,* Returns a new datetime minus the specified number of months.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,522,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,523,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,524,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,525,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,526,* <pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,527,* YearMonthDay subtracted = dt.minusMonths(6);
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,528,* YearMonthDay subtracted = dt.minus(Period.months(6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,529,"* YearMonthDay subtracted = dt.withFieldAdded(DurationFieldType.months(), -6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,530,* </pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,532,"* @param months  the amount of months to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,533,* @return the new datetime minus the increased months
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,534,* @since 1.1
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,536,public YearMonthDay minusMonths(int months) {
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,537,"return withFieldAdded(DurationFieldType.months(), FieldUtils.safeNegate(months));"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,541,* Returns a new datetime minus the specified number of days.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,542,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,543,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,544,* <p>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,545,* The following three lines are identical in effect:
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,546,* <pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,547,* YearMonthDay subtracted = dt.minusDays(6);
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,548,* YearMonthDay subtracted = dt.minus(Period.days(6));
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,549,"* YearMonthDay subtracted = dt.withFieldAdded(DurationFieldType.days(), -6);"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,550,* </pre>
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,552,"* @param days  the amount of days to subtract, may be negative"
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,553,* @return the new datetime minus the increased days
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,554,* @since 1.1
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,556,public YearMonthDay minusDays(int days) {
True,JodaTime/src/java/org/joda/time/YearMonthDay.java,JodaTime/src/java/org/joda/time/YearMonthDay.java,557,"return withFieldAdded(DurationFieldType.days(), FieldUtils.safeNegate(days));"
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,41,* Negates the input throwing an exception if it can't negate it.
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,43,* @param value  the value to negate
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,44,* @return the negated value
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,45,* @throws ArithmeticException if the value is Integer.MIN_VALUE
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,47,public static int safeNegate(int value) {
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,48,if (value == Integer.MIN_VALUE) {
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,49,"throw new ArithmeticException(""Integer.MIN_VALUE cannoy be negated"");"
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,51,return -value;
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,60,* @throws ArithmeticException if the value is too big or too small
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,76,* @throws ArithmeticException if the value is too big or too small
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,95,* @throws ArithmeticException if the value is too big or too small
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,113,* @throws ArithmeticException if the value is too big or too small
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,131,* @throws ArithmeticException if the value is too big or too small
True,JodaTime/src/java/org/joda/time/field/FieldUtils.java,JodaTime/src/java/org/joda/time/field/FieldUtils.java,146,* @throws ArithmeticException if the value is too big or too small
