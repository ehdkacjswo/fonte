is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,116,ublic static LocalDateTime forFields(Calendar calendar) {
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,116,public static LocalDateTime fromCalendarFields(Calendar calendar) {
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,146,ublic static LocalDateTime forFields(Date date) {
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,146,public static LocalDateTime fromDateFields(Date date) {
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,64,suite.addTest(TestLocalDateTime_Constructors.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,66,suite.addTest(TestLocalDateTime_Properties.suite());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,2,*  Copyright 2001-2006 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,16,package org.joda.time;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,18,import java.util.Calendar;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,19,import java.util.Date;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,20,import java.util.GregorianCalendar;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,22,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,23,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,25,import org.joda.time.chrono.GregorianChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,26,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,29,* This class is a Junit unit test for LocalDateTime.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,31,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,33,public class TestLocalDateTime_Constructors extends TestCase {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,35,"private static final DateTimeZone LONDON = DateTimeZone.forID(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,36,"private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,37,"private static final DateTimeZone MOSCOW = DateTimeZone.forID(""Europe/Moscow"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,38,private static final Chronology ISO_UTC = ISOChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,39,private static final Chronology GREGORIAN_UTC = GregorianChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,40,private static final Chronology GREGORIAN_PARIS = GregorianChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,41,private static final int OFFSET_PARIS = PARIS.getOffset(0L) / DateTimeConstants.MILLIS_PER_HOUR;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,42,private static final int OFFSET_MOSCOW = MOSCOW.getOffset(0L) / DateTimeConstants.MILLIS_PER_HOUR;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,44,private long MILLIS_OF_DAY =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,45,10L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,46,+ 20L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,47,+ 30L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,48,+ 40L;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,49,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,50,(31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,51,+ MILLIS_OF_DAY;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,53,private long TEST_TIME1 =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,54,(31L + 28L + 31L + 6L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,55,+ 12L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,56,+ 24L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,57,private long TEST_TIME2 =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,58,(365L + 31L + 28L + 31L + 30L + 7L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,59,+ 14L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,60,+ 28L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,62,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,64,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,65,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,68,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,69,return new TestSuite(TestLocalDateTime_Constructors.class);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,72,public TestLocalDateTime_Constructors(String name) {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,73,super(name);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,76,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,77,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,78,zone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,79,DateTimeZone.setDefault(MOSCOW);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,82,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,83,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,84,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,85,zone = null;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,89,public void testFactory_FromCalendarFields() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,90,"GregorianCalendar cal = new GregorianCalendar(1970, 1, 3, 4, 5, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,91,"cal.set(Calendar.MILLISECOND, 7);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,92,"LocalDateTime expected = new LocalDateTime(1970, 2, 3, 4, 5, 6, 7);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,93,"assertEquals(expected, LocalDateTime.fromCalendarFields(cal));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,94,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,95,LocalDateTime.fromCalendarFields((Calendar) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,96,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,97,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,101,public void testFactory_FromDateFields() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,102,"GregorianCalendar cal = new GregorianCalendar(1970, 1, 3, 4, 5, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,103,"cal.set(Calendar.MILLISECOND, 7);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,104,"LocalDateTime expected = new LocalDateTime(1970, 2, 3, 4, 5 ,6, 7);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,105,"assertEquals(expected, LocalDateTime.fromDateFields(cal.getTime()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,106,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,107,LocalDateTime.fromDateFields((Date) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,108,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,109,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,113,public void testConstructor() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,114,LocalDateTime test = new LocalDateTime();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,115,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,116,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,117,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,118,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,119,"assertEquals(10 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,120,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,121,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,122,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,126,public void testConstructor_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,127,"DateTime dt = new DateTime(2005, 6, 8, 23, 59, 0, 0, LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,128,DateTimeUtils.setCurrentMillisFixed(dt.getMillis());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,129,// 23:59 in London is 00:59 the following day in Paris
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,131,LocalDateTime test = new LocalDateTime(LONDON);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,132,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,133,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,134,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,135,"assertEquals(8, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,136,"assertEquals(23, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,137,"assertEquals(59, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,138,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,139,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,141,test = new LocalDateTime(PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,142,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,143,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,144,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,145,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,146,"assertEquals(0, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,147,"assertEquals(59, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,148,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,149,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,152,public void testConstructor_nullDateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,153,LocalDateTime test = new LocalDateTime((DateTimeZone) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,154,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,155,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,156,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,157,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,158,"assertEquals(10 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,159,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,160,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,161,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,165,public void testConstructor_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,166,LocalDateTime test = new LocalDateTime(GREGORIAN_PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,167,"assertEquals(GREGORIAN_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,168,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,169,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,170,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,171,"assertEquals(10 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,172,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,173,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,174,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,177,public void testConstructor_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,178,LocalDateTime test = new LocalDateTime((Chronology) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,179,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,180,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,181,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,182,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,183,"assertEquals(10 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,184,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,185,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,186,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,190,public void testConstructor_long1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,191,LocalDateTime test = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,192,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,193,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,194,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,195,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,196,"assertEquals(12 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,197,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,198,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,199,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,202,public void testConstructor_long2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,203,LocalDateTime test = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,204,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,205,"assertEquals(1971, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,206,"assertEquals(5, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,207,"assertEquals(7, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,208,"assertEquals(14 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,209,"assertEquals(28, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,210,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,211,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,215,public void testConstructor_long1_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,216,"LocalDateTime test = new LocalDateTime(TEST_TIME1, PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,217,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,218,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,219,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,220,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,221,"assertEquals(12 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,222,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,223,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,224,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,227,public void testConstructor_long2_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,228,"LocalDateTime test = new LocalDateTime(TEST_TIME2, PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,229,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,230,"assertEquals(1971, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,231,"assertEquals(5, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,232,"assertEquals(7, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,233,"assertEquals(14 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,234,"assertEquals(28, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,235,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,236,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,239,public void testConstructor_long_nullDateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,240,"LocalDateTime test = new LocalDateTime(TEST_TIME1, (DateTimeZone) null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,241,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,242,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,243,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,244,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,245,"assertEquals(12 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,246,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,247,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,248,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,252,public void testConstructor_long1_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,253,"LocalDateTime test = new LocalDateTime(TEST_TIME1, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,254,"assertEquals(GREGORIAN_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,255,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,256,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,257,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,258,"assertEquals(12 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,259,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,260,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,261,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,264,public void testConstructor_long2_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,265,"LocalDateTime test = new LocalDateTime(TEST_TIME2, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,266,"assertEquals(GREGORIAN_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,267,"assertEquals(1971, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,268,"assertEquals(5, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,269,"assertEquals(7, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,270,"assertEquals(14 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,271,"assertEquals(28, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,272,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,273,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,276,public void testConstructor_long_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,277,"LocalDateTime test = new LocalDateTime(TEST_TIME1, (Chronology) null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,278,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,279,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,280,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,281,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,282,"assertEquals(12 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,283,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,284,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,285,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,289,public void testConstructor_Object1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,290,Date date = new Date(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,291,LocalDateTime test = new LocalDateTime(date);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,292,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,293,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,294,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,295,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,296,"assertEquals(12 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,297,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,298,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,299,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,302,public void testConstructor_nullObject() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,303,LocalDateTime test = new LocalDateTime((Object) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,304,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,305,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,306,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,307,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,308,"assertEquals(10 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,309,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,310,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,311,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,315,public void testConstructor_Object_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,316,Date date = new Date(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,317,"LocalDateTime test = new LocalDateTime(date, PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,318,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,319,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,320,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,321,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,322,"assertEquals(12 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,323,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,324,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,325,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,328,public void testConstructor_nullObject_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,329,"LocalDateTime test = new LocalDateTime((Object) null, PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,330,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,331,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,332,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,333,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,334,"assertEquals(10 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,335,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,336,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,337,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,340,public void testConstructor_Object_nullDateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,341,Date date = new Date(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,342,"LocalDateTime test = new LocalDateTime(date, (DateTimeZone) null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,343,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,344,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,345,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,346,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,347,"assertEquals(12 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,348,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,349,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,350,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,353,public void testConstructor_nullObject_nullDateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,354,"LocalDateTime test = new LocalDateTime((Object) null, (DateTimeZone) null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,355,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,356,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,357,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,358,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,359,"assertEquals(10 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,360,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,361,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,362,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,366,public void testConstructor_Object_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,367,Date date = new Date(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,368,"LocalDateTime test = new LocalDateTime(date, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,369,"assertEquals(GREGORIAN_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,370,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,371,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,372,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,373,"assertEquals(12 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,374,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,375,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,376,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,379,public void testConstructor_nullObject_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,380,"LocalDateTime test = new LocalDateTime((Object) null, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,381,"assertEquals(GREGORIAN_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,382,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,383,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,384,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,385,"assertEquals(10 + OFFSET_PARIS, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,386,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,387,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,388,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,391,public void testConstructor_Object_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,392,Date date = new Date(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,393,"LocalDateTime test = new LocalDateTime(date, (Chronology) null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,394,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,395,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,396,"assertEquals(4, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,397,"assertEquals(6, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,398,"assertEquals(12 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,399,"assertEquals(24, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,400,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,401,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,404,public void testConstructor_nullObject_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,405,"LocalDateTime test = new LocalDateTime((Object) null, (Chronology) null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,406,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,407,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,408,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,409,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,410,"assertEquals(10 + OFFSET_MOSCOW, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,411,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,412,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,413,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,417,public void testConstructor_int_int_int_int_int() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,418,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,419,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,420,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,421,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,422,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,423,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,424,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,425,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,426,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,430,public void testConstructor_int_int_int_int_int_int() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,431,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,432,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,433,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,434,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,435,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,436,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,437,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,438,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,439,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,443,public void testConstructor_int_int_int_int_int_int_int() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,444,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,445,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,446,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,447,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,448,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,449,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,450,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,451,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,452,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,453,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,454,"new LocalDateTime(Integer.MIN_VALUE, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,455,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,456,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,457,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,458,"new LocalDateTime(Integer.MAX_VALUE, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,459,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,460,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,461,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,462,"new LocalDateTime(2005, 0, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,463,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,464,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,465,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,466,"new LocalDateTime(2005, 13, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,467,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,468,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,469,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,470,"new LocalDateTime(2005, 6, 0, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,471,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,472,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,473,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,474,"new LocalDateTime(2005, 6, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,475,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,476,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,477,"new LocalDateTime(2005, 7, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,478,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,479,"new LocalDateTime(2005, 7, 32, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,480,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,481,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,484,public void testConstructor_int_int_int_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,485,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,486,"assertEquals(GREGORIAN_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,487,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,488,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,489,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,490,"assertEquals(10, test.getHourOfDay());  // PARIS has no effect"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,491,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,492,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,493,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,494,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,495,"new LocalDateTime(Integer.MIN_VALUE, 6, 9, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,496,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,497,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,498,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,499,"new LocalDateTime(Integer.MAX_VALUE, 6, 9, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,500,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,501,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,502,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,503,"new LocalDateTime(2005, 0, 9, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,504,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,505,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,506,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,507,"new LocalDateTime(2005, 13, 9, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,508,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,509,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,510,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,511,"new LocalDateTime(2005, 6, 0, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,512,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,513,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,514,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,515,"new LocalDateTime(2005, 6, 31, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,516,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,517,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,518,"new LocalDateTime(2005, 7, 31, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,519,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,520,"new LocalDateTime(2005, 7, 32, 10, 20, 30, 40, GREGORIAN_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,521,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,522,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,525,public void testConstructor_int_int_int_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,526,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40, null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,527,"assertEquals(ISO_UTC, test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,528,"assertEquals(2005, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,529,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java,530,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,2,*  Copyright 2001-2006 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,16,package org.joda.time;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,18,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,20,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,21,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,23,import org.joda.time.chrono.CopticChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,26,* This class is a Junit unit test for LocalDateTime.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,28,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,30,public class TestLocalDateTime_Properties extends TestCase {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,32,private static final CopticChronology COPTIC_UTC = CopticChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,34,private int MILLIS_OF_DAY =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,35,(int) (10L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,36,+ 20L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,37,+ 30L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,38,+ 40L);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,39,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,40,(31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,41,+ MILLIS_OF_DAY;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,42,private long TEST_TIME1 =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,43,(31L + 28L + 31L + 6L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,44,+ 1L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,45,+ 2L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,46,+ 3L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,47,+ 4L;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,48,private long TEST_TIME2 =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,49,(365L + 31L + 28L + 31L + 30L + 7L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,50,+ 4L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,51,+ 5L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,52,+ 6L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,53,+ 7L;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,55,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,57,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,58,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,61,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,62,return new TestSuite(TestLocalDateTime_Properties.class);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,65,public TestLocalDateTime_Properties(String name) {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,66,super(name);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,69,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,70,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,71,zone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,72,DateTimeZone.setDefault(DateTimeZone.UTC);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,75,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,76,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,77,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,78,zone = null;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,82,public void testPropertyGetYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,83,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,84,"assertSame(test.getChronology().year(), test.year().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,85,"assertEquals(""year"", test.year().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,86,"assertEquals(""Property[year]"", test.year().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,87,"assertSame(test, test.year().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,88,"assertEquals(1972, test.year().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,89,"assertEquals(""1972"", test.year().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,90,"assertEquals(""1972"", test.year().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,91,"assertEquals(""1972"", test.year().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,92,"assertEquals(""1972"", test.year().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,93,"assertEquals(""1972"", test.year().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,94,"assertEquals(test.getChronology().years(), test.year().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,95,"assertEquals(null, test.year().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,96,"assertEquals(9, test.year().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,97,"assertEquals(9, test.year().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,100,public void testPropertyGetMaxMinValuesYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,101,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,102,"assertEquals(-292275054, test.year().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,103,"assertEquals(-292275054, test.year().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,104,"assertEquals(292278993, test.year().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,105,"assertEquals(292278993, test.year().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,108,public void testPropertyPlusYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,109,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,110,LocalDateTime copy = test.year().plus(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,111,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,112,"check(copy, 1981, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,114,copy = test.year().plus(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,115,"check(copy, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,117,copy = test.year().plus(292278993 - 1972);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,118,"check(copy, 292278993, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,120,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,121,test.year().plus(292278993 - 1972 + 1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,122,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,123,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,124,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,126,copy = test.year().plus(-1972);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,127,"check(copy, 0, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,129,copy = test.year().plus(-1973);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,130,"check(copy, -1, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,132,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,133,test.year().plus(-292275054 - 1972 - 1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,134,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,135,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,136,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,139,public void testPropertyPlusWrapFieldYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,140,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,141,LocalDateTime copy = test.year().plusWrapField(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,142,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,143,"check(copy, 1981, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,145,copy = test.year().plusWrapField(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,146,"check(copy, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,148,copy = test.year().plusWrapField(292278993 - 1972 + 1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,149,"check(copy, -292275054, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,151,copy = test.year().plusWrapField(-292275054 - 1972 - 1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,152,"check(copy, 292278993, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,155,public void testPropertyWithYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,156,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,157,LocalDateTime copy = test.year().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,158,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,159,"check(copy, 12, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,162,public void testPropertyWithTextYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,163,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,164,"LocalDateTime copy = test.year().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,165,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,166,"check(copy, 12, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,169,public void testPropertyCompareToYear() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,170,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,171,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,172,"assertEquals(true, test1.year().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,173,"assertEquals(true, test2.year().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,174,"assertEquals(true, test1.year().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,175,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,176,test1.year().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,177,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,178,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,180,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,181,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,182,"assertEquals(true, test1.year().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,183,"assertEquals(true, test2.year().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,184,"assertEquals(true, test1.year().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,185,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,186,test1.year().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,187,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,188,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,192,public void testPropertyGetMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,193,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,194,"assertSame(test.getChronology().monthOfYear(), test.monthOfYear().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,195,"assertEquals(""monthOfYear"", test.monthOfYear().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,196,"assertEquals(""Property[monthOfYear]"", test.monthOfYear().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,197,"assertSame(test, test.monthOfYear().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,198,"assertEquals(6, test.monthOfYear().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,199,"assertEquals(""6"", test.monthOfYear().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,200,"assertEquals(""June"", test.monthOfYear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,201,"assertEquals(""juin"", test.monthOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,202,"assertEquals(""Jun"", test.monthOfYear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,203,"assertEquals(""juin"", test.monthOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,204,"assertEquals(test.getChronology().months(), test.monthOfYear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,205,"assertEquals(test.getChronology().years(), test.monthOfYear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,206,"assertEquals(9, test.monthOfYear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,207,"assertEquals(3, test.monthOfYear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,208,"test = new LocalDateTime(1972, 7, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,209,"assertEquals(""juillet"", test.monthOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,210,"assertEquals(""juil."", test.monthOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,213,public void testPropertyGetMaxMinValuesMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,214,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,215,"assertEquals(1, test.monthOfYear().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,216,"assertEquals(1, test.monthOfYear().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,217,"assertEquals(12, test.monthOfYear().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,218,"assertEquals(12, test.monthOfYear().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,221,public void testPropertyPlusMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,222,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,223,LocalDateTime copy = test.monthOfYear().plus(6);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,224,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,225,"check(copy, 1972, 12, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,227,copy = test.monthOfYear().plus(7);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,228,"check(copy, 1973, 1, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,230,copy = test.monthOfYear().plus(-5);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,231,"check(copy, 1972, 1, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,233,copy = test.monthOfYear().plus(-6);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,234,"check(copy, 1971, 12, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,236,"test = new LocalDateTime(1972, 1, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,237,copy = test.monthOfYear().plus(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,238,"check(copy, 1972, 2, 29, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,240,copy = test.monthOfYear().plus(2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,241,"check(copy, 1972, 3, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,243,copy = test.monthOfYear().plus(3);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,244,"check(copy, 1972, 4, 30, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,246,"test = new LocalDateTime(1971, 1, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,247,copy = test.monthOfYear().plus(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,248,"check(copy, 1971, 2, 28, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,251,public void testPropertyPlusWrapFieldMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,252,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,253,LocalDateTime copy = test.monthOfYear().plusWrapField(4);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,254,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,255,"check(copy, 1972, 10, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,257,copy = test.monthOfYear().plusWrapField(8);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,258,"check(copy, 1972, 2, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,260,copy = test.monthOfYear().plusWrapField(-8);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,261,"check(copy, 1972, 10, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,263,"test = new LocalDateTime(1972, 1, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,264,copy = test.monthOfYear().plusWrapField(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,265,"check(copy, 1972, 2, 29, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,267,copy = test.monthOfYear().plusWrapField(2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,268,"check(copy, 1972, 3, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,270,copy = test.monthOfYear().plusWrapField(3);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,271,"check(copy, 1972, 4, 30, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,273,"test = new LocalDateTime(1971, 1, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,274,copy = test.monthOfYear().plusWrapField(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,275,"check(copy, 1971, 2, 28, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,278,public void testPropertyWithMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,279,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,280,LocalDateTime copy = test.monthOfYear().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,281,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,282,"check(copy, 1972, 12, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,284,"test = new LocalDateTime(1972, 1, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,285,copy = test.monthOfYear().withValue(2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,286,"check(copy, 1972, 2, 29, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,288,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,289,test.monthOfYear().withValue(13);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,290,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,291,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,292,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,293,test.monthOfYear().withValue(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,294,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,295,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,298,public void testPropertyWithTextMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,299,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,300,"LocalDateTime copy = test.monthOfYear().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,301,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,302,"check(copy, 1972, 12, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,304,"copy = test.monthOfYear().withValue(""December"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,305,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,306,"check(copy, 1972, 12, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,308,"copy = test.monthOfYear().withValue(""Dec"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,309,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,310,"check(copy, 1972, 12, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,313,public void testPropertyCompareToMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,314,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,315,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,316,"assertEquals(true, test1.monthOfYear().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,317,"assertEquals(true, test2.monthOfYear().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,318,"assertEquals(true, test1.monthOfYear().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,319,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,320,test1.monthOfYear().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,321,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,322,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,324,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,325,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,326,"assertEquals(true, test1.monthOfYear().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,327,"assertEquals(true, test2.monthOfYear().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,328,"assertEquals(true, test1.monthOfYear().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,329,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,330,test1.monthOfYear().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,331,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,332,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,336,public void testPropertyGetDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,337,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,338,"assertSame(test.getChronology().dayOfMonth(), test.dayOfMonth().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,339,"assertEquals(""dayOfMonth"", test.dayOfMonth().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,340,"assertEquals(""Property[dayOfMonth]"", test.dayOfMonth().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,341,"assertSame(test, test.dayOfMonth().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,342,"assertEquals(9, test.dayOfMonth().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,343,"assertEquals(""9"", test.dayOfMonth().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,344,"assertEquals(""9"", test.dayOfMonth().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,345,"assertEquals(""9"", test.dayOfMonth().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,346,"assertEquals(""9"", test.dayOfMonth().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,347,"assertEquals(""9"", test.dayOfMonth().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,348,"assertEquals(test.getChronology().days(), test.dayOfMonth().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,349,"assertEquals(test.getChronology().months(), test.dayOfMonth().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,350,"assertEquals(2, test.dayOfMonth().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,351,"assertEquals(2, test.dayOfMonth().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,354,public void testPropertyGetMaxMinValuesDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,355,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,356,"assertEquals(1, test.dayOfMonth().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,357,"assertEquals(1, test.dayOfMonth().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,358,"assertEquals(30, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,359,"assertEquals(31, test.dayOfMonth().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,360,"test = new LocalDateTime(1972, 7, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,361,"assertEquals(31, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,362,"test = new LocalDateTime(1972, 2, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,363,"assertEquals(29, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,364,"test = new LocalDateTime(1971, 2, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,365,"assertEquals(28, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,368,public void testPropertyPlusDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,369,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,370,LocalDateTime copy = test.dayOfMonth().plus(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,371,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,372,"check(copy, 1972, 6, 18, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,374,copy = test.dayOfMonth().plus(21);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,375,"check(copy, 1972, 6, 30, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,377,copy = test.dayOfMonth().plus(22);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,378,"check(copy, 1972, 7, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,380,copy = test.dayOfMonth().plus(22 + 30);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,381,"check(copy, 1972, 7, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,383,copy = test.dayOfMonth().plus(22 + 31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,384,"check(copy, 1972, 8, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,386,copy = test.dayOfMonth().plus(21 + 31 + 31 + 30 + 31 + 30 + 31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,387,"check(copy, 1972, 12, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,389,copy = test.dayOfMonth().plus(22 + 31 + 31 + 30 + 31 + 30 + 31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,390,"check(copy, 1973, 1, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,392,copy = test.dayOfMonth().plus(-8);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,393,"check(copy, 1972, 6, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,395,copy = test.dayOfMonth().plus(-9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,396,"check(copy, 1972, 5, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,398,copy = test.dayOfMonth().plus(-8 - 31 - 30 - 31 - 29 - 31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,399,"check(copy, 1972, 1, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,401,copy = test.dayOfMonth().plus(-9 - 31 - 30 - 31 - 29 - 31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,402,"check(copy, 1971, 12, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,405,public void testPropertyPlusWrapFieldDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,406,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,407,LocalDateTime copy = test.dayOfMonth().plusWrapField(21);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,408,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,409,"check(copy, 1972, 6, 30, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,411,copy = test.dayOfMonth().plusWrapField(22);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,412,"check(copy, 1972, 6, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,414,copy = test.dayOfMonth().plusWrapField(-12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,415,"check(copy, 1972, 6, 27, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,417,"test = new LocalDateTime(1972, 7, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,418,copy = test.dayOfMonth().plusWrapField(21);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,419,"check(copy, 1972, 7, 30, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,421,copy = test.dayOfMonth().plusWrapField(22);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,422,"check(copy, 1972, 7, 31, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,424,copy = test.dayOfMonth().plusWrapField(23);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,425,"check(copy, 1972, 7, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,427,copy = test.dayOfMonth().plusWrapField(-12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,428,"check(copy, 1972, 7, 28, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,431,public void testPropertyWithDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,432,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,433,LocalDateTime copy = test.dayOfMonth().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,434,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,435,"check(copy, 1972, 6, 12, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,437,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,438,test.dayOfMonth().withValue(31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,439,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,440,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,441,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,442,test.dayOfMonth().withValue(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,443,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,444,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,447,public void testPropertyWithTextDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,448,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,449,"LocalDateTime copy = test.dayOfMonth().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,450,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,451,"check(copy, 1972, 6, 12, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,454,public void testPropertyWithMaximumValueDayOfMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,455,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,456,LocalDateTime copy = test.dayOfMonth().withMaximumValue();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,457,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,458,"check(copy, 1972, 6, 30, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,461,public void testPropertyWithMinimumValueDayOfMonth() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,462,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,463,LocalDateTime copy = test.dayOfMonth().withMinimumValue();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,464,"check(test, 1972, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,465,"check(copy, 1972, 6, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,468,public void testPropertyCompareToDay() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,469,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,470,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,471,"assertEquals(true, test1.dayOfMonth().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,472,"assertEquals(true, test2.dayOfMonth().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,473,"assertEquals(true, test1.dayOfMonth().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,474,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,475,test1.dayOfMonth().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,476,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,477,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,479,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,480,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,481,"assertEquals(true, test1.dayOfMonth().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,482,"assertEquals(true, test2.dayOfMonth().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,483,"assertEquals(true, test1.dayOfMonth().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,484,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,485,test1.dayOfMonth().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,486,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,487,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,490,public void testPropertyEquals() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,491,"LocalDateTime test1 = new LocalDateTime(2005, 11, 8, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,492,"LocalDateTime test2 = new LocalDateTime(2005, 11, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,493,"LocalDateTime test3 = new LocalDateTime(2005, 11, 8, 10, 20, 30, 40, COPTIC_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,494,"assertEquals(false, test1.dayOfMonth().equals(test1.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,495,"assertEquals(false, test1.dayOfMonth().equals(test1.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,496,"assertEquals(true, test1.dayOfMonth().equals(test1.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,497,"assertEquals(false, test1.dayOfMonth().equals(test2.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,498,"assertEquals(false, test1.dayOfMonth().equals(test2.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,499,"assertEquals(false, test1.dayOfMonth().equals(test2.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,501,"assertEquals(false, test1.monthOfYear().equals(test1.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,502,"assertEquals(true, test1.monthOfYear().equals(test1.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,503,"assertEquals(false, test1.monthOfYear().equals(test1.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,504,"assertEquals(false, test1.monthOfYear().equals(test2.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,505,"assertEquals(true, test1.monthOfYear().equals(test2.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,506,"assertEquals(false, test1.monthOfYear().equals(test2.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,508,"assertEquals(false, test1.dayOfMonth().equals(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,509,"assertEquals(false, test1.dayOfMonth().equals(""any""));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,511,// chrono
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,512,"assertEquals(false, test1.dayOfMonth().equals(test3.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,515,public void testPropertyHashCode() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,516,"LocalDateTime test1 = new LocalDateTime(2005, 11, 8, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,517,"LocalDateTime test2 = new LocalDateTime(2005, 11, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,518,"assertEquals(true, test1.dayOfMonth().hashCode() == test1.dayOfMonth().hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,519,"assertEquals(false, test1.dayOfMonth().hashCode() == test2.dayOfMonth().hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,520,"assertEquals(true, test1.monthOfYear().hashCode() == test1.monthOfYear().hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,521,"assertEquals(true, test1.monthOfYear().hashCode() == test2.monthOfYear().hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,525,public void testPropertyGetHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,526,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,527,"assertSame(test.getChronology().hourOfDay(), test.hourOfDay().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,528,"assertEquals(""hourOfDay"", test.hourOfDay().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,529,"assertEquals(""Property[hourOfDay]"", test.hourOfDay().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,530,"assertSame(test, test.hourOfDay().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,531,"assertEquals(10, test.hourOfDay().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,532,"assertEquals(""10"", test.hourOfDay().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,533,"assertEquals(""10"", test.hourOfDay().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,534,"assertEquals(""10"", test.hourOfDay().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,535,"assertEquals(""10"", test.hourOfDay().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,536,"assertEquals(""10"", test.hourOfDay().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,537,"assertEquals(test.getChronology().hours(), test.hourOfDay().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,538,"assertEquals(test.getChronology().days(), test.hourOfDay().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,539,"assertEquals(2, test.hourOfDay().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,540,"assertEquals(2, test.hourOfDay().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,543,public void testPropertyRoundHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,544,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,545,"check(test.hourOfDay().roundCeiling(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,546,"check(test.hourOfDay().roundFloor(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,547,"check(test.hourOfDay().roundHalfCeiling(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,548,"check(test.hourOfDay().roundHalfFloor(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,549,"check(test.hourOfDay().roundHalfEven(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,551,"test = new LocalDateTime(2005, 6, 9, 10, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,552,"check(test.hourOfDay().roundCeiling(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,553,"check(test.hourOfDay().roundFloor(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,554,"check(test.hourOfDay().roundHalfCeiling(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,555,"check(test.hourOfDay().roundHalfFloor(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,556,"check(test.hourOfDay().roundHalfEven(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,558,"test = new LocalDateTime(2005, 6, 9, 10, 30);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,559,"check(test.hourOfDay().roundCeiling(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,560,"check(test.hourOfDay().roundFloor(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,561,"check(test.hourOfDay().roundHalfCeiling(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,562,"check(test.hourOfDay().roundHalfFloor(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,563,"check(test.hourOfDay().roundHalfEven(), 2005, 6, 9, 10, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,565,"test = new LocalDateTime(2005, 6, 9, 11, 30);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,566,"check(test.hourOfDay().roundCeiling(), 2005, 6, 9, 12, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,567,"check(test.hourOfDay().roundFloor(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,568,"check(test.hourOfDay().roundHalfCeiling(), 2005, 6, 9, 12, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,569,"check(test.hourOfDay().roundHalfFloor(), 2005, 6, 9, 11, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,570,"check(test.hourOfDay().roundHalfEven(), 2005, 6, 9, 12, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,573,public void testPropertyGetMaxMinValuesHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,574,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,575,"assertEquals(0, test.hourOfDay().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,576,"assertEquals(0, test.hourOfDay().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,577,"assertEquals(23, test.hourOfDay().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,578,"assertEquals(23, test.hourOfDay().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,581,public void testPropertyWithMaxMinValueHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,582,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,583,"check(test.hourOfDay().withMaximumValue(), 2005, 6, 9, 23, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,584,"check(test.hourOfDay().withMinimumValue(), 2005, 6, 9, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,587,public void testPropertyPlusHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,588,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,589,LocalDateTime copy = test.hourOfDay().plus(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,590,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,591,"check(copy, 2005, 6, 9, 19, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,593,copy = test.hourOfDay().plus(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,594,"check(copy, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,596,copy = test.hourOfDay().plus(13);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,597,"check(copy, 2005, 6, 9, 23, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,599,copy = test.hourOfDay().plus(14);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,600,"check(copy, 2005, 6, 10, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,602,copy = test.hourOfDay().plus(-10);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,603,"check(copy, 2005, 6, 9, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,605,copy = test.hourOfDay().plus(-11);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,606,"check(copy, 2005, 6, 8, 23, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,609,public void testPropertyPlusWrapFieldHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,610,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,611,LocalDateTime copy = test.hourOfDay().plusWrapField(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,612,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,613,"check(copy, 2005, 6, 9, 19, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,615,copy = test.hourOfDay().plusWrapField(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,616,"check(copy, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,618,copy = test.hourOfDay().plusWrapField(18);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,619,"check(copy, 2005, 6, 9, 4, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,621,copy = test.hourOfDay().plusWrapField(-15);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,622,"check(copy, 2005, 6, 9, 19, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,625,public void testPropertySetHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,626,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,627,LocalDateTime copy = test.hourOfDay().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,628,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,629,"check(copy, 2005, 6, 9, 12, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,631,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,632,test.hourOfDay().withValue(24);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,633,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,634,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,635,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,636,test.hourOfDay().withValue(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,637,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,638,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,641,public void testPropertySetTextHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,642,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,643,"LocalDateTime copy = test.hourOfDay().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,644,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,645,"check(copy, 2005, 6, 9, 12, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,648,public void testPropertyWithMaximumValueHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,649,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,650,LocalDateTime copy = test.hourOfDay().withMaximumValue();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,651,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,652,"check(copy, 2005, 6, 9, 23, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,655,public void testPropertyWithMinimumValueHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,656,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,657,LocalDateTime copy = test.hourOfDay().withMinimumValue();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,658,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,659,"check(copy, 2005, 6, 9, 0, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,662,public void testPropertyCompareToHour() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,663,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,664,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,665,"assertEquals(true, test1.hourOfDay().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,666,"assertEquals(true, test2.hourOfDay().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,667,"assertEquals(true, test1.hourOfDay().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,668,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,669,test1.hourOfDay().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,670,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,671,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,673,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,674,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,675,"assertEquals(true, test1.hourOfDay().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,676,"assertEquals(true, test2.hourOfDay().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,677,"assertEquals(true, test1.hourOfDay().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,678,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,679,test1.hourOfDay().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,680,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,681,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,685,public void testPropertyGetMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,686,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,687,"assertSame(test.getChronology().minuteOfHour(), test.minuteOfHour().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,688,"assertEquals(""minuteOfHour"", test.minuteOfHour().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,689,"assertEquals(""Property[minuteOfHour]"", test.minuteOfHour().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,690,"assertSame(test, test.minuteOfHour().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,691,"assertEquals(20, test.minuteOfHour().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,692,"assertEquals(""20"", test.minuteOfHour().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,693,"assertEquals(""20"", test.minuteOfHour().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,694,"assertEquals(""20"", test.minuteOfHour().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,695,"assertEquals(""20"", test.minuteOfHour().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,696,"assertEquals(""20"", test.minuteOfHour().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,697,"assertEquals(test.getChronology().minutes(), test.minuteOfHour().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,698,"assertEquals(test.getChronology().hours(), test.minuteOfHour().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,699,"assertEquals(2, test.minuteOfHour().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,700,"assertEquals(2, test.minuteOfHour().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,703,public void testPropertyGetMaxMinValuesMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,704,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,705,"assertEquals(0, test.minuteOfHour().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,706,"assertEquals(0, test.minuteOfHour().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,707,"assertEquals(59, test.minuteOfHour().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,708,"assertEquals(59, test.minuteOfHour().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,711,public void testPropertyWithMaxMinValueMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,712,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,713,"check(test.minuteOfHour().withMaximumValue(), 2005, 6, 9, 10, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,714,"check(test.minuteOfHour().withMinimumValue(), 2005, 6, 9, 10, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,717,public void testPropertyPlusMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,718,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,719,LocalDateTime copy = test.minuteOfHour().plus(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,720,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,721,"check(copy, 2005, 6, 9, 10, 29, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,723,copy = test.minuteOfHour().plus(39);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,724,"check(copy, 2005, 6, 9, 10, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,726,copy = test.minuteOfHour().plus(40);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,727,"check(copy, 2005, 6, 9, 11, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,729,copy = test.minuteOfHour().plus(1 * 60 + 45);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,730,"check(copy, 2005, 6, 9, 12, 5, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,732,copy = test.minuteOfHour().plus(13 * 60 + 39);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,733,"check(copy, 2005, 6, 9, 23, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,735,copy = test.minuteOfHour().plus(13 * 60 + 40);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,736,"check(copy, 2005, 6, 10, 0, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,738,copy = test.minuteOfHour().plus(-9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,739,"check(copy, 2005, 6, 9, 10, 11, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,741,copy = test.minuteOfHour().plus(-19);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,742,"check(copy, 2005, 6, 9, 10, 1, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,744,copy = test.minuteOfHour().plus(-20);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,745,"check(copy, 2005, 6, 9, 10, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,747,copy = test.minuteOfHour().plus(-21);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,748,"check(copy, 2005, 6, 9, 9, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,750,copy = test.minuteOfHour().plus(-(10 * 60 + 20));
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,751,"check(copy, 2005, 6, 9, 0, 0, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,753,copy = test.minuteOfHour().plus(-(10 * 60 + 21));
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,754,"check(copy, 2005, 6, 8, 23, 59, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,757,public void testPropertyPlusWrapFieldMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,758,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,759,LocalDateTime copy = test.minuteOfHour().plusWrapField(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,760,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,761,"check(copy, 2005, 6, 9, 10, 29, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,763,copy = test.minuteOfHour().plusWrapField(49);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,764,"check(copy, 2005, 6, 9, 10, 9, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,766,copy = test.minuteOfHour().plusWrapField(-47);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,767,"check(copy, 2005, 6, 9, 10, 33, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,770,public void testPropertySetMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,771,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,772,LocalDateTime copy = test.minuteOfHour().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,773,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,774,"check(copy, 2005, 6, 9, 10, 12, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,776,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,777,test.minuteOfHour().withValue(60);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,778,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,779,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,780,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,781,test.minuteOfHour().withValue(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,782,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,783,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,786,public void testPropertySetTextMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,787,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,788,"LocalDateTime copy = test.minuteOfHour().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,789,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,790,"check(copy, 2005, 6, 9, 10, 12, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,793,public void testPropertyCompareToMinute() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,794,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,795,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,796,"assertEquals(true, test1.minuteOfHour().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,797,"assertEquals(true, test2.minuteOfHour().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,798,"assertEquals(true, test1.minuteOfHour().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,799,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,800,test1.minuteOfHour().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,801,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,802,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,804,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,805,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,806,"assertEquals(true, test1.minuteOfHour().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,807,"assertEquals(true, test2.minuteOfHour().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,808,"assertEquals(true, test1.minuteOfHour().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,809,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,810,test1.minuteOfHour().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,811,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,812,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,816,public void testPropertyGetSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,817,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,818,"assertSame(test.getChronology().secondOfMinute(), test.secondOfMinute().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,819,"assertEquals(""secondOfMinute"", test.secondOfMinute().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,820,"assertEquals(""Property[secondOfMinute]"", test.secondOfMinute().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,821,"assertSame(test, test.secondOfMinute().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,822,"assertEquals(30, test.secondOfMinute().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,823,"assertEquals(""30"", test.secondOfMinute().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,824,"assertEquals(""30"", test.secondOfMinute().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,825,"assertEquals(""30"", test.secondOfMinute().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,826,"assertEquals(""30"", test.secondOfMinute().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,827,"assertEquals(""30"", test.secondOfMinute().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,828,"assertEquals(test.getChronology().seconds(), test.secondOfMinute().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,829,"assertEquals(test.getChronology().minutes(), test.secondOfMinute().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,830,"assertEquals(2, test.secondOfMinute().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,831,"assertEquals(2, test.secondOfMinute().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,834,public void testPropertyGetMaxMinValuesSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,835,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,836,"assertEquals(0, test.secondOfMinute().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,837,"assertEquals(0, test.secondOfMinute().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,838,"assertEquals(59, test.secondOfMinute().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,839,"assertEquals(59, test.secondOfMinute().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,842,public void testPropertyWithMaxMinValueSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,843,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,844,"check(test.secondOfMinute().withMaximumValue(), 2005, 6, 9, 10, 20, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,845,"check(test.secondOfMinute().withMinimumValue(), 2005, 6, 9, 10, 20, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,848,public void testPropertyPlusSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,849,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,850,LocalDateTime copy = test.secondOfMinute().plus(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,851,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,852,"check(copy, 2005, 6, 9, 10, 20, 39, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,854,copy = test.secondOfMinute().plus(29);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,855,"check(copy, 2005, 6, 9, 10, 20, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,857,copy = test.secondOfMinute().plus(30);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,858,"check(copy, 2005, 6, 9, 10, 21, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,860,copy = test.secondOfMinute().plus(39 * 60 + 29);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,861,"check(copy, 2005, 6, 9, 10, 59, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,863,copy = test.secondOfMinute().plus(39 * 60 + 30);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,864,"check(copy, 2005, 6, 9, 11, 0, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,866,copy = test.secondOfMinute().plus(13 * 60 * 60 + 39 * 60 + 30);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,867,"check(copy, 2005, 6, 10, 0, 0, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,869,copy = test.secondOfMinute().plus(-9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,870,"check(copy, 2005, 6, 9, 10, 20, 21, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,872,copy = test.secondOfMinute().plus(-30);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,873,"check(copy, 2005, 6, 9, 10, 20, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,875,copy = test.secondOfMinute().plus(-31);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,876,"check(copy, 2005, 6, 9, 10, 19, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,878,copy = test.secondOfMinute().plus(-(10 * 60 * 60 + 20 * 60 + 30));
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,879,"check(copy, 2005, 6, 9, 0, 0, 0, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,881,copy = test.secondOfMinute().plus(-(10 * 60 * 60 + 20 * 60 + 31));
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,882,"check(copy, 2005, 6, 8, 23, 59, 59, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,885,public void testPropertyPlusWrapFieldSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,886,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,887,LocalDateTime copy = test.secondOfMinute().plusWrapField(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,888,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,889,"check(copy, 2005, 6, 9, 10, 20, 39, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,891,copy = test.secondOfMinute().plusWrapField(49);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,892,"check(copy, 2005, 6, 9, 10, 20, 19, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,894,copy = test.secondOfMinute().plusWrapField(-47);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,895,"check(copy, 2005, 6, 9, 10, 20, 43, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,898,public void testPropertySetSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,899,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,900,LocalDateTime copy = test.secondOfMinute().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,901,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,902,"check(copy, 2005, 6, 9, 10, 20, 12, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,904,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,905,test.secondOfMinute().withValue(60);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,906,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,907,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,908,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,909,test.secondOfMinute().withValue(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,910,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,911,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,914,public void testPropertySetTextSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,915,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,916,"LocalDateTime copy = test.secondOfMinute().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,917,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,918,"check(copy, 2005, 6, 9, 10, 20, 12, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,921,public void testPropertyCompareToSecond() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,922,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,923,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,924,"assertEquals(true, test1.secondOfMinute().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,925,"assertEquals(true, test2.secondOfMinute().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,926,"assertEquals(true, test1.secondOfMinute().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,927,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,928,test1.secondOfMinute().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,929,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,930,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,932,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,933,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,934,"assertEquals(true, test1.secondOfMinute().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,935,"assertEquals(true, test2.secondOfMinute().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,936,"assertEquals(true, test1.secondOfMinute().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,937,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,938,test1.secondOfMinute().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,939,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,940,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,944,public void testPropertyGetMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,945,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,946,"assertSame(test.getChronology().millisOfSecond(), test.millisOfSecond().getField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,947,"assertEquals(""millisOfSecond"", test.millisOfSecond().getName());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,948,"assertEquals(""Property[millisOfSecond]"", test.millisOfSecond().toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,949,"assertSame(test, test.millisOfSecond().getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,950,"assertEquals(40, test.millisOfSecond().get());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,951,"assertEquals(""40"", test.millisOfSecond().getAsString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,952,"assertEquals(""40"", test.millisOfSecond().getAsText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,953,"assertEquals(""40"", test.millisOfSecond().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,954,"assertEquals(""40"", test.millisOfSecond().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,955,"assertEquals(""40"", test.millisOfSecond().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,956,"assertEquals(test.getChronology().millis(), test.millisOfSecond().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,957,"assertEquals(test.getChronology().seconds(), test.millisOfSecond().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,958,"assertEquals(3, test.millisOfSecond().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,959,"assertEquals(3, test.millisOfSecond().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,962,public void testPropertyGetMaxMinValuesMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,963,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,964,"assertEquals(0, test.millisOfSecond().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,965,"assertEquals(0, test.millisOfSecond().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,966,"assertEquals(999, test.millisOfSecond().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,967,"assertEquals(999, test.millisOfSecond().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,970,public void testPropertyWithMaxMinValueMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,971,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,972,"check(test.millisOfSecond().withMaximumValue(), 2005, 6, 9, 10, 20, 30, 999);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,973,"check(test.millisOfSecond().withMinimumValue(), 2005, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,976,public void testPropertyPlusMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,977,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,978,LocalDateTime copy = test.millisOfSecond().plus(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,979,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,980,"check(copy, 2005, 6, 9, 10, 20, 30, 49);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,982,copy = test.millisOfSecond().plus(959);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,983,"check(copy, 2005, 6, 9, 10, 20, 30, 999);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,985,copy = test.millisOfSecond().plus(960);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,986,"check(copy, 2005, 6, 9, 10, 20, 31, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,988,copy = test.millisOfSecond().plus(13 * 60 * 60 * 1000 + 39 * 60 * 1000 + 29 * 1000 + 959);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,989,"check(copy, 2005, 6, 9, 23, 59, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,991,copy = test.millisOfSecond().plus(13 * 60 * 60 * 1000 + 39 * 60 * 1000 + 29 * 1000 + 960);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,992,"check(copy, 2005, 6, 10, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,994,copy = test.millisOfSecond().plus(-9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,995,"check(copy, 2005, 6, 9, 10, 20, 30, 31);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,997,copy = test.millisOfSecond().plus(-40);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,998,"check(copy, 2005, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1000,copy = test.millisOfSecond().plus(-41);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1001,"check(copy, 2005, 6, 9, 10, 20, 29, 999);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1003,copy = test.millisOfSecond().plus(-(10 * 60 * 60 * 1000 + 20 * 60 * 1000 + 30 * 1000 + 40));
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1004,"check(copy, 2005, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1006,copy = test.millisOfSecond().plus(-(10 * 60 * 60 * 1000 + 20 * 60 * 1000 + 30 * 1000 + 41));
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1007,"check(copy, 2005, 6, 8, 23, 59, 59, 999);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1010,public void testPropertyPlusWrapFieldMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1011,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1012,LocalDateTime copy = test.millisOfSecond().plusWrapField(9);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1013,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1014,"check(copy, 2005, 6, 9, 10, 20, 30, 49);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1016,copy = test.millisOfSecond().plusWrapField(995);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1017,"check(copy, 2005, 6, 9, 10, 20, 30, 35);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1019,copy = test.millisOfSecond().plusWrapField(-47);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1020,"check(copy, 2005, 6, 9, 10, 20, 30, 993);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1023,public void testPropertySetMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1024,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1025,LocalDateTime copy = test.millisOfSecond().withValue(12);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1026,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1027,"check(copy, 2005, 6, 9, 10, 20, 30, 12);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1029,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1030,test.millisOfSecond().withValue(1000);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1031,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1032,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1033,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1034,test.millisOfSecond().withValue(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1035,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1036,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1039,public void testPropertySetTextMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1040,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1041,"LocalDateTime copy = test.millisOfSecond().withValue(""12"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1042,"check(test, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1043,"check(copy, 2005, 6, 9, 10, 20, 30, 12);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1046,public void testPropertyCompareToMilli() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1047,LocalDateTime test1 = new LocalDateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1048,LocalDateTime test2 = new LocalDateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1049,"assertEquals(true, test1.millisOfSecond().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1050,"assertEquals(true, test2.millisOfSecond().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1051,"assertEquals(true, test1.millisOfSecond().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1052,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1053,test1.millisOfSecond().compareTo((ReadablePartial) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1054,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1055,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1057,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1058,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1059,"assertEquals(true, test1.millisOfSecond().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1060,"assertEquals(true, test2.millisOfSecond().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1061,"assertEquals(true, test1.millisOfSecond().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1062,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1063,test1.millisOfSecond().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1064,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1065,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1069,"private void check(LocalDateTime test, int year, int month, int day, int hour, int min, int sec, int mil) {"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1070,"assertEquals(year, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1071,"assertEquals(month, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1072,"assertEquals(day, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1073,"assertEquals(hour, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1074,"assertEquals(min, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1075,"assertEquals(sec, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java,1076,"assertEquals(mil, test.getMillisOfSecond());"
