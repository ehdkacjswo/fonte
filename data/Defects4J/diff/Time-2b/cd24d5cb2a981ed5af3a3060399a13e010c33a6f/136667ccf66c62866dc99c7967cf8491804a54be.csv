is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,899,* <p>
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,900,* If the input is a {@code ReadableDateTime} then it is converted to the
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,901,* same time-zone as this object before using the instant millis.
False,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,905,hronology instantChrono = DateTimeUtils.getInstantChronology(instant);
False,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,906,ateTimeZone zone = instantChrono.getZone();
False,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,907,f (zone != null) {
False,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,908,"nstantMillis = zone.getMillisKeepLocal(DateTimeZone.UTC, instantMillis);"
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,908,if (instant instanceof ReadableDateTime) {
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,909,ReadableDateTime rdt = (ReadableDateTime) instant;
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,910,Chronology instantChrono = DateTimeUtils.getChronology(rdt.getChronology());
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,911,DateTimeZone zone = instantChrono.getZone();
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,912,if (zone != null) {
True,src/main/java/org/joda/time/MutableDateTime.java,src/main/java/org/joda/time/MutableDateTime.java,913,"instantMillis = zone.getMillisKeepLocal(getZone(), instantMillis);"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,278,public void testSetDate_RI_same() {
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,279,"MutableDateTime setter = new MutableDateTime(2010, 12, 3, 2, 24, 48, 501, DateTimeZone.forID(""America/Los_Angeles""));"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,280,"MutableDateTime test = new MutableDateTime(2010, 12, 3, 2, 24, 48, 501, DateTimeZone.forID(""America/Los_Angeles""));"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,281,test.setDate(setter);
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,282,"assertEquals(2010, test.getYear());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,283,"assertEquals(12, test.getMonthOfYear());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,284,"assertEquals(3, test.getDayOfMonth());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,285,"assertEquals(2, test.getHourOfDay());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,286,"assertEquals(24, test.getMinuteOfHour());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,287,"assertEquals(48, test.getSecondOfMinute());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,288,"assertEquals(501, test.getMillisOfSecond());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,291,public void testSetDate_RI_different1() {
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,292,"MutableDateTime setter = new MutableDateTime(2010, 12, 1, 0, 0, 0, 0, DateTimeZone.forID(""America/Los_Angeles""));"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,293,"MutableDateTime test = new MutableDateTime(2010, 12, 3, 2, 24, 48, 501, DateTimeZone.forID(""Europe/Moscow""));"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,294,test.setDate(setter);
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,295,"assertEquals(2010, test.getYear());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,296,"assertEquals(12, test.getMonthOfYear());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,297,"assertEquals(1, test.getDayOfMonth());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,298,"assertEquals(2, test.getHourOfDay());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,299,"assertEquals(24, test.getMinuteOfHour());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,300,"assertEquals(48, test.getSecondOfMinute());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,301,"assertEquals(501, test.getMillisOfSecond());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,304,public void testSetDate_RI_different2() {
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,305,"MutableDateTime setter = new MutableDateTime(2010, 12, 1, 0, 0, 0, 0, DateTimeZone.forID(""Europe/Moscow""));"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,306,"MutableDateTime test = new MutableDateTime(2010, 12, 3, 2, 24, 48, 501, DateTimeZone.forID(""America/Los_Angeles""));"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,307,test.setDate(setter);
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,308,"assertEquals(2010, test.getYear());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,309,"assertEquals(12, test.getMonthOfYear());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,310,"assertEquals(1, test.getDayOfMonth());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,311,"assertEquals(2, test.getHourOfDay());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,312,"assertEquals(24, test.getMinuteOfHour());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,313,"assertEquals(48, test.getSecondOfMinute());"
True,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,src/test/java/org/joda/time/TestMutableDateTime_Sets.java,314,"assertEquals(501, test.getMillisOfSecond());"
