is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/field/LenientDateTimeField.java,JodaTime/src/java/org/joda/time/field/LenientDateTimeField.java,68,f (value >= min && value < getMaximumValue(instant)) {
True,JodaTime/src/java/org/joda/time/field/LenientDateTimeField.java,JodaTime/src/java/org/joda/time/field/LenientDateTimeField.java,68,if (value >= min && value <= getMaximumValue(instant)) {
True,JodaTime/src/test/org/joda/time/chrono/TestAll.java,JodaTime/src/test/org/joda/time/chrono/TestAll.java,49,suite.addTest(TestLenientChronology.suite());
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,2,*  Copyright 2001-2007 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,16,package org.joda.time.chrono;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,18,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,19,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,21,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,22,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,26,* @author Brian S O'Neill
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,27,* @author Blair Martin
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,29,public class TestLenientChronology extends TestCase {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,30,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,31,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,34,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,35,return new TestSuite(TestLenientChronology.class);
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,38,public TestLenientChronology(String name) {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,39,super(name);
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,42,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,45,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,48,public void testNearDstTransition() {
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,49,// This is just a regression test. Test case provided by Blair Martin.
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,51,int hour = 23;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,52,DateTime dt;
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,54,"dt = new DateTime(2006, 10, 29, hour, 0, 0, 0,"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,55,"ISOChronology.getInstance(DateTimeZone.forID(""America/Los_Angeles"")));"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,56,"assertEquals(hour, dt.getHourOfDay()); // OK - no LenientChronology"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,58,"dt = new DateTime(2006, 10, 29, hour, 0, 0, 0,"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,59,LenientChronology.getInstance
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,60,(ISOChronology.getInstance(DateTimeZone.forOffsetHours(-8))));
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,61,"assertEquals(hour, dt.getHourOfDay()); // OK - no TZ ID"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,63,"dt = new DateTime(2006, 10, 29, hour, 0, 0, 0,"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,64,LenientChronology.getInstance
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,65,"(ISOChronology.getInstance(DateTimeZone.forID(""America/Los_Angeles""))));"
True,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java,67,"assertEquals(hour, dt.getHourOfDay()); // Used to fail - hour was 22"
