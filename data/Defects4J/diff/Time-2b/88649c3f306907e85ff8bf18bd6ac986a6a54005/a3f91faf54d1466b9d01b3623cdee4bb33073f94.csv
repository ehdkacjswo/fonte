is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,228,"eturn parseMillis(text, 0);"
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,228,DateTimeParser p = (DateTimeParser)this;
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,229,DateTimeParserBucket bucket = createBucket(0);
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,231,"int newPos = p.parseInto(bucket, text, 0);"
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,232,if (newPos >= 0) {
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,233,if (newPos >= text.length()) {
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,234,return bucket.computeMillis(true);
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,236,} else {
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,237,newPos = ~newPos;
True,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,JodaTime/src/java/org/joda/time/format/AbstractDateTimeFormatter.java,240,"throw new IllegalArgumentException(createErrorMessage(text, newPos));"
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,212,return computeMillis(false);
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,216,* Computes the parsed datetime by setting the saved fields. This method is
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,217,"* idempotent, but it is not thread-safe."
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,219,"* @param resetFields false by default, but when true, unsaved field values are cleared"
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,220,* @return milliseconds since 1970-01-01T00:00:00Z
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,221,* @throws IllegalArgumentException if any field is out of range
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,223,public long computeMillis(boolean resetFields) {
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,222,illis = savedFields[i].set(millis);
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,234,"millis = savedFields[i].set(millis, resetFields);"
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,291,ong set(long millis) {
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,303,"long set(long millis, boolean reset) {"
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,293,"eturn iField.set(millis, iValue);"
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,305,"millis = iField.set(millis, iValue);"
False,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,295,"eturn iField.set(millis, iText, iLocale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,307,"millis = iField.set(millis, iText, iLocale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,309,if (reset) {
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,310,millis = iField.roundFloor(millis);
True,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java,312,return millis;
