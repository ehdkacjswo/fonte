is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,62,import org.joda.time.chrono.BuddhistChronology;
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,63,import org.joda.time.chrono.CopticChronology;
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,64,import org.joda.time.chrono.GJChronology;
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,65,import org.joda.time.chrono.GregorianChronology;
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,66,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,67,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,150,public void testGetISO() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,151,"assertEquals(ISOChronology.getInstance(), Chronology.getISO());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,154,public void testGetISOUTC() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,155,"assertEquals(ISOChronology.getInstanceUTC(), Chronology.getISOUTC());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,158,public void testGetISO_Zone() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,159,"assertEquals(ISOChronology.getInstance(PARIS), Chronology.getISO(PARIS));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,160,"assertEquals(ISOChronology.getInstance(), Chronology.getISO(null));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,164,public void testGetGJ() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,165,"assertEquals(GJChronology.getInstance(), Chronology.getGJ());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,168,public void testGetGJUTC() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,169,"assertEquals(GJChronology.getInstanceUTC(), Chronology.getGJUTC());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,172,public void testGetGJ_Zone() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,173,"assertEquals(GJChronology.getInstance(PARIS), Chronology.getGJ(PARIS));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,174,"assertEquals(GJChronology.getInstance(), Chronology.getGJ(null));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,178,public void testGetGregorian() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,179,"assertEquals(GregorianChronology.getInstance(), Chronology.getGregorian());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,182,public void testGetGregorianUTC() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,183,"assertEquals(GregorianChronology.getInstanceUTC(), Chronology.getGregorianUTC());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,186,public void testGetGregorian_Zone() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,187,"assertEquals(GregorianChronology.getInstance(PARIS), Chronology.getGregorian(PARIS));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,188,"assertEquals(GregorianChronology.getInstance(), Chronology.getGregorian(null));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,192,public void testGetJulian() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,193,"assertEquals(JulianChronology.getInstance(), Chronology.getJulian());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,196,public void testGetJulianUTC() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,197,"assertEquals(JulianChronology.getInstanceUTC(), Chronology.getJulianUTC());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,200,public void testGetJulian_Zone() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,201,"assertEquals(JulianChronology.getInstance(PARIS), Chronology.getJulian(PARIS));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,202,"assertEquals(JulianChronology.getInstance(), Chronology.getJulian(null));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,206,public void testGetBuddhist() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,207,"assertEquals(BuddhistChronology.getInstance(), Chronology.getBuddhist());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,210,public void testGetBuddhistUTC() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,211,"assertEquals(BuddhistChronology.getInstanceUTC(), Chronology.getBuddhistUTC());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,214,public void testGetBuddhist_Zone() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,215,"assertEquals(BuddhistChronology.getInstance(PARIS), Chronology.getBuddhist(PARIS));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,216,"assertEquals(BuddhistChronology.getInstance(), Chronology.getBuddhist(null));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,220,public void testGetCoptic() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,221,"assertEquals(CopticChronology.getInstance(), Chronology.getCoptic());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,224,public void testGetCopticUTC() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,225,"assertEquals(CopticChronology.getInstanceUTC(), Chronology.getCopticUTC());"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,228,public void testGetCoptic_Zone() {
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,229,"assertEquals(CopticChronology.getInstance(PARIS), Chronology.getCoptic(PARIS));"
True,JodaTime/src/test/org/joda/time/TestChronology.java,JodaTime/src/test/org/joda/time/TestChronology.java,230,"assertEquals(CopticChronology.getInstance(), Chronology.getCoptic(null));"
