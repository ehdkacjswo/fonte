is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,31, It holds the datetime as milliseconds from the Java epoch of 1970-01-01T00:00:00Z.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,33, This class uses a Chronology internally. The Chronology determines how the
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,32,* <code>DateTime</code> is the most widely used implementation of
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,33,"* {@link ReadableInstant}. As with all instants, it represents an exact"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,34,"* point on the time-line, but limited to the precision of milliseconds."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,35,* A <code>DateTime</code> calculates its fields with respect to a
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,36,* {@link DateTimeZone time zone}.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,37,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,38,"* Internally, the class holds two pieces of data. Firstly, it holds the"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,39,* datetime as milliseconds from the Java epoch of 1970-01-01T00:00:00Z.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,40,"* Secondly, it holds a {@link Chronology} which determines how the"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,35, The default Chronology is <code>ISOChronology</code> which is the agreed
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,36, international standard and compatable with the modern Gregorian calendar.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,38, <p>Each individual field can be queried in two ways:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,42,* The default Chronology is {@link ISOChronology} which is the agreed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,43,* international standard and compatible with the modern Gregorian calendar.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,44,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,45,* Each individual field can be queried in two ways:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,619,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,633,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,638," If the amount is zero or null, then <code>this</code> is returned."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,646,"* This method will add each element of the period one by one, from largest"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,647,"* to smallest, adjusting the datetime to be accurate between each."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,648,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,649,"* Thus, adding a period of one month and one day to 2007-03-31 will"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,650,* work as follows:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,651,"* First add one month and adjust, resulting in 2007-04-30"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,652,"* Then add one day and adjust, resulting in 2007-05-01."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,657,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,658,"* If the amount is zero or null, then <code>this</code> is returned."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,659,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,656, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,673,* The calculation will do its best to only change the year field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,674,* retaining the same month of year.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,675,"* However, in certain circumstances, it may be necessary to alter"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,676,"* smaller fields. For example, 2008-02-29 plus one year cannot result"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,677,"* in 2009-02-29, so the day of month is adjusted to 2009-02-28."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,685,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,686,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,680, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,703,* The calculation will do its best to only change the month field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,704,* retaining the same day of month.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,705,"* However, in certain circumstances, it may be necessary to alter"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,706,"* smaller fields. For example, 2007-03-31 plus one month cannot result"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,707,"* in 2007-04-31, so the day of month is adjusted to 2007-04-30."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,715,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,716,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,704, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,733,* The calculation operates as if it were adding the equivalent in days.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,741,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,742,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,728, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,759,* The calculation will do its best to only change the day field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,760,* retaining the same time of day.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,761,"* However, in certain circumstances, typically daylight savings cutover,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,762,* it may be necessary to alter the time fields.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,763,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,764,* In spring an hour is typically removed. If adding one day results in
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,765,* the time being within the cutover then the time is adjusted to be
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,766,"* within summer time. For example, if the cutover is from 01:59 to 03:00"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,767,"* and the result of this method would have been 02:30, then the result"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,768,* will be adjusted to 03:30.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,776,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,777,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,752, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,794,* The calculation will add a duration equivalent to the number of hours
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,795,* expressed in milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,796,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,797,"* For example, if a spring daylight savings cutover is from 01:59 to 03:00"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,798,* then adding one hour to 01:30 will result in 03:30. This is a duration
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,799,"* of one hour later, even though the hour field value changed from 1 to 3."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,807,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,808,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,776, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,825,* The calculation will add a duration equivalent to the number of minutes
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,826,* expressed in milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,834,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,835,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,800, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,852,* The calculation will add a duration equivalent to the number of seconds
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,853,* expressed in milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,861,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,862,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,824, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,879,* The calculation will add a duration equivalent to the number of milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,887,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,888,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,907,* This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,921,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,875," If the amount is zero or null, then <code>this</code> is returned."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,934,"* This method will subtract each element of the period one by one, from"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,935,"* largest to smallest, adjusting the datetime to be accurate between each."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,936,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,937,"* Thus, subtracting a period of one month and one day from 2007-05-31 will"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,938,* work as follows:
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,939,"* First subtract one month and adjust, resulting in 2007-04-30"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,940,"* Then subtract one day and adjust, resulting in 2007-04-29."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,941,* Note that the day has been adjusted by two.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,946,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,947,"* If the amount is zero or null, then <code>this</code> is returned."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,948,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,893, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,962,* The calculation will do its best to only change the year field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,963,* retaining the same month of year.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,964,"* However, in certain circumstances, it may be necessary to alter"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,965,"* smaller fields. For example, 2008-02-29 minus one year cannot result"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,966,"* in 2007-02-29, so the day of month is adjusted to 2007-02-28."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,974,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,975,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,917, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,992,* The calculation will do its best to only change the month field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,993,* retaining the same day of month.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,994,"* However, in certain circumstances, it may be necessary to alter"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,995,"* smaller fields. For example, 2007-05-31 minus one month cannot result"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,996,"* in 2007-04-31, so the day of month is adjusted to 2007-04-30."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1004,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1005,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,941, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1022,* The calculation operates as if it were subtracting the equivalent in days.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1030,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1031,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,965, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1048,* The calculation will do its best to only change the day field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1049,* retaining the same time of day.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1050,"* However, in certain circumstances, typically daylight savings cutover,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1051,* it may be necessary to alter the time fields.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1052,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1053,* In spring an hour is typically removed. If subtracting one day results
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1054,* in the time being within the cutover then the time is adjusted to be
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1055,"* within summer time. For example, if the cutover is from 01:59 to 03:00"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1056,"* and the result of this method would have been 02:30, then the result"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1057,* will be adjusted to 03:30.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1065,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1066,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,989, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1083,* The calculation will subtract a duration equivalent to the number of
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1084,* hours expressed in milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1085,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1086,"* For example, if a spring daylight savings cutover is from 01:59 to 03:00"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1087,* then subtracting one hour from 03:30 will result in 01:30. This is a
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1088,"* duration of one hour earlier, even though the hour field value changed"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1089,* from 3 to 1.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1097,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1098,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1013, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1115,* The calculation will subtract a duration equivalent to the number of
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1116,* minutes expressed in milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1124,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1125,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1037, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1142,* The calculation will subtract a duration equivalent to the number of
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1143,* seconds expressed in milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1151,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1152,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1061, This datetime instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1169,* The calculation will subtract a duration equivalent to the number of
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1170,* milliseconds.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1178,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,1179,* This datetime instance is immutable and unaffected by this method call.
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,27, It holds the instant as milliseconds from the Java Epoch of 1970-01-01T00:00:00Z.
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,29, The chronology used is always ISO in the UTC time zone.
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,30, This corresponds to the definition of the Java Epoch.
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,28,* <code>Instant</code> is an implementation of {@link ReadableInstant}.
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,29,"* As with all instants, it represents an exact point on the time-line,"
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,30,* but limited to the precision of milliseconds. An <code>Instant</code>
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,31,* should be used to represent a point in time irrespective of any other
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,32,"* factor, such as chronology or time zone."
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,32, An Instant can be used to compare two <code>DateTime</code> objects:
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,34,"* Internally, the class holds one piece of data, the instant as milliseconds"
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,35,* from the Java epoch of 1970-01-01T00:00:00Z.
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,36,* <p>
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,37,"* For example, an Instant can be used to compare two <code>DateTime</code>"
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,38,* objects irrespective of chronology or time zone.
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,36, This code will return true if the two <code>DateTime</code> objects represent
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,37, the same instant regardless of chronology or time zone.
False,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,38, <p>
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,220,* <p>
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,221,* This method returns {@link ISOChronology#getInstanceUTC()} which
True,JodaTime/src/java/org/joda/time/Instant.java,JodaTime/src/java/org/joda/time/Instant.java,222,* corresponds to the definition of the Java epoch 1970-01-01T00:00:00Z.
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,43," Internally, LocalDateTime holds the datetime as milliseconds"
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,44, from 1970-01-01T00:00:00. This represents the <i>local</i> millisecond
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,45, count which differs from the epoch-based millisecond value in a
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,46, <code>ReadableInstant</code> implementation by the amount of the zone offset.
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,43,"* Internally, LocalDateTime uses a single millisecond-based value to"
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,44,* represent the local datetime. This value is only used internally and
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,45,* is not exposed to applications.
False,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,240, on the millisecond instant and the Chronology.
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,240,"* on the millisecond instant, chronology and time zone."
False,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,242, All ReadableInstant instances are accepted.
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,242,"* Two objects which represent the same instant in time, but are in"
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,243,"* different time zones (based on time zone id), will be considered to"
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,244,"* be different. Only two objects with the same {@link DateTimeZone},"
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,245,* {@link Chronology} and instant are equal.
False,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,245, ignores the Chronology.
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,248,* ignores the Chronology and time zone.
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,249,* <p>
True,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,JodaTime/src/java/org/joda/time/base/AbstractInstant.java,250,* All ReadableInstant instances are accepted.
