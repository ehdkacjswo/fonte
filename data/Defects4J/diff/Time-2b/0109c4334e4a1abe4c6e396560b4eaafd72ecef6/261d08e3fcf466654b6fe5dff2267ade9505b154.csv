is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,18,import java.util.Locale;
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,19,import java.util.ResourceBundle;
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,20,import java.util.concurrent.ConcurrentHashMap;
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,21,import java.util.concurrent.ConcurrentMap;
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,35,** An english words based formatter. */
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,36,rivate static PeriodFormatter cEnglishWords;
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,41,* The resource bundle name.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,43,"private static final String BUNDLE_NAME = ""org.joda.time.format.messages"";"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,45,* The created formatters.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,47,"private static final ConcurrentMap<Locale, PeriodFormatter> FORMATTERS = new ConcurrentHashMap<Locale, PeriodFormatter>();"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,49, Gets the default PeriodFormatter.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,60,* Gets the default formatter that outputs words in English.
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,51, This currently returns a word based formatter using English only.
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,52, Hopefully future release will support localized period formatting.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,62,* This calls {@link #wordBased(Locale)} using a locale of {@code ENGLISH}.
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,54, @return the formatter
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,64,"* @return the formatter, not null"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,57,f (cEnglishWords == null) {
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,58,"tring[] variants = {"" "", "","", "",and "", "", and ""};"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,59,EnglishWords = new PeriodFormatterBuilder()
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,67,return wordBased(Locale.ENGLISH);
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,71,* Returns a word based formatter for the JDK default locale.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,72,* <p>
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,73,* This calls {@link #wordBased(Locale)} using the {@link Locale#getDefault() default locale}.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,75,"* @return the formatter, not null"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,76,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,78,public static PeriodFormatter wordBased() {
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,79,return wordBased(Locale.getDefault());
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,83,* Returns a word based formatter for the specified locale.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,84,* <p>
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,85,* The words are configured in a resource bundle text file -
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,86,* {@code org.joda.time.format.messages}.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,87,* This can be added to via the normal classpath resource bundle mechanisms.
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,88,* <p>
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,89,"* Available languages are English, German, Dutch, French, Spanish and Portuguese."
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,91,"* @return the formatter, not null"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,92,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,94,public static PeriodFormatter wordBased(Locale locale) {
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,95,PeriodFormatter pf = FORMATTERS.get(locale);
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,96,if (pf == null) {
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,97,"ResourceBundle b = ResourceBundle.getBundle(BUNDLE_NAME, locale);"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,98,String[] variants = {
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,99,"b.getString(""PeriodFormat.space""), b.getString(""PeriodFormat.comma""),"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,100,"b.getString(""PeriodFormat.commandand""), b.getString(""PeriodFormat.commaspaceand"")};"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,101,pf = new PeriodFormatterBuilder()
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,61,"appendSuffix("" year"", "" years"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,62,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,103,".appendSuffix(b.getString(""PeriodFormat.year""), b.getString(""PeriodFormat.years""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,104,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,64,"appendSuffix("" month"", "" months"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,65,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,106,".appendSuffix(b.getString(""PeriodFormat.month""), b.getString(""PeriodFormat.months""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,107,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,67,"appendSuffix("" week"", "" weeks"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,68,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,109,".appendSuffix(b.getString(""PeriodFormat.week""), b.getString(""PeriodFormat.weeks""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,110,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,70,"appendSuffix("" day"", "" days"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,71,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,112,".appendSuffix(b.getString(""PeriodFormat.day""), b.getString(""PeriodFormat.days""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,113,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,73,"appendSuffix("" hour"", "" hours"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,74,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,115,".appendSuffix(b.getString(""PeriodFormat.hour""), b.getString(""PeriodFormat.hours""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,116,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,76,"appendSuffix("" minute"", "" minutes"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,77,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,118,".appendSuffix(b.getString(""PeriodFormat.minute""), b.getString(""PeriodFormat.minutes""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,119,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,79,"appendSuffix("" second"", "" seconds"")"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,80,"appendSeparator("", "", "" and "", variants)"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,121,".appendSuffix(b.getString(""PeriodFormat.second""), b.getString(""PeriodFormat.seconds""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,122,".appendSeparator(b.getString(""PeriodFormat.commaspace""), b.getString(""PeriodFormat.spaceandspace""), variants)"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,82,"appendSuffix("" millisecond"", "" milliseconds"")"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,124,".appendSuffix(b.getString(""PeriodFormat.millisecond""), b.getString(""PeriodFormat.milliseconds""))"
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,126,"FORMATTERS.putIfAbsent(locale, pf);"
False,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,85,eturn cEnglishWords;
True,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java,128,return pf;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,19,mport java.util.TimeZone;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,24,mport org.joda.time.DateTimeConstants;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,25,mport org.joda.time.DateTimeUtils;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,26,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,28,mport org.joda.time.PeriodType;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,37,"rivate static final Period PERIOD = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,38,"rivate static final Period EMPTY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0);"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,39,"rivate static final Period YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,40,"rivate static final Period EMPTY_YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.yearDayTime());"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,41,"rivate static final Period TIME_PERIOD = new Period(0, 0, 0, 0, 5, 6, 7, 8);"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,42,"rivate static final Period DATE_PERIOD = new Period(1, 2, 3, 4, 0, 0, 0, 0);"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,44,"rivate static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,45,"rivate static final DateTimeZone LONDON = DateTimeZone.forID(""Europe/London"");"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,46,"rivate static final DateTimeZone TOKYO = DateTimeZone.forID(""Asia/Tokyo"");"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,48,ong y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,49,66 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,50,65 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,51,66 + 365;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,52,/ 2002-06-09
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,53,rivate long TEST_TIME_NOW =
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,54,y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,56,rivate DateTimeZone originalDateTimeZone = null;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,57,rivate TimeZone originalTimeZone = null;
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,32,"private static final Locale FR = new Locale(""fr"");"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,33,"private static final Locale PT = new Locale(""pt"");"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,34,"private static final Locale ES = new Locale(""es"");"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,35,"private static final Locale DE = new Locale(""de"");"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,36,"private static final Locale NL = new Locale(""nl"");"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,73,ateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,74,riginalDateTimeZone = DateTimeZone.getDefault();
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,75,riginalTimeZone = TimeZone.getDefault();
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,77,ateTimeZone.setDefault(LONDON);
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,78,"imeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,83,ateTimeUtils.setCurrentMillisSystem();
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,84,ateTimeZone.setDefault(originalDateTimeZone);
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,85,imeZone.setDefault(originalTimeZone);
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,87,riginalDateTimeZone = null;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,88,riginalTimeZone = null;
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,101,ublic void testFormatStandard() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,71,// getDefault()
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,73,public void test_getDefault_formatStandard() {
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,107,ublic void testFormatOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,79,public void test_getDefault_FormatOneField() {
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,113,ublic void testFormatTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,85,public void test_getDefault_formatTwoFields() {
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,119,ublic void testParseOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,91,public void test_getDefault_parseOneField() {
False,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,125,ublic void testParseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,97,public void test_getDefault_parseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,103,public void test_getDefault_cached() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,104,"assertSame(PeriodFormat.getDefault(), PeriodFormat.getDefault());"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,108,// wordBased(Locale.FRENCH)
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,110,public void test_wordBased_fr_formatStandard() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,111,"Period p = new Period(0, 0, 0, 1, 5, 6 ,7, 8);"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,112,"assertEquals(""1 jour, 5 heures, 6 minutes, 7 secondes et 8 millisecondes"", PeriodFormat.wordBased(FR).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,116,public void test_wordBased_fr_FormatOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,117,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,118,"assertEquals(""2 jours"", PeriodFormat.wordBased(FR).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,122,public void test_wordBased_fr_formatTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,123,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,124,"assertEquals(""2 jours et 5 heures"", PeriodFormat.wordBased(FR).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,128,public void test_wordBased_fr_parseOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,129,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,130,"assertEquals(p, PeriodFormat.wordBased(FR).parsePeriod(""2 jours""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,134,public void test_wordBased_fr_parseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,135,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,136,"assertEquals(p, PeriodFormat.wordBased(FR).parsePeriod(""2 jours et 5 heures""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,140,public void test_wordBased_fr_cached() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,141,"assertSame(PeriodFormat.wordBased(FR), PeriodFormat.wordBased(FR));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,145,// wordBased(Locale pt)
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,147,public void test_wordBased_pt_formatStandard() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,148,"Period p = new Period(0, 0, 0, 1, 5, 6 ,7, 8);"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,149,"assertEquals(""1 dia, 5 horas, 6 minutos, 7 segundos e 8 milissegundos"", PeriodFormat.wordBased(PT).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,153,public void test_wordBased_pt_FormatOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,154,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,155,"assertEquals(""2 dias"", PeriodFormat.wordBased(PT).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,159,public void test_wordBased_pt_formatTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,160,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,161,"assertEquals(""2 dias e 5 horas"", PeriodFormat.wordBased(PT).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,165,public void test_wordBased_pt_parseOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,166,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,167,"assertEquals(p, PeriodFormat.wordBased(PT).parsePeriod(""2 dias""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,171,public void test_wordBased_pt_parseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,172,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,173,"assertEquals(p, PeriodFormat.wordBased(PT).parsePeriod(""2 dias e 5 horas""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,177,public void test_wordBased_pt_cached() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,178,"assertSame(PeriodFormat.wordBased(PT), PeriodFormat.wordBased(PT));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,182,// wordBased(Locale es)
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,184,public void test_wordBased_es_formatStandard() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,185,"Period p = new Period(0, 0, 0, 1, 5, 6 ,7, 8);"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,186,"assertEquals(""1 dia, 5 horas, 6 minutos, 7 segundos y 8 milisegundos"", PeriodFormat.wordBased(ES).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,190,public void test_wordBased_es_FormatOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,191,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,192,"assertEquals(""2 dias"", PeriodFormat.wordBased(ES).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,196,public void test_wordBased_es_formatTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,197,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,198,"assertEquals(""2 dias y 5 horas"", PeriodFormat.wordBased(ES).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,202,public void test_wordBased_es_parseOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,203,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,204,"assertEquals(p, PeriodFormat.wordBased(ES).parsePeriod(""2 dias""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,208,public void test_wordBased_es_parseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,209,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,210,"assertEquals(p, PeriodFormat.wordBased(ES).parsePeriod(""2 dias y 5 horas""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,214,public void test_wordBased_es_cached() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,215,"assertSame(PeriodFormat.wordBased(ES), PeriodFormat.wordBased(ES));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,219,// wordBased(Locale de)
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,221,public void test_wordBased_de_formatStandard() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,222,"Period p = new Period(0, 0, 0, 1, 5, 6 ,7, 8);"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,223,"assertEquals(""1 Tag, 5 Stunden, 6 Minuten, 7 Sekunden und 8 Millisekunden"", PeriodFormat.wordBased(DE).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,227,public void test_wordBased_de_FormatOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,228,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,229,"assertEquals(""2 Tage"", PeriodFormat.wordBased(DE).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,233,public void test_wordBased_de_formatTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,234,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,235,"assertEquals(""2 Tage und 5 Stunden"", PeriodFormat.wordBased(DE).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,239,public void test_wordBased_de_parseOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,240,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,241,"assertEquals(p, PeriodFormat.wordBased(DE).parsePeriod(""2 Tage""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,245,public void test_wordBased_de_parseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,246,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,247,"assertEquals(p, PeriodFormat.wordBased(DE).parsePeriod(""2 Tage und 5 Stunden""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,251,public void test_wordBased_de_cached() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,252,"assertSame(PeriodFormat.wordBased(DE), PeriodFormat.wordBased(DE));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,256,// wordBased(Locale nl)
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,258,public void test_wordBased_nl_formatStandard() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,259,"Period p = new Period(0, 0, 0, 1, 5, 6 ,7, 8);"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,260,"assertEquals(""1 dag, 5 uur, 6 minuten, 7 seconden en 8 milliseconden"", PeriodFormat.wordBased(NL).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,264,public void test_wordBased_nl_FormatOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,265,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,266,"assertEquals(""2 dagen"", PeriodFormat.wordBased(NL).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,270,public void test_wordBased_nl_formatTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,271,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,272,"assertEquals(""2 dagen en 5 uur"", PeriodFormat.wordBased(NL).print(p));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,276,public void test_wordBased_nl_parseOneField() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,277,Period p = Period.days(2);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,278,"assertEquals(p, PeriodFormat.wordBased(NL).parsePeriod(""2 dagen""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,282,public void test_wordBased_nl_parseTwoFields() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,283,Period p = Period.days(2).withHours(5);
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,284,"assertEquals(p, PeriodFormat.wordBased(NL).parsePeriod(""2 dagen en 5 uur""));"
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,288,public void test_wordBased_nl_cached() {
True,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java,289,"assertSame(PeriodFormat.wordBased(NL), PeriodFormat.wordBased(NL));"
