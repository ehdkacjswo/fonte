is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,644,* Converts this LocalDate to a full datetime at midnight using the default
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,645,* time zone.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,646,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,647,* This method will throw an exception if the default time zone switches
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,648,* to Daylight Savings Time at midnight and this LocalDate represents
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,649,* that switchover date. The problem is that there is no such time as
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,650,"* midnight on the required date, and as such an exception is thrown."
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,651,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,652,* This instance is immutable and unaffected by this method call.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,654,* @return this date as a datetime at midnight
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,655,* @deprecated Use {@link #toDateTimeAtStartOfDay()} which won't throw an exception
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,657,@Deprecated
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,658,public DateTime toDateTimeAtMidnight() {
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,659,return toDateTimeAtMidnight(null);
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,663,* Converts this LocalDate to a full datetime at midnight using the
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,664,* specified time zone.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,665,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,666,* This method will throw an exception if the time zone switches
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,667,* to Daylight Savings Time at midnight and this LocalDate represents
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,668,* that switchover date. The problem is that there is no such time as
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,669,"* midnight on the required date, and as such an exception is thrown."
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,670,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,671,* This method uses the chronology from this instance plus the time zone
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,672,* specified.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,673,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,674,* This instance is immutable and unaffected by this method call.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,676,"* @param zone  the zone to use, null means default zone"
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,677,* @return this date as a datetime at midnight
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,678,* @deprecated Use {@link #toDateTimeAtStartOfDay(DateTimeZone)} which won't throw an exception
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,680,@Deprecated
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,681,public DateTime toDateTimeAtMidnight(DateTimeZone zone) {
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,682,zone = DateTimeUtils.getZone(zone);
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,683,Chronology chrono = getChronology().withZone(zone);
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,684,"return new DateTime(getYear(), getMonthOfYear(), getDayOfMonth(), 0, 0, 0, 0, chrono);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,696,"@SuppressWarnings(""deprecation"")"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,697,public void testToDateTimeAtMidnight() {
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,698,"LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,700,DateTime test = base.toDateTimeAtMidnight();
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,701,"check(base, 2005, 6, 9);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,702,"assertEquals(new DateTime(2005, 6, 9, 0, 0, 0, 0, COPTIC_LONDON), test);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,706,"@SuppressWarnings(""deprecation"")"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,707,public void testToDateTimeAtMidnight_Zone() {
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,708,"LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,710,DateTime test = base.toDateTimeAtMidnight(TOKYO);
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,711,"check(base, 2005, 6, 9);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,712,"assertEquals(new DateTime(2005, 6, 9, 0, 0, 0, 0, COPTIC_TOKYO), test);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,715,"@SuppressWarnings(""deprecation"")"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,716,public void testToDateTimeAtMidnight_nullZone() {
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,717,"LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,719,DateTime test = base.toDateTimeAtMidnight((DateTimeZone) null);
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,720,"check(base, 2005, 6, 9);"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java,721,"assertEquals(new DateTime(2005, 6, 9, 0, 0, 0, 0, COPTIC_LONDON), test);"
