is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,26,import org.joda.time.format.DateTimeFormatter;
False,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,76,/ Constructors
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,79,* Parses a {@code DateMidnight} from the specified string.
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,80,* <p>
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,81,* This uses {@link ISODateTimeFormat#dateParser()}.
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,83,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,84,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,86,public static DateMidnight parse(String str) {
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,87,"return parse(str, ISODateTimeFormat.dateParser());"
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,91,* Parses a {@code DateMidnight} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,93,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,94,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,95,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,97,"public static DateMidnight parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/DateMidnight.java,JodaTime/src/main/java/org/joda/time/DateMidnight.java,98,return formatter.parseDateTime(str).toDateMidnight();
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,27,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,81,* Parses a {@code DateTime} from the specified string.
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,82,* <p>
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,83,* This uses {@link ISODateTimeFormat#dateTimeParser()}.
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,85,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,86,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,88,public static DateTime parse(String str) {
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,89,"return parse(str, ISODateTimeFormat.dateTimeParser());"
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,93,* Parses a {@code DateTime} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,95,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,96,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,97,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,99,"public static DateTime parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/DateTime.java,JodaTime/src/main/java/org/joda/time/DateTime.java,100,return formatter.parseDateTime(str);
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,24,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,25,import org.joda.time.format.ISODateTimeFormat;
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,66,* Parses a {@code Instant} from the specified string.
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,67,* <p>
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,68,* This uses {@link ISODateTimeFormat#dateTimeParser()}.
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,70,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,71,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,73,public static Instant parse(String str) {
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,74,"return parse(str, ISODateTimeFormat.dateTimeParser());"
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,78,* Parses a {@code Instant} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,80,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,81,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,82,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,84,"public static Instant parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/Instant.java,JodaTime/src/main/java/org/joda/time/Instant.java,85,return formatter.parseDateTime(str).toInstant();
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,36,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,114,* Parses a {@code LocalDate} from the specified string.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,115,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,116,* This uses {@link ISODateTimeFormat#localDateParser()}.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,118,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,119,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,121,public static LocalDate parse(String str) {
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,122,"return parse(str, ISODateTimeFormat.localDateParser());"
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,126,* Parses a {@code LocalDate} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,128,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,129,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,130,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,132,"public static LocalDate parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/LocalDate.java,JodaTime/src/main/java/org/joda/time/LocalDate.java,133,return formatter.parseLocalDate(str);
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,33,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,100,* Parses a {@code LocalDateTime} from the specified string.
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,101,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,102,* This uses {@link ISODateTimeFormat#localDateOptionalTimeParser()}.
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,104,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,105,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,107,public static LocalDateTime parse(String str) {
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,108,"return parse(str, ISODateTimeFormat.localDateOptionalTimeParser());"
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,112,* Parses a {@code LocalDateTime} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,114,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,115,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,116,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,118,"public static LocalDateTime parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,JodaTime/src/main/java/org/joda/time/LocalDateTime.java,119,return formatter.parseLocalDateTime(str);
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,34,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,108,* Parses a {@code LocalTime} from the specified string.
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,109,* <p>
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,110,* This uses {@link ISODateTimeFormat#localTimeParser()}.
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,112,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,113,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,115,public static LocalTime parse(String str) {
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,116,"return parse(str, ISODateTimeFormat.localTimeParser());"
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,120,* Parses a {@code LocalTime} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,122,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,123,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,124,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,126,"public static LocalTime parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/LocalTime.java,JodaTime/src/main/java/org/joda/time/LocalTime.java,127,return formatter.parseLocalTime(str);
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,30,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,87,* Parses a {@code MonthDay} from the specified string.
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,88,* <p>
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,89,* This uses {@link ISODateTimeFormat#localDateParser()}.
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,91,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,92,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,94,public static MonthDay parse(String str) {
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,95,"return parse(str, ISODateTimeFormat.localDateParser());"
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,99,* Parses a {@code MonthDay} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,101,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,102,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,103,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,105,"public static MonthDay parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,106,LocalDate date = formatter.parseLocalDate(str);
True,JodaTime/src/main/java/org/joda/time/MonthDay.java,JodaTime/src/main/java/org/joda/time/MonthDay.java,107,"return new MonthDay(date.getMonthOfYear(), date.getDayOfMonth());"
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,28,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,97,* Parses a {@code MutableDateTime} from the specified string.
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,98,* <p>
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,99,* This uses {@link ISODateTimeFormat#dateTimeParser()}.
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,101,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,102,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,104,public static MutableDateTime parse(String str) {
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,105,"return parse(str, ISODateTimeFormat.dateTimeParser());"
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,109,* Parses a {@code MutableDateTime} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,111,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,112,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,113,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,115,"public static MutableDateTime parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,JodaTime/src/main/java/org/joda/time/MutableDateTime.java,116,return formatter.parseDateTime(str).toMutableDateTime();
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,28,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,85,* Parses a {@code YearMonth} from the specified string.
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,86,* <p>
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,87,* This uses {@link ISODateTimeFormat#localDateParser()}.
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,89,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,90,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,92,public static YearMonth parse(String str) {
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,93,"return parse(str, ISODateTimeFormat.localDateParser());"
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,97,* Parses a {@code YearMonth} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,99,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,100,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,101,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,103,"public static YearMonth parse(String str, DateTimeFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,104,LocalDate date = formatter.parseLocalDate(str);
True,JodaTime/src/main/java/org/joda/time/YearMonth.java,JodaTime/src/main/java/org/joda/time/YearMonth.java,105,"return new YearMonth(date.getYear(), date.getMonthOfYear());"
True,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,28,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,121,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,122,"assertEquals(new DateMidnight(2010, 6, 30, ISOChronology.getInstance(LONDON)), DateMidnight.parse(""2010-06-30""));"
True,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,123,"assertEquals(new DateMidnight(2010, 1, 2, ISOChronology.getInstance(LONDON)), DateMidnight.parse(""2010-002""));"
True,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,126,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java,127,"assertEquals(new DateMidnight(2010, 6, 30, ISOChronology.getInstance(LONDON)), DateMidnight.parse(""2010--30 06"", DateTimeFormat.forPattern(""yyyy--dd MM"")));"
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,28,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,29,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,108,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,109,"assertEquals(new DateTime(2010, 6, 30, 0, 20, ISOChronology.getInstance(LONDON)), DateTime.parse(""2010-06-30T01:20+02:00""));"
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,110,"assertEquals(new DateTime(2010, 1, 2, 14, 50, ISOChronology.getInstance(LONDON)), DateTime.parse(""2010-002T14:50""));"
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,113,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,114,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--dd MM HH"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java,115,"assertEquals(new DateTime(2010, 6, 30, 13, 0, ISOChronology.getInstance(PARIS)), DateTime.parse(""2010--30 06 13"", f));"
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,27,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,28,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,89,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,90,"assertEquals(new DateTime(2010, 6, 30, 0, 20, ISOChronology.getInstance(LONDON)).toInstant(), Instant.parse(""2010-06-30T01:20+02:00""));"
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,91,"assertEquals(new DateTime(2010, 1, 2, 14, 50, ISOChronology.getInstance(LONDON)).toInstant(), Instant.parse(""2010-002T14:50""));"
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,94,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,95,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--dd MM HH"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java,96,"assertEquals(new DateTime(2010, 6, 30, 13, 0, ISOChronology.getInstance(PARIS)).toInstant(), Instant.parse(""2010--30 06 13"", f));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,28,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,29,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,94,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,95,"assertEquals(new LocalDateTime(2010, 6, 30, 1, 20), LocalDateTime.parse(""2010-06-30T01:20""));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,96,"assertEquals(new LocalDateTime(2010, 1, 2, 14, 50, 30, 432), LocalDateTime.parse(""2010-002T14:50:30.432""));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,99,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,100,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--dd MM HH"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,101,"assertEquals(new LocalDateTime(2010, 6, 30, 13, 0), LocalDateTime.parse(""2010--30 06 13"", f));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,28,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,29,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,86,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,87,"assertEquals(new LocalDate(2010, 6, 30), LocalDate.parse(""2010-06-30""));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,88,"assertEquals(new LocalDate(2010, 1, 2), LocalDate.parse(""2010-002""));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,91,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,92,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--dd MM"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java,93,"assertEquals(new LocalDate(2010, 6, 30), LocalDate.parse(""2010--30 06"", f));"
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,29,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,30,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,112,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,113,"assertEquals(new LocalTime(1, 20), LocalTime.parse(""01:20""));"
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,114,"assertEquals(new LocalTime(14, 50, 30, 432), LocalTime.parse(""14:50:30.432""));"
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,117,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,118,"DateTimeFormatter f = DateTimeFormat.forPattern(""HH mm"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java,119,"assertEquals(new LocalTime(13, 30), LocalTime.parse(""13 30"", f));"
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,27,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,28,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,81,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,82,"assertEquals(new MonthDay(6, 30), MonthDay.parse(""2010-06-30""));"
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,83,"assertEquals(new MonthDay(1, 2), MonthDay.parse(""2010-002""));"
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,86,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,87,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--dd MM"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMonthDay_Constructors.java,88,"assertEquals(new MonthDay(6, 30), MonthDay.parse(""2010--30 06"", f));"
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,28,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,29,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,108,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,109,"assertEquals(new MutableDateTime(2010, 6, 30, 0, 20, 0, 0, ISOChronology.getInstance(LONDON)), MutableDateTime.parse(""2010-06-30T01:20+02:00""));"
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,110,"assertEquals(new MutableDateTime(2010, 1, 2, 14, 50, 0, 0, ISOChronology.getInstance(LONDON)), MutableDateTime.parse(""2010-002T14:50""));"
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,113,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,114,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--dd MM HH"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java,115,"assertEquals(new MutableDateTime(2010, 6, 30, 13, 0, 0, 0, ISOChronology.getInstance(PARIS)), MutableDateTime.parse(""2010--30 06 13"", f));"
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,27,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,28,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,83,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,84,"assertEquals(new YearMonth(2010, 6), YearMonth.parse(""2010-06-30""));"
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,85,"assertEquals(new YearMonth(2010, 1), YearMonth.parse(""2010-002""));"
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,88,public void testParse_formatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,89,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy--MM"").withChronology(ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,JodaTime/src/test/java/org/joda/time/TestYearMonth_Constructors.java,90,"assertEquals(new YearMonth(2010, 6), YearMonth.parse(""2010--06"", f));"
