is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,180,"uper(duration, null, null);"
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,180,super(duration);
False,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,382,"uper(duration, null, null);"
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,382,super(duration);
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,31,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,214,* Creates a period from the given millisecond duration with the standard period type
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,215,"* and ISO rules, ensuring that the calculation is performed with the time-only period type."
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,216,* <p>
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,217,"* The calculation uses the hour, minute, second and millisecond fields."
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,219,"* @param duration  the duration, in milliseconds"
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,221,protected BasePeriod(long duration) {
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,222,super();
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,223,// bug [3264409]
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,224,iType = PeriodType.time();
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,225,"int[] values = ISOChronology.getInstanceUTC().get(this, duration);"
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,226,iType = PeriodType.standard();
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,227,iValues = new int[8];
True,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,JodaTime/src/main/java/org/joda/time/base/BasePeriod.java,228,"System.arraycopy(values, 0, iValues, 4, 4);"
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,447,ong length =
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,448,4L + (3L * 7L) + (2L * 30L) + 365L) * DateTimeConstants.MILLIS_PER_DAY +
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,449,L * DateTimeConstants.MILLIS_PER_HOUR +
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,450,L * DateTimeConstants.MILLIS_PER_MINUTE +
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,451,L * DateTimeConstants.MILLIS_PER_SECOND + 8L;
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,452,uration test = new Duration(length);
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,453,eriod result = test.toPeriod();
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,454,"ssertEquals(new Period(test), result);"
False,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,455,"ssertEquals(new Period(test.getMillis()), result);"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,447,DateTimeZone zone = DateTimeZone.getDefault();
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,448,try {
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,449,"DateTimeZone.setDefault(DateTimeZone.forID(""Europe/Paris""));"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,450,long length =
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,451,(4L + (3L * 7L) + (2L * 30L) + 365L) * DateTimeConstants.MILLIS_PER_DAY +
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,452,5L * DateTimeConstants.MILLIS_PER_HOUR +
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,453,6L * DateTimeConstants.MILLIS_PER_MINUTE +
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,454,7L * DateTimeConstants.MILLIS_PER_SECOND + 8L;
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,455,Duration dur = new Duration(length);
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,456,Period test = dur.toPeriod();
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,457,"assertEquals(0, test.getYears());  // (4 + (3 * 7) + (2 * 30) + 365) == 450"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,458,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,459,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,460,"assertEquals(0, test.getDays());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,461,"assertEquals((450 * 24) + 5, test.getHours());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,462,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,463,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,464,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,465,} finally {
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,466,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,470,public void testToPeriod_fixedZone() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,471,DateTimeZone zone = DateTimeZone.getDefault();
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,472,try {
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,473,DateTimeZone.setDefault(DateTimeZone.forOffsetHours(2));
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,474,long length =
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,475,(4L + (3L * 7L) + (2L * 30L) + 365L) * DateTimeConstants.MILLIS_PER_DAY +
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,476,5L * DateTimeConstants.MILLIS_PER_HOUR +
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,477,6L * DateTimeConstants.MILLIS_PER_MINUTE +
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,478,7L * DateTimeConstants.MILLIS_PER_SECOND + 8L;
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,479,Duration dur = new Duration(length);
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,480,Period test = dur.toPeriod();
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,481,"assertEquals(0, test.getYears());  // (4 + (3 * 7) + (2 * 30) + 365) == 450"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,482,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,483,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,484,"assertEquals(0, test.getDays());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,485,"assertEquals((450 * 24) + 5, test.getHours());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,486,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,487,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,488,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,489,} finally {
True,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java,490,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,174,public void testConstructor_long_fixedZone() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,175,DateTimeZone zone = DateTimeZone.getDefault();
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,176,try {
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,177,DateTimeZone.setDefault(DateTimeZone.forOffsetHours(2));
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,178,long length =
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,179,(4L + (3L * 7L) + (2L * 30L) + 365L) * DateTimeConstants.MILLIS_PER_DAY +
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,180,5L * DateTimeConstants.MILLIS_PER_HOUR +
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,181,6L * DateTimeConstants.MILLIS_PER_MINUTE +
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,182,7L * DateTimeConstants.MILLIS_PER_SECOND + 8L;
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,183,Period test = new Period(length);
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,184,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,185,// only time fields are precise in AllType
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,186,"assertEquals(0, test.getYears());  // (4 + (3 * 7) + (2 * 30) + 365) == 450"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,187,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,188,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,189,"assertEquals(0, test.getDays());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,190,"assertEquals((450 * 24) + 5, test.getHours());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,191,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,192,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,193,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,194,} finally {
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,195,DateTimeZone.setDefault(zone);
