is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,483,ublic Duration multipliedBy(long multiplicand)
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,485,f(multiplicand == 1)
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,483,public Duration multipliedBy(long multiplicand) {
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,484,if (multiplicand == 1) {
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,500,ublic Duration dividedBy(long divisor)
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,502,f(divisor == 1)
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,500,public Duration dividedBy(long divisor) {
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,501,if (divisor == 1) {
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,513,ublic Duration negated()
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,515,f(getMillis() == Long.MIN_VALUE)
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,513,public Duration negated() {
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,514,if (getMillis() == Long.MIN_VALUE) {
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,188,"ublic static long safeDivide(long dividend, long divisor)"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,190,f(dividend == Long.MIN_VALUE && divisor == -1L)
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,188,"public static long safeDivide(long dividend, long divisor) {"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,189,if (dividend == Long.MIN_VALUE && divisor == -1L) {
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,292,"assertEquals(1L, FieldUtils.safeDivide(5L, 3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,293,"assertEquals(-1L, FieldUtils.safeDivide(5L, -3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,294,"assertEquals(-1L, FieldUtils.safeDivide(-5L, 3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,295,"assertEquals(1L, FieldUtils.safeDivide(-5L, -3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,302,"assertEquals(2L, FieldUtils.safeDivide(7L, 3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,303,"assertEquals(-2L, FieldUtils.safeDivide(7L, -3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,304,"assertEquals(-2L, FieldUtils.safeDivide(-7L, 3L));"
True,src/test/java/org/joda/time/field/TestFieldUtils.java,src/test/java/org/joda/time/field/TestFieldUtils.java,305,"assertEquals(2L, FieldUtils.safeDivide(-7L, -3L));"
