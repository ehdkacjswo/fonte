is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,JodaTime/src/java/org/joda/time/convert/ConverterManager.java,155,"ReadablePartialConverter.INSTANCE,"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,6,* All rights reserved.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,10,* are met:
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,18,*    distribution.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,56,import org.joda.time.Chronology;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,57,import org.joda.time.DateTimeUtils;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,58,import org.joda.time.DateTimeZone;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,59,import org.joda.time.ReadablePartial;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,62,* ReadablePartialConverter extracts partial fields and chronology from a ReadablePartial.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,64,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,65,* @since 1.0
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,67,class ReadablePartialConverter extends AbstractConverter
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,68,implements PartialConverter {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,71,* Singleton instance.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,73,static final ReadablePartialConverter INSTANCE = new ReadablePartialConverter();
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,76,* Restricted constructor.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,78,protected ReadablePartialConverter() {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,79,super();
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,84,"* Gets the chronology, which is taken from the ReadablePartial."
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,86,"* @param object  the ReadablePartial to convert, must not be null"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,87,"* @param zone  the specified zone to use, null means default zone"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,88,"* @return the chronology, never null"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,90,"public Chronology getChronology(Object object, DateTimeZone zone) {"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,91,"return getChronology(object, (Chronology) null).withZone(zone);"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,95,"* Gets the chronology, which is taken from the ReadableInstant."
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,96,* <p>
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,97,"* If the passed in chronology is non-null, it is used."
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,98,* Otherwise the chronology from the instant is used.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,100,"* @param object  the ReadablePartial to convert, must not be null"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,101,"* @param chrono  the chronology to use, null means use that from object"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,102,"* @return the chronology, never null"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,104,"public Chronology getChronology(Object object, Chronology chrono) {"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,105,if (chrono == null) {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,106,chrono = ((ReadablePartial) object).getChronology();
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,107,chrono = DateTimeUtils.getChronology(chrono);
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,109,return chrono;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,113,* Extracts the values of the partial from an object of this converter's type.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,114,"* The chrono parameter is a hint to the converter, should it require a"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,115,* chronology to aid in conversion.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,117,* @param fieldSource  a partial that provides access to the fields.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,118,*  This partial may be incomplete and only getFieldType(int) should be used
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,119,* @param object  the object to convert
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,120,"* @param chrono  the chronology to use, which is the non-null result of getChronology()"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,121,"* @return the array of field values that match the fieldSource, must be non-null valid"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,122,* @throws ClassCastException if the object is invalid
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,124,"public int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono) {"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,125,ReadablePartial input = (ReadablePartial) object;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,126,int size = fieldSource.size();
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,127,if (input.size() != size) {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,128,"throw new IllegalArgumentException(""Partial field type lists are different"");"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,130,int[] values = new int[size];
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,131,for (int i = 0; i < size; i++) {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,132,if (fieldSource.getFieldType(i) != input.getFieldType(i)) {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,133,"throw new IllegalArgumentException(""Partial field type lists are different"");"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,135,values[i] = input.getValue(i);
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,137,"chrono.validate(fieldSource, values);"
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,138,return values;
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,143,* Returns ReadableInstant.class.
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,145,* @return ReadableInstant.class
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,147,public Class getSupportedType() {
True,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java,148,return ReadablePartial.class;
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,295,* Test constructor (Object)
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,297,public void testConstructor_todObject() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,298,"TimeOfDay base = new TimeOfDay(10, 20, 30, 40, Chronology.getCoptic(PARIS));"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,299,TimeOfDay test = new TimeOfDay(base);
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,300,"assertEquals(Chronology.getCopticUTC(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,301,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,302,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,303,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java,304,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,85,suite.addTest(TestReadablePartialConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,90,import org.joda.time.TimeOfDay;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,364,private static final int PARTIAL_SIZE = 7;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,370,c = ConverterManager.getInstance().getPartialConverter(new TimeOfDay());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,371,"assertEquals(ReadablePartial.class, c.getSupportedType());"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,398,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,404,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,415,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,421,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,435,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,441,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,441,"ssertEquals(6, array.length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,447,"assertEquals(PARTIAL_SIZE, array.length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,455,"ssertEquals(7, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,461,"assertEquals(PARTIAL_SIZE + 1, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,459,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,465,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,472,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,478,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,476,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,482,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,482,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,488,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,488,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,494,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,503,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,509,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,511,"ssertEquals(5, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,517,"assertEquals(PARTIAL_SIZE - 1, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,515,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,521,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,526,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,532,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,532,"ssertEquals(6, ConverterManager.getInstance().getPartialConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,538,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,547,"ssertEquals(6, ConverterManager.getInstance().getInstantConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,553,"assertEquals(PARTIAL_SIZE, ConverterManager.getInstance().getPartialConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,982,"ssertEquals(""ConverterManager[6 instant,6 partial,5 duration,5 period,3 interval]"", ConverterManager.getInstance().toString());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,988,"assertEquals(""ConverterManager[6 instant,7 partial,5 duration,5 period,3 interval]"", ConverterManager.getInstance().toString());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,59,import java.util.Arrays;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,61,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,62,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,64,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,65,import org.joda.time.DateTimeField;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,66,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,67,import org.joda.time.ReadablePartial;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,68,import org.joda.time.TimeOfDay;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,69,import org.joda.time.YearMonthDay;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,70,import org.joda.time.base.BasePartial;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,71,import org.joda.time.chrono.BuddhistChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,72,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,73,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,76,* This class is a Junit unit test for ReadablePartialConverter.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,78,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,80,public class TestReadablePartialConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,82,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,83,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,84,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,85,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,86,private static final Chronology BUDDHIST = BuddhistChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,87,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,89,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,91,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,92,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,95,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,96,return new TestSuite(TestReadablePartialConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,99,public TestReadablePartialConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,100,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,104,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,105,Class cls = ReadablePartialConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,106,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,107,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,108,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,110,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,111,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,112,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,114,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,115,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,116,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,117,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,121,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,122,"assertEquals(ReadablePartial.class, ReadablePartialConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,126,public void testGetChronology_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,127,"assertEquals(ISO_PARIS, ReadablePartialConverter.INSTANCE.getChronology(new TimeOfDay(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,128,"assertEquals(ISO, ReadablePartialConverter.INSTANCE.getChronology(new TimeOfDay(123L), DateTimeZone.getDefault()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,129,"assertEquals(ISO, ReadablePartialConverter.INSTANCE.getChronology(new TimeOfDay(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,132,public void testGetChronology_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,133,"assertEquals(JULIAN, ReadablePartialConverter.INSTANCE.getChronology(new TimeOfDay(123L, BUDDHIST), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,134,"assertEquals(JULIAN, ReadablePartialConverter.INSTANCE.getChronology(new TimeOfDay(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,135,"assertEquals(BUDDHIST.withUTC(), ReadablePartialConverter.INSTANCE.getChronology(new TimeOfDay(123L, BUDDHIST), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,139,public void testGetPartialValues() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,140,TimeOfDay tod = new TimeOfDay();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,141,"int[] expected = new int[] {1, 2, 3, 4};"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,142,"int[] actual = ReadablePartialConverter.INSTANCE.getPartialValues(tod, new TimeOfDay(1, 2, 3, 4), Chronology.getISO(PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,143,"assertEquals(true, Arrays.equals(expected, actual));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,145,try {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,146,"ReadablePartialConverter.INSTANCE.getPartialValues(tod, new YearMonthDay(2005, 6, 9), JULIAN);"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,147,fail();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,148,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,149,try {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,150,"ReadablePartialConverter.INSTANCE.getPartialValues(tod, new MockTOD(), JULIAN);"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,151,fail();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,152,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,155,static class MockTOD extends BasePartial {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,156,"protected DateTimeField getField(int index, Chronology chrono) {"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,157,switch (index) {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,158,case 0:
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,159,return chrono.hourOfDay();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,160,case 1:
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,161,return chrono.minuteOfHour();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,162,case 2:
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,163,return chrono.year();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,164,case 3:
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,165,return chrono.era();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,167,return null;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,169,public int size() {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,170,return 4;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,175,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java,176,"assertEquals(""Converter[org.joda.time.ReadablePartial]"", ReadablePartialConverter.INSTANCE.toString());"
