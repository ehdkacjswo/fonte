is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,27, @version $Revision: 1.3 $ $Date: 2004/09/05 01:19:23 $
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,27,* @version $Revision: 1.4 $ $Date: 2004/10/25 02:23:29 $
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,32,"rivate double[][] testData = { {1d,2d,3d}, {2d,5d,3d}, {1d,0d,8d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,33,"rivate String[][] testDataString = { {""1"",""2"",""3""}, {""2"",""5"",""3""}, {""1"",""0"",""8""} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,34,"rivate double[][] testDataLU = {{2d, 5d, 3d}, {.5d, -2.5d, 6.5d}, {0.5d, 0.2d, .2d}};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,35,"rivate double[][] testDataPlus2 = { {3d,4d,5d}, {4d,7d,5d}, {3d,2d,10d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,36,"rivate double[][] testDataMinus = { {-1d,-2d,-3d}, {-2d,-5d,-3d},"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,37,"-1d,0d,-8d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,38,"rivate double[] testDataRow1 = {1d,2d,3d};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,39,"rivate double[] testDataCol3 = {3d,3d,8d};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,40,rivate double[][] testDataInv =
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,32,// Test data for String constructors
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,33,"protected  String[][] testDataString = { {""1"",""2"",""3""}, {""2"",""5"",""3""}, {""1"",""0"",""8""} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,35,// 3 x 3 identity matrix
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,36,"protected double[][] id = { {1d,0d,0d}, {0d,1d,0d}, {0d,0d,1d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,38,// Test data for group operations
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,39,"protected double[][] testData = { {1d,2d,3d}, {2d,5d,3d}, {1d,0d,8d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,40,"protected double[][] testDataLU = {{2d, 5d, 3d}, {.5d, -2.5d, 6.5d}, {0.5d, 0.2d, .2d}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,41,"protected double[][] testDataPlus2 = { {3d,4d,5d}, {4d,7d,5d}, {3d,2d,10d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,42,"protected double[][] testDataMinus = { {-1d,-2d,-3d}, {-2d,-5d,-3d},"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,43,"{-1d,0d,-8d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,44,"protected double[] testDataRow1 = {1d,2d,3d};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,45,"protected double[] testDataCol3 = {3d,3d,8d};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,46,protected double[][] testDataInv =
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,42,"rivate double[] preMultTest = {8,12,33};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,43,"rivate double[][] testData2 ={ {1d,2d,3d}, {2d,5d,3d}};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,44,"rivate double[][] testData2T = { {1d,2d}, {2d,5d}, {3d,3d}};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,45,rivate double[][] testDataPlusInv =
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,48,"protected double[] preMultTest = {8,12,33};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,49,"protected double[][] testData2 ={ {1d,2d,3d}, {2d,5d,3d}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,50,"protected double[][] testData2T = { {1d,2d}, {2d,5d}, {3d,3d}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,51,protected double[][] testDataPlusInv =
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,47,"rivate double[][] id = { {1d,0d,0d}, {0d,1d,0d}, {0d,0d,1d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,48,"rivate double[][] luData = { {2d,3d,3d}, {0d,5d,7d}, {6d,9d,8d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,49,"rivate double[][] luDataLUDecomposition = { {6d,9d,8d}, {0d,5d,7d}, {0.33333333333333,0d,0.33333333333333} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,50,"rivate double[][] singular = { {2d,3d}, {2d,3d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,51,"rivate double[][] bigSingular = {{1d,2d,3d,4d}, {2d,5d,3d,4d},"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,52,"7d,3d,256d,1930d}, {3d,7d,6d,8d}}; // 4th row = 1st + 2nd"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,53,"rivate double[][] detData = { {1d,2d,3d}, {4d,5d,6d}, {7d,8d,10d} };"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,54,"rivate double[][] detData2 = { {1d, 3d}, {2d, 4d}};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,55,"rivate double[] testVector = {1,2,3};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,56,"rivate double[] testVector2 = {1,2,3,4};"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,57,rivate double entryTolerance = 10E-16;
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,58,rivate double normTolerance = 10E-14;
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,54,// lu decomposition tests
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,55,"protected double[][] luData = { {2d,3d,3d}, {0d,5d,7d}, {6d,9d,8d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,56,"protected double[][] luDataLUDecomposition = { {6d,9d,8d}, {0d,5d,7d},"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,57,"{0.33333333333333,0d,0.33333333333333} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,59,// singular matrices
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,60,"protected double[][] singular = { {2d,3d}, {2d,3d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,61,"protected double[][] bigSingular = {{1d,2d,3d,4d}, {2d,5d,3d,4d},"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,62,"{7d,3d,256d,1930d}, {3d,7d,6d,8d}}; // 4th row = 1st + 2nd"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,63,"protected double[][] detData = { {1d,2d,3d}, {4d,5d,6d}, {7d,8d,10d} };"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,64,"protected double[][] detData2 = { {1d, 3d}, {2d, 4d}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,66,// vectors
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,67,"protected double[] testVector = {1,2,3};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,68,"protected double[] testVector2 = {1,2,3,4};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,70,// submatrix accessor tests
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,71,"protected double[][] subTestData = {{1, 2, 3, 4}, {1.5, 2.5, 3.5, 4.5},"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,72,"{2, 4, 6, 8}, {4, 5, 6, 7}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,73,// array selections
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,74,"protected double[][] subRows02Cols13 = { {2, 4}, {4, 8}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,75,"protected double[][] subRows03Cols12 = { {2, 3}, {5, 6}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,76,"protected double[][] subRows03Cols123 = { {2, 3, 4} , {5, 6, 7}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,77,// effective permutations
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,78,"protected double[][] subRows20Cols123 = { {4, 6, 8} , {2, 3, 4}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,79,"protected double[][] subRows31Cols31 = {{7, 5}, {4.5, 2.5}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,80,// contiguous ranges
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,81,"protected double[][] subRows01Cols23 = {{3,4} , {3.5, 4.5}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,82,"protected double[][] subRows23Cols00 = {{2} , {4}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,83,protected double[][] subRows00Cols33 = {{4}};
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,84,// row matrices
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,85,"protected double[][] subRow0 = {{1,2,3,4}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,86,"protected double[][] subRow3 = {{4,5,6,7}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,87,// column matrices
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,88,"protected double[][] subColumn1 = {{2}, {2.5}, {4}, {5}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,89,"protected double[][] subColumn3 = {{4}, {4.5}, {8}, {7}};"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,91,// tolerances
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,92,protected double entryTolerance = 10E-16;
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,93,protected double normTolerance = 10E-14;
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,540,* test submatrix accessors
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,542,public void testSubMatrix() {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,543,BigMatrix m = new BigMatrixImpl(subTestData);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,544,BigMatrix mRows23Cols00 = new BigMatrixImpl(subRows23Cols00);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,545,BigMatrix mRows00Cols33 = new BigMatrixImpl(subRows00Cols33);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,546,BigMatrix mRows01Cols23 = new BigMatrixImpl(subRows01Cols23);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,547,BigMatrix mRows02Cols13 = new BigMatrixImpl(subRows02Cols13);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,548,BigMatrix mRows03Cols12 = new BigMatrixImpl(subRows03Cols12);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,549,BigMatrix mRows03Cols123 = new BigMatrixImpl(subRows03Cols123);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,550,BigMatrix mRows20Cols123 = new BigMatrixImpl(subRows20Cols123);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,551,BigMatrix mRows31Cols31 = new BigMatrixImpl(subRows31Cols31);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,552,"assertEquals(""Rows23Cols00"", mRows23Cols00,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,553,"m.getSubMatrix(2 , 3 , 0, 0));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,554,"assertEquals(""Rows00Cols33"", mRows00Cols33,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,555,"m.getSubMatrix(0 , 0 , 3, 3));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,556,"assertEquals(""Rows01Cols23"", mRows01Cols23,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,557,"m.getSubMatrix(0 , 1 , 2, 3));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,558,"assertEquals(""Rows02Cols13"", mRows02Cols13,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,559,"m.getSubMatrix(new int[] {0,2}, new int[] {1,3}));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,560,"assertEquals(""Rows03Cols12"", mRows03Cols12,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,561,"m.getSubMatrix(new int[] {0,3}, new int[] {1,2}));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,562,"assertEquals(""Rows03Cols123"", mRows03Cols123,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,563,"m.getSubMatrix(new int[] {0,3}, new int[] {1,2,3}));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,564,"assertEquals(""Rows20Cols123"", mRows20Cols123,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,565,"m.getSubMatrix(new int[] {2,0}, new int[] {1,2,3}));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,566,"assertEquals(""Rows31Cols31"", mRows31Cols31,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,567,"m.getSubMatrix(new int[] {3,1}, new int[] {3,1}));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,568,"assertEquals(""Rows31Cols31"", mRows31Cols31,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,569,"m.getSubMatrix(new int[] {3,1}, new int[] {3,1}));"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,571,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,572,"m.getSubMatrix(1,0,2,4);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,573,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,574,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,575,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,577,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,578,"m.getSubMatrix(-1,1,2,2);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,579,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,580,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,581,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,583,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,584,"m.getSubMatrix(1,0,2,2);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,585,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,586,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,587,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,589,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,590,"m.getSubMatrix(1,0,2,4);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,591,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,592,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,593,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,595,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,596,"m.getSubMatrix(new int[] {}, new int[] {0});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,597,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,598,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,599,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,601,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,602,"m.getSubMatrix(new int[] {0}, new int[] {4});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,603,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,604,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,605,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,609,public void testGetColumnMatrix() {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,610,BigMatrix m = new BigMatrixImpl(subTestData);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,611,BigMatrix mColumn1 = new BigMatrixImpl(subColumn1);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,612,BigMatrix mColumn3 = new BigMatrixImpl(subColumn3);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,613,"assertEquals(""Column1"", mColumn1,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,614,m.getColumnMatrix(1));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,615,"assertEquals(""Column3"", mColumn3,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,616,m.getColumnMatrix(3));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,617,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,618,m.getColumnMatrix(-1);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,619,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,620,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,621,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,623,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,624,m.getColumnMatrix(4);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,625,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,626,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,627,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,631,public void testGetRowMatrix() {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,632,BigMatrix m = new BigMatrixImpl(subTestData);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,633,BigMatrix mRow0 = new BigMatrixImpl(subRow0);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,634,BigMatrix mRow3 = new BigMatrixImpl(subRow3);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,635,"assertEquals(""Row0"", mRow0,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,636,m.getRowMatrix(0));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,637,"assertEquals(""Row3"", mRow3,"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,638,m.getRowMatrix(3));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,639,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,640,m.getRowMatrix(-1);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,641,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,642,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,643,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,645,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,646,m.getRowMatrix(4);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,647,"fail(""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,648,} catch (MatrixIndexException ex) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,649,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,653,public void testEqualsAndHashCode() {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,654,BigMatrixImpl m = new BigMatrixImpl(testData);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,655,BigMatrixImpl m1 = (BigMatrixImpl) m.copy();
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,656,BigMatrixImpl mt = (BigMatrixImpl) m.transpose();
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,657,assertTrue(m.hashCode() != mt.hashCode());
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,658,"assertEquals(m.hashCode(), m1.hashCode());"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,659,"assertEquals(m, m);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,660,"assertEquals(m, m1);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,661,assertFalse(m.equals(null));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,662,assertFalse(m.equals(mt));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,663,assertFalse(m.equals(new BigMatrixImpl(bigSingular)));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,664,"// Different scales make BigDecimals, so matrices unequal"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,665,"m = new BigMatrixImpl(new String[][] {{""2.0""}});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,666,"m1 = new BigMatrixImpl(new String[][] {{""2.00""}});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,667,assertTrue(m.hashCode() != m1.hashCode());
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,668,assertFalse(m.equals(m1));
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,671,public void testToString() {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,672,BigMatrixImpl m = new BigMatrixImpl(testData);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,673,"assertEquals(""BigMatrixImpl{{1,2,3},{2,5,3},{1,0,8}}"","
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,674,m.toString());
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,675,m = new BigMatrixImpl();
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,676,"assertEquals(""BigMatrixImpl{}"","
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,677,m.toString());
