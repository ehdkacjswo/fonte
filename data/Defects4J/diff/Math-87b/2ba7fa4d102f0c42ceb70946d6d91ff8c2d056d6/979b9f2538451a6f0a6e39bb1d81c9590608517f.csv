is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,16,package org.apache.commons.math.distribution;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,21,* Abstract base class for {@link DiscreteDistribution} tests.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,22,* <p>
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,23,"* To create a concrete test class for a discrete distribution implementation,"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,24,*  implement makeDistribution() to return a distribution instance to use in
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,25,"*  tests and each of the test data generation methods below.  In each case, the"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,26,*  test points and test values arrays returned represent parallel arrays of
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,27,*  inputs and expected values for the distribution returned by makeDistribution().
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,28,*  <p>
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,29,*  makeDensityTestPoints() -- arguments used to test probability density calculation
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,30,*  makeDensityTestValues() -- expected probability densities
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,31,*  makeCumulativeTestPoints() -- arguments used to test cumulative probabilities
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,32,*  makeCumulativeTestValues() -- expected cumulative probabilites
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,33,*  makeInverseCumulativeTestPoints() -- arguments used to test inverse cdf evaluation
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,34,*  makeInverseCumulativeTestValues() -- expected inverse cdf values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,35,* <p>
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,36,"*  To implement additional test cases with different distribution instances and test data,"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,37,*  use the setXxx methods for the instance data in test cases and call the verifyXxx methods
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,38,*  to verify results.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,40,* @version $Revision: 1.1 $ $Date: 2004/05/11 02:09:14 $
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,42,public abstract class DiscreteDistributionAbstractTest extends TestCase {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,44,//-------------------- Private test instance data -------------------------
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,45,/** Discrete distribution instance used to perform tests */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,46,private DiscreteDistribution distribution;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,48,/** Tolerance used in comparing expected and returned values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,49,private double tolerance = 1E-4;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,51,/** Arguments used to test probability density calculations */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,52,private int[] densityTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,54,/** Values used to test probability density calculations */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,55,private double[] densityTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,57,/** Arguments used to test cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,58,private int[] cumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,60,/** Values used to test cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,61,private double[] cumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,63,/** Arguments used to test inverse cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,64,private double[] inverseCumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,66,/** Values used to test inverse cumulative probability density calculations */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,67,private int[] inverseCumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,72,* Constructor for DiscreteDistributionAbstractTest.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,73,* @param name
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,75,public DiscreteDistributionAbstractTest(String name) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,76,super(name);
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,79,//-------------------- Abstract methods -----------------------------------
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,81,/** Creates the default discrete distribution instance to use in tests. */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,82,public abstract DiscreteDistribution makeDistribution();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,84,/** Creates the default probability density test input values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,85,public abstract int[] makeDensityTestPoints();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,87,/** Creates the default probability density test expected values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,88,public abstract double[] makeDensityTestValues();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,90,/** Creates the default cumulative probability density test input values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,91,public abstract int[] makeCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,93,/** Creates the default cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,94,public abstract double[] makeCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,96,/** Creates the default inverse cumulative probability test input values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,97,public abstract double[] makeInverseCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,99,/** Creates the default inverse cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,100,public abstract int[] makeInverseCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,102,//-------------------- Setup / tear down ----------------------------------
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,105,* Setup sets all test instance data to default values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,107,protected void setUp() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,108,super.setUp();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,109,distribution = makeDistribution();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,110,densityTestPoints = makeDensityTestPoints();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,111,densityTestValues = makeDensityTestValues();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,112,cumulativeTestPoints = makeCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,113,cumulativeTestValues = makeCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,114,inverseCumulativeTestPoints = makeInverseCumulativeTestPoints();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,115,inverseCumulativeTestValues = makeInverseCumulativeTestValues();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,119,* Cleans up test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,121,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,122,super.tearDown();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,123,distribution = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,124,densityTestPoints = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,125,densityTestValues = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,126,cumulativeTestPoints = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,127,cumulativeTestValues = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,128,inverseCumulativeTestPoints = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,129,inverseCumulativeTestValues = null;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,132,//-------------------- Verification methods -------------------------------
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,135,* Verifies that probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,136,* using current test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,138,protected void verifyDensities() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,139,for (int i = 0; i < densityTestPoints.length; i++) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,140,"assertEquals(""Incorrect density value returned for "" + densityTestPoints[i],"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,141,"densityTestValues[i],"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,142,"distribution.probability(densityTestPoints[i]), tolerance);"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,147,* Verifies that cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,148,* using current test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,150,protected void verifyCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,151,for (int i = 0; i < cumulativeTestPoints.length; i++) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,152,"assertEquals(""Incorrect cumulative probability value returned for "" + cumulativeTestPoints[i],"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,153,"cumulativeTestValues[i],"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,154,"distribution.cumulativeProbability(cumulativeTestPoints[i]), tolerance);"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,159,* Verifies that inverse cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,160,* using current test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,162,protected void verifyInverseCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,163,for (int i = 0; i < inverseCumulativeTestPoints.length; i++) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,164,"assertEquals(""Incorrect inverse cumulative probability value returned for """
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,165,"+ inverseCumulativeTestPoints[i], inverseCumulativeTestValues[i],"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,166,distribution.inverseCumulativeProbability(inverseCumulativeTestPoints[i]));
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,170,//------------------------ Default test cases -----------------------------
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,173,* Verifies that probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,174,* using default test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,176,public void testDensities() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,177,verifyDensities();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,181,* Verifies that cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,182,* using default test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,184,public void testCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,185,verifyCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,189,* Verifies that inverse cumulative probability density calculations match exptected values
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,190,* using default test instance data
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,192,public void testInverseCumulativeProbabilities() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,193,verifyInverseCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,197,* Verifies that illegal arguments are correctly handled
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,199,public void testIllegalArguments() throws Exception {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,200,try {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,201,"distribution.cumulativeProbability(1, 0);"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,202,"fail(""Expecting IllegalArgumentException for bad cumulativeProbability interval"");"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,203,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,204,// expected
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,206,try {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,207,distribution.inverseCumulativeProbability(-1);
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,208,"fail(""Expecting IllegalArgumentException for p = -1"");"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,209,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,210,// expected
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,212,try {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,213,distribution.inverseCumulativeProbability(1);
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,214,"fail(""Expecting IllegalArgumentException for p = 1"");"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,215,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,216,// expected
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,218,try {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,219,distribution.inverseCumulativeProbability(2);
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,220,"fail(""Expecting IllegalArgumentException for p = 2"");"
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,221,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,222,// expected
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,226,//------------------ Getters / Setters for test instance data -----------
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,228,* @return Returns the cumulativeTestPoints.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,230,protected int[] getCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,231,return cumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,235,* @param cumulativeTestPoints The cumulativeTestPoints to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,237,protected void setCumulativeTestPoints(int[] cumulativeTestPoints) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,238,this.cumulativeTestPoints = cumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,242,* @return Returns the cumulativeTestValues.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,244,protected double[] getCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,245,return cumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,249,* @param cumulativeTestValues The cumulativeTestValues to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,251,protected void setCumulativeTestValues(double[] cumulativeTestValues) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,252,this.cumulativeTestValues = cumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,256,* @return Returns the densityTestPoints.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,258,protected int[] getDensityTestPoints() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,259,return densityTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,263,* @param densityTestPoints The densityTestPoints to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,265,protected void setDensityTestPoints(int[] densityTestPoints) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,266,this.densityTestPoints = densityTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,270,* @return Returns the densityTestValues.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,272,protected double[] getDensityTestValues() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,273,return densityTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,277,* @param densityTestValues The densityTestValues to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,279,protected void setDensityTestValues(double[] densityTestValues) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,280,this.densityTestValues = densityTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,284,* @return Returns the distribution.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,286,protected DiscreteDistribution getDistribution() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,287,return distribution;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,291,* @param distribution The distribution to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,293,protected void setDistribution(DiscreteDistribution distribution) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,294,this.distribution = distribution;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,298,* @return Returns the inverseCumulativeTestPoints.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,300,protected double[] getInverseCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,301,return inverseCumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,305,* @param inverseCumulativeTestPoints The inverseCumulativeTestPoints to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,307,protected void setInverseCumulativeTestPoints(double[] inverseCumulativeTestPoints) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,308,this.inverseCumulativeTestPoints = inverseCumulativeTestPoints;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,312,* @return Returns the inverseCumulativeTestValues.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,314,protected int[] getInverseCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,315,return inverseCumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,319,* @param inverseCumulativeTestValues The inverseCumulativeTestValues to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,321,protected void setInverseCumulativeTestValues(int[] inverseCumulativeTestValues) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,322,this.inverseCumulativeTestValues = inverseCumulativeTestValues;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,326,* @return Returns the tolerance.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,328,protected double getTolerance() {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,329,return tolerance;
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,333,* @param tolerance The tolerance to set.
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,335,protected void setTolerance(double tolerance) {
True,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,src/test/org/apache/commons/math/distribution/DiscreteDistributionAbstractTest.java,336,this.tolerance = tolerance;
