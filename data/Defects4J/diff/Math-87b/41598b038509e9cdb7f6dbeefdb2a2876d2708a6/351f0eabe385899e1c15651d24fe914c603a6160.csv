is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,16,package org.apache.commons.math.fraction;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,18,import org.apache.commons.math.ConvergenceException;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,19,import org.apache.commons.math.util.MathUtils;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,22,* Representation of a rational number.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,24,* @author Apache Software Foundation
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,25,* @version $Revision: $ $Date: $
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,27,public class Fraction extends Number implements Comparable {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,29,"/** A fraction representing ""1 / 1"". */"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,30,"public static final Fraction ONE = new Fraction(1, 1);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,32,"/** A fraction representing ""0 / 1"". */"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,33,"public static final Fraction ZERO = new Fraction(0, 1);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,35,/** Serializable version identifier */
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,36,static final long serialVersionUID = 65382027393090L;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,38,/** The denominator. */
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,39,private int denominator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,41,/** The numerator. */
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,42,private int numerator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,45,* Create a fraction given the double value.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,46,* @param value the double value to convert to a fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,47,* @throws ConvergenceException if the continued fraction failed to
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,48,*         converge.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,50,public Fraction(double value) throws ConvergenceException {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,51,"this(value, 1.0e-5, 100);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,55,* Create a fraction given the double value.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,56,* <p>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,57,* References:
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,58,* <ul>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,59,"* <li><a href=""http://mathworld.wolfram.com/ContinuedFraction.html"">"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,60,* Continued Fraction</a> equations (11) and (22)-(26)</li>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,61,* </ul>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,62,* </p>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,63,* @param value the double value to convert to a fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,64,* @param epsilon maximum error allowed.  The resulting fraction is within
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,65,"*        <code>epsilon</code> of <code>value</code>, in absolute terms."
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,66,* @param maxIterations maximum number of convergents
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,67,* @throws ConvergenceException if the continued fraction failed to
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,68,*         converge.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,70,"public Fraction(double value, double epsilon, int maxIterations)"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,71,throws ConvergenceException
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,73,double r0 = value;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,74,int a0 = (int)Math.floor(r0);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,76,int p0 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,77,int q0 = 0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,78,int p1 = a0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,79,int q1 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,81,int p2 = 0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,82,int q2 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,84,int n = 0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,85,boolean stop = false;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,86,do {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,87,++n;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,88,double r1 = 1.0 / (r0 - a0);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,89,int a1 = (int)Math.floor(r1);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,90,p2 = (a1 * p1) + p0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,91,q2 = (a1 * q1) + q0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,93,double convergent = (double)p2 / (double)q2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,94,if (n < maxIterations && Math.abs(convergent - value) > epsilon) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,95,p0 = p1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,96,p1 = p2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,97,q0 = q1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,98,q1 = q2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,99,a0 = a1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,100,r0 = r1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,101,} else {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,102,stop = true;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,104,} while (!stop);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,106,if (n >= maxIterations) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,107,throw new ConvergenceException(
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,108,"""Unable to convert double to fraction"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,111,this.numerator = p2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,112,this.denominator = q2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,113,reduce();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,117,* Create a fraction given the numerator and denominator.  The fraction is
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,118,* reduced to lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,119,* @param num the numerator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,120,* @param den the denominator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,122,"public Fraction(int num, int den) {"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,123,super();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,124,this.numerator = num;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,125,this.denominator = den;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,126,reduce();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,130,* Returns the absolute value of this fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,131,* @return the absolute value.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,133,public Fraction abs() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,134,Fraction ret;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,135,if (numerator >= 0) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,136,ret = this;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,137,} else {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,138,ret = negate();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,140,return ret;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,144,* Return the sum of this fraction and the given fraction.  The returned
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,145,* fraction is reduced to lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,147,* @param rhs the other fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,148,* @return the fraction sum in lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,150,public Fraction add(Fraction rhs) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,151,"int den = MathUtils.lcm(denominator, rhs.denominator);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,152,int num = (numerator * (den / denominator)) +
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,153,(rhs.numerator * (den / rhs.denominator));
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,154,"return new Fraction(num, den);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,158,* Compares this object to another based on size.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,159,* @param object the object to compare to
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,160,"* @return -1 if this is less than <tt>object</tt>, +1 if this is greater"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,161,"*         than <tt>object</tt>, 0 if they are equal."
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,163,public int compareTo(Object object) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,164,int ret = 0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,166,if (this != object) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,167,Fraction other = (Fraction)object;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,168,double first = doubleValue();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,169,double second = other.doubleValue();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,171,if (first < second) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,172,ret = -1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,173,} else if (first > second) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,174,ret = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,178,return ret;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,182,* Return the quotient of this fraction and the given fraction.  The
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,183,* returned fraction is reduced to lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,184,* @param rhs the other fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,185,* @return the fraction quotient in lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,187,public Fraction divide(Fraction rhs) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,188,return multiply(rhs.reciprocal());
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,192,* Gets the fraction as a <tt>double</tt>. This calculates the fraction as
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,193,* the numerator divided by denominator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,194,* @return the fraction as a <tt>double</tt>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,196,public double doubleValue() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,197,return (double)numerator / (double)denominator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,201,* Test for the equality of two fractions.  If the lowest term
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,202,"* numerator and denominators are the same for both fractions, the two"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,203,* fractions are considered to be equal.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,204,* @param other fraction to test for equality to this fraction
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,205,"* @return true if two fractions are equal, false if object is"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,206,"*         <tt>null</tt>, not an instance of {@link Fraction}, or not equal"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,207,*         to this fraction instance.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,209,public boolean equals(Object other) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,210,boolean ret;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,212,if (this == other) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,213,ret = true;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,214,} else if (other == null) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,215,ret = false;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,216,} else {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,217,try {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,218,"// since fractions are always in lowest terms, numerators and"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,219,// denominators can be compared directly for equality.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,220,Fraction rhs = (Fraction)other;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,221,ret = (numerator == rhs.numerator) &&
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,222,(denominator == rhs.denominator);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,223,} catch (ClassCastException ex) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,224,// ignore exception
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,225,ret = false;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,229,return ret;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,233,* Gets the fraction as a <tt>float</tt>. This calculates the fraction as
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,234,* the numerator divided by denominator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,235,* @return the fraction as a <tt>float</tt>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,237,public float floatValue() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,238,return (float)doubleValue();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,242,* Access the denominator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,243,* @return the denominator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,245,public int getDenominator() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,246,return denominator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,250,* Access the numerator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,251,* @return the numerator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,253,public int getNumerator() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,254,return numerator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,258,* Gets a hashCode for the fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,259,* @return a hash code value for this object
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,261,public int hashCode() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,262,return 37 * (37 * 17 + getNumerator()) + getDenominator();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,266,* Gets the fraction as an <tt>int</tt>. This returns the whole number part
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,267,* of the fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,268,* @return the whole number fraction part
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,270,public int intValue() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,271,return (int)doubleValue();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,275,* Gets the fraction as a <tt>long</tt>. This returns the whole number part
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,276,* of the fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,277,* @return the whole number fraction part
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,279,public long longValue() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,280,return (long)doubleValue();
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,284,* Return the product of this fraction and the given fraction.  The returned
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,285,* fraction is reduced to lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,286,* @param rhs the other fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,287,* @return the fraction product in lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,289,public Fraction multiply(Fraction rhs) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,290,"return new Fraction(numerator * rhs.numerator,"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,291,denominator * rhs.denominator);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,295,* Return the additive inverse of this fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,296,* @return the negation of this fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,298,public Fraction negate() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,299,"return new Fraction(-numerator, denominator);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,303,* Return the multiplicative inverse of this fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,304,* @return the reciprocal fraction
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,306,public Fraction reciprocal() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,307,"return new Fraction(denominator, numerator);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,311,* Return the difference between this fraction and the given fraction.  The
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,312,* returned fraction is reduced to lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,313,* @param rhs the other fraction.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,314,* @return the fraction difference in lowest terms.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,316,public Fraction subtract(Fraction rhs) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,317,return add(rhs.negate());
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,321,* Reduce this fraction to lowest terms.  This is accomplished by dividing
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,322,* both numerator and denominator by their greatest common divisor.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,324,private void reduce() {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,325,// reduce numerator and denominator by greatest common denominator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,326,"int d = MathUtils.gcd(numerator, denominator);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,327,if (d > 1) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,328,numerator /= d;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,329,denominator /= d;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,332,// move sign to numerator.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,333,if (denominator < 0) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,334,numerator *= -1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,335,denominator *= -1;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,17,package org.apache.commons.math.fraction;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,20,import java.text.FieldPosition;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,21,import java.text.Format;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,22,import java.text.NumberFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,23,import java.text.ParseException;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,24,import java.text.ParsePosition;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,25,import java.util.Locale;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,27,import org.apache.commons.math.ConvergenceException;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,30,* Formats a Fraction number in proper format or improper format.  The number
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,31,"* format for each of the whole number, numerator and, denominator can be"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,32,* configured.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,34,* @author Apache Software Foundation
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,35,"* @version $Revision: 1.10 $ $Date: 2004-09-20 23:45:55 -0500 (Mon, 20 Sep 2004) $"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,37,public class FractionFormat extends Format implements Serializable {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,39,/** Serializable version identifier */
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,40,static final long serialVersionUID = -6337346779577272306L;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,42,/** The format used for the denominator. */
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,43,private NumberFormat denominatorFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,45,/** The format used for the numerator. */
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,46,private NumberFormat numeratorFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,49,* Create an improper formatting instance with the default number format
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,50,* for the numerator and denominator.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,52,public FractionFormat() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,53,this(getDefaultNumberFormat());
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,57,* Create an improper formatting instance with a custom number format for
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,58,* both the numerator and denominator.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,59,* @param format the custom format for both the numerator and denominator.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,61,public FractionFormat(NumberFormat format) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,62,"this(format, (NumberFormat)format.clone());"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,66,* Create an improper formatting instance with a custom number format for
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,67,* the numerator and a custom number format for the denominator.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,68,* @param numeratorFormat the custom format for the numerator.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,69,* @param denominatorFormat the custom format for the denominator.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,71,"public FractionFormat(NumberFormat numeratorFormat,"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,72,NumberFormat denominatorFormat)
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,74,super();
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,75,this.numeratorFormat = numeratorFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,76,this.denominatorFormat = denominatorFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,80,* This static method calls formatFraction() on a default instance of
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,81,* FractionFormat.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,83,* @param f Fraction object to format
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,84,* @return A formatted fraction in proper form.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,86,public static String formatFraction(Fraction f) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,87,return getImproperInstance().format(f);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,91,* Get the set of locales for which complex formats are available.  This
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,92,* is the same set as the {@link NumberFormat} set.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,93,* @return available complex format locales.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,95,public static Locale[] getAvailableLocales() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,96,return NumberFormat.getAvailableLocales();
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,100,* Returns the default complex format for the current locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,101,* @return the default complex format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,103,public static FractionFormat getImproperInstance() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,104,return getImproperInstance(Locale.getDefault());
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,108,* Returns the default complex format for the given locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,109,* @param locale the specific locale used by the format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,110,* @return the complex format specific to the given locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,112,public static FractionFormat getImproperInstance(Locale locale) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,113,NumberFormat f = getDefaultNumberFormat(locale);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,114,return new FractionFormat(f);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,118,* Returns the default complex format for the current locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,119,* @return the default complex format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,121,public static FractionFormat getProperInstance() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,122,return getProperInstance(Locale.getDefault());
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,126,* Returns the default complex format for the given locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,127,* @param locale the specific locale used by the format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,128,* @return the complex format specific to the given locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,130,public static FractionFormat getProperInstance(Locale locale) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,131,NumberFormat f = getDefaultNumberFormat(locale);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,132,return new ProperFractionFormat(f);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,136,* Create a default number format.  The default number format is based on
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,137,* {@link NumberFormat#getInstance()} with the only customizing is the
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,138,"* maximum number of fraction digits, which is set to 2."
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,139,* @return the default number format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,141,protected static NumberFormat getDefaultNumberFormat() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,142,return getDefaultNumberFormat(Locale.getDefault());
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,146,* Create a default number format.  The default number format is based on
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,147,* {@link NumberFormat#getInstance(java.util.Locale)} with the only
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,148,"* customizing is the maximum number of fraction digits, which is set to 2."
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,149,* @param locale the specific locale used by the format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,150,* @return the default number format specific to the given locale.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,152,private static NumberFormat getDefaultNumberFormat(Locale locale) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,153,NumberFormat nf = NumberFormat.getIntegerInstance(locale);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,154,return nf;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,158,* Formats a {@link Fraction} object to produce a string.  The fraction is
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,159,* output in improper format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,161,* @param fraction the object to format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,162,* @param toAppendTo where the text is to be appended
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,163,"* @param pos On input: an alignment field, if desired. On output: the"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,164,*            offsets of the alignment field
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,165,* @return the value passed in as toAppendTo.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,167,"public StringBuffer format(Fraction fraction, StringBuffer toAppendTo,"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,168,FieldPosition pos) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,170,pos.setBeginIndex(0);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,171,pos.setEndIndex(0);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,173,"getNumeratorFormat().format(fraction.getNumerator(), toAppendTo, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,174,"toAppendTo.append("" / "");"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,175,"getDenominatorFormat().format(fraction.getDenominator(), toAppendTo,"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,176,pos);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,178,return toAppendTo;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,182,* Formats a object to produce a string.  <code>obj</code> must be either a
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,183,* {@link Fraction} object or a {@link Number} object.  Any other type of
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,184,* object will result in an {@link IllegalArgumentException} being thrown.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,186,* @param obj the object to format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,187,* @param toAppendTo where the text is to be appended
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,188,"* @param pos On input: an alignment field, if desired. On output: the"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,189,*            offsets of the alignment field
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,190,* @return the value passed in as toAppendTo.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,191,"* @see java.text.Format#format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,192,* @throws IllegalArgumentException is <code>obj</code> is not a valid type.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,194,"public StringBuffer format(Object obj, StringBuffer toAppendTo,"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,195,FieldPosition pos)
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,197,StringBuffer ret = null;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,199,if (obj instanceof Fraction) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,200,"ret = format( (Fraction)obj, toAppendTo, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,201,} else if (obj instanceof Number) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,202,try {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,203,"ret = format( new Fraction(((Number)obj).doubleValue()),"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,204,"toAppendTo, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,205,} catch (ConvergenceException ex) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,206,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,207,"""Cannot convert given object to a fraction."");"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,209,} else {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,210,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,211,"""Cannot format given object as a fraction"");"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,214,return ret;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,218,* Access the denominator format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,219,* @return the denominator format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,221,public NumberFormat getDenominatorFormat() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,222,return denominatorFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,226,* Access the numerator format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,227,* @return the numerator format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,229,public NumberFormat getNumeratorFormat() {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,230,return numeratorFormat;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,234,* Parses a string to produce a {@link Fraction} object.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,235,* @param source the string to parse
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,236,* @return the parsed {@link Fraction} object.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,237,* @exception ParseException if the beginning of the specified string
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,238,*            cannot be parsed.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,240,public Fraction parse(String source) throws ParseException {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,241,ParsePosition parsePosition = new ParsePosition(0);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,242,"Fraction result = parse(source, parsePosition);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,243,if (parsePosition.getIndex() == 0) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,244,"throw new ParseException(""Unparseable fraction number: \"""" +"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,245,"source + ""\"""", parsePosition.getErrorIndex());"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,247,return result;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,251,* Parses a string to produce a {@link Fraction} object.  This method
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,252,* expects the string to be formatted as an improper fraction.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,253,* @param source the string to parse
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,254,* @param pos input/ouput parsing parameter.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,255,* @return the parsed {@link Fraction} object.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,257,"public Fraction parse(String source, ParsePosition pos) {"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,258,int initialIndex = pos.getIndex();
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,260,// parse whitespace
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,261,"parseAndIgnoreWhitespace(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,263,// parse numerator
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,264,"Number num = getNumeratorFormat().parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,265,if (num == null) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,266,// invalid integer number
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,267,"// set index back to initial, error index should already be set"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,268,// character examined.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,269,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,270,return null;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,273,// parse '/'
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,274,int startIndex = pos.getIndex();
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,275,"char c = parseNextCharacter(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,276,switch (c) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,277,case 0 :
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,278,// no '/'
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,279,// return num as a fraction
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,280,"return new Fraction(num.intValue(), 1);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,281,case '/' :
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,282,"// found '/', continue parsing denominator"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,283,break;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,284,default :
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,285,// invalid '/'
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,286,"// set index back to initial, error index should be the last"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,287,// character examined.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,288,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,289,pos.setErrorIndex(startIndex);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,290,return null;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,293,// parse whitespace
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,294,"parseAndIgnoreWhitespace(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,296,// parse denominator
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,297,"Number den = getDenominatorFormat().parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,298,if (den == null) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,299,// invalid integer number
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,300,"// set index back to initial, error index should already be set"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,301,// character examined.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,302,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,303,return null;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,306,"return new Fraction(num.intValue(), den.intValue());"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,310,* Parses a string to produce a object.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,311,* @param source the string to parse
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,312,* @param pos input/ouput parsing parameter.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,313,* @return the parsed object.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,314,"* @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,316,"public Object parseObject(String source, ParsePosition pos) {"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,317,"return parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,321,* Modify the denominator format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,322,* @param format the new denominator format value.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,323,* @throws IllegalArgumentException if <code>format</code> is
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,324,*         <code>null</code>.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,326,public void setDenominatorFormat(NumberFormat format) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,327,if (format == null) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,328,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,329,"""denominator format can not be null."");"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,331,this.denominatorFormat = format;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,335,* Modify the numerator format.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,336,* @param format the new numerator format value.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,337,* @throws IllegalArgumentException if <code>format</code> is
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,338,*         <code>null</code>.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,340,public void setNumeratorFormat(NumberFormat format) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,341,if (format == null) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,342,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,343,"""numerator format can not be null."");"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,345,this.numeratorFormat = format;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,349,* Parses <code>source</code> until a non-whitespace character is found.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,350,* @param source the string to parse
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,351,"* @param pos input/ouput parsing parameter.  On output, <code>pos</code>"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,352,*        holds the index of the next non-whitespace character.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,354,protected static void parseAndIgnoreWhitespace(
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,355,"String source, ParsePosition pos)"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,357,"parseNextCharacter(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,358,pos.setIndex(pos.getIndex() - 1);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,362,* Parses <code>source</code> until a non-whitespace character is found.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,363,* @param source the string to parse
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,364,* @param pos input/ouput parsing parameter.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,365,* @return the first non-whitespace character.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,367,"protected static char parseNextCharacter(String source, ParsePosition pos) {"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,368,int index = pos.getIndex();
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,369,int n = source.length();
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,370,char ret = 0;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,372,if (index < n) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,373,char c;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,374,do {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,375,c = source.charAt(index++);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,376,} while (Character.isWhitespace(c) && index < n);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,377,pos.setIndex(index);
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,379,if (index < n) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,380,ret = c;
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,384,return ret;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,16,package org.apache.commons.math.fraction;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,18,import java.text.FieldPosition;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,19,import java.text.NumberFormat;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,20,import java.text.ParsePosition;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,22,import org.apache.commons.math.util.MathUtils;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,25,* Formats a Fraction number in proper format.  The number format for each of
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,26,"* the whole number, numerator and, denominator can be configured."
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,28,* @author Apache Software Foundation
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,29,* @version $Revision: $ $Date: $
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,31,public class ProperFractionFormat extends FractionFormat {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,33,/** Serializable version identifier */
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,34,static final long serialVersionUID = -6337346779577272307L;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,36,/** The format used for the whole number. */
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,37,private NumberFormat wholeFormat;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,40,* Create a proper formatting instance with the default number format for
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,41,"* the whole, numerator, and denominator."
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,43,public ProperFractionFormat() {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,44,this(getDefaultNumberFormat());
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,48,* Create a proper formatting instance with a custom number format for the
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,49,"* whole, numerator, and denominator."
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,50,"* @param format the custom format for the whole, numerator, and"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,51,*        denominator.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,53,public ProperFractionFormat(NumberFormat format) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,54,"this(format, (NumberFormat)format.clone(), (NumberFormat)format.clone());"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,58,* Create a proper formatting instance with a custom number format for each
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,59,"* of the whole, numerator, and denominator."
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,60,* @param wholeFormat the custom format for the whole.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,61,* @param numeratorFormat the custom format for the numerator.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,62,* @param denominatorFormat the custom format for the denominator.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,64,"public ProperFractionFormat(NumberFormat wholeFormat,"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,65,"NumberFormat numeratorFormat,"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,66,NumberFormat denominatorFormat)
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,68,"super(numeratorFormat, denominatorFormat);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,69,setWholeFormat(wholeFormat);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,73,* Formats a {@link Fraction} object to produce a string.  The fraction
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,74,* is output in proper format.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,76,* @param fraction the object to format.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,77,* @param toAppendTo where the text is to be appended
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,78,"* @param pos On input: an alignment field, if desired. On output: the"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,79,*            offsets of the alignment field
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,80,* @return the value passed in as toAppendTo.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,82,"public StringBuffer format(Fraction fraction, StringBuffer toAppendTo,"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,83,FieldPosition pos) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,85,pos.setBeginIndex(0);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,86,pos.setEndIndex(0);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,88,int num = fraction.getNumerator();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,89,int den = fraction.getDenominator();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,90,int whole = num / den;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,91,num = num % den;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,93,if (whole != 0) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,94,"getWholeFormat().format(whole, toAppendTo, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,95,toAppendTo.append(' ');
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,96,num = Math.abs(num);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,98,"getNumeratorFormat().format(num, toAppendTo, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,99,"toAppendTo.append("" / "");"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,100,"getDenominatorFormat().format(den, toAppendTo,"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,101,pos);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,103,return toAppendTo;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,107,* Access the whole format.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,108,* @return the whole format.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,110,public NumberFormat getWholeFormat() {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,111,return wholeFormat;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,115,* Parses a string to produce a {@link Fraction} object.  This method
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,116,* expects the string to be formatted as a proper fraction.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,117,* @param source the string to parse
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,118,* @param pos input/ouput parsing parameter.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,119,* @return the parsed {@link Fraction} object.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,121,"public Fraction parse(String source, ParsePosition pos) {"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,122,// try to parse improper fraction
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,123,"Fraction ret = super.parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,124,if (ret != null) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,125,return ret;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,128,int initialIndex = pos.getIndex();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,130,// parse whitespace
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,131,"parseAndIgnoreWhitespace(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,133,// parse whole
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,134,"Number whole = getWholeFormat().parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,135,if (whole == null) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,136,// invalid integer number
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,137,"// set index back to initial, error index should already be set"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,138,// character examined.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,139,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,140,return null;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,143,// parse whitespace
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,144,"parseAndIgnoreWhitespace(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,146,// parse numerator
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,147,"Number num = getNumeratorFormat().parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,148,if (num == null) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,149,// invalid integer number
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,150,"// set index back to initial, error index should already be set"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,151,// character examined.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,152,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,153,return null;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,156,// parse '/'
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,157,int startIndex = pos.getIndex();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,158,"char c = parseNextCharacter(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,159,switch (c) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,160,case 0 :
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,161,// no '/'
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,162,// return num as a fraction
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,163,"return new Fraction(num.intValue(), 1);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,164,case '/' :
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,165,"// found '/', continue parsing denominator"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,166,break;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,167,default :
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,168,// invalid '/'
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,169,"// set index back to initial, error index should be the last"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,170,// character examined.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,171,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,172,pos.setErrorIndex(startIndex);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,173,return null;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,176,// parse whitespace
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,177,"parseAndIgnoreWhitespace(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,179,// parse denominator
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,180,"Number den = getDenominatorFormat().parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,181,if (den == null) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,182,// invalid integer number
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,183,"// set index back to initial, error index should already be set"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,184,// character examined.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,185,pos.setIndex(initialIndex);
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,186,return null;
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,189,int w = whole.intValue();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,190,int n = num.intValue();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,191,int d = den.intValue();
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,192,"return new Fraction(((Math.abs(w) * d) + n) * MathUtils.sign(w), d);"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,196,* Modify the whole format.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,197,* @param format The new whole format value.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,198,* @throws IllegalArgumentException if <code>format</code> is
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,199,*         <code>null</code>.
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,201,public void setWholeFormat(NumberFormat format) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,202,if (format == null) {
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,203,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,204,"""whole format can not be null."");"
True,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/java/org/apache/commons/math/fraction/ProperFractionFormat.java,206,this.wholeFormat = format;
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,2, Copyright 2003-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,2,* Copyright 2003-2005 The Apache Software Foundation.
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,22, @version $Revision: 1.20 $ $Date: 2004/10/14 04:01:04 $
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,22,* @version $Revision: 1.20 $ $Date$
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,473,* Returns the least common multiple between two integer values.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,474,* @param a the first integer value.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,475,* @param b the second integer value.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,476,* @return the least common multiple between a and b.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,478,"public static int lcm(int a, int b) {"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,479,"return Math.abs(a / gcd(a, b) * b);"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,483,* Returns the greatest common divisor between two integer values.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,484,* @param a the first integer value.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,485,* @param b the second integer value.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,486,* @return the greatest common divisor between a and b.
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,488,"public static int gcd(int a, int b) {"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,489,int ret;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,491,if (a == 0) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,492,ret = Math.abs(b);
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,493,} else if (b == 0) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,494,ret = Math.abs(a);
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,495,} else if (a < 0) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,496,"ret = gcd(-a, b);"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,497,} else if (b < 0) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,498,"ret = gcd(a, -b);"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,499,} else {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,500,int r = 0;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,501,while(b > 0){
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,502,r = a % b;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,503,a = b;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,504,b = r;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,506,ret = a;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,508,return ret;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,17,package org.apache.commons.math.fraction;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,19,import java.text.ParseException;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,20,import java.util.Locale;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,24,public class FractionFormatTest extends TestCase {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,26,FractionFormat properFormat = null;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,27,FractionFormat improperFormat = null;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,29,protected Locale getLocale() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,30,return Locale.getDefault();
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,33,protected void setUp() throws Exception {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,34,properFormat = FractionFormat.getProperInstance(getLocale());
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,35,improperFormat = FractionFormat.getImproperInstance(getLocale());
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,38,public void testFormat() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,39,"Fraction c = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,40,"String expected = ""1 / 2"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,42,String actual = properFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,43,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,45,actual = improperFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,46,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,49,public void testFormatNegative() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,50,"Fraction c = new Fraction(-1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,51,"String expected = ""-1 / 2"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,53,String actual = properFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,54,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,56,actual = improperFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,57,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,60,public void testFormatZero() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,61,"Fraction c = new Fraction(0, 1);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,62,"String expected = ""0 / 1"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,64,String actual = properFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,65,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,67,actual = improperFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,68,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,71,public void testFormatImproper() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,72,"Fraction c = new Fraction(5, 3);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,74,String actual = properFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,75,"assertEquals(""1 2 / 3"", actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,77,actual = improperFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,78,"assertEquals(""5 / 3"", actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,81,public void testFormatImproperNegative() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,82,"Fraction c = new Fraction(-5, 3);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,84,String actual = properFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,85,"assertEquals(""-1 2 / 3"", actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,87,actual = improperFormat.format(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,88,"assertEquals(""-5 / 3"", actual);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,91,public void testParse() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,92,"String source = ""1 / 2"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,94,try {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,95,Fraction c = properFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,96,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,97,"assertEquals(1, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,98,"assertEquals(2, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,100,c = improperFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,101,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,102,"assertEquals(1, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,103,"assertEquals(2, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,104,} catch (ParseException ex) {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,105,fail(ex.getMessage());
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,109,public void testParseNegative() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,111,try {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,112,"String source = ""-1 / 2"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,113,Fraction c = properFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,114,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,115,"assertEquals(-1, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,116,"assertEquals(2, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,118,c = improperFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,119,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,120,"assertEquals(-1, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,121,"assertEquals(2, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,123,"source = ""1 / -2"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,124,c = properFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,125,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,126,"assertEquals(-1, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,127,"assertEquals(2, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,129,c = improperFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,130,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,131,"assertEquals(-1, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,132,"assertEquals(2, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,133,} catch (ParseException ex) {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,134,fail(ex.getMessage());
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,138,public void testParseProper() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,139,"String source = ""1 2 / 3"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,141,try {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,142,Fraction c = properFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,143,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,144,"assertEquals(5, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,145,"assertEquals(3, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,146,} catch (ParseException ex) {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,147,fail(ex.getMessage());
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,150,try {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,151,improperFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,152,"fail(""invalid improper fraction."");"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,153,} catch (ParseException ex) {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,154,// success
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,158,public void testParseProperNegative() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,159,"String source = ""-1 2 / 3"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,160,try {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,161,Fraction c = properFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,162,assertNotNull(c);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,163,"assertEquals(-5, c.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,164,"assertEquals(3, c.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,165,} catch (ParseException ex) {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,166,fail(ex.getMessage());
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,169,try {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,170,improperFormat.parse(source);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,171,"fail(""invalid improper fraction."");"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,172,} catch (ParseException ex) {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,173,// success
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,16,package org.apache.commons.math.fraction;
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,18,import org.apache.commons.math.ConvergenceException;
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,23,* @version $Revision: $ $Date: $
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,25,public class FractionTest extends TestCase {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,27,"private void assertFraction(int expectedNumerator, int expectedDenominator, Fraction actual) {"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,28,"assertEquals(expectedNumerator, actual.getNumerator());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,29,"assertEquals(expectedDenominator, actual.getDenominator());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,32,public void testConstructor() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,33,"assertFraction(0, 1, new Fraction(0, 1));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,34,"assertFraction(0, 1, new Fraction(0, 2));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,35,"assertFraction(0, 1, new Fraction(0, -1));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,36,"assertFraction(1, 2, new Fraction(1, 2));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,37,"assertFraction(1, 2, new Fraction(2, 4));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,38,"assertFraction(-1, 2, new Fraction(-1, 2));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,39,"assertFraction(-1, 2, new Fraction(1, -2));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,40,"assertFraction(-1, 2, new Fraction(-2, 4));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,41,"assertFraction(-1, 2, new Fraction(2, -4));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,44,public void testConstructorDouble() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,45,try {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,46,"assertFraction(1, 2, new Fraction(0.5));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,47,"assertFraction(1, 3, new Fraction(1.0 / 3.0));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,48,"assertFraction(17, 100, new Fraction(17.0 / 100.0));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,49,"assertFraction(317, 100, new Fraction(317.0 / 100.0));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,50,"assertFraction(-1, 2, new Fraction(-0.5));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,51,"assertFraction(-1, 3, new Fraction(-1.0 / 3.0));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,52,"assertFraction(-17, 100, new Fraction(17.0 / -100.0));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,53,"assertFraction(-317, 100, new Fraction(-317.0 / 100.0));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,54,} catch (ConvergenceException ex) {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,55,fail(ex.getMessage());
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,59,public void testAbs() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,60,"Fraction a = new Fraction(10, 21);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,61,"Fraction b = new Fraction(-10, 21);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,62,"Fraction c = new Fraction(10, -21);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,64,"assertFraction(10, 21, a.abs());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,65,"assertFraction(10, 21, b.abs());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,66,"assertFraction(10, 21, c.abs());"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,69,public void testAdd() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,70,"Fraction a = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,71,"Fraction b = new Fraction(2, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,73,"assertFraction(1, 1, a.add(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,74,"assertFraction(7, 6, a.add(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,75,"assertFraction(7, 6, b.add(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,76,"assertFraction(4, 3, b.add(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,79,public void testDivide() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,80,"Fraction a = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,81,"Fraction b = new Fraction(2, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,83,"assertFraction(1, 1, a.divide(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,84,"assertFraction(3, 4, a.divide(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,85,"assertFraction(4, 3, b.divide(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,86,"assertFraction(1, 1, b.divide(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,89,public void testMultiply() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,90,"Fraction a = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,91,"Fraction b = new Fraction(2, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,93,"assertFraction(1, 4, a.multiply(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,94,"assertFraction(1, 3, a.multiply(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,95,"assertFraction(1, 3, b.multiply(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,96,"assertFraction(4, 9, b.multiply(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,99,public void testSubtract() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,100,"Fraction a = new Fraction(1, 2);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,101,"Fraction b = new Fraction(2, 3);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,103,"assertFraction(0, 1, a.subtract(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,104,"assertFraction(-1, 6, a.subtract(b));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,105,"assertFraction(1, 6, b.subtract(a));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,106,"assertFraction(0, 1, b.subtract(b));"
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,2, Copyright 2003-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,2,* Copyright 2003-2005 The Apache Software Foundation.
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,25, @version $Revision: 1.15 $ $Date: 2004/10/14 04:01:04 $
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,25,* @version $Revision: 1.15 $ $Date$
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,392,public void testGcd() {
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,393,int a = 30;
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,394,int b = 50;
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,395,int c = 77;
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,397,"assertEquals(0, MathUtils.gcd(0, 0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,399,"assertEquals(b, MathUtils.gcd( 0,  b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,400,"assertEquals(a, MathUtils.gcd( a,  0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,401,"assertEquals(b, MathUtils.gcd( 0, -b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,402,"assertEquals(a, MathUtils.gcd(-a,  0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,404,"assertEquals(10, MathUtils.gcd( a,  b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,405,"assertEquals(10, MathUtils.gcd(-a,  b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,406,"assertEquals(10, MathUtils.gcd( a, -b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,407,"assertEquals(10, MathUtils.gcd(-a, -b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,409,"assertEquals(1, MathUtils.gcd( a,  c));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,410,"assertEquals(1, MathUtils.gcd(-a,  c));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,411,"assertEquals(1, MathUtils.gcd( a, -c));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,412,"assertEquals(1, MathUtils.gcd(-a, -c));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,415,public void testLcm() {
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,416,int a = 30;
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,417,int b = 50;
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,418,int c = 77;
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,420,"assertEquals(0, MathUtils.lcm(0, b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,421,"assertEquals(0, MathUtils.lcm(a, 0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,422,"assertEquals(b, MathUtils.lcm(1, b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,423,"assertEquals(a, MathUtils.lcm(a, 1));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,424,"assertEquals(150, MathUtils.lcm(a, b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,425,"assertEquals(150, MathUtils.lcm(-a, b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,426,"assertEquals(150, MathUtils.lcm(a, -b));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,427,"assertEquals(2310, MathUtils.lcm(a, c));"
