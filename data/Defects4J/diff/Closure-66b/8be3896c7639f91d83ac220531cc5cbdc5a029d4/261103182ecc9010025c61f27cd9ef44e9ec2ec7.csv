is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,115,f (name.refs != null) {
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,116,SModuleGraph moduleGraph = compiler.getModuleGraph();
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,117,or (Ref ref : name.refs) {
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,118,f (!isDefined) {
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,119,"eportRefToUndefinedName(name, ref);"
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,120, else {
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,121,f (declaration != null &&
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,122,ef.module != declaration.module &&
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,123,"moduleGraph.dependsOn(ref.module, declaration.module)) {"
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,124,"eportBadModuleReference(name, ref);"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,115,JSModuleGraph moduleGraph = compiler.getModuleGraph();
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,116,for (Ref ref : name.getRefs()) {
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,117,if (ref == name.declaration) {
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,118,continue;
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,121,if (!isDefined) {
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,122,"reportRefToUndefinedName(name, ref);"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,123,} else {
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,124,if (declaration != null &&
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,125,ref.getModule() != declaration.getModule() &&
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,126,!moduleGraph.dependsOn(
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,127,"ref.getModule(), declaration.getModule())) {"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,128,"reportBadModuleReference(name, ref);"
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,133,"SError.make(ref.sourceName, ref.node, STRICT_MODULE_DEP_QNAME,"
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,134,"ef.module.getName(), name.declaration.module.getName(),"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,136,"JSError.make(ref.source.getName(), ref.node, STRICT_MODULE_DEP_QNAME,"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,137,"ref.getModule().getName(),"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,138,"name.declaration.getModule().getName(),"
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,155,"SError.make(ref.sourceName, ref.node, level, UNDEFINED_NAME_WARNING,"
False,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,156,ame.fullName()));
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,159,"JSError.make(ref.getSourceName(), ref.node, level,"
True,src/com/google/javascript/jscomp/CheckGlobalNames.java,src/com/google/javascript/jscomp/CheckGlobalNames.java,160,"UNDEFINED_NAME_WARNING, name.fullName()));"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,174,ist<Ref> refs = Lists.newArrayList(name.refs);
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,174,List<Ref> refs = Lists.newArrayList(name.getRefs());
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,250,f (name.isNamespace() && name.refs != null &&
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,250,if (name.isNamespace() &&
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,253,or (Ref ref : name.refs) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,253,for (Ref ref : name.getRefs()) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,254,if (ref == name.declaration) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,255,continue;
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,277,"SError.make(ref.sourceName, ref.node,"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,281,"JSError.make(ref.getSourceName(), ref.node,"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,289,"SError.make(ref.sourceName, ref.node,"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,293,"JSError.make(ref.getSourceName(), ref.node,"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,323,f (n.refs != null) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,324,tring originalName = n.fullName();
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,325,or (Ref r : n.refs) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,326,ode rParent = r.node.getParent();
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,328,/ There are two cases when we shouldn't flatten a reference:
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,329,"/ 1) Object literal keys, because duplicate keys show up as refs."
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,330,/ 2) References inside a complex assign. (a = x.y = 0). These are
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,331,"/    called TWIN references, because they show up twice in the"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,332,"/    reference list. Only collapse the set, not the alias."
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,333,"f (!NodeUtil.isObjectLitKey(r.node, rParent) &&"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,334,r.getTwin() == null || r.isSet())) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,335,"lattenNameRef(alias, r.node, rParent, originalName);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,327,String originalName = n.fullName();
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,328,for (Ref r : n.getRefs()) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,329,if (r == n.declaration) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,330,// Declarations are handled separately.
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,331,continue;
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,334,Node rParent = r.node.getParent();
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,336,// There are two cases when we shouldn't flatten a reference:
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,337,"// 1) Object literal keys, because duplicate keys show up as refs."
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,338,// 2) References inside a complex assign. (a = x.y = 0). These are
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,339,"//    called TWIN references, because they show up twice in the"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,340,"//    reference list. Only collapse the set, not the alias."
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,341,"if (!NodeUtil.isObjectLitKey(r.node, rParent) &&"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,342,(r.getTwin() == null || r.isSet())) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,343,"flattenNameRef(alias, r.node, rParent, originalName);"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,368,f (n.refs != null) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,369,or (Ref r : n.refs) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,375,for (Ref r : n.getRefs()) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,376,if (r == n.declaration) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,377,// Declarations are handled separately.
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,378,continue;
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,371,/ References inside a complex assign (a = x.y = 0)
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,372,/ have twins. We should only flatten one of the twins.
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,373,f (r.getTwin() == null || r.isSet()) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,374,"lattenNameRefAtDepth(alias, r.node, depth, originalName);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,381,// References inside a complex assign (a = x.y = 0)
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,382,// have twins. We should only flatten one of the twins.
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,383,if (r.getTwin() == null || r.isSet()) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,384,"flattenNameRefAtDepth(alias, r.node, depth, originalName);"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,688,"SError.make(name.declaration.sourceName, n,"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,697,"JSError.make(name.declaration.getSourceName(), n,"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,893,f (p.refs.get(0).node.getLastChild().getBooleanProp(
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,894,ode.IS_CONSTANT_NAME)) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,902,if (p.getRefs().get(0).node.getLastChild().getBooleanProp(
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,903,Node.IS_CONSTANT_NAME)) {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,21,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,22,import com.google.common.collect.Lists;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,29,mport java.util.LinkedList;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,779,/** The first global assignment to a name. */
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,779,ist<Ref> refs;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,782,/** All references to a name. This must contain {@code declaration}. */
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,783,private List<Ref> refs;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,814, else {
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,815,ddRefInternal(ref);
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,820,addRefInternal(ref);
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,844,f (ref == declaration ||
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,845,refs != null && refs.remove(ref))) {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,848,if (refs != null && refs.remove(ref)) {
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,852,efs.remove(declaration);
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,886,List<Ref> getRefs() {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,887,return refs == null ? ImmutableList.<Ref>of() : refs;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,886,efs = new LinkedList<Ref>();
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,892,refs = Lists.newArrayList();
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1033,inal String sourceName;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1039,final CompilerInput source;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1035,inal JSModule module;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1051,his.sourceName = t.getSourceName();
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1056,this.source = t.getInput();
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1054,his.module = t.getModule();
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1059,his.sourceName = original.sourceName;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1063,this.source = original.source;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1062,his.module = original.module;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1067,"his.sourceName = ""source"";"
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1070,this.source = null;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1069,his.module = null;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1074,JSModule getModule() {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1075,return source == null ? null : source.getModule();
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1078,String getSourceName() {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1079,"return source == null ? """" : source.getName();"
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,183,"ame.declaration.sourceName,"
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,183,"name.declaration.getSourceName(),"
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,188, else if (name.refs != null) {
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,189,or (Ref ref : name.refs) {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,188,} else {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,189,for (Ref ref : name.getRefs()) {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,190,if (ref == name.declaration) {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,191,// Declarations were handled above.
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,192,continue;
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,246,f (name.refs != null) {
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,247,or (Ref ref : name.refs) {
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,248,"/ If there's a TWIN def, only put one of the twins in."
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,249,f (ref.getTwin() == null || !ref.getTwin().isSet()) {
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,250,"llRefInfo.put(ref.node, new RefInfo(ref, name));"
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,251,for (Ref ref : name.getRefs()) {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,252,if (ref == name.declaration) {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,253,// Declarations were handled above.
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,254,continue;
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,257,"// If there's a TWIN def, only put one of the twins in."
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,258,if (ref.getTwin() == null || !ref.getTwin().isSet()) {
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,259,"allRefInfo.put(ref.node, new RefInfo(ref, name));"
False,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,41,"ssertEquals(1, n.refs.size());"
True,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,41,"assertEquals(2, n.getRefs().size());"
False,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,47,"ssertEquals(0, n.refs.size());"
True,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,47,"assertEquals(1, n.getRefs().size());"
False,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,61,"ssertEquals(1, n.refs.size());"
True,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,test/com/google/javascript/jscomp/GlobalNamespaceTest.java,61,"assertEquals(2, n.getRefs().size());"
False,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,188,"ssertEquals(0, def.refs.size());"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,188,"assertEquals(1, def.getRefs().size());"
False,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,243,"ssertEquals(1, def.refs.size());"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,243,"assertEquals(2, def.getRefs().size());"
False,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,279,"ssertEquals(0, aDotB.refs.size());"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,279,"assertEquals(1, aDotB.getRefs().size());"
