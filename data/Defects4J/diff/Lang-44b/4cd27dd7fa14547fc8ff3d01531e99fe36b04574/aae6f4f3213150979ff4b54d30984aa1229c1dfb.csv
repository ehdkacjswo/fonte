is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,240,// Min/Max
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,243,* Null safe comparison of Comparables.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,245,"* @param c1  the first comparable, may be null"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,246,"* @param c2  the second comparable, may be null"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,247,* @return
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,248,*  <ul>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,249,"*   <li>If both objects are non-null and unequal, the lesser object."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,250,"*   <li>If both objects are non-null and equal, c1."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,251,"*   <li>If one of the comparables is null, the non-null object."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,252,"*   <li>If both the comparables are null, null is returned."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,253,*  </ul>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,255,"public static Object min(Comparable c1, Comparable c2) {"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,256,if (c1 != null && c2 != null) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,257,return c1.compareTo(c2) < 1 ? c1 : c2;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,258,} else {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,259,return c1 != null ? c1 : c2;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,264,* Null safe comparison of Comparables.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,266,"* @param c1  the first comparable, may be null"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,267,"* @param c2  the second comparable, may be null"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,268,* @return
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,269,*  <ul>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,270,"*   <li>If both objects are non-null and unequal, the greater object."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,271,"*   <li>If both objects are non-null and equal, c1."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,272,"*   <li>If one of the comparables is null, the non-null object."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,273,"*   <li>If both the comparables are null, null is returned."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,274,*  </ul>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,276,"public static Object max(Comparable c1, Comparable c2) {"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,277,if (c1 != null && c2 != null) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,278,return c1.compareTo(c2) >= 0 ? c1 : c2;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,279,} else {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,280,return c1 != null ? c1 : c2;
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,283, Null safe comparison of Comparables.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,285, @param c1
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,286, @param c2
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,287, @return
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,288,  <ul>
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,289,"   <li>If both objects are non-null and unequal, the lesser object."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,290,"   <li>If both objects are non-null and equal, c1."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,291,"   <li>If one of the comparables is null, the non-null object."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,292,"   <li>If both the comparables are null, null is returned."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,293,  </ul>
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,295,"ublic static Object min( Comparable c1, Comparable c2 ) {"
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,296,f ( c1 != null && c2 != null ) {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,297,eturn c1.compareTo( c2 ) < 1 ? c1 : c2;
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,299,lse {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,300,eturn c1 != null ? c1 : c2;
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,305, Null safe comparison of Comparables.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,307, @param c1
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,308, @param c2
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,309, @return
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,310,  <ul>
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,311,"   <li>If both objects are non-null and unequal, the greater object."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,312,"   <li>If both objects are non-null and equal, c1."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,313,"   <li>If one of the comparables is null, the non-null object."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,314,"   <li>If both the comparables are null, null is returned."
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,315,  </ul>
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,317,"ublic static Object max( Comparable c1, Comparable c2 ) {"
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,318,f ( c1 != null && c2 != null ) {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,319,eturn c1.compareTo( c2 ) >= 0 ? c1 : c2;
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,321,lse {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,322,eturn c1 != null ? c1 : c2;
