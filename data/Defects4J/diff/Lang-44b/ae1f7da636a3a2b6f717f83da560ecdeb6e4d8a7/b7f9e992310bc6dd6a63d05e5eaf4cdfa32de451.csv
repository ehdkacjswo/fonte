is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,4,* Copyright (c) 2004 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,20,"*    any, must include the following acknowledgement:"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,23,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,24,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,57,* <p>Operations on char primitives and Char objects.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,59,* <p>This class tries to handle <code>null</code> input gracefully.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,60,* An exception will not be thrown for a <code>null</code> input.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,61,* Each method documents its behaviour in more detail.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,63,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,64,* @since 2.1
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,65,"* @version $Id: CharUtils.java,v 1.1 2004/01/31 13:00:07 scolebourne Exp $"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,67,public class CharUtils {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,69,private static final String CHAR_STRING =
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,70,"""\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,71,"""\b\t\n\u000b\f\r\u000e\u000f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,72,"""\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,73,"""\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,74,"""\u0020\u0021\""\u0023\u0024\u0025\u0026\u0027"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,75,"""\u0028\u0029\u002a\u002b\u002c\u002d\u002e\u002f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,76,"""\u0030\u0031\u0032\u0033\u0034\u0035\u0036\u0037"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,77,"""\u0038\u0039\u003a\u003b\u003c\u003d\u003e\u003f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,78,"""\u0040\u0041\u0042\u0043\u0044\u0045\u0046\u0047"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,79,"""\u0048\u0049\u004a\u004b\u004c\u004d\u004e\u004f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,80,"""\u0050\u0051\u0052\u0053\u0054\u0055\u0056\u0057"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,81,"""\u0058\u0059\u005a\u005b\\\u005d\u005e\u005f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,82,"""\u0060\u0061\u0062\u0063\u0064\u0065\u0066\u0067"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,83,"""\u0068\u0069\u006a\u006b\u006c\u006d\u006e\u006f"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,84,"""\u0070\u0071\u0072\u0073\u0074\u0075\u0076\u0077"" +"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,85,"""\u0078\u0079\u007a\u007b\u007c\u007d\u007e\u007f"";"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,87,private static final String[] CHAR_STRING_ARRAY = new String[128];
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,88,private static final Character[] CHAR_ARRAY = new Character[128];
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,90,static {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,91,for (int i = 127; i >= 0; i--) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,92,"CHAR_STRING_ARRAY[i] = CHAR_STRING.substring(i, i + 1);"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,93,CHAR_ARRAY[i] = new Character((char) i);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,98,* <p><code>CharUtils</code> instances should NOT be constructed in standard programming.
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,99,"* Instead, the class should be used as <code>CharUtils.toString('c');</code>.</p>"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,101,* <p>This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,102,* to operate.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,104,public CharUtils() {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,109,* <p>Converts the character to a Character.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,111,"* <p>For ASCII 7 bit characters, this uses a cache that will return the"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,112,* same Character object each time.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,114,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,115,*   CharUtils.toCharacterObject(' ')  = ' '
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,116,*   CharUtils.toCharacterObject('A')  = 'A'
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,117,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,119,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,120,* @return a Character of the specified character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,122,public static Character toCharacterObject(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,123,if (ch < 128) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,124,return CHAR_ARRAY[ch];
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,125,} else {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,126,return new Character(ch);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,132,* <p>Converts the Character to a char throwing an exception for <code>null</code>.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,134,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,135,"*   CharUtils.toCharacter(null, 'X') = IllegalArgumentException"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,136,"*   CharUtils.toCharacter(' ', 'X')  = ' '"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,137,"*   CharUtils.toCharacter('A', 'X')  = 'A'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,138,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,140,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,141,* @return the char value of the Character or the default if null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,142,* @throws IllegalArgumentException if the Character is null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,144,public static char toCharacter(Character ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,145,if (ch == null) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,146,"throw new IllegalArgumentException(""The Character must not be null"");"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,148,return ch.charValue();
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,152,* <p>Converts the Character to a char handling <code>null</code>.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,154,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,155,"*   CharUtils.toCharacter(null, 'X') = 'X'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,156,"*   CharUtils.toCharacter(' ', 'X')  = ' '"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,157,"*   CharUtils.toCharacter('A', 'X')  = 'A'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,158,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,160,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,161,* @param defaultValue  the value to use if the  Character is null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,162,* @return the char value of the Character or the default if null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,164,"public static char toCharacter(Character ch, char defaultValue) {"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,165,if (ch == null) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,166,return defaultValue;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,168,return ch.charValue();
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,173,* <p>Converts the String to a char using the first character throwing
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,174,* an exception on empty Strings.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,176,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,177,"*   CharUtils.toCharacter(null, 'X') = IllegalArgumentException"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,178,"*   CharUtils.toCharacter("""", 'X')   = IllegalArgumentException"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,179,"*   CharUtils.toCharacter(""A"", 'X')  = 'A'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,180,"*   CharUtils.toCharacter(""BA"", 'X') = 'B'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,181,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,183,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,184,* @return the char value of the Character or the default if null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,185,* @throws IllegalArgumentException if the String is empty
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,187,public static char toCharacter(String str) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,188,if (str == null || str.length() == 0) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,189,"throw new IllegalArgumentException(""The String must not be empty"");"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,191,return str.charAt(0);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,195,* <p>Converts the String to a char using the first character defaulting
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,196,* the value on empty Strings.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,198,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,199,"*   CharUtils.toCharacter(null, 'X') = 'X'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,200,"*   CharUtils.toCharacter("""", 'X')   = 'X'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,201,"*   CharUtils.toCharacter(""A"", 'X')  = 'A'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,202,"*   CharUtils.toCharacter(""BA"", 'X') = 'B'"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,203,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,205,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,206,* @param defaultValue  the value to use if the  Character is null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,207,* @return the char value of the Character or the default if null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,209,"public static char toCharacter(String str, char defaultValue) {"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,210,if (str == null || str.length() == 0) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,211,return defaultValue;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,213,return str.charAt(0);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,218,"* <p>Converts the character to the Integer it represents, throwing an"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,219,* exception if the character is not numeric.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,221,* <p>This method coverts the char '1' to the int 1 and so on.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,223,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,224,*   CharUtils.toInteger('3')  = 3
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,225,*   CharUtils.toInteger('A')  = IllegalArgumentException
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,226,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,228,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,229,* @return the int value of the character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,230,* @throws IllegalArgumentException if the character is not ASCII numeric
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,232,public static int toInteger(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,233,if (isASCIINumeric(ch) == false) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,234,"throw new IllegalArgumentException(""The character "" + ch + "" is not in the range '0' - '9'"");"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,236,return (ch - 48);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,240,"* <p>Converts the character to the Integer it represents, throwing an"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,241,* exception if the character is not numeric.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,243,* <p>This method coverts the char '1' to the int 1 and so on.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,245,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,246,"*   CharUtils.toInteger('3', -1)  = 3"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,247,"*   CharUtils.toInteger('A', -1)  = -1"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,248,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,250,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,251,* @param defaultValue  the default value to use if the character is not numeric
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,252,* @return the int value of the character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,254,"public static int toInteger(char ch, int defaultValue) {"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,255,if (isASCIINumeric(ch) == false) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,256,return defaultValue;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,258,return (ch - 48);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,262,"* <p>Converts the character to the Integer it represents, throwing an"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,263,* exception if the character is not numeric.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,265,* <p>This method coverts the char '1' to the int 1 and so on.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,267,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,268,*   CharUtils.toInteger(null) = IllegalArgumentException
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,269,*   CharUtils.toInteger('3')  = 3
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,270,*   CharUtils.toInteger('A')  = IllegalArgumentException
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,271,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,273,"* @param ch  the character to convert, not null"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,274,* @return the int value of the character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,275,* @throws IllegalArgumentException if the Character is not ASCII numeric or is null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,277,public static int toInteger(Character ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,278,if (ch == null) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,279,"throw new IllegalArgumentException(""The character must not be null"");"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,281,return toInteger(ch.charValue());
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,285,"* <p>Converts the character to the Integer it represents, throwing an"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,286,* exception if the character is not numeric.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,288,* <p>This method coverts the char '1' to the int 1 and so on.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,290,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,291,"*   CharUtils.toInteger(null, -1) = -1"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,292,"*   CharUtils.toInteger('3', -1)  = 3"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,293,"*   CharUtils.toInteger('A', -1)  = -1"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,294,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,296,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,297,* @param defaultValue  the default value to use if the character is not numeric
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,298,* @return the int value of the character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,300,"public static int toInteger(Character ch, int defaultValue) {"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,301,if (ch == null) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,302,return defaultValue;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,304,"return toInteger(ch.charValue(), defaultValue);"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,309,* <p>Converts the character to a String that contains the one character.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,311,"* <p>For ASCII 7 bit characters, this uses a cache that will return the"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,312,* same String object each time.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,314,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,315,"*   CharUtils.toString(' ')  = "" """
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,316,"*   CharUtils.toString('A')  = ""A"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,317,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,319,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,320,* @return a String containing the one specified character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,322,public static String toString(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,323,if (ch < 128) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,324,return CHAR_STRING_ARRAY[ch];
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,325,} else {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,326,return new String(new char[] {ch});
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,331,* <p>Converts the character to a String that contains the one character.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,333,"* <p>For ASCII 7 bit characters, this uses a cache that will return the"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,334,* same String object each time.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,336,"* <p>If <code>null</code> is passed in, <code>null</code> will be returned.</p>"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,338,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,339,*   CharUtils.toString(null) = null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,340,"*   CharUtils.toString(' ')  = "" """
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,341,"*   CharUtils.toString('A')  = ""A"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,342,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,344,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,345,* @return a String containing the one specified character
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,347,public static String toString(Character ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,348,if (ch == null) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,349,return null;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,350,} else {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,351,return toString(ch.charValue());
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,357,* <p>Converts the string to the unicode format '\u0020'.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,359,* <p>This format is the Java source code format.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,361,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,362,"*   CharUtils.toUnicode(' ') = ""\u0020"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,363,"*   CharUtils.toUnicode('A') = ""\u0041"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,364,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,366,* @param ch  the character to convert
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,367,* @return the escaped unicode string
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,369,public static String unicodeEscaped(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,370,if (ch < 0x10) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,371,"return ""\\u000"" + Integer.toHexString(ch);"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,372,} else if (ch < 0x100) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,373,"return ""\\u00"" + Integer.toHexString(ch);"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,374,} else if (ch < 0x1000) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,375,"return ""\\u0"" + Integer.toHexString(ch);"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,377,"return ""\\u"" + Integer.toHexString(ch);"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,381,* <p>Converts the string to the unicode format '\u0020'.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,383,* <p>This format is the Java source code format.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,385,"* <p>If <code>null</code> is passed in, <code>null</code> will be returned.</p>"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,387,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,388,*   CharUtils.toUnicode(null) = null
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,389,"*   CharUtils.toUnicode(' ')  = ""\u0020"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,390,"*   CharUtils.toUnicode('A')  = ""\u0041"""
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,391,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,393,"* @param ch  the character to convert, may be null"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,394,"* @return the escaped unicode string, null if null input"
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,396,public static String unicodeEscaped(Character ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,397,if (ch == null) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,398,return null;
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,400,return unicodeEscaped(ch.charValue());
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,405,* <p>Checks whether the character is ASCII 7 bit.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,407,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,408,*   CharUtils.isASCII('a')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,409,*   CharUtils.isASCII('A')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,410,*   CharUtils.isASCII('3')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,411,*   CharUtils.isASCII('-')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,412,*   CharUtils.isASCII('\n') = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,413,*   CharUtils.isASCII('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,414,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,416,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,417,* @return true if less than 128
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,419,public static boolean isASCII(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,420,return (ch < 128);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,424,* <p>Checks whether the character is ASCII 7 bit printable.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,426,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,427,*   CharUtils.isASCIIPrintable('a')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,428,*   CharUtils.isASCIIPrintable('A')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,429,*   CharUtils.isASCIIPrintable('3')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,430,*   CharUtils.isASCIIPrintable('-')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,431,*   CharUtils.isASCIIPrintable('\n') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,432,*   CharUtils.isASCIIPrintable('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,433,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,435,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,436,* @return true if between 32 and 126 inclusive
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,438,public static boolean isASCIIPrintable(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,439,return (ch >= 32 && ch < 127);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,443,* <p>Checks whether the character is ASCII 7 bit control.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,445,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,446,*   CharUtils.isASCIIControl('a')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,447,*   CharUtils.isASCIIControl('A')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,448,*   CharUtils.isASCIIControl('3')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,449,*   CharUtils.isASCIIControl('-')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,450,*   CharUtils.isASCIIControl('\n') = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,451,*   CharUtils.isASCIIControl('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,452,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,454,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,455,* @return true if less than 32 or equals 127
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,457,public static boolean isASCIIControl(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,458,return (ch < 32 || ch == 127);
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,462,* <p>Checks whether the character is ASCII 7 bit alphabetic.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,464,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,465,*   CharUtils.isASCIIAlpha('a')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,466,*   CharUtils.isASCIIAlpha('A')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,467,*   CharUtils.isASCIIAlpha('3')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,468,*   CharUtils.isASCIIAlpha('-')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,469,*   CharUtils.isASCIIAlpha('\n') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,470,*   CharUtils.isASCIIAlpha('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,471,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,473,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,474,* @return true if between 65 and 90 or 97 and 122 inclusive
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,476,public static boolean isASCIIAlpha(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,477,return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,481,* <p>Checks whether the character is ASCII 7 bit alphabetic upper case.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,483,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,484,*   CharUtils.isASCIIAlphaUpper('a')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,485,*   CharUtils.isASCIIAlphaUpper('A')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,486,*   CharUtils.isASCIIAlphaUpper('3')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,487,*   CharUtils.isASCIIAlphaUpper('-')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,488,*   CharUtils.isASCIIAlphaUpper('\n') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,489,*   CharUtils.isASCIIAlphaUpper('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,490,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,492,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,493,* @return true if between 65 and 90 inclusive
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,495,public static boolean isASCIIAlphaUpper(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,496,return (ch >= 'A' && ch <= 'Z');
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,500,* <p>Checks whether the character is ASCII 7 bit alphabetic lower case.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,502,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,503,*   CharUtils.isASCIIAlphaLower('a')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,504,*   CharUtils.isASCIIAlphaLower('A')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,505,*   CharUtils.isASCIIAlphaLower('3')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,506,*   CharUtils.isASCIIAlphaLower('-')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,507,*   CharUtils.isASCIIAlphaLower('\n') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,508,*   CharUtils.isASCIIAlphaLower('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,509,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,511,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,512,* @return true if between 97 and 122 inclusive
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,514,public static boolean isASCIIAlphaLower(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,515,return (ch >= 'a' && ch <= 'z');
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,519,* <p>Checks whether the character is ASCII 7 bit numeric.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,521,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,522,*   CharUtils.isASCIINumeric('a')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,523,*   CharUtils.isASCIINumeric('A')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,524,*   CharUtils.isASCIINumeric('3')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,525,*   CharUtils.isASCIINumeric('-')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,526,*   CharUtils.isASCIINumeric('\n') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,527,*   CharUtils.isASCIINumeric('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,528,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,530,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,531,* @return true if between 48 and 57 inclusive
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,533,public static boolean isASCIINumeric(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,534,return (ch >= '0' && ch <= '9');
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,538,* <p>Checks whether the character is ASCII 7 bit numeric.</p>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,540,* <pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,541,*   CharUtils.isASCIIAlphanumeric('a')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,542,*   CharUtils.isASCIIAlphanumeric('A')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,543,*   CharUtils.isASCIIAlphanumeric('3')  = true
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,544,*   CharUtils.isASCIIAlphanumeric('-')  = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,545,*   CharUtils.isASCIIAlphanumeric('\n') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,546,*   CharUtils.isASCIIAlphanumeric('&copy;') = false
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,547,* </pre>
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,549,* @param ch  the character to check
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,550,* @return true if between 48 and 57 or 65 and 90 or 97 and 122 inclusive
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,552,public static boolean isASCIIAlphanumeric(char ch) {
True,src/java/org/apache/commons/lang/CharUtils.java,src/java/org/apache/commons/lang/CharUtils.java,553,return (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9');
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,4,* Copyright (c) 2004 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,20,"*    any, must include the following acknowledgement:"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,23,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,24,*    if and wherever such third-party acknowledgements normally appear.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,56,import java.lang.reflect.Constructor;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,57,import java.lang.reflect.Modifier;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,65,* Unit tests {@link org.apache.commons.lang.CharUtils}.
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,67,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,68,"* @version $Id: CharUtilsTest.java,v 1.1 2004/01/31 13:00:07 scolebourne Exp $"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,70,public class CharUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,72,private static final Character CHARACTER_A = new Character('A');
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,73,private static final Character CHARACTER_B = new Character('B');
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,74,private static final char CHAR_COPY = '\u00a9';
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,76,public CharUtilsTest(String name) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,77,super(name);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,80,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,81,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,84,public static Test suite() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,85,TestSuite suite = new TestSuite(CharUtilsTest.class);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,86,"suite.setName(""CharUtils Tests"");"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,87,return suite;
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,90,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,91,super.setUp();
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,94,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,95,super.tearDown();
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,99,public void testConstructor() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,100,assertNotNull(new CharUtils());
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,101,Constructor[] cons = CharUtils.class.getDeclaredConstructors();
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,102,"assertEquals(1, cons.length);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,103,"assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,104,"assertEquals(true, Modifier.isPublic(BooleanUtils.class.getModifiers()));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,105,"assertEquals(false, Modifier.isFinal(BooleanUtils.class.getModifiers()));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,109,public void testToCharacterObject_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,110,"assertEquals(new Character('a'), CharUtils.toCharacterObject('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,111,"assertSame(CharUtils.toCharacterObject('a'), CharUtils.toCharacterObject('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,113,for (int i = 0; i < 128; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,114,Character ch = CharUtils.toCharacterObject((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,115,Character ch2 = CharUtils.toCharacterObject((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,116,"assertSame(ch, ch2);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,117,"assertEquals(i, ch.charValue());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,119,for (int i = 128; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,120,Character ch = CharUtils.toCharacterObject((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,121,Character ch2 = CharUtils.toCharacterObject((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,122,"assertEquals(ch, ch2);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,123,assertTrue(ch != ch2);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,124,"assertEquals(i, ch.charValue());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,125,"assertEquals(i, ch2.charValue());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,130,public void testToCharacter_Character() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,131,"assertEquals('A', CharUtils.toCharacter(CHARACTER_A));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,132,"assertEquals('B', CharUtils.toCharacter(CHARACTER_B));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,133,try {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,134,CharUtils.toCharacter((Character) null);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,135,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,138,public void testToCharacter_Character_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,139,"assertEquals('A', CharUtils.toCharacter(CHARACTER_A, 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,140,"assertEquals('B', CharUtils.toCharacter(CHARACTER_B, 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,141,"assertEquals('X', CharUtils.toCharacter((Character) null, 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,145,public void testToCharacter_String() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,146,"assertEquals('A', CharUtils.toCharacter(""A""));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,147,"assertEquals('B', CharUtils.toCharacter(""BA""));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,148,try {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,149,CharUtils.toCharacter((String) null);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,150,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,151,try {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,152,"CharUtils.toCharacter("""");"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,153,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,156,public void testToCharacter_String_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,157,"assertEquals('A', CharUtils.toCharacter(""A"", 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,158,"assertEquals('B', CharUtils.toCharacter(""BA"", 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,159,"assertEquals('X', CharUtils.toCharacter("""", 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,160,"assertEquals('X', CharUtils.toCharacter((String) null, 'X'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,164,public void testToInteger_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,165,"assertEquals(0, CharUtils.toInteger('0'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,166,"assertEquals(1, CharUtils.toInteger('1'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,167,"assertEquals(2, CharUtils.toInteger('2'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,168,"assertEquals(3, CharUtils.toInteger('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,169,"assertEquals(4, CharUtils.toInteger('4'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,170,"assertEquals(5, CharUtils.toInteger('5'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,171,"assertEquals(6, CharUtils.toInteger('6'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,172,"assertEquals(7, CharUtils.toInteger('7'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,173,"assertEquals(8, CharUtils.toInteger('8'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,174,"assertEquals(9, CharUtils.toInteger('9'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,175,try {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,176,CharUtils.toInteger('a');
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,177,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,180,public void testToInteger_char_int() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,181,"assertEquals(0, CharUtils.toInteger('0', -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,182,"assertEquals(3, CharUtils.toInteger('3', -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,183,"assertEquals(-1, CharUtils.toInteger('a', -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,187,public void testToInteger_Character() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,188,"assertEquals(0, CharUtils.toInteger(new Character('0')));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,189,"assertEquals(3, CharUtils.toInteger(new Character('3')));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,190,try {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,191,CharUtils.toInteger(null);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,192,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,193,try {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,194,CharUtils.toInteger(CHARACTER_A);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,195,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,198,public void testToInteger_Character_int() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,199,"assertEquals(0, CharUtils.toInteger(new Character('0'), -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,200,"assertEquals(3, CharUtils.toInteger(new Character('3'), -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,201,"assertEquals(-1, CharUtils.toInteger(new Character('A'), -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,202,"assertEquals(-1, CharUtils.toInteger(null, -1));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,206,public void testToString_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,207,"assertEquals(""a"", CharUtils.toString('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,208,"assertSame(CharUtils.toString('a'), CharUtils.toString('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,210,for (int i = 0; i < 128; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,211,String str = CharUtils.toString((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,212,String str2 = CharUtils.toString((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,213,"assertSame(str, str2);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,214,"assertEquals(1, str.length());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,215,"assertEquals(i, str.charAt(0));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,217,for (int i = 128; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,218,String str = CharUtils.toString((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,219,String str2 = CharUtils.toString((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,220,"assertEquals(str, str2);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,221,assertTrue(str != str2);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,222,"assertEquals(1, str.length());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,223,"assertEquals(i, str.charAt(0));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,224,"assertEquals(1, str2.length());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,225,"assertEquals(i, str2.charAt(0));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,229,public void testToString_Character() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,230,"assertEquals(null, CharUtils.toString(null));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,231,"assertEquals(""A"", CharUtils.toString(CHARACTER_A));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,232,"assertSame(CharUtils.toString(CHARACTER_A), CharUtils.toString(CHARACTER_A));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,236,public void testToUnicodeEscaped_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,237,"assertEquals(""\\u0041"", CharUtils.unicodeEscaped('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,239,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,240,String str = CharUtils.unicodeEscaped((char) i);
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,241,"assertEquals(6, str.length());"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,242,"int val = Integer.parseInt(str.substring(2), 16);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,243,"assertEquals(i, val);"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,247,public void testToUnicodeEscaped_Character() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,248,"assertEquals(null, CharUtils.unicodeEscaped(null));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,249,"assertEquals(""\\u0041"", CharUtils.unicodeEscaped(CHARACTER_A));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,253,public void testIsASCII_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,254,"assertEquals(true, CharUtils.isASCII('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,255,"assertEquals(true, CharUtils.isASCII('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,256,"assertEquals(true, CharUtils.isASCII('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,257,"assertEquals(true, CharUtils.isASCII('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,258,"assertEquals(true, CharUtils.isASCII('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,259,"assertEquals(false, CharUtils.isASCII(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,261,for (int i = 0; i < 128; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,262,if (i < 128) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,263,"assertEquals(true, CharUtils.isASCII((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,264,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,265,"assertEquals(false, CharUtils.isASCII((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,271,public void testIsASCIIPrintable_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,272,"assertEquals(true, CharUtils.isASCIIPrintable('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,273,"assertEquals(true, CharUtils.isASCIIPrintable('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,274,"assertEquals(true, CharUtils.isASCIIPrintable('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,275,"assertEquals(true, CharUtils.isASCIIPrintable('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,276,"assertEquals(false, CharUtils.isASCIIPrintable('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,277,"assertEquals(false, CharUtils.isASCII(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,279,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,280,if (i >= 32 && i <= 126) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,281,"assertEquals(true, CharUtils.isASCIIPrintable((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,282,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,283,"assertEquals(false, CharUtils.isASCIIPrintable((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,289,public void testIsASCIIControl_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,290,"assertEquals(false, CharUtils.isASCIIControl('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,291,"assertEquals(false, CharUtils.isASCIIControl('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,292,"assertEquals(false, CharUtils.isASCIIControl('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,293,"assertEquals(false, CharUtils.isASCIIControl('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,294,"assertEquals(true, CharUtils.isASCIIControl('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,295,"assertEquals(false, CharUtils.isASCIIControl(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,297,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,298,if (i < 32 || i == 127) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,299,"assertEquals(true, CharUtils.isASCIIControl((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,300,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,301,"assertEquals(false, CharUtils.isASCIIControl((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,307,public void testIsASCIIAlpha_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,308,"assertEquals(true, CharUtils.isASCIIAlpha('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,309,"assertEquals(true, CharUtils.isASCIIAlpha('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,310,"assertEquals(false, CharUtils.isASCIIAlpha('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,311,"assertEquals(false, CharUtils.isASCIIAlpha('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,312,"assertEquals(false, CharUtils.isASCIIAlpha('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,313,"assertEquals(false, CharUtils.isASCIIAlpha(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,315,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,316,if ((i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z')) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,317,"assertEquals(true, CharUtils.isASCIIAlpha((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,318,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,319,"assertEquals(false, CharUtils.isASCIIAlpha((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,325,public void testIsASCIIAlphaUpper_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,326,"assertEquals(false, CharUtils.isASCIIAlphaUpper('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,327,"assertEquals(true, CharUtils.isASCIIAlphaUpper('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,328,"assertEquals(false, CharUtils.isASCIIAlphaUpper('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,329,"assertEquals(false, CharUtils.isASCIIAlphaUpper('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,330,"assertEquals(false, CharUtils.isASCIIAlphaUpper('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,331,"assertEquals(false, CharUtils.isASCIIAlphaUpper(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,333,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,334,if (i >= 'A' && i <= 'Z') {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,335,"assertEquals(true, CharUtils.isASCIIAlphaUpper((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,336,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,337,"assertEquals(false, CharUtils.isASCIIAlphaUpper((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,343,public void testIsASCIIAlphaLower_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,344,"assertEquals(true, CharUtils.isASCIIAlphaLower('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,345,"assertEquals(false, CharUtils.isASCIIAlphaLower('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,346,"assertEquals(false, CharUtils.isASCIIAlphaLower('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,347,"assertEquals(false, CharUtils.isASCIIAlphaLower('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,348,"assertEquals(false, CharUtils.isASCIIAlphaLower('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,349,"assertEquals(false, CharUtils.isASCIIAlphaLower(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,351,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,352,if (i >= 'a' && i <= 'z') {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,353,"assertEquals(true, CharUtils.isASCIIAlphaLower((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,354,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,355,"assertEquals(false, CharUtils.isASCIIAlphaLower((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,361,public void testIsASCIINumeric_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,362,"assertEquals(false, CharUtils.isASCIINumeric('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,363,"assertEquals(false, CharUtils.isASCIINumeric('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,364,"assertEquals(true, CharUtils.isASCIINumeric('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,365,"assertEquals(false, CharUtils.isASCIINumeric('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,366,"assertEquals(false, CharUtils.isASCIINumeric('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,367,"assertEquals(false, CharUtils.isASCIINumeric(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,369,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,370,if (i >= '0' && i <= '9') {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,371,"assertEquals(true, CharUtils.isASCIINumeric((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,372,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,373,"assertEquals(false, CharUtils.isASCIINumeric((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,379,public void testIsASCIIAlphanumeric_char() {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,380,"assertEquals(true, CharUtils.isASCIIAlphanumeric('a'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,381,"assertEquals(true, CharUtils.isASCIIAlphanumeric('A'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,382,"assertEquals(true, CharUtils.isASCIIAlphanumeric('3'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,383,"assertEquals(false, CharUtils.isASCIIAlphanumeric('-'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,384,"assertEquals(false, CharUtils.isASCIIAlphanumeric('\n'));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,385,"assertEquals(false, CharUtils.isASCIIAlphanumeric(CHAR_COPY));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,387,for (int i = 0; i < 196; i++) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,388,if ((i >= 'A' && i <= 'Z') || (i >= 'a' && i <= 'z') || (i >= '0' && i <= '9')) {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,389,"assertEquals(true, CharUtils.isASCIIAlphanumeric((char) i));"
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,390,} else {
True,src/test/org/apache/commons/lang/CharUtilsTest.java,src/test/org/apache/commons/lang/CharUtilsTest.java,391,"assertEquals(false, CharUtils.isASCIIAlphanumeric((char) i));"
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,4,* Copyright (c) 2002-2004 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,67," @version $Id: LangTestSuite.java,v 1.23 2003/08/19 02:32:16 bayard Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,67,"* @version $Id: LangTestSuite.java,v 1.24 2004/01/31 13:00:07 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,97,suite.addTest(CharUtilsTest.suite());
