is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,71," @version $Id: NumberUtilsTest.java,v 1.9 2003/08/18 02:22:25 bayard Exp $"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,71,"* @version $Id: NumberUtilsTest.java,v 1.10 2003/10/11 21:20:24 tobrien Exp $"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,110,"ssertEquals(""createNumber(String) 6 failed"", new Long(12345), NumberUtils.createNumber(""12345L""));"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,111,"ssertEquals(""createNumber(String) 7 failed"", new Float(""-1234.5""), NumberUtils.createNumber(""-1234.5""));"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,112,"ssertEquals(""createNumber(String) 8 failed"", new Integer(""-12345""), NumberUtils.createNumber(""-12345""));"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,113,"ssertTrue(""createNumber(String) 9 failed"", 0xFADE == NumberUtils.createNumber(""0xFADE"").intValue());"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,114,"ssertTrue(""createNumber(String) 10 failed"", -0xFADE == NumberUtils.createNumber(""-0xFADE"").intValue());"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,115,"ssertEquals(""createNumber(String) 11 failed"", new Double(""1.1E200""), NumberUtils.createNumber(""1.1E200""));"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,116,"ssertEquals(""createNumber(String) 12 failed"", new Float(""1.1E20""), NumberUtils.createNumber(""1.1E20""));"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,117,"ssertEquals(""createNumber(String) 13 failed"", new Double(""-1.1E200""), NumberUtils.createNumber(""-1.1E200""));"
False,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,118,"ssertEquals(""createNumber(String) 14 failed"", new Double(""1.1E-200""), NumberUtils.createNumber(""1.1E-200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,110,"assertEquals(""createNumber(String) 6 failed"", new BigInteger(Long.MAX_VALUE + ""0""), NumberUtils.createNumber(Long.MAX_VALUE + ""0L""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,111,"assertEquals(""createNumber(String) 7 failed"", new Long(12345), NumberUtils.createNumber(""12345L""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,112,"assertEquals(""createNumber(String) 8 failed"", new Float(""-1234.5""), NumberUtils.createNumber(""-1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,113,"assertEquals(""createNumber(String) 9 failed"", new Integer(""-12345""), NumberUtils.createNumber(""-12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,114,"assertTrue(""createNumber(String) 10 failed"", 0xFADE == NumberUtils.createNumber(""0xFADE"").intValue());"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,115,"assertTrue(""createNumber(String) 11 failed"", -0xFADE == NumberUtils.createNumber(""-0xFADE"").intValue());"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,116,"assertEquals(""createNumber(String) 12 failed"", new Double(""1.1E200""), NumberUtils.createNumber(""1.1E200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,117,"assertEquals(""createNumber(String) 13 failed"", new Float(""1.1E20""), NumberUtils.createNumber(""1.1E20""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,118,"assertEquals(""createNumber(String) 14 failed"", new Double(""-1.1E200""), NumberUtils.createNumber(""-1.1E200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,119,"assertEquals(""createNumber(String) 15 failed"", new Double(""1.1E-200""), NumberUtils.createNumber(""1.1E-200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,120,"assertEquals(""createNumber(String) 16 failed"", new Double(""1.1E-200""), NumberUtils.createNumber(""1.1E-200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,525,public void testIsNumberInvalidInput() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,526,"String val = ""0x"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,527,"assertEquals(""isNumber() with 0x wasn't false"",  false, NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,528,"val = ""0x3x3"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,529,"assertEquals(""isNumber() with 0x3x3 wasn't false"",  false, NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,530,"val = ""20EE-3"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,531,"assertEquals(""isNumber() with 20EE-3 wasn't false"",  false, NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,532,"val = ""2435q"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,533,"assertEquals(""isNumber() with 2435q wasn't false"",  false, NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,534,"val = ""."";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,535,"assertEquals(""isNumber() with . wasn't false"",  false, NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,553,public void testPublicNoArgConstructor() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,554,try {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,555,NumberUtils nu = new NumberUtils();
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,556,} catch( Exception e ) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,557,"fail( ""Error calling public no-arg constructor"" );"
