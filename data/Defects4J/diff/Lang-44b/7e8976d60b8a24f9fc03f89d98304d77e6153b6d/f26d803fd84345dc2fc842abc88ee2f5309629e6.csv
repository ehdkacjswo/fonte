is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,5,* reserved.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,9,* are met:
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,17,*    distribution.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,54,package org.apache.commons.lang.math;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,56,import java.io.Serializable;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,59,* <p><code>Fraction</code> is a <code>Number</code> implementation that
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,60,* stores fractions accurately.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,62,"* <p>This class is immutable, and interoperable with most methods that accept"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,63,* a <code>Number</code>.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,65,* @author Travis Reeder
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,66,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,67,* @since 2.0
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,68,"* @version $Id: Fraction.java,v 1.1 2002/12/22 19:39:39 scolebourne Exp $"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,70,"public final class Fraction extends Number implements Serializable, Comparable {"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,72,private static final long serialVersionUID = 65382027393090L;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,74,"public static final Fraction ZERO = new Fraction(0, 1);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,75,"public static final Fraction ONE = new Fraction(1, 1);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,77,"public static final Fraction ONE_HALF = new Fraction(1, 2);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,79,"public static final Fraction ONE_THIRD = new Fraction(1, 3);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,80,"public static final Fraction TWO_THIRDS = new Fraction(2, 3);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,82,"public static final Fraction ONE_QUARTER = new Fraction(1, 4);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,83,"public static final Fraction TWO_QUARTERS = new Fraction(2, 4);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,84,"public static final Fraction THREE_QUARTERS = new Fraction(3, 4);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,86,"public static final Fraction ONE_FIFTH = new Fraction(1, 5);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,87,"public static final Fraction TWO_FIFTHS = new Fraction(2, 5);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,88,"public static final Fraction THREE_FIFTHS = new Fraction(3, 5);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,89,"public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,92,/** The numerator number part of the fraction (the three in three sevenths) */
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,93,private final int numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,94,/** The denominator number part of the fraction (the seven in three sevenths) */
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,95,private final int denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,97,/** Cached output hashCode (class is immutable) */
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,98,private transient int hashCode = 0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,99,/** Cached output toString (class is immutable) */
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,100,private transient String toString = null;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,101,/** Cached output toProperString (class is immutable) */
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,102,private transient String toProperString = null;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,105,* <p>Constructs a <code>Fraction</code> instance with the 2 parts
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,106,* of a fraction Y/Z.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,108,"* @param numerator  the numerator, for example the three in 'three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,109,"* @param denominator  the denominator, for example the seven in 'three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,111,"private Fraction(int numerator, int denominator) {"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,112,super();
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,113,this.numerator = numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,114,this.denominator = denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,118,* <p>Creates a <code>Fraction</code> instance with the 2 parts
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,119,* of a fraction Y/Z.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,121,* <p>Any negative signs are resolved to be on the numerator.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,123,"* @param numerator  the numerator, for example the three in 'three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,124,"* @param denominator  the denominator, for example the seven in 'three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,125,* @return a new fraction instance
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,126,* @throws ArithmeticException if the denomiator is zero
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,128,"public static Fraction getFraction(int numerator, int denominator) {"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,129,if (denominator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,130,"throw new ArithmeticException(""The denominator must not be zero"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,132,if (denominator < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,133,numerator = -numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,134,denominator = -denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,136,"return new Fraction(numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,140,* <p>Creates a <code>Fraction</code> instance with the 3 parts
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,141,* of a fraction X Y/Z.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,143,* <p>The negative sign must be passed in on the whole number part.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,145,"* @param whole  the whole number, for example the one in 'one and three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,146,"* @param numerator  the numerator, for example the three in 'one and three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,147,"* @param denominator  the denominator, for example the seven in 'one and three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,148,* @return a new fraction instance
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,149,* @throws ArithmeticException if the denomiator is zero
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,150,* @throws ArithmeticException if the denomiator is negative
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,151,* @throws ArithmeticException if the numerator is negative
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,153,"public static Fraction getFraction(int whole, int numerator, int denominator) {"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,154,if (denominator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,155,"throw new ArithmeticException(""The denominator must not be zero"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,157,if (denominator < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,158,"throw new ArithmeticException(""The denominator must not be negative"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,160,if (numerator < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,161,"throw new ArithmeticException(""The numerator must not be negative"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,163,if (whole < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,164,numerator = whole * denominator - numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,165,} else {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,166,numerator = whole * denominator + numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,168,"return new Fraction(numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,172,* <p>Creates a <code>Fraction</code> instance with the 2 parts
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,173,* of a fraction Y/Z.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,175,* <p>Any negative signs are resolved to be on the numerator.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,177,"* @param numerator  the numerator, for example the three in 'three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,178,"* @param denominator  the denominator, for example the seven in 'three sevenths'"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,179,"* @return a new fraction instance, with the numerator and denominator reduced"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,180,* @throws ArithmeticException if the denomiator is zero
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,182,"public static Fraction getReducedFraction(int numerator, int denominator) {"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,183,if (denominator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,184,"throw new ArithmeticException(""The denominator must not be zero"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,186,if (denominator < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,187,numerator = -numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,188,denominator = -denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,190,"int gcd = greatestCommonDenominator(Math.abs(numerator), denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,191,if (gcd == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,192,"return new Fraction(numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,194,"return new Fraction(numerator / gcd, denominator / gcd);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,198,* <p>Creates a <code>Fraction</code> instance from a <code>double</code> value.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,200,* <p>This method uses the continued fraction algorithm.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,202,* @param value  the double value to convert
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,203,* @return a new fraction instance that is close to the value
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,204,* @throws ArithmeticException if the value is infinite or NaN
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,205,* @throws ArithmeticException if the calculated denomiator is zero
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,207,public static Fraction getFraction(double value) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,208,if (Double.isInfinite(value) || Double.isNaN(value)) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,209,"throw new ArithmeticException(""The value must not be infinite or NaN"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,211,int sign = (value < 0 ? -1 : 1);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,212,value = Math.abs(value);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,213,int wholeNumber = (int) value;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,214,value -= wholeNumber;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,216,// http://archives.math.utk.edu/articles/atuyl/confrac/
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,217,int numer0 = 0;  // the pre-previous
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,218,int denom0 = 1;  // the pre-previous
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,219,int numer1 = 1;  // the previous
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,220,int denom1 = 0;  // the previous
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,221,"int numer2 = 0;  // the current, setup in calculation"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,222,"int denom2 = 0;  // the current, setup in calculation"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,223,int a1 = (int) value;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,224,int a2 = 0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,225,double x1 = 1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,226,double x2 = 0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,227,double y1 = value - a1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,228,double y2 = 0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,229,"double delta1, delta2 = Double.MAX_VALUE;"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,230,double fraction;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,231,int i = 1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,232,"//        System.out.println(""---"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,233,do {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,234,delta1 = delta2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,235,a2 = (int) (x1 / y1);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,236,x2 = y1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,237,y2 = x1 - a2 * y1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,238,numer2 = a1 * numer1 + numer0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,239,denom2 = a1 * denom1 + denom0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,240,fraction = (double) numer2 / (double) denom2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,241,delta2 = Math.abs(value - fraction);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,242,"//            System.out.println(numer2 + "" "" + denom2 + "" "" + fraction + "" "" + delta2 + "" "" + y1);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,243,a1 = a2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,244,x1 = x2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,245,y1 = y2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,246,numer0 = numer1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,247,denom0 = denom1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,248,numer1 = numer2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,249,denom1 = denom2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,250,i++;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,251,"//            System.out.println("">>"" + delta1 +"" ""+ delta2+"" ""+(delta1 > delta2)+"" ""+i+"" ""+denom2);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,252,} while ((delta1 > delta2) && (denom2 <= 10000) && (denom2 > 0) && (i < 25));
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,253,if (i == 25) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,254,"throw new ArithmeticException(""Unable to convert double to fraction"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,256,"return getReducedFraction((numer0 + wholeNumber * denom0) * sign, denom0);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,260,* <p>Creates a Fraction from a <code>String</code>.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,262,* <p>The formats accepted are:</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,263,* <ol>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,264,* <li><code>double</code> String containing a dot
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,265,* <li>'X Y/Z'
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,266,* <li>'Y/Z'
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,267,* </ol> and a .</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,269,"* @param str  the string to parse, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,270,* @return the new <code>Fraction</code> instance
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,271,* @throws IllegalArgumentException if the string is null
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,272,* @throws NumberFormatException if the number format is invalid
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,274,public static Fraction getFraction(String str) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,275,if (str == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,276,"throw new IllegalArgumentException(""The string must not be null"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,278,// parse double format
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,279,int pos = str.indexOf('.');
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,280,if (pos >= 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,281,return getFraction(Double.parseDouble(str));
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,284,// parse X Y/Z format
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,285,pos = str.indexOf(' ');
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,286,if (pos > 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,287,"int whole = Integer.parseInt(str.substring(0, pos));"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,288,str = str.substring(pos + 1);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,289,pos = str.indexOf('/');
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,290,if (pos < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,291,"throw new NumberFormatException(""The fraction could not be parsed as the format X Y/Z"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,292,} else {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,293,int denom = Integer.parseInt(str.substring(pos + 1));
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,294,return getFraction(
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,295,"Integer.parseInt(str.substring(0, pos)) + whole * denom,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,296,denom
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,301,// parse Y/Z format
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,302,pos = str.indexOf('/');
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,303,if (pos < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,304,// simple whole number
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,305,"return getFraction(Integer.parseInt(str), 1);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,306,} else {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,307,return getFraction(
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,308,"Integer.parseInt(str.substring(0, pos)),"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,309,Integer.parseInt(str.substring(pos + 1))
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,314,// Accessors
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,318,* <p>Gets the numerator part of the fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,320,"* <p>This method may return a value greater than the denominator, an"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,321,"* improper fraction, such as the seven in 7/8.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,323,* @return the numerator fraction part
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,325,public int getNumerator() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,326,return numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,330,* <p>Gets the denominator part of the fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,332,* @return the denominator fraction part
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,334,public int getDenominator() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,335,return denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,339,"* <p>Gets the proper numerator, always positive.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,341,"* <p>An improper fraction 7/8 can be resolved into a proper one, 1 3/4."
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,342,* This method returns the 3 from the proper fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,344,"* <p>If the fraction is negative such as -7/8, it can be resolved into"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,345,"* -1 3/4, so this method returns the positive proper numerator, 3.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,347,"* @return the numerator fraction part of a proper fraction, always positive"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,349,public int getProperNumerator() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,350,return Math.abs(numerator % denominator);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,354,* <p>Gets the proper whole part of the fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,356,"* <p>An improper fraction 7/8 can be resolved into a proper one, 1 3/4."
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,357,* This method returns the 1 from the proper fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,359,"* <p>If the fraction is negative such as -7/8, it can be resolved into"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,360,"* -1 3/4, so this method returns the positive whole part -1.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,362,"* @return the whole fraction part of a proper fraction, that includes the sign"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,364,public int getProperWhole() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,365,return numerator / denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,368,// Number methods
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,372,* <p>Gets the fraction as an <code>int</code>. This returns the whole number
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,373,* part of the fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,375,* @return the whole number fraction part
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,377,public int intValue() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,378,return (int) numerator / denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,382,* <p>Gets the fraction as a <code>long</code>. This returns the whole number
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,383,* part of the fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,385,* @return the whole number fraction part
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,387,public long longValue() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,388,return (long) numerator / denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,392,* <p>Gets the fraction as a <code>float</code>. This calculates the fraction
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,393,* as the numerator divided by denominator.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,395,* @return the fraction as a <code>float</code>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,397,public float floatValue() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,398,return ((float) numerator) / ((float) denominator);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,402,* <p>Gets the fraction as a <code>double</code>. This calculates the fraction
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,403,* as the numerator divided by denominator.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,405,* @return the fraction as a <code>double</code>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,407,public double doubleValue() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,408,return ((double) numerator) / ((double) denominator);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,411,// Calculations
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,415,* <p>Reduce the fraction to the smallest values for the numerator and
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,416,"* denominator, returning the result..</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,418,"* @return a new reduce fraction instance, or this if no simplification possible"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,420,public Fraction reduce() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,421,"int gcd = greatestCommonDenominator(Math.abs(numerator), denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,422,if (gcd == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,423,return this;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,425,"return Fraction.getFraction(numerator / gcd, denominator / gcd);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,429,* <p>Gets a fraction that is the invert (1/fraction) of this one.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,431,* <p>The returned fraction is not reduced.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,433,* @return a new fraction instance with the numerator and denominator inverted
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,434,* @throws ArithmeticException if the numerator is zero
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,436,public Fraction invert() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,437,if (numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,438,"throw new ArithmeticException(""Unable to invert a fraction with a zero numerator"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,440,"return getFraction(denominator, numerator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,444,* <p>Gets a fraction that is the negative (-fraction) of this one.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,446,* <p>The returned fraction is not reduced.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,448,* @return a new fraction instance with the opposite signed numerator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,450,public Fraction negate() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,451,"return getFraction(-numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,455,* <p>Gets a fraction that is the positive equivalent
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,456,* (fraction >= 0 ? this : -fraction) of this one.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,458,* <p>The returned fraction is not reduced.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,460,"* @return <code>this</code> if it is positive, or a new positive fraction"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,461,*  instance with the opposite signed numerator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,463,public Fraction abs() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,464,if (numerator >= 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,465,return this;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,467,"return getFraction(-numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,471,* <p>Gets a fraction that is raised to the passed in power.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,473,* <p>The returned fraction is not reduced.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,475,* @param power  the power to raise the fraction to
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,476,"* @return <code>this</code> if the power is one, <code>ONE</code> if the power"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,477,* is zero or a new fraction instance raised to the appropriate power
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,479,public Fraction pow(int power) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,480,if (power == 1) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,481,return this;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,482,} else if (power == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,483,return ONE;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,484,} else if (power < 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,485,"return getFraction((int) Math.pow(denominator, -power), (int) Math.pow(numerator, -power));"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,487,"return getFraction((int) Math.pow(numerator, power), (int) Math.pow(denominator, power));"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,491,* <p>Gets the greatest common denominator of two numbers.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,493,* @param number1  a positive number
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,494,* @param number2  a positive number
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,495,* @return the greatest common denominator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,497,"private static int greatestCommonDenominator(int number1, int number2) {"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,498,int remainder = number1 % number2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,499,while (remainder != 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,500,number1 = number2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,501,number2 = remainder;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,502,remainder = number1 % number2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,504,return number2;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,507,// Arithmetic
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,511,"* <p>Adds the value of this fraction to another, returning the result.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,513,* <p>The implementation spots common cases of zero numerators and equal
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,514,"* denominators. Otherwise, it uses <code>(a/b) + (c/d) = (a*d + b*c) / (b*d)</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,515,* and then reduces the result.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,517,"* @param the fraction to add, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,518,* @return a <code>Fraction</code> instance with the resulting values
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,519,* @throws IllegalArgumentException if the fraction is null
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,521,public Fraction add(Fraction fraction) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,522,if (fraction == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,523,"throw new IllegalArgumentException(""The fraction must not be null"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,525,if (numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,526,return fraction;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,528,if (fraction.numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,529,return this;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,531,if (denominator == fraction.denominator) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,532,"return getReducedFraction(numerator + fraction.numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,534,return getReducedFraction(
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,535,"numerator * fraction.denominator + denominator * fraction.numerator,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,536,denominator * fraction.denominator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,541,"* <p>Subtracts the value of another fraction from the value of this one,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,542,* returning the result.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,544,* <p>The implementation spots common cases of zero numerators and equal
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,545,"* denominators. Otherwise, it uses <code>(a/b) - (c/d) = (a*d - b*c) / (b*d)</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,546,* and then reduces the result.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,548,"* @param the fraction to subtract, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,549,* @return a <code>Fraction</code> instance with the resulting values
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,550,* @throws IllegalArgumentException if the fraction is null
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,552,public Fraction subtract(Fraction fraction) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,553,if (fraction == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,554,"throw new IllegalArgumentException(""The fraction must not be null"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,556,if (numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,557,return fraction.negate();
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,559,if (fraction.numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,560,return this;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,562,if (denominator == fraction.denominator) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,563,"return getReducedFraction(numerator - fraction.numerator, denominator);"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,565,return getReducedFraction(
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,566,"numerator * fraction.denominator - denominator * fraction.numerator,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,567,denominator * fraction.denominator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,572,"* <p>Multiplies the value of this fraction by another, returning the result.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,574,* <p>The implementation uses <code>(a/b)*(c/d) = (a*c)/(b*d)</code>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,575,* and then reduces the result.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,577,"* @param the fraction to multipy by, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,578,* @return a <code>Fraction</code> instance with the resulting values
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,579,* @throws IllegalArgumentException if the fraction is null
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,581,public Fraction multiplyBy(Fraction fraction) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,582,if (fraction == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,583,"throw new IllegalArgumentException(""The fraction must not be null"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,585,if (numerator == 0 || fraction.numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,586,return ZERO;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,588,return getReducedFraction(
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,589,"numerator * fraction.numerator,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,590,denominator * fraction.denominator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,595,"* <p>Divide the value of this fraction by another, returning the result.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,597,* <p>The implementation uses <code>(a/b)/(c/d) = a/b * d/c = (a*d)/(b*c)</code>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,598,* and then reduces the result.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,600,"* @param the fraction to divide by, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,601,* @return a <code>Fraction</code> instance with the resulting values
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,602,* @throws IllegalArgumentException if the fraction is null
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,603,* @throws ArithmeticException if the fraction to divide by is zero
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,605,public Fraction divideBy(Fraction fraction) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,606,if (fraction == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,607,"throw new IllegalArgumentException(""The fraction must not be null"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,609,if (fraction.numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,610,"throw new ArithmeticException(""The fraction to divide by must not be zero"");"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,612,if (numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,613,return ZERO;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,615,return getReducedFraction(
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,616,"numerator * fraction.denominator,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,617,denominator * fraction.numerator
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,621,// Basics
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,625,* <p>Compares this fraction to another object to test if they are equal.</p>.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,627,"* <p>To be equal, both values must be equal. Thus 2/4 is not equal to 1/2.</p>"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,629,* @param obj the reference object with which to compare
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,630,* @return <code>true</code> if this object is equal
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,632,public boolean equals(Object obj) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,633,if (obj == this) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,634,return true;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,636,if (obj instanceof Fraction == false) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,637,return false;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,639,Fraction other = (Fraction) obj;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,640,return (numerator == other.numerator &&
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,641,denominator == other.denominator);
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,645,* <p>Gets a hashCode for the fraction.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,647,* @return a hash code value for this object
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,649,public int hashCode() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,650,if (hashCode == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,651,hashCode = 17;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,652,hashCode = 37 * hashCode + numerator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,653,hashCode = 37 * hashCode + denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,655,return hashCode;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,659,* <p>Compares this object to another based on size.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,661,* @param object  the object to compare to
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,662,"* @return -ve if this is less, 0 if equal, +ve if greater"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,663,* @throws ClassCastException if the object is not a <code>Fraction</code>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,664,* @throws NullPointerException if the object is <code>null</code>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,666,public int compareTo(Object object) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,667,Fraction other = (Fraction) object;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,668,if (numerator == other.numerator && denominator == other.denominator) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,669,return 0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,672,// otherwise see which is less
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,673,long first = (long) numerator * (long) other.denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,674,long second = (long) other.numerator * (long) denominator;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,675,if (first == second) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,676,return 0;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,677,} else if (first < second) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,678,return -1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,679,} else {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,680,return 1;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,685,* <p>Gets the fraction as a <code>String</code>.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,687,* <p>The format used is '<i>numerator</i>/<i>denominator</i>' always.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,689,* @return a <code>String</code> form of the fraction
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,691,public String toString() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,692,if (toString == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,693,toString = new StringBuffer(32)
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,694,.append(numerator)
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,695,.append('/')
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,696,.append(denominator).toString();
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,698,return toString;
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,702,* <p>Gets the fraction as a proper <code>String</code> in the format X Y/Z.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,704,* <p>The format used in '<i>wholeNumber</i> <i>numerator</i>/<i>denominator</i>'.
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,705,"* If the whole number is zero it will be ommitted. If the numerator is zero,"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,706,* only the whole number is returned.</p>
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,708,* @return a <code>String</code> form of the fraction
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,710,public String toProperString() {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,711,if (toProperString == null) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,712,if (numerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,713,"toProperString = ""0"";"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,714,} else if (numerator == denominator) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,715,"toProperString = ""1"";"
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,716,} else if (Math.abs(numerator) > denominator) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,717,int properNumerator = getProperNumerator();
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,718,if (properNumerator == 0) {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,719,toProperString = Integer.toString(getProperWhole());
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,720,} else {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,721,toProperString = new StringBuffer(32)
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,722,.append(getProperWhole()).append(' ')
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,723,.append(properNumerator).append('/')
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,724,.append(denominator).toString();
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,726,} else {
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,727,toProperString = new StringBuffer(32)
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,728,.append(numerator).append('/')
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,729,.append(denominator).toString();
True,src/java/org/apache/commons/lang/math/Fraction.java,src/java/org/apache/commons/lang/math/Fraction.java,732,return toProperString;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,9,* are met:
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,54,package org.apache.commons.lang.math;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,60,* Test cases for the {@link Fraction} classes.
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,62,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,63,"* @version $Id: FractionTest.java,v 1.1 2002/12/22 19:39:39 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,65,public class FractionTest extends TestCase {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,67,private static final int SKIP = 10000;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,69,public FractionTest(String name) {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,70,super(name);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,73,public static Test suite() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,74,TestSuite suite = new TestSuite(FractionTest.class);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,75,"suite.setName(""Fraction Tests"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,76,return suite;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,79,public void setUp() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,84,public void testConstants() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,85,"assertEquals(0, Fraction.ZERO.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,86,"assertEquals(1, Fraction.ZERO.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,88,"assertEquals(1, Fraction.ONE.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,89,"assertEquals(1, Fraction.ONE.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,91,"assertEquals(1, Fraction.ONE_HALF.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,92,"assertEquals(2, Fraction.ONE_HALF.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,94,"assertEquals(1, Fraction.ONE_THIRD.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,95,"assertEquals(3, Fraction.ONE_THIRD.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,97,"assertEquals(2, Fraction.TWO_THIRDS.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,98,"assertEquals(3, Fraction.TWO_THIRDS.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,100,"assertEquals(1, Fraction.ONE_QUARTER.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,101,"assertEquals(4, Fraction.ONE_QUARTER.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,103,"assertEquals(2, Fraction.TWO_QUARTERS.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,104,"assertEquals(4, Fraction.TWO_QUARTERS.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,106,"assertEquals(3, Fraction.THREE_QUARTERS.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,107,"assertEquals(4, Fraction.THREE_QUARTERS.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,109,"assertEquals(1, Fraction.ONE_FIFTH.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,110,"assertEquals(5, Fraction.ONE_FIFTH.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,112,"assertEquals(2, Fraction.TWO_FIFTHS.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,113,"assertEquals(5, Fraction.TWO_FIFTHS.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,115,"assertEquals(3, Fraction.THREE_FIFTHS.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,116,"assertEquals(5, Fraction.THREE_FIFTHS.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,118,"assertEquals(4, Fraction.FOUR_FIFTHS.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,119,"assertEquals(5, Fraction.FOUR_FIFTHS.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,122,public void testFactory_int_int() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,123,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,125,// zero
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,126,"f = Fraction.getFraction(0, 1);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,127,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,128,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,130,"f = Fraction.getFraction(0, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,131,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,132,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,134,// normal
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,135,"f = Fraction.getFraction(1, 1);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,136,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,137,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,139,"f = Fraction.getFraction(2, 1);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,140,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,141,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,143,"f = Fraction.getFraction(23, 345);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,144,"assertEquals(23, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,145,"assertEquals(345, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,147,// improper
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,148,"f = Fraction.getFraction(22, 7);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,149,"assertEquals(22, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,150,"assertEquals(7, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,152,// negatives
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,153,"f = Fraction.getFraction(-6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,154,"assertEquals(-6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,155,"assertEquals(10, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,157,"f = Fraction.getFraction(6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,158,"assertEquals(-6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,159,"assertEquals(10, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,161,"f = Fraction.getFraction(-6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,162,"assertEquals(6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,163,"assertEquals(10, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,165,// zero denominator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,166,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,167,"f = Fraction.getFraction(1, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,168,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,170,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,171,"f = Fraction.getFraction(2, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,172,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,174,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,175,"f = Fraction.getFraction(-3, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,176,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,179,public void testFactory_int_int_int() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,180,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,182,// zero
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,183,"f = Fraction.getFraction(0, 0, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,184,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,185,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,187,"f = Fraction.getFraction(2, 0, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,188,"assertEquals(4, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,189,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,191,"f = Fraction.getFraction(0, 1, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,192,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,193,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,195,// normal
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,196,"f = Fraction.getFraction(1, 1, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,197,"assertEquals(3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,198,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,200,// negatives
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,201,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,202,"f = Fraction.getFraction(1, -6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,203,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,205,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,206,"f = Fraction.getFraction(1, -6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,207,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,209,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,210,"f = Fraction.getFraction(1, -6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,211,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,213,// negative whole
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,214,"f = Fraction.getFraction(-1, 6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,215,"assertEquals(-16, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,216,"assertEquals(10, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,218,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,219,"f = Fraction.getFraction(-1, -6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,220,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,222,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,223,"f = Fraction.getFraction(-1, 6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,224,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,226,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,227,"f = Fraction.getFraction(-1, -6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,228,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,230,// zero denominator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,231,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,232,"f = Fraction.getFraction(0, 1, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,233,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,235,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,236,"f = Fraction.getFraction(1, 2, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,237,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,239,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,240,"f = Fraction.getFraction(-1, -3, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,241,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,244,public void testReducedFactory_int_int() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,245,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,247,// zero
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,248,"f = Fraction.getReducedFraction(0, 1);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,249,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,250,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,252,// normal
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,253,"f = Fraction.getReducedFraction(1, 1);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,254,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,255,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,257,"f = Fraction.getReducedFraction(2, 1);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,258,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,259,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,261,// improper
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,262,"f = Fraction.getReducedFraction(22, 7);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,263,"assertEquals(22, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,264,"assertEquals(7, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,266,// negatives
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,267,"f = Fraction.getReducedFraction(-6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,268,"assertEquals(-3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,269,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,271,"f = Fraction.getReducedFraction(6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,272,"assertEquals(-3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,273,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,275,"f = Fraction.getReducedFraction(-6, -10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,276,"assertEquals(3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,277,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,279,// zero denominator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,280,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,281,"f = Fraction.getReducedFraction(1, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,282,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,284,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,285,"f = Fraction.getReducedFraction(2, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,286,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,288,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,289,"f = Fraction.getReducedFraction(-3, 0);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,290,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,292,// reduced
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,293,"f = Fraction.getReducedFraction(0, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,294,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,295,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,297,"f = Fraction.getReducedFraction(2, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,298,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,299,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,301,"f = Fraction.getReducedFraction(2, 4);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,302,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,303,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,305,"f = Fraction.getReducedFraction(15, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,306,"assertEquals(3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,307,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,309,"f = Fraction.getReducedFraction(121, 22);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,310,"assertEquals(11, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,311,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,314,public void testFactory_double() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,315,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,317,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,318,f = Fraction.getFraction(Double.NaN);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,319,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,321,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,322,f = Fraction.getFraction(Double.POSITIVE_INFINITY);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,323,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,325,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,326,f = Fraction.getFraction(Double.NEGATIVE_INFINITY);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,327,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,329,// zero
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,330,f = Fraction.getFraction(0.0d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,331,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,332,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,334,// one
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,335,f = Fraction.getFraction(1.0d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,336,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,337,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,339,// one half
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,340,f = Fraction.getFraction(0.5d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,341,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,342,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,344,// negative
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,345,f = Fraction.getFraction(-0.875d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,346,"assertEquals(-7, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,347,"assertEquals(8, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,349,// over 1
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,350,f = Fraction.getFraction(1.25d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,351,"assertEquals(5, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,352,"assertEquals(4, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,354,// two thirds
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,355,f = Fraction.getFraction(0.66666d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,356,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,357,"assertEquals(3, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,359,// small
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,360,f = Fraction.getFraction(1.0d/10001d);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,361,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,362,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,364,// normal
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,365,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,366,"int remainder, number1, number2 = 0;"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,367,for (int i = 1; i <= 100; i++) {  // denominator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,368,for (int j = 1; j <= i; j++) {  // numerator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,369,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,370,f = Fraction.getFraction((double) j / (double) i);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,371,} catch (ArithmeticException ex) {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,372,"System.err.println(j + "" "" + i);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,373,throw ex;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,375,"f2 = Fraction.getReducedFraction(j, i);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,376,"assertEquals(f2.getNumerator(), f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,377,"assertEquals(f2.getDenominator(), f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,380,// save time by skipping some tests!
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,381,for (int i = 1001; i <= 10000; i+=SKIP) {  // denominator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,382,for (int j = 1; j <= i; j++) {  // numerator
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,383,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,384,f = Fraction.getFraction((double) j / (double) i);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,385,} catch (ArithmeticException ex) {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,386,"System.err.println(j + "" "" + i);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,387,throw ex;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,389,"f2 = Fraction.getReducedFraction(j, i);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,390,"assertEquals(f2.getNumerator(), f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,391,"assertEquals(f2.getDenominator(), f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,396,public void testFactory_String() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,397,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,398,Fraction.getFraction(null);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,399,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,402,public void testFactory_String_double() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,403,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,405,"f = Fraction.getFraction(""0.0"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,406,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,407,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,409,"f = Fraction.getFraction(""0.2"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,410,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,411,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,413,"f = Fraction.getFraction(""0.5"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,414,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,415,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,417,"f = Fraction.getFraction(""0.66666"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,418,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,419,"assertEquals(3, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,421,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,422,"f = Fraction.getFraction(""2.3R"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,423,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,425,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,426,"f = Fraction.getFraction(""."");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,427,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,430,public void testFactory_String_proper() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,431,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,433,"f = Fraction.getFraction(""0 0/1"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,434,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,435,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,437,"f = Fraction.getFraction(""1 1/5"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,438,"assertEquals(6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,439,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,441,"f = Fraction.getFraction(""7 1/2"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,442,"assertEquals(15, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,443,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,445,"f = Fraction.getFraction(""1 2/4"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,446,"assertEquals(6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,447,"assertEquals(4, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,449,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,450,"f = Fraction.getFraction(""2 3"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,451,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,453,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,454,"f = Fraction.getFraction(""a 3"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,455,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,457,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,458,"f = Fraction.getFraction(""2 b/4"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,459,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,461,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,462,"f = Fraction.getFraction(""2 "");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,463,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,465,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,466,"f = Fraction.getFraction("" 3"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,467,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,469,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,470,"f = Fraction.getFraction("" "");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,471,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,474,public void testFactory_String_improper() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,475,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,477,"f = Fraction.getFraction(""0/1"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,478,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,479,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,481,"f = Fraction.getFraction(""1/5"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,482,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,483,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,485,"f = Fraction.getFraction(""1/2"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,486,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,487,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,489,"f = Fraction.getFraction(""2/3"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,490,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,491,"assertEquals(3, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,493,"f = Fraction.getFraction(""7/3"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,494,"assertEquals(7, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,495,"assertEquals(3, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,497,"f = Fraction.getFraction(""2/4"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,498,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,499,"assertEquals(4, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,501,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,502,"f = Fraction.getFraction(""2/d"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,503,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,505,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,506,"f = Fraction.getFraction(""2e/3"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,507,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,509,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,510,"f = Fraction.getFraction(""2/"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,511,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,513,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,514,"f = Fraction.getFraction(""/"");"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,515,} catch (NumberFormatException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,518,public void testGets() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,519,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,521,"f = Fraction.getFraction(3, 5, 6);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,522,"assertEquals(23, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,523,"assertEquals(3, f.getProperWhole());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,524,"assertEquals(5, f.getProperNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,525,"assertEquals(6, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,527,"f = Fraction.getFraction(-3, 5, 6);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,528,"assertEquals(-23, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,529,"assertEquals(-3, f.getProperWhole());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,530,"assertEquals(5, f.getProperNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,531,"assertEquals(6, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,534,public void testConversions() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,535,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,537,"f = Fraction.getFraction(3, 7, 8);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,538,"assertEquals(3, f.intValue());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,539,"assertEquals(3L, f.longValue());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,540,"assertEquals(3.875f, f.floatValue(), 0.00001f);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,541,"assertEquals(3.875d, f.doubleValue(), 0.00001d);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,544,public void testReduce() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,545,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,547,"f = Fraction.getFraction(50, 75);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,548,f = f.reduce();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,549,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,550,"assertEquals(3, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,553,public void testInvert() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,554,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,556,"f = Fraction.getFraction(50, 75);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,557,f = f.invert();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,558,"assertEquals(75, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,559,"assertEquals(50, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,561,"f = Fraction.getFraction(4, 3);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,562,f = f.invert();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,563,"assertEquals(3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,564,"assertEquals(4, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,566,"f = Fraction.getFraction(0, 3);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,567,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,568,f = f.invert();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,569,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,572,public void testNegate() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,573,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,575,"f = Fraction.getFraction(50, 75);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,576,f = f.negate();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,577,"assertEquals(-50, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,578,"assertEquals(75, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,580,"f = Fraction.getFraction(-50, 75);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,581,f = f.negate();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,582,"assertEquals(50, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,583,"assertEquals(75, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,586,public void testAbs() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,587,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,589,"f = Fraction.getFraction(50, 75);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,590,f = f.abs();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,591,"assertEquals(50, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,592,"assertEquals(75, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,594,"f = Fraction.getFraction(-50, 75);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,595,f = f.abs();
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,596,"assertEquals(50, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,597,"assertEquals(75, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,600,public void testPow() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,601,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,603,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,604,"assertEquals(Fraction.ONE, f.pow(0));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,606,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,607,"assertSame(f, f.pow(1));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,609,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,610,f = f.pow(2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,611,"assertEquals(9, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,612,"assertEquals(25, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,614,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,615,f = f.pow(3);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,616,"assertEquals(27, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,617,"assertEquals(125, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,619,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,620,f = f.pow(-1);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,621,"assertEquals(5, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,622,"assertEquals(3, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,624,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,625,f = f.pow(-2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,626,"assertEquals(25, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,627,"assertEquals(9, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,630,public void testAdd() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,631,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,632,Fraction f1 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,633,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,635,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,636,"f2 = Fraction.getFraction(1, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,637,f = f1.add(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,638,"assertEquals(4, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,639,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,641,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,642,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,643,f = f1.add(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,644,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,645,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,647,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,648,"f2 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,649,f = f1.add(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,650,"assertEquals(6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,651,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,653,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,654,"f2 = Fraction.getFraction(-4, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,655,f = f1.add(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,656,"assertEquals(-1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,657,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,659,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,660,"f2 = Fraction.getFraction(1, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,661,f = f1.add(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,662,"assertEquals(11, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,663,"assertEquals(10, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,665,"f1 = Fraction.getFraction(0, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,666,"f2 = Fraction.getFraction(1, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,667,f = f1.add(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,668,"assertSame(f2, f);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,669,f = f2.add(f1);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,670,"assertSame(f2, f);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,672,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,673,f.add(null);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,674,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,677,public void testSubtract() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,678,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,679,Fraction f1 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,680,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,682,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,683,"f2 = Fraction.getFraction(1, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,684,f = f1.subtract(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,685,"assertEquals(2, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,686,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,688,"f1 = Fraction.getFraction(7, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,689,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,690,f = f1.subtract(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,691,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,692,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,694,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,695,"f2 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,696,f = f1.subtract(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,697,"assertEquals(0, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,698,"assertEquals(1, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,700,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,701,"f2 = Fraction.getFraction(-4, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,702,f = f1.subtract(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,703,"assertEquals(7, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,704,"assertEquals(5, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,706,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,707,"f2 = Fraction.getFraction(1, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,708,f = f1.subtract(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,709,"assertEquals(1, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,710,"assertEquals(10, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,712,"f1 = Fraction.getFraction(0, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,713,"f2 = Fraction.getFraction(1, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,714,f = f2.subtract(f1);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,715,"assertSame(f2, f);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,717,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,718,f.subtract(null);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,719,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,722,public void testMultiply() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,723,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,724,Fraction f1 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,725,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,727,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,728,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,729,f = f1.multiplyBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,730,"assertEquals(6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,731,"assertEquals(25, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,733,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,734,"f2 = Fraction.getFraction(-2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,735,f = f1.multiplyBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,736,"assertEquals(-6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,737,"assertEquals(25, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,739,"f1 = Fraction.getFraction(-3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,740,"f2 = Fraction.getFraction(-2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,741,f = f1.multiplyBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,742,"assertEquals(6, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,743,"assertEquals(25, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,745,"f1 = Fraction.getFraction(0, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,746,"f2 = Fraction.getFraction(2, 7);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,747,f = f1.multiplyBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,748,"assertSame(Fraction.ZERO, f);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,750,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,751,f.multiplyBy(null);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,752,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,755,public void testDivide() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,756,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,757,Fraction f1 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,758,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,760,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,761,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,762,f = f1.divideBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,763,"assertEquals(3, f.getNumerator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,764,"assertEquals(2, f.getDenominator());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,766,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,767,f2 = Fraction.ZERO;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,768,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,769,f = f1.divideBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,770,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,772,"f1 = Fraction.getFraction(0, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,773,"f2 = Fraction.getFraction(2, 7);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,774,f = f1.divideBy(f2);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,775,"assertSame(Fraction.ZERO, f);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,777,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,778,f.divideBy(null);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,779,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,782,public void testEquals() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,783,Fraction f1 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,784,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,786,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,787,"assertEquals(false, f1.equals(null));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,788,"assertEquals(false, f1.equals(new Object()));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,789,"assertEquals(false, f1.equals(new Integer(6)));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,791,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,792,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,793,"assertEquals(false, f1.equals(f2));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,794,"assertEquals(true, f1.equals(f1));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,795,"assertEquals(true, f2.equals(f2));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,797,"f2 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,798,"assertEquals(true, f1.equals(f2));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,800,"f2 = Fraction.getFraction(6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,801,"assertEquals(false, f1.equals(f2));"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,804,public void testHashCode() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,805,"Fraction f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,806,"Fraction f2 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,808,assertTrue(f1.hashCode() == f2.hashCode());
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,810,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,811,assertTrue(f1.hashCode() != f2.hashCode());
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,813,"f2 = Fraction.getFraction(6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,814,assertTrue(f1.hashCode() != f2.hashCode());
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,817,public void testCompareTo() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,818,Fraction f1 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,819,Fraction f2 = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,821,"f1 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,823,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,824,f1.compareTo(null);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,825,} catch (NullPointerException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,827,try {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,828,f1.compareTo(new Object());
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,829,} catch (ClassCastException ex) {}
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,831,"f2 = Fraction.getFraction(2, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,832,assertTrue(f1.compareTo(f2) > 0);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,834,"f2 = Fraction.getFraction(4, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,835,assertTrue(f1.compareTo(f2) < 0);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,837,"f2 = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,838,assertTrue(f1.compareTo(f2) == 0);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,840,"f2 = Fraction.getFraction(6, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,841,assertTrue(f1.compareTo(f2) == 0);
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,844,public void testToString() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,845,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,847,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,848,"assertEquals(""3/5"", f.toString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,850,"f = Fraction.getFraction(7, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,851,"assertEquals(""7/5"", f.toString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,853,"f = Fraction.getFraction(4, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,854,"assertEquals(""4/2"", f.toString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,856,"f = Fraction.getFraction(0, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,857,"assertEquals(""0/2"", f.toString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,859,"f = Fraction.getFraction(2, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,860,"assertEquals(""2/2"", f.toString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,863,public void testToProperString() {
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,864,Fraction f = null;
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,866,"f = Fraction.getFraction(3, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,867,"assertEquals(""3/5"", f.toProperString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,869,"f = Fraction.getFraction(7, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,870,"assertEquals(""1 2/5"", f.toProperString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,872,"f = Fraction.getFraction(14, 10);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,873,"assertEquals(""1 4/10"", f.toProperString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,875,"f = Fraction.getFraction(4, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,876,"assertEquals(""2"", f.toProperString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,878,"f = Fraction.getFraction(0, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,879,"assertEquals(""0"", f.toProperString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,881,"f = Fraction.getFraction(2, 2);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,882,"assertEquals(""1"", f.toProperString());"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,884,"f = Fraction.getFraction(-7, 5);"
True,src/test/org/apache/commons/lang/math/FractionTest.java,src/test/org/apache/commons/lang/math/FractionTest.java,885,"assertEquals(""-1 2/5"", f.toProperString());"
False,src/test/org/apache/commons/lang/math/MathTestSuite.java,src/test/org/apache/commons/lang/math/MathTestSuite.java,64," @version $Id: MathTestSuite.java,v 1.1 2002/12/22 16:20:29 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/MathTestSuite.java,src/test/org/apache/commons/lang/math/MathTestSuite.java,64,"* @version $Id: MathTestSuite.java,v 1.2 2002/12/22 19:39:39 scolebourne Exp $"
True,src/test/org/apache/commons/lang/math/MathTestSuite.java,src/test/org/apache/commons/lang/math/MathTestSuite.java,90,suite.addTest(FractionTest.suite());
