is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,1,ackage org.apache.commons.lang;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,59,* <p>This class uses <code>double</code> comparisons. This means that it
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,60,"* is unsuitable for dealing with large <code>Long</code>, <code>BigDecimal</code>"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,61,* or <code>BigInteger</code> numbers.</p>
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,61," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,62, @version $Revision: 1.3 $ $Date: 2002/11/16 10:41:03 $
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,64,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,65,* @version $Revision: 1.4 $ $Date: 2002/12/21 14:22:11 $
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,83,"hrow new NullPointerException(""num cannot be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,85,"throw new NullPointerException(""The number must not be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,96,"* <p>If the maximum is less than the minimum, the range will be constructed"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,97,"* from the minimum value to the minimum value, not what you would expect!.</p>"
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,101,"hrow new NullPointerException(""min cannot be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,106,"throw new NullPointerException(""The minimum value must not be null"");"
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,103,"hrow new NullPointerException(""max cannot be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,108,"throw new NullPointerException(""The maximum value must not be null"");"
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,134, this range.</p>
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,139,* this range using <code>double</code> comparison.</p>
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,151, range.</p>
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,156,* range using <code>double</code> comparison.</p>
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,166, <p>Tests whether the specified range overlaps with this range.</p>
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,171,* <p>Tests whether the specified range overlaps with this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,172,* using <code>double</code> comparison.</p>
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,224,f (min.intValue() < 0) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,230,if (min.doubleValue() < 0) {
False,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,234,f (max.intValue() < 0) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,240,if (max.doubleValue() < 0) {
