is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,69," @version $Id: BooleanUtils.java,v 1.16 2003/09/23 19:45:14 fredrik Exp $"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,69,"* @version $Id: BooleanUtils.java,v 1.17 2003/10/21 23:23:06 scolebourne Exp $"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,505,*   BooleanUtils.toBooleanObject(null)    = null
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,512,"*   BooleanUtils.toBooleanObject(""blue"")  = null"
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,577, <p>Converts a String to a boolean.</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,579,* <p>Converts a String to a boolean (optimised for performance).</p>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,585,* <p>This method performs 4 times faster (JDK1.4) than
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,586,"* <code>Boolean.valueOf(String)</code>. However, this method accepts"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,587,* 'on' and 'yes' as true values.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,590,*   BooleanUtils.toBoolean(null)    = false
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,592,"*   BooleanUtils.toBoolean(""TRUE"")  = true"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,593,"*   BooleanUtils.toBoolean(""tRUe"")  = true"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,597,"*   BooleanUtils.toBoolean(""x gti"") = false"
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,594,"f (""true"".equalsIgnoreCase(str)) {"
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,595,eturn true;
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,596," else if (""on"".equalsIgnoreCase(str)) {"
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,597,eturn true;
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,598," else if (""yes"".equalsIgnoreCase(str)) {"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,604,"// Previously used equalsIgnoreCase, which was fast for interned 'true'."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,605,// Non interned 'true' matched 15 times slower.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,607,// Optimisation provides same performance as before for interned 'true'.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,608,"// Similar performance for null, 'false', and other strings not length 2/3/4."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,609,"// 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower."
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,610,"if (str == ""true"") {"
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,601,/ no match
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,613,if (str == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,614,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,616,switch (str.length()) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,617,case 2: {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,618,char ch0 = str.charAt(0);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,619,char ch1 = str.charAt(1);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,620,return
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,621,(ch0 == 'o' || ch0 == 'O') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,622,(ch1 == 'n' || ch1 == 'N');
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,624,case 3: {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,625,char ch = str.charAt(0);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,626,if (ch == 'y') {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,627,return
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,628,(str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,629,(str.charAt(2) == 's' || str.charAt(2) == 'S');
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,631,if (ch == 'Y') {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,632,return
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,633,(str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,634,(str.charAt(2) == 'S' || str.charAt(2) == 's');
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,637,case 4: {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,638,char ch = str.charAt(0);
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,639,if (ch == 't') {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,640,return
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,641,(str.charAt(1) == 'r' || str.charAt(1) == 'R') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,642,(str.charAt(2) == 'u' || str.charAt(2) == 'U') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,643,(str.charAt(3) == 'e' || str.charAt(3) == 'E');
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,645,if (ch == 'T') {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,646,return
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,647,(str.charAt(1) == 'R' || str.charAt(1) == 'r') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,648,(str.charAt(2) == 'U' || str.charAt(2) == 'u') &&
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,649,(str.charAt(3) == 'E' || str.charAt(3) == 'e');
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,656,//    public static void main(String[] args) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,657,//        long start = System.currentTimeMillis();
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,658,//        boolean flag = true;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,659,//        int count = 0;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,660,//        for (int i = 0; i < 100000000; i++) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,661,"//            flag = toBoolean(""YES"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,663,//        long end = System.currentTimeMillis();
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,664,"//        System.out.println((end - start) + "" "" + flag + "" "" + count);"
False,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,69," @version $Id: BooleanUtilsTest.java,v 1.7 2003/08/18 02:22:25 bayard Exp $"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,69,"* @version $Id: BooleanUtilsTest.java,v 1.8 2003/10/21 23:23:06 scolebourne Exp $"
False,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,311,"ssertEquals(true, BooleanUtils.toBoolean(""true""));"
False,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,312,"ssertEquals(true, BooleanUtils.toBoolean(""yes""));"
False,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,313,"ssertEquals(true, BooleanUtils.toBoolean(""on""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,311,"assertEquals(false, BooleanUtils.toBoolean(""yep""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,312,"assertEquals(false, BooleanUtils.toBoolean(""trux""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,313,"assertEquals(false, BooleanUtils.toBoolean(""false""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,314,"assertEquals(false, BooleanUtils.toBoolean(""a""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,315,"assertEquals(true, BooleanUtils.toBoolean(""true"")); // interned handled differently"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,316,"assertEquals(true, BooleanUtils.toBoolean(new StringBuffer(""tr"").append(""ue"").toString()));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,317,"assertEquals(true, BooleanUtils.toBoolean(""truE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,318,"assertEquals(true, BooleanUtils.toBoolean(""trUe""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,319,"assertEquals(true, BooleanUtils.toBoolean(""trUE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,320,"assertEquals(true, BooleanUtils.toBoolean(""tRue""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,321,"assertEquals(true, BooleanUtils.toBoolean(""tRuE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,322,"assertEquals(true, BooleanUtils.toBoolean(""tRUe""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,323,"assertEquals(true, BooleanUtils.toBoolean(""tRUE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,325,"assertEquals(true, BooleanUtils.toBoolean(""TRUe""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,326,"assertEquals(true, BooleanUtils.toBoolean(""TRuE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,327,"assertEquals(true, BooleanUtils.toBoolean(""TRue""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,328,"assertEquals(true, BooleanUtils.toBoolean(""TrUE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,329,"assertEquals(true, BooleanUtils.toBoolean(""TrUe""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,330,"assertEquals(true, BooleanUtils.toBoolean(""TruE""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,331,"assertEquals(true, BooleanUtils.toBoolean(""True""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,332,"assertEquals(true, BooleanUtils.toBoolean(""on""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,333,"assertEquals(true, BooleanUtils.toBoolean(""oN""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,334,"assertEquals(true, BooleanUtils.toBoolean(""On""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,336,"assertEquals(true, BooleanUtils.toBoolean(""yes""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,337,"assertEquals(true, BooleanUtils.toBoolean(""yeS""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,338,"assertEquals(true, BooleanUtils.toBoolean(""yEs""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,339,"assertEquals(true, BooleanUtils.toBoolean(""yES""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,340,"assertEquals(true, BooleanUtils.toBoolean(""Yes""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,341,"assertEquals(true, BooleanUtils.toBoolean(""YeS""));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,342,"assertEquals(true, BooleanUtils.toBoolean(""YEs""));"
False,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,317,"ssertEquals(true, BooleanUtils.toBoolean(""TruE""));"
