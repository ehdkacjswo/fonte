is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,77,"FlagSpec(help = ""Prints out the parse tree and exits"")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,77,"@FlagSpec(help = ""Prints out the parse tree and exits"","
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,78,docLevel = DocLevel.SECRET)
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,81," "" tree and exits"")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,82,"+ "" tree and exits"","
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,83,docLevel = DocLevel.SECRET)
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,91," "" warnings for the JavaScript code under compilation."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,93,"+ "" warnings for the JavaScript code under compilation."","
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,94,docLevel = DocLevel.SECRET)
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,120," ""renaming map produced by a previous compilation."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,123,"+ ""renaming map produced by a previous compilation."","
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,124,docLevel = DocLevel.SECRET)
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,125," ""renaming map produced should be saved."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,129,"+ ""renaming map produced should be saved."","
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,130,docLevel = DocLevel.SECRET)
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,133," ""property_map_output_file."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,138,"+ ""property_map_output_file."","
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,139,docLevel = DocLevel.SECRET)
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,193,"@FlagSpec(help = ""Make the named class of warnings an error."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,194,public static final Flag<List<String>> FLAG_jscomp_error =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,195,Flag.stringCollector();
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,197,"@FlagSpec(help = ""Make the named class of warnings a normal warning."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,198,public static final Flag<List<String>> FLAG_jscomp_warning =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,199,Flag.stringCollector();
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,201,"@FlagSpec(help = ""Turn off the named class of warnings."")"
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,202,public static final Flag<List<String>> FLAG_jscomp_off =
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,203,Flag.stringCollector();
False,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,270,dd(Long.toString((long) x));
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,271,long value = (long) x;
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,272,long mantissa = value;
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,273,int exp = 0;
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,274,if (x >= 100) {
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,275,"while (mantissa / 10 * Math.pow(10, exp + 1) == value) {"
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,276,mantissa /= 10;
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,277,exp++;
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,280,if (exp > 2) {
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,281,"add(Long.toString(mantissa) + ""E"" + Integer.toString(exp));"
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,282,} else {
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,283,add(Long.toString(value));
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,722,oid setWarningsGuard(ComposeWarningsGuard guard) {
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,723,arningsGuard = guard;
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,123,DiagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,124,"options, AbstractCompilerRunner.FLAG_jscomp_error.get(),"
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,125,CheckLevel.ERROR);
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,126,DiagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,127,"options, AbstractCompilerRunner.FLAG_jscomp_warning.get(),"
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,128,CheckLevel.WARNING);
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,129,DiagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,130,"options, AbstractCompilerRunner.FLAG_jscomp_off.get(),"
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,131,CheckLevel.OFF);
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,22,import java.util.List;
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,100,* Adds warning levels by name.
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,102,"static void setWarningLevels(CompilerOptions options,"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,103,"List<String> diagnosticGroups, CheckLevel level) {"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,104,for (String name : diagnosticGroups) {
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,105,DiagnosticGroup group = DiagnosticGroups.forName(name);
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,106,"Preconditions.checkNotNull(group, ""No warning class for name: "" + name);"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,107,"options.setWarningLevel(group, level);"
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,23,mport com.google.common.primitives.IntStack;
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,31,import java.util.ArrayDeque;
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,32,import java.util.Deque;
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,201,/ TODO(user): Replace with ArrayDeque
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,202,rivate final IntStack assignAllowed;
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,201,private final Deque<Integer> assignAllowed;
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,209,ssignAllowed = new IntStack();
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,210,ssignAllowed.add(1);
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,208,assignAllowed = new ArrayDeque<Integer>();
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,209,assignAllowed.push(1);
False,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,351,ssignAllowed.add(0);
True,src/com/google/javascript/jscomp/ProcessDefines.java,src/com/google/javascript/jscomp/ProcessDefines.java,350,assignAllowed.push(0);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,132,scopeBuilder.resolveStubDeclarations();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,711,* Type-less stubs in the global scope.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,713,"* If at the end of traversal, we still don't have types for these"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,714,"* stubs, then we should declare UNKNOWN types."
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,716,private final List<StubDeclaration> stubDeclarations =
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,717,Lists.newArrayList();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1006,"/ If we see a stub property, make sure to register this property"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1007,/ in the type registry.
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1008,bjectType ownerType = getObjectSlot(ownerName);
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1009,SType unknownType = typeRegistry.getNativeType(UNKNOWN_TYPE);
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1010,f (ownerType == null) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1011,"efineSlot(n, parent, unknownType, false);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1012, else {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1013,oolean isExtern = t.getInput().isExtern();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1014,f (isExtern || ownerType.isFunctionPrototypeType()) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1015,"/ If this is a stub for a prototype, just declare it"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1016,/ as an unknown type. These are seen often in externs.
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1017,wnerType.defineDeclaredProperty(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1018,"ropName, unknownType, isExtern);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1019, else {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1020,"ypeRegistry.registerPropertyOnType(propName, ownerType);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1016,stubDeclarations.add(new StubDeclaration(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1017,"n, t.getInput().isExtern(), ownerName));"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1115,* Resolve any stub delcarations to unknown types if we could not
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1116,* find types for them during traversal.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1118,private void resolveStubDeclarations() {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1119,for (StubDeclaration stub : stubDeclarations) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1120,Node n = stub.node;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1121,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1122,String qName = n.getQualifiedName();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1123,String propName = n.getLastChild().getString();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1124,String ownerName = stub.ownerName;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1125,boolean isExtern = stub.isExtern;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1127,"if (scope.isDeclared(qName, false)) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1128,continue;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1131,"// If we see a stub property, make sure to register this property"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1132,// in the type registry.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1133,ObjectType ownerType = getObjectSlot(ownerName);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1134,ObjectType unknownType = typeRegistry.getNativeObjectType(UNKNOWN_TYPE);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1135,"defineSlot(n, parent, unknownType, true);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1137,if (ownerType != null &&
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1138,(isExtern || ownerType.isFunctionPrototypeType())) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1139,"// If this is a stub for a prototype, just declare it"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1140,// as an unknown type. These are seen often in externs.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1141,ownerType.defineInferredProperty(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1142,"propName, unknownType, isExtern);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1143,} else {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1144,typeRegistry.registerPropertyOnType(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1145,"propName, ownerType == null ? unknownType : ownerType);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1151,* A stub declaration without any type information.
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1153,private final class StubDeclaration {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1154,private final Node node;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1155,private final boolean isExtern;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1156,private final String ownerName;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1158,"private StubDeclaration(Node node, boolean isExtern, String ownerName) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1159,this.node = node;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1160,this.isExtern = isExtern;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1161,this.ownerName = ownerName;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,573,boolean isBracketedParam = JsDocToken.LB == token;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,574,if (isBracketedParam) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,575,token = next();
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,584,if (isBracketedParam) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,585,token = next();
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,586,if (JsDocToken.RB != token) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,587,"reportTypeSyntaxWarning(""msg.jsdoc.missing.rb"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,620,public void testExponents() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,621,"assertPrint(""1"", ""1"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,622,"assertPrint(""10"", ""10"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,623,"assertPrint(""100"", ""100"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,624,"assertPrint(""1000"", ""1E3"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,625,"assertPrint(""10000"", ""1E4"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,626,"assertPrint(""100000"", ""1E5"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,627,"assertPrint(""-1"", ""-1"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,628,"assertPrint(""-10"", ""-10"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,629,"assertPrint(""-100"", ""-100"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,630,"assertPrint(""-1000"", ""-1E3"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,631,"assertPrint(""-123412340000"", ""-12341234E4"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,632,"assertPrint(""1000000000000000000"", ""1E18"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,633,"assertPrint(""100000.0"", ""1E5"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,634,"assertPrint(""100000.1"", ""100000.1"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,636,"assertPrint(""0.000001"", ""1.0E-6"");"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,20,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,73,public void testCheckSymbolsOverrideForVerbose() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,74,CompilerRunner.FLAG_warning_level.setForTest(WarningLevel.VERBOSE);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,75,AbstractCompilerRunner.FLAG_jscomp_off.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,76,"Lists.newArrayList(""undefinedVars""));"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,77,"testSame(""x = 3;"");"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,80,public void testCheckUndefinedProperties() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,81,CompilerRunner.FLAG_warning_level.setForTest(WarningLevel.VERBOSE);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,82,AbstractCompilerRunner.FLAG_jscomp_error.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,83,"Lists.newArrayList(""missingProperties""));"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,84,"test(""var x = {}; var y = x.bar;"", TypeCheck.INEXISTENT_PROPERTY);"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,420,"ssertTrue(externProto.isPropertyTypeDeclared(""foo""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,420,"assertTrue(externProto.isPropertyTypeInferred(""foo""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,579,public void testDuplicateExternProperty1() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,580,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,581,"""/** @constructor */ function Foo() {}"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,582,"""Foo.prototype.bar;"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,583,"""/** @type {number} */ Foo.prototype.bar; var x = (new Foo).bar;"","
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,584,null);
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,585,"assertEquals(""number"", findNameType(""x"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,588,public void testDuplicateExternProperty2() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,589,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,590,"""/** @constructor */ function Foo() {}"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,591,"""/** @type {number} */ Foo.prototype.bar;"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,592,"""Foo.prototype.bar; var x = (new Foo).bar;"", null);"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,593,"assertEquals(""number"", findNameType(""x"", globalScope).toString());"
