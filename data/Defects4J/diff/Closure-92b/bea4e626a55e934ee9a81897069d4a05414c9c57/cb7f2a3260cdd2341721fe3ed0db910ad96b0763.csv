is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,256,ode callName = callNode.getFirstChild();
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,257,"f (!""goog.addSingletonGetter"".equals(callName.getQualifiedName()) ||"
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,258,allName.getChildCount() != 2) {
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,259,eturn null;
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,256,Node callArg = callNode.getFirstChild();
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,257,String callName = callArg.getQualifiedName();
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,262,ode classNode = callName.getNext();
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,263,f (!classNode.isQualifiedName()) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,259,// Use both the original name and the post-CollapseProperties name.
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,260,"if (!(""goog.addSingletonGetter"".equals(callName) ||"
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,261,"""goog$addSingletonGetter"".equals(callName)) ||"
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,262,callNode.getChildCount() != 2) {
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,267,eturn callName.getNext().getQualifiedName();
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,266,return callArg.getNext().getQualifiedName();
False,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,98,ptions.inlineAnonymousFunctionExpressions = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,98,options.inlineAnonymousFunctionExpressions = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,99,options.decomposeExpressions = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,158,options.decomposeExpressions = true;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,20,mport com.google.common.collect.ArrayListMultimap;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,21,mport com.google.common.collect.HashMultimap;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,22,mport com.google.common.collect.HashMultiset;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,20,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,24,mport com.google.common.collect.Maps;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,25,mport com.google.common.collect.Multimap;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,26,mport com.google.common.collect.Multimaps;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,27,mport com.google.common.collect.Multiset;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,23,import com.google.javascript.jscomp.deps.DependencyInfo;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,24,import com.google.javascript.jscomp.deps.SortedDependencies;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,32,mport java.util.Comparator;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,28,import java.util.Collections;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,35,mport java.util.Map;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,36,mport java.util.PriorityQueue;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,46,ublic class JSModule {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,40,public class JSModule implements DependencyInfo {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,64,@Override
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,65,public List<String> getProvides() {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,66,return ImmutableList.<String>of(name);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,69,@Override
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,70,public List<String> getRequires() {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,71,ImmutableList.Builder<String> builder = ImmutableList.builder();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,72,for (JSModule m : deps) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,73,builder.add(m.getName());
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,75,return builder.build();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,78,@Override
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,79,public String getPathRelativeToClosureBase() {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,80,throw new UnsupportedOperationException();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,203,"inal Map<String, CompilerInput> provides = Maps.newHashMap();"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,204,/ Collect all symbols provided in these files.
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,216,"// Set the compiler, so that we can parse requires/provides and report"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,217,// errors properly.
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,207,or (String provide : input.getProvides()) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,208,"rovides.put(provide, input);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,212,/ Get the direct dependencies.
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,213,"inal Multimap<CompilerInput, CompilerInput> deps ="
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,214,ashMultimap.create();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,215,or (CompilerInput input : inputs) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,216,or (String req : input.getRequires()) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,217,ompilerInput dep = provides.get(req);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,218,f (dep != null) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,219,"eps.put(input, dep);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,225,ist<CompilerInput> sortedList = topologicalStableSort(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,226,"nputs, deps);"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,223,List<CompilerInput> sortedList =
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,224,(new SortedDependencies<CompilerInput>(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,225,Collections.<CompilerInput>unmodifiableList(inputs)))
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,226,.getSortedList();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,240,"inal Multimap<JSModule, JSModule> deps = HashMultimap.create();"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,241,or (JSModule module : modules) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,242,or (JSModule dep : module.getDependencies()) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,243,"eps.put(module, dep);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,248,ist<JSModule> sortedList = topologicalStableSort(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,249,"ists.newArrayList(modules), deps);"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,241,List<JSModule> sortedList = (new SortedDependencies<JSModule>(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,242,Lists.newArrayList(modules))).getSortedList();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,253,rivate static <T> List<T> topologicalStableSort(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,254,"ist<T> items, Multimap<T, T> deps) {"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,255,"inal Map<T, Integer> originalIndex = Maps.newHashMap();"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,256,or (int i = 0; i < items.size(); i++) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,257,"riginalIndex.put(items.get(i), i);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,260,"riorityQueue<T> inDegreeZero = new PriorityQueue<T>(items.size(),"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,261,ew Comparator<T>() {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,262,Override
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,263,"ublic int compare(T a, T b) {"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,264,eturn originalIndex.get(a).intValue() -
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,265,riginalIndex.get(b).intValue();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,268,ist<T> result = Lists.newArrayList();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,270,ultiset<T> inDegree = HashMultiset.create();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,271,"ultimap<T, T> reverseDeps = ArrayListMultimap.create();"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,272,"ultimaps.invertFrom(deps, reverseDeps);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,274,"/ First, add all the inputs with in-degree 0."
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,275,or (T item : items) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,276,ollection<T> itemDeps = deps.get(item);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,277,"nDegree.add(item, itemDeps.size());"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,278,f (itemDeps.isEmpty()) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,279,nDegreeZero.add(item);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,283,"/ Then, iterate to a fixed point over the reverse dependency graph."
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,284,hile (!inDegreeZero.isEmpty()) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,285, item = inDegreeZero.remove();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,286,esult.add(item);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,287,or (T inWaiting : reverseDeps.get(item)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,288,"nDegree.remove(inWaiting, 1);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,289,f (inDegree.count(inWaiting) == 0) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,290,nDegreeZero.add(inWaiting);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,295,eturn result;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,791,ecordReference(
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,792,"ameInfo.name, nameInfo.superclass, RefType.INHERITANCE);"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,791,if (nameInfo.superclass != null) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,792,recordReference(
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,793,"nameInfo.name, nameInfo.superclass, RefType.INHERITANCE);"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1256,ubclassRelationship classes =
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1257,ompiler.getCodingConvention().getClassesDefinedByCall(parent);
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1258,CodingConvention convention = compiler.getCodingConvention();
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1259,SubclassRelationship classes = convention.getClassesDefinedByCall(parent);
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1268,String singletonGetterClass =
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1269,convention.getSingletonGetterClassName(parent);
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1270,if (singletonGetterClass != null) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1271,NameInformation nameInfo = new NameInformation();
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1272,nameInfo.name = singletonGetterClass;
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1273,nameInfo.onlyAffectsClassDef = true;
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1274,return nameInfo;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,17,package com.google.javascript.jscomp.deps;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,19,import com.google.common.collect.ArrayListMultimap;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,20,import com.google.common.collect.HashMultimap;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,21,import com.google.common.collect.HashMultiset;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,22,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,23,import com.google.common.collect.Maps;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,24,import com.google.common.collect.Multimap;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,25,import com.google.common.collect.Multimaps;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,26,import com.google.common.collect.Multiset;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,28,import java.util.Collection;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,29,import java.util.Collections;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,30,import java.util.Comparator;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,31,import java.util.List;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,32,import java.util.Map;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,33,import java.util.PriorityQueue;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,36,* A sorted list of inputs with dependency information. Uses a stable
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,37,* topological sort to make sure that an input always comes after its
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,38,* dependencies.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,40,"* Also exposes other information about the inputs, like which inputs"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,41,* do not provide symbols.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,43,* @author nicksantos@google.com (Nick Santos)
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,45,public class SortedDependencies<INPUT extends DependencyInfo> {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,47,// A topologically sorted list of the inputs.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,48,private final List<INPUT> sortedList;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,50,// A list of all the inputs that do not have provides.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,51,private final List<INPUT> noProvides;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,53,public SortedDependencies(List<INPUT> inputs) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,54,"final Map<String, INPUT> provides = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,55,noProvides = Lists.newArrayList();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,57,// Collect all symbols provided in these files.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,58,for (INPUT input : inputs) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,59,Collection<String> currentProvides = input.getProvides();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,60,if (currentProvides.isEmpty()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,61,noProvides.add(input);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,64,for (String provide : currentProvides) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,65,"provides.put(provide, input);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,69,// Get the direct dependencies.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,70,"final Multimap<INPUT, INPUT> deps = HashMultimap.create();"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,71,for (INPUT input : inputs) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,72,for (String req : input.getRequires()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,73,INPUT dep = provides.get(req);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,74,if (dep != null) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,75,"deps.put(input, dep);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,80,// Sort the inputs by sucking in 0-in-degree nodes until we're done.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,81,"sortedList = topologicalStableSort(inputs, deps);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,84,public List<INPUT> getSortedList() {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,85,return Collections.<INPUT>unmodifiableList(sortedList);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,88,public List<INPUT> getInputsWithoutProvides() {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,89,return Collections.<INPUT>unmodifiableList(noProvides);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,92,private static <T> List<T> topologicalStableSort(
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,93,"List<T> items, Multimap<T, T> deps) {"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,94,"final Map<T, Integer> originalIndex = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,95,for (int i = 0; i < items.size(); i++) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,96,"originalIndex.put(items.get(i), i);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,99,"PriorityQueue<T> inDegreeZero = new PriorityQueue<T>(items.size(),"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,100,new Comparator<T>() {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,101,@Override
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,102,"public int compare(T a, T b) {"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,103,return originalIndex.get(a).intValue() -
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,104,originalIndex.get(b).intValue();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,107,List<T> result = Lists.newArrayList();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,109,Multiset<T> inDegree = HashMultiset.create();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,110,"Multimap<T, T> reverseDeps = ArrayListMultimap.create();"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,111,"Multimaps.invertFrom(deps, reverseDeps);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,113,"// First, add all the inputs with in-degree 0."
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,114,for (T item : items) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,115,Collection<T> itemDeps = deps.get(item);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,116,"inDegree.add(item, itemDeps.size());"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,117,if (itemDeps.isEmpty()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,118,inDegreeZero.add(item);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,122,"// Then, iterate to a fixed point over the reverse dependency graph."
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,123,while (!inDegreeZero.isEmpty()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,124,T item = inDegreeZero.remove();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,125,result.add(item);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,126,for (T inWaiting : reverseDeps.get(item)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,127,"inDegree.remove(inWaiting, 1);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,128,if (inDegree.count(inWaiting) == 0) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,129,inDegreeZero.add(inWaiting);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,134,return result;
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1348,public void testSingletonGetter1() {
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1349,"test(""function Foo() {} goog.addSingletonGetter(Foo);"", """");"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1352,public void testSingletonGetter2() {
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1353,"test(""function Foo() {} goog$addSingletonGetter(Foo);"", """");"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1356,public void testSingletonGetter3() {
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1357,// addSingletonGetter adds a getInstance method to a class.
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1358,"testSame(""function Foo() {} goog$addSingletonGetter(Foo);"" +"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1359,"""this.x = Foo.getInstance();"");"
