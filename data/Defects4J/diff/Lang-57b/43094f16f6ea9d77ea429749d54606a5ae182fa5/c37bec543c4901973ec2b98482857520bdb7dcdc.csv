is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1461,char[] buf = buffer;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1462,har swap = buffer[leftIdx];
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1463,uffer[leftIdx] = buffer[rightIdx];
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1464,uffer[rightIdx] = swap;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1463,char swap = buf[leftIdx];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1464,buf[leftIdx] = buf[rightIdx];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1465,buf[rightIdx] = swap;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1467,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1472,* Reverses the string builder placing each character in the opposite index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1474,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1476,public StrBuilder trim() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1477,if (size == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1478,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1480,int len = size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1481,char[] buf = buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1482,int pos = 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1483,while (pos < len && buf[pos] <= ' ') {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1484,pos++;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1486,while (pos < len && buf[len - 1] <= ' ') {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1487,len--;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1489,if (len < size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1490,"delete(len, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1492,if (pos > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1493,"delete(0, pos);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,122,"assertSame(sb, sb.trim());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1043,b.append(true);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1045,sb.clear().append(true);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1051,public void testTrim() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1052,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1053,"assertEquals("""", sb.reverse().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1055,"sb.clear().append("" \u0000 "");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1056,"assertEquals("""", sb.trim().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1058,"sb.clear().append("" \u0000 a b c"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1059,"assertEquals(""a b c"", sb.trim().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1061,"sb.clear().append(""a b c \u0000 "");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1062,"assertEquals(""a b c"", sb.trim().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1064,"sb.clear().append("" \u0000 a b c \u0000 "");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1065,"assertEquals(""a b c"", sb.trim().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1067,"sb.clear().append(""a b c"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1068,"assertEquals(""a b c"", sb.trim().toString());"
