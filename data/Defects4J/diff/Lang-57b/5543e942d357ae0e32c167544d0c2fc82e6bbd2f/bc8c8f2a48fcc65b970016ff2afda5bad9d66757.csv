is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,5,* reserved.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,9,* are met:
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,17,*    distribution.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,56,import java.util.ArrayList;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,57,import java.util.EventObject;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,58,import java.util.Iterator;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,60,import java.lang.reflect.Method;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,61,import java.lang.reflect.InvocationTargetException;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,64,* A utility which takes much of the pain out of the Event/Listener
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,65,"* system. It handles the collection, and the loop-notification."
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,66,* Reflection is used for the actual notification call.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,68,* Alternate strategies are usable. For example this class currently
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,69,"* does not enforce a particular interface, which means it cannot"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,70,* cache that method. Doing this probably makes a lot of sense.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,72,public class Notifier {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,74,private ArrayList listeners = new ArrayList();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,75,private Method listenerMethod;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,76,private String methodName;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,77,private Class clss;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,79,public Notifier() {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,82,public Notifier(Class listener) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,83,this.clss = clss;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,84,"// now we check methods, if only one of them, then"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,85,// let's set it
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,86,Method[] meths = clss.getDeclaredMethods();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,87,if(meths.length == 0) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,88,this.listenerMethod = meths[0];
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,93,* Set the name of the method to call upon the listeners.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,95,public void setListenerMethod(String name) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,96,this.methodName = name;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,97,if(this.clss != null) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,98,try {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,99,// then we get the Method object
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,100,"this.listenerMethod = this.clss.getDeclaredMethod(name, new Class[] { EventObject.class} );"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,101,} catch(NoSuchMethodException nsme) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,102,//                nsme.printStackTrace();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,103,"throw new IllegalArgumentException(""Method not on Class. "");"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,108,public void addListener(Object not) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,109,this.listeners.add(not);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,112,public void removeListener(Object not) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,113,this.listeners.remove(not);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,116,public ArrayList getListeners() {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,117,ArrayList cloned = new ArrayList();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,118,cloned.addAll(listeners);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,119,return cloned;
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,123,* Convenience method for when a listener has a single method.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,124,"* Currently this method needs to be called, but it's possible"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,125,"* that by providing the interface class, it can be assumed as"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,126,* to what the listening method is.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,128,public void notify(EventObject event) throws NotifierException {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,129,if(this.clss == null) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,130,"notify(this.methodName, event);"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,131,} else {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,132,"notify(this.listenerMethod, event);"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,137,"* Notify the listeners of a certain event, to a certain method."
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,138,* This is usable when a Listener has more than one method and
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,139,* a single Notifier wants to be shared.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,141,"public void notify(Method listenerMethod, EventObject event) throws NotifierException {"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,142,Iterator itr = getListeners().iterator();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,143,while(itr.hasNext()) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,144,try {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,145,Object listener = itr.next();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,146,"listenerMethod.invoke( listener, new Object[] { event } );"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,147,} catch(SecurityException se) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,148,throw new NotifierException(se);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,149,} catch(IllegalAccessException iae) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,150,throw new NotifierException(iae);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,151,} catch(IllegalArgumentException iae) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,152,throw new NotifierException(iae);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,153,} catch(InvocationTargetException ite) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,154,throw new NotifierException(ite);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,160,"* Notify the listeners of a certain event, to a certain method."
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,161,* This is usable when a Listener has more than one method and
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,162,* a single Notifier wants to be shared.
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,164,"public void notify(String methodName, EventObject event) throws NotifierException {"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,165,Iterator itr = getListeners().iterator();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,166,while(itr.hasNext()) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,167,try {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,168,Object listener = itr.next();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,169,Class clss = listener.getClass();
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,170,"Method method = clss.getMethod(methodName, new Class[] { event.getClass() } );"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,171,"method.invoke( listener, new Object[] { event } );"
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,172,} catch(SecurityException se) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,173,throw new NotifierException(se);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,174,} catch(NoSuchMethodException nsme) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,175,throw new NotifierException(nsme);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,176,} catch(IllegalAccessException iae) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,177,throw new NotifierException(iae);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,178,} catch(IllegalArgumentException iae) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,179,throw new NotifierException(iae);
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,180,} catch(InvocationTargetException ite) {
True,src/java/org/apache/commons/lang/Notifier.java,src/java/org/apache/commons/lang/Notifier.java,181,throw new NotifierException(ite);
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,5,* reserved.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,9,* are met:
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,17,*    distribution.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,56,import org.apache.commons.lang.exception.NestableException;
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,59,* Exception thrown when something goes wrong in notifying.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,61,"* @author <a href=""mailto:bayard@apache.org"">Henri Yandell</a>"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,62,"* @version $Id: NotifierException.java,v 1.1 2002/11/12 03:01:05 bayard Exp $"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,64,public class NotifierException extends NestableException {
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,67,* Constructs a new <code>NotifierException</code> without specified
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,68,* detail message.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,70,public NotifierException() {
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,71,super();
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,75,* Constructs a new <code>NotifierException</code> with specified
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,76,* detail message.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,78,* @param msg  the error message.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,80,public NotifierException(String msg) {
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,81,super(msg);
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,85,* Constructs a new <code>NotifierException</code> with specified
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,86,* nested <code>Throwable</code> root cause.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,88,* @param rootCause  the exception or error that caused this exception
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,89,*                   to be thrown.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,91,public NotifierException(Throwable rootCause) {
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,92,super(rootCause);
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,96,* Constructs a new <code>NotifierException</code> with specified
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,97,* detail message and nested <code>Throwable</code> root cause.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,99,* @param msg        the error message.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,100,* @param rootCause  the exception or error that caused this exception
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,101,*                   to be thrown.
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,103,"public NotifierException(String msg, Throwable rootCause) {"
True,src/java/org/apache/commons/lang/NotifierException.java,src/java/org/apache/commons/lang/NotifierException.java,104,"super(msg, rootCause);"
