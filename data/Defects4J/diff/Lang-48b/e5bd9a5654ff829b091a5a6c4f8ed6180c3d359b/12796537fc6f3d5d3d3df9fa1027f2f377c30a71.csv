is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,16,package org.apache.commons.lang.text;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,18,import java.util.Collection;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,19,import java.util.Iterator;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,22,* Builds a string from consituant parts providing a more flexible and powerful API
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,23,* than StringBuffer.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,24,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,25,* The main differences from StringBuffer/StringBuilder are:
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,26,* <ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,27,* <li>Not synchronized</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,28,* <li>Not final</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,29,* <li>Subclasses have direct access to character array</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,30,* <li>Additional methods
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,31,*  <ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,32,"*   <li>appendWithSeparators - adds an array of values, with a separator</li>"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,33,*   <li>appendPadding - adds a length padding characters</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,34,*   <li>appendFixedLength - adds a fixed width field to the builder</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,35,*   <li>toCharArray/getChars - simpler ways to get a range of the character array</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,36,*   <li>delete - delete char or string</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,37,*   <li>replace - search and replace for a char or string</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,38,*   <li>leftString/rightString/midString - substring without exceptions</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,39,*   <li>contains - whether the builder contains a char or string</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,40,*   <li>size/clear/isEmpty - collections style API methods</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,41,*  </ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,42,* </li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,43,* </ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,44,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,45,* The aim has been to provide an API that mimics very closely what StringBuffer
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,46,"* provides, but with additional methods. It should be noted that some edge cases,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,47,"* with invalid indices or null input, have been altered - see individual methods."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,48,"* The biggest of these changes is that by default, null will not output the text"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,49,"* 'null'. This can be controlled by a property, {@link #setNullText(String)}."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,51,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,52,* @since 2.1
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,53,"* @version $Id: StrBuilder.java,v 1.1 2004/10/16 15:09:52 scolebourne Exp $"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,55,public class StrBuilder implements Cloneable {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,57,/** Serialization lock. */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,58,private static final long serialVersionUID = 7628716375283629643L;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,60,/** Internal data storage. */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,61,protected char[] buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,62,/** Current size of the buffer. */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,63,protected int size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,64,/** The null text. */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,65,private String nullText;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,69,* Constructor that creates an empty builder initial capacity 32 characters.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,71,public StrBuilder() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,72,this(32);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,76,* Constructor that creates an empty builder the specified initial capacity.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,78,"* @param initialCapacity  the initial capacity, zero or less will be converted to 32"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,80,public StrBuilder(int initialCapacity) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,81,super();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,82,if (initialCapacity <= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,83,initialCapacity = 32;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,85,buf = new char[initialCapacity];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,89,"* Constructor that creates a builder from the string, allocating"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,90,* 32 extra characters for growth.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,92,"* @param str  the string to copy, null treated as blank string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,94,public StrBuilder(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,95,super();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,96,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,97,buf = new char[32];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,98,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,99,buf = new char[str.length() + 32];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,100,append(str);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,106,* Gets the text to be appended when null is added.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,108,"* @return the null text, null means no append"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,110,public String getNullText() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,111,return nullText;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,115,* Sets the text to be appended when null is added.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,117,"* @param str  the null text, null means no append"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,119,public void setNullText(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,120,if (str != null && str.length() == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,121,str = null;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,123,nullText = str;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,128,* Gets the length of the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,130,* @return the length
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,132,public int length() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,133,return size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,137,* Updates the length of the builder by either dropping the last characters
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,138,* or adding filler of unicode zero.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,140,"* @param length  the length to set to, must be zero or positive"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,141,* @throws IndexOutOfBoundsException if the length is negative
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,143,public void setLength(int length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,144,if (length < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,145,throw new StringIndexOutOfBoundsException(length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,147,if (length == size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,148,// ok
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,149,} else if (length < size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,150,size = length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,151,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,152,ensureCapacity(length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,153,int oldEnd = size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,154,int newEnd = length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,155,size = length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,156,for (int i = oldEnd; i < newEnd; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,157,buf[i] = '\0';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,164,* Gets the current size of the internal character array buffer.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,166,* @return the capacity
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,168,public int capacity() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,169,return buf.length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,173,* Checks the capacity and ensures that it is at least the size specified.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,175,* @param capacity  the capacity to ensure
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,177,public void ensureCapacity(int capacity) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,178,if (capacity > buf.length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,179,char[] old = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,180,buf = new char[capacity];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,181,"System.arraycopy(old, 0, buf, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,186,* Minimizes the capacity to the actual length of the string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,188,public void minimizeCapacity() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,189,if (buf.length > length()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,190,char[] old = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,191,buf = new char[length()];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,192,"System.arraycopy(old, 0, buf, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,198,* Gets the length of the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,199,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,200,* This method is the same as {@link #length()} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,201,* API of Collections.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,203,* @return the length
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,205,public int size() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,206,return size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,210,* Clears the string builder (convenience Collections API style method).
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,211,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,212,* This method is the same as {@link #setLength(0)} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,213,* API of Collections.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,215,public void clear() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,216,size = 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,220,* Checks is the string builder is empty (convenience Collections API style method).
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,221,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,222,* This method is the same as checking {@link #length()} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,223,* API of Collections.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,225,public boolean isEmpty() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,226,return (size == 0);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,231,* Gets the character at the specified index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,233,"* @param index  the index to retrieve, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,234,* @return the character at the index
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,235,* @throws IndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,237,public char charAt(int index) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,238,if (index < 0 || index >= length()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,239,throw new StringIndexOutOfBoundsException(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,241,return buf[index];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,245,* Sets the character at the specified index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,247,* @param index  the index to set
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,248,* @param ch  the new character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,249,* @throws IndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,251,"public void setCharAt(int index, char ch) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,252,if (index < 0 || index >= length()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,253,throw new StringIndexOutOfBoundsException(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,255,buf[index] = ch;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,260,* Copies the builder's character array into a new character array.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,262,* @return a new array that represents the contents of the builder
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,264,public char[] toCharArray() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,265,char chars[] = new char[size];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,266,"System.arraycopy(buf, 0, chars, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,267,return chars;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,271,* Copies part of the builder's character array into a new character array.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,273,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,274,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,275,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,276,* @return a new array that holds part of the contents of the builder
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,278,"public char[] toCharArray(int startIndex, int endIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,279,"endIndex = validateRange(startIndex, endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,280,char chars[] = new char[size];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,281,"System.arraycopy(buf, startIndex, chars, 0, endIndex - startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,282,return chars;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,286,* Copies the character array into the specified array.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,288,"* @param destination  the destination array, null will cause an array to be created"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,289,"* @return the input array, unless that was null or too small"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,291,public char[] getChars(char[] destination) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,292,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,293,if (destination == null || destination.length < len) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,294,destination = new char[len];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,296,"System.arraycopy(buf, 0, destination, 0, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,297,return destination;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,301,* Copies the character array into the specified array.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,303,"* @param startIndex  first index to copy, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,304,"* @param endIndex  last index, exclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,305,"* @param destination  the destination array, must not be null or too small"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,306,* @param destinationIndex  the index to start copying in destination
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,307,* @throws NullPointerException if the array is null
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,308,* @throws IndexOutOfBoundsException if any index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,310,"public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,311,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,312,throw new StringIndexOutOfBoundsException(startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,314,if (endIndex < 0 || endIndex > length()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,315,throw new StringIndexOutOfBoundsException(endIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,317,if (startIndex > endIndex) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,318,"throw new StringIndexOutOfBoundsException(""end < start"");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,320,"System.arraycopy(buf, startIndex, destination, destinationIndex, endIndex - startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,325,* Appends the text representing <code>null</code> to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,327,* @param obj  the object to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,328,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,330,public StrBuilder appendNull() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,331,if (nullText == null)  {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,332,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,334,return append(nullText);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,338,* Appends an object to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,339,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,341,* @param obj  the object to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,342,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,344,public StrBuilder append(Object obj) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,345,if (obj == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,346,return appendNull();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,347,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,348,return append(obj.toString());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,353,* Appends a string to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,354,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,356,* @param str  the string to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,357,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,359,public StrBuilder append(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,360,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,361,return appendNull();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,363,int strLen = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,364,if (strLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,365,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,366,ensureCapacity(len + strLen);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,367,"str.getChars(0, strLen, buf, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,368,size += strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,370,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,374,* Appends a string buffer to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,375,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,377,* @param str  the string buffer to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,378,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,380,public StrBuilder append(StringBuffer str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,381,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,382,return appendNull();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,384,int strLen = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,385,if (strLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,386,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,387,ensureCapacity(len + strLen);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,388,"str.getChars(0, strLen, buf, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,389,size += strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,391,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,395,* Appends another string builder to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,396,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,398,* @param str  the string builder to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,399,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,401,public StrBuilder append(StrBuilder str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,402,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,403,return appendNull();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,405,int strLen = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,406,if (strLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,407,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,408,ensureCapacity(len + strLen);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,409,"System.arraycopy(str.buf, 0, buf, len, strLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,410,size += strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,412,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,416,* Appends a char array to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,417,* Appending null has no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,418,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,419,"* Note: This method treats a null char array as an empty char array,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,420,* unlike StringBuffer or String.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,422,* @param chars  the char array to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,423,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,425,public StrBuilder append(char[] chars) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,426,if (chars == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,427,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,429,int strLen = chars.length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,430,if (strLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,431,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,432,ensureCapacity(len + strLen);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,433,"System.arraycopy(chars, 0, buf, len, strLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,434,size += strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,436,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,440,* Appends a char array to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,441,* Appending null has no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,442,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,443,"* Note: This method treats a null char array as an empty char array,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,444,* unlike StringBuffer or String.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,446,* @param chars  the char array to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,447,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,448,"* @param length  the length to append, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,449,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,451,"public StrBuilder append(char[] chars, int startIndex, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,452,if (chars == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,453,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,455,if (length < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,456,"throw new StringIndexOutOfBoundsException(""length must not be negative"");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,458,if (length > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,459,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,460,ensureCapacity(len + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,461,"System.arraycopy(chars, startIndex, buf, len, length);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,462,size += length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,464,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,468,* Appends a boolean value to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,470,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,471,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,473,public StrBuilder append(boolean value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,474,if (value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,475,ensureCapacity(size + 4);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,476,buf[size++] = 't';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,477,buf[size++] = 'r';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,478,buf[size++] = 'u';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,479,buf[size++] = 'e';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,480,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,481,ensureCapacity(size + 5);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,482,buf[size++] = 'f';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,483,buf[size++] = 'a';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,484,buf[size++] = 'l';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,485,buf[size++] = 's';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,486,buf[size++] = 'e';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,488,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,492,* Appends a char value to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,494,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,495,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,497,public StrBuilder append(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,498,int len = length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,499,ensureCapacity(len + 1);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,500,buf[size++] = ch;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,501,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,505,* Appends an int value to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,507,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,508,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,510,public StrBuilder append(int value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,511,return append(String.valueOf(value));
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,515,* Appends a long value to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,517,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,518,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,520,public StrBuilder append(long value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,521,return append(String.valueOf(value));
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,525,* Appends a float value to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,527,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,528,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,530,public StrBuilder append(float value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,531,return append(String.valueOf(value));
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,535,* Appends a double value to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,537,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,538,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,540,public StrBuilder append(double value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,541,return append(String.valueOf(value));
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,546,"* Appends an array placing separators between each pair of values, but"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,547,* not after the last.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,548,* Appending a null array will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,549,* Each object is appended using {@link #append(Object)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,551,* @param array  the array to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,552,"* @param separator  the separator to use, null means no separator"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,553,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,555,"public StrBuilder appendWithSeparators(Object[] array, String separator) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,556,if (array != null && array.length > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,557,"separator = (separator == null ? """" : separator);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,558,append(array[0]);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,559,for (int i = 1; i < array.length; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,560,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,561,append(array[i]);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,564,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,568,"* Appends a collection placing separators between each pair of values, but"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,569,* not after the last.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,570,* Appending a null collection will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,571,* Each object is appended using {@link #append(Object)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,573,* @param coll  the collection to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,574,"* @param separator  the separator to use, null means no separator"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,575,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,577,"public StrBuilder appendWithSeparators(Collection coll, String separator) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,578,if (coll != null && coll.size() > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,579,"separator = (separator == null ? """" : separator);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,580,Iterator it = coll.iterator();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,581,append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,582,while (it.hasNext()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,583,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,584,append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,587,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,592,* Appends the pad character to the builder the specified number of times.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,594,"* @param length  the length to append, negative means no append"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,595,* @param padChar  the character to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,596,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,598,"public StrBuilder appendPadding(int length, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,599,if (length >= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,600,ensureCapacity(size + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,601,for (int i = 0; i < length; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,602,buf[size++] = padChar;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,605,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,609,* Appends an object to the builder padding on the left to a fixed length.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,610,"* If the object is larger than the length, the left hand side is lost."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,611,"* If the object is null, the null text value is used."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,613,* @param obj  the object to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,614,* @param length  the fixed field width
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,615,* @param padChar  the pad character to use
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,616,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,618,"public StrBuilder appendFixedLengthPadLeft(Object obj, int length, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,619,if (length > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,620,ensureCapacity(size + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,621,String str = (obj == null ? getNullText() : obj.toString());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,622,int strLen = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,623,if (strLen >= length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,624,"str.getChars(strLen - length, strLen, buf, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,625,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,626,int padLen = length - strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,627,for (int i = 0; i < padLen; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,628,buf[size + i] = padChar;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,630,"str.getChars(0, strLen, buf, size + padLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,632,size += length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,634,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,638,* Appends an object to the builder padding on the right to a fixed length.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,639,"* If the object is larger than the length, the right hand side is lost."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,640,"* If the object is null, null text value is used."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,642,* @param obj  the object to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,643,* @param length  the fixed field width
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,644,* @param padChar  the pad character to use
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,645,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,647,"public StrBuilder appendFixedLengthPadRight(Object obj, int length, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,648,if (length > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,649,ensureCapacity(size + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,650,String str = (obj == null ? getNullText() : obj.toString());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,651,int strLen = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,652,if (strLen >= length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,653,"str.getChars(strLen - length, strLen, buf, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,654,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,655,int padLen = length - strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,656,"str.getChars(0, strLen, buf, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,657,for (int i = 0; i < padLen; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,658,buf[size + strLen + i] = padChar;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,661,size += length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,663,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,668,* Inserts the string representation of an object into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,669,* Inserting null will use the stored null text value.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,671,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,672,* @param obj  the object to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,673,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,674,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,676,"public StrBuilder insert(int index, Object obj) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,677,if (obj == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,678,"return insert(index, nullText);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,679,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,680,"return insert(index, obj.toString());"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,685,* Inserts the string into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,686,* Inserting null will use the stored null text value.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,688,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,689,* @param str  the string to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,690,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,691,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,693,"public StrBuilder insert(int index, String str) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,694,validateIndex(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,695,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,696,str = nullText;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,698,int strLen = (str == null ? 0 : str.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,699,if (strLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,700,int newSize = size + strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,701,ensureCapacity(newSize);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,702,"System.arraycopy(buf, index, buf, index + strLen, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,703,size = newSize;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,704,"str.getChars(0, strLen, buf, index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,706,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,710,* Inserts the character array into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,711,* Inserting null has no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,712,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,713,"* Note: This method treats a null char array as an empty char array,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,714,* unlike StringBuffer or String.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,716,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,717,* @param chars  the char array to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,718,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,719,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,721,"public StrBuilder insert(int index, char chars[]) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,722,validateIndex(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,723,if (chars == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,724,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,726,int len = chars.length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,727,if (len > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,728,ensureCapacity(size + len);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,729,"System.arraycopy(buf, index, buf, index + len, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,730,"System.arraycopy(chars, 0, buf, index, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,731,size += len;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,733,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,737,* Inserts part of the character array into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,738,* Inserting null has no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,739,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,740,"* Note: This method treats a null char array as an empty char array,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,741,* unlike StringBuffer or String.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,743,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,744,* @param chars  the char array to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,745,"* @param offset  the offset into the character array to start at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,746,"* @param length  the length of the character array part to copy, must be positive"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,747,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,748,* @throws StringIndexOutOfBoundsException if any index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,750,"public StrBuilder insert(int index, char chars[], int offset, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,751,validateIndex(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,752,if (chars == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,753,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,755,if (offset < 0 || offset > chars.length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,756,"throw new StringIndexOutOfBoundsException(""Invalid offset: "" + offset);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,758,if (length < 0 || offset + length > chars.length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,759,"throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,761,if (length > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,762,ensureCapacity(size + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,763,"System.arraycopy(buf, index, buf, index + length, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,764,"System.arraycopy(chars, offset, buf, index, length);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,765,size += length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,767,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,771,* Inserts the value into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,773,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,774,* @param value  the value to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,775,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,776,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,778,"public StrBuilder insert(int index, boolean value) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,779,validateIndex(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,780,if (value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,781,ensureCapacity(size + 4);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,782,"System.arraycopy(buf, index, buf, index + 4, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,783,buf[index++] = 't';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,784,buf[index++] = 'r';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,785,buf[index++] = 'u';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,786,buf[index] = 'e';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,787,size += 4;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,788,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,789,ensureCapacity(size + 5);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,790,"System.arraycopy(buf, index, buf, index + 5, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,791,buf[index++] = 'f';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,792,buf[index++] = 'a';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,793,buf[index++] = 'l';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,794,buf[index++] = 's';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,795,buf[index] = 'e';
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,796,size += 5;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,798,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,802,* Inserts the value into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,804,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,805,* @param value  the value to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,806,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,807,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,809,"public StrBuilder insert(int index, char value) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,810,validateIndex(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,811,ensureCapacity(size + 1);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,812,"System.arraycopy(buf, index, buf, index + 1, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,813,buf[index] = value;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,814,size++;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,815,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,819,* Inserts the value into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,821,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,822,* @param value  the value to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,823,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,824,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,826,"public StrBuilder insert(int index, int value) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,827,"return insert(index, String.valueOf(value));"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,831,* Inserts the value into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,833,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,834,* @param value  the value to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,835,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,836,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,838,"public StrBuilder insert(int index, long value) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,839,"return insert(index, String.valueOf(value));"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,843,* Inserts the value into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,845,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,846,* @param value  the value to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,847,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,848,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,850,"public StrBuilder insert(int index, float value) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,851,"return insert(index, String.valueOf(value));"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,855,* Inserts the value into this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,857,"* @param index  the index to add at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,858,* @param value  the value to insert
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,859,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,860,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,862,"public StrBuilder insert(int index, double value) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,863,"return insert(index, String.valueOf(value));"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,868,* Deletes the characters between the two specified indices.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,870,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,871,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,872,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,873,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,874,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,876,"public StrBuilder delete(int startIndex, int endIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,877,"endIndex = validateRange(startIndex, endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,878,int len = endIndex - startIndex;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,879,if (len > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,880,"System.arraycopy(buf, endIndex, buf, startIndex, size - endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,881,size -= len;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,883,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,887,* Deletes the character at the specified index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,889,* @param index  the index to delete
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,890,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,891,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,893,public StrBuilder deleteCharAt(int index) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,894,if (index < 0 || index >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,895,throw new StringIndexOutOfBoundsException(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,897,"System.arraycopy(buf, index + 1, buf, index, size - index - 1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,898,size--;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,899,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,903,* Deletes the character wherever it occurs in the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,905,* @param ch  the character to delete
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,906,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,908,public StrBuilder delete(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,909,for (int i = 0; i < size; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,910,if (buf[i] == ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,911,int start = i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,912,while (++i < size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,913,if (buf[i] != ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,914,break;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,917,"System.arraycopy(buf, i, buf, start, size - i);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,918,size -= (i - start);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,921,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,925,* Deletes the string wherever it occurs in the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,927,"* @param str  the string to delete, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,928,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,930,public StrBuilder delete(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,931,int len = (str == null ? 0 : str.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,932,if (len > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,933,"int index = indexOf(str, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,934,while (index >= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,935,"delete(index, index + len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,936,"index = indexOf(str, index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,939,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,944,* Replaces a portion of the string builder with another string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,945,* The length of the inserted string does not have to match the removed length.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,947,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,948,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,949,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,950,* @param str  the string to replace with
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,951,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,952,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,954,"public StrBuilder replace(int startIndex, int endIndex, String str) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,955,"endIndex = validateRange(startIndex, endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,956,int insertLen = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,957,int removeLen = endIndex = startIndex;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,958,int newSize = size - removeLen + insertLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,959,if (insertLen > removeLen) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,960,ensureCapacity(newSize);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,962,if (insertLen != removeLen) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,963,"System.arraycopy(buf, endIndex, buf, startIndex + insertLen, size - endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,964,size = newSize;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,966,"str.getChars(0, insertLen, buf, startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,967,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,971,* Replaces a portion of the string builder with another string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,972,* The length of the inserted string does not have to match the removed length.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,974,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,975,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,976,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,977,* @param builder  the string builder to replace with
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,978,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,979,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,981,"public StrBuilder replace(int startIndex, int endIndex, StrBuilder builder) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,982,"endIndex = validateRange(startIndex, endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,983,int insertLen = builder.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,984,int removeLen = endIndex = startIndex;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,985,if (insertLen > removeLen) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,986,ensureCapacity(size - removeLen + insertLen);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,988,if (insertLen != removeLen) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,989,"System.arraycopy(buf, endIndex, buf, startIndex + insertLen, size - endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,991,"builder.getChars(0, insertLen, buf, startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,992,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,996,* Replaces the search character with the replace character throughout the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,998,"* @param search  the search string, null causes no action to occur"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,999,"* @param replace  the replace string, null is equivalent to an empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1000,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1002,"public StrBuilder replace(char search, char replace) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1003,if (search != replace) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1004,for (int i = 0; i < size; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1005,if (buf[i] == search) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1006,buf[i] = replace;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1010,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1014,* Replaces the search string with the replace string throughout the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1016,"* @param searchStr  the search string, null causes no action to occur"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1017,"* @param replaceStr  the replace string, null is equivalent to an empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1018,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1020,"public StrBuilder replace(String searchStr, String replaceStr) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1021,int searchLen = (searchStr == null ? 0 : searchStr.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1022,if (searchLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1023,"replaceStr = (replaceStr == null ? """" : replaceStr);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1024,"int index = indexOf(searchStr, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1025,while (index >= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1026,"replace(index, index + searchLen, replaceStr);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1027,"index = indexOf(searchStr, index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1030,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1035,* Checks whether this builder starts with the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1036,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1037,"* Note that this method handles null input quietly, unlike String."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1039,"* @param str  the string to search for, null returns false"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1040,* @return true if the builder starts with the string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1042,public boolean startsWith(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1043,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1044,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1046,int len = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1047,if (len == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1048,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1050,if (len > size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1051,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1053,for (int i = 0; i < len; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1054,if (buf[i] != str.charAt(i)) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1055,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1058,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1062,* Checks whether this builder ends with the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1063,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1064,"* Note that this method handles null input quietly, unlike String."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1066,"* @param str  the string to search for, null returns false"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1067,* @return true if the builder ends with the string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1069,public boolean endsWith(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1070,if (str == null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1071,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1073,int len = str.length();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1074,if (len == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1075,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1077,if (len > size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1078,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1080,int pos = size - len;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1081,"for (int i = 0; i < len; i++,pos++) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1082,if (buf[pos] != str.charAt(i)) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1083,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1086,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1091,* Extracts a portion of this string builder as a string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1093,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1094,* @return the new string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1095,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1097,public String substring(int start) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1098,"return substring(start, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1102,* Extracts a portion of this string builder as a string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1103,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1104,* Note: This method treats an endIndex greater than the length of the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1105,"* builder as equal to the length of the builder, and continues"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1106,"* without error, unlike StringBuffer or String."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1108,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1109,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1110,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1111,* @return the new string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1112,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1114,"public String substring(int startIndex, int endIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1115,"endIndex = validateRange(startIndex, endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1116,"return new String(buf, startIndex, endIndex - startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1120,* Extracts the leftmost characters from the string builder without
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1121,* throwing an exception.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1122,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1123,* This method extracts the left <code>length</code> characters from
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1124,"* the builder. If this many characters are not available, the whole"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1125,* builder is returned. Thus the returned string may be shorter than the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1126,* length requested.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1128,"* @param length  the number of characters to extract, negative returns empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1129,* @return the new string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1131,public String leftString(int length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1132,if (length <= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1133,"return """";"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1134,} else if (length >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1135,"return new String(buf, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1136,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1137,"return new String(buf, 0, length);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1142,* Extracts the rightmost characters from the string builder without
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1143,* throwing an exception.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1144,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1145,* This method extracts the right <code>length</code> characters from
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1146,"* the builder. If this many characters are not available, the whole"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1147,* builder is returned. Thus the returned string may be shorter than the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1148,* length requested.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1150,"* @param length  the number of characters to extract, negative returns empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1151,* @return the new string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1153,public String rightString(int length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1154,if (length <= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1155,"return """";"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1156,} else if (length >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1157,"return new String(buf, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1158,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1159,"return new String(buf, size - length, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1164,* Extracts some characters from the middle of the string builder without
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1165,* throwing an exception.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1166,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1167,* This method extracts <code>length</code> characters from the builder
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1168,* at the specified index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1169,* If the index is negative it is treated as zero.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1170,"* If the index is greater than the builder size, it is treated as the builder size."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1171,"* If the length is negative, the empty string is returned."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1172,"* If insufficient characters are available in the builder, as much as possible is returned."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1173,* Thus the returned string may be shorter than the length requested.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1175,"* @param index  the index to start at, negative means zero"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1176,"* @param length  the number of characters to extract, negative returns empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1177,* @return the new string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1179,"public String midString(int index, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1180,if (index < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1181,index = 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1183,if (length <= 0 || index >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1184,"return """";"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1186,if (size <= index + length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1187,"return new String(buf, index, size - index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1188,} else {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1189,"return new String(buf, index, length);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1195,* Checks of the string builder contains the specified char.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1197,* @param ch  the character to find
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1198,* @return true if the builder contains the character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1200,public boolean contains(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1201,char[] thisBuf = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1202,for (int i = 0; i < thisBuf.length; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1203,if (thisBuf[i] == ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1204,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1207,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1211,* Checks of the string builder contains the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1213,* @param str  the string to find
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1214,* @return true if the builder contains the string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1216,public boolean contains(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1217,"return (indexOf(str, 0) >= 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1222,* Searches the string builder to find the first reference to the specified char.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1224,* @param ch  the character to find
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1225,"* @return the first index of the character, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1227,public int indexOf(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1228,"return indexOf(ch, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1232,* Searches the string builder to find the first reference to the specified char.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1234,* @param ch  the character to find
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1235,"* @param startIndex  the index to start at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1236,"* @return the first index of the character, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1238,"public int indexOf(char ch, int startIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1239,startIndex = (startIndex < 0 ? 0 : startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1240,if (startIndex >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1241,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1243,char[] thisBuf = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1244,for (int i = startIndex; i < thisBuf.length; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1245,if (thisBuf[i] == ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1246,return i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1249,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1253,* Searches the string builder to find the first reference to the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1254,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1255,"* Note that a null input string will return -1, whereas the JDK throws an exception."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1257,"* @param str  the string to find, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1258,"* @return the first index of the string, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1260,public int indexOf(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1261,"return indexOf(str, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1265,* Searches the string builder to find the first reference to the specified
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1266,* string starting searching from the given index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1267,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1268,"* Note that a null input string will return -1, whereas the JDK throws an exception."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1270,"* @param str  the string to find, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1271,"* @param startIndex  the index to start at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1272,"* @return the first index of the string, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1274,"public int indexOf(String str, int startIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1275,startIndex = (startIndex < 0 ? 0 : startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1276,if (startIndex >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1277,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1279,int strLen = (str == null ? 0 : str.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1280,if (strLen > 0 && strLen <= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1281,if (strLen == 1) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1282,"return indexOf(str.charAt(0), startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1284,char[] thisBuf = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1285,outer:
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1286,for (int i = startIndex; i < thisBuf.length - strLen; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1287,for (int j = 0; j < strLen; j++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1288,if (str.charAt(j) != thisBuf[i + j]) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1289,continue outer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1292,return i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1295,} else if (strLen == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1296,return 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1298,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1303,* Searches the string builder to find the last reference to the specified char.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1305,* @param ch  the character to find
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1306,"* @return the last index of the character, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1308,public int lastIndexOf(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1309,"return lastIndexOf(ch, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1313,* Searches the string builder to find the last reference to the specified char.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1315,* @param ch  the character to find
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1316,"* @param startIndex  the index to start at, invalid index rounded to edge"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1317,"* @return the last index of the character, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1319,"public int lastIndexOf(char ch, int startIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1320,startIndex = (startIndex >= size ? size - 1 : startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1321,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1322,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1324,char[] thisBuf = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1325,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1326,if (thisBuf[i] == ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1327,return i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1330,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1334,* Searches the string builder to find the last reference to the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1335,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1336,"* Note that a null input string will return -1, whereas the JDK throws an exception."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1338,"* @param str  the string to find, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1339,"* @return the last index of the string, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1341,public int lastIndexOf(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1342,"return lastIndexOf(str, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1346,* Searches the string builder to find the last reference to the specified
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1347,* string starting searching from the given index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1348,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1349,"* Note that a null input string will return -1, whereas the JDK throws an exception."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1351,"* @param str  the string to find, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1352,"* @param startIndex  the index to start at, invalid index rounded to edge"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1353,"* @return the last index of the string, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1355,"public int lastIndexOf(String str, int startIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1356,startIndex = (startIndex >= size ? size - 1 : startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1357,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1358,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1360,int strLen = (str == null ? 0 : str.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1361,if (strLen > 0 && strLen <= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1362,if (strLen == 1) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1363,"return lastIndexOf(str.charAt(0), startIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1365,char[] thisBuf = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1366,outer:
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1367,for (int i = startIndex - strLen; i >= 0; i--) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1368,for (int j = 0; j < strLen; j++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1369,if (str.charAt(j) != thisBuf[i + j]) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1370,continue outer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1373,return i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1376,} else if (strLen == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1377,return startIndex;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1379,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1383,* Reverses the string builder placing each character in the opposite index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1385,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1387,public StrBuilder reverse() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1388,int half = size / 2;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1389,char swap;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1390,for (int i = 0; i < half; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1391,swap = buf[i];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1392,buf[i] = buf[size - i];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1393,buf[size - i] = swap;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1395,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1399,"* Gets a String version of the string builder, creating a new instance"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1400,* each time the method is called.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1401,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1402,"* Note that unlike StringBuffer, the string version returned is"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1403,* independent of the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1405,* @return the builder as a String
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1407,public String toString() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1408,"return new String(buf, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1413,* Validates parameters defining a range of the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1415,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1416,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1417,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1418,* @return the new string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1419,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1421,"protected int validateRange(int startIndex, int endIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1422,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1423,throw new StringIndexOutOfBoundsException(startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1425,if (endIndex > size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1426,endIndex = size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1428,if (startIndex > endIndex) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1429,"throw new StringIndexOutOfBoundsException(""end < start"");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1431,return endIndex;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1435,* Validates parameters defining a single index in the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1437,"* @param index  the index, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1438,* @throws StringIndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1440,protected void validateIndex(int index) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1441,if (index < 0 || index > size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1442,throw new StringIndexOutOfBoundsException(index);
