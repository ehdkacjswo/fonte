is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,57,mport java.lang.reflect.InvocationTargetException;
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,58,import java.util.HashSet;
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,59,import java.util.Set;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,118," @version $Id: ToStringBuilder.java,v 1.16 2003/03/23 17:54:16 scolebourne Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,119,"* @version $Id: ToStringBuilder.java,v 1.17 2003/03/27 08:54:31 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,124,* A registry of objects used by <code>reflectionToString</code> methods to detect cyclical object references
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,125,* and avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,127,private static ThreadLocal reflectionRegistry = new ThreadLocal() {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,128,protected synchronized Object initialValue() {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,129,"// The HashSet implementation is not synchronized, which is just what we need here."
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,130,return new HashSet();
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,152,* Returns the registry of objects being traversed by the
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,153,* <code>reflectionToString</code> methods in the current thread.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,154,* @return Set the registry of objects being traversed
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,156,static Set getReflectionRegistry() {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,157,return (Set) reflectionRegistry.get();
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,161,* Returns <code>true</code> if the registry contains the given object.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,162,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,163,* @return boolean <code>true</code> if the registry contains the given object.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,165,static boolean isRegistered(Object value) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,166,return getReflectionRegistry().contains(value);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,170,* Registers the given object.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,171,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,173,static void register(Object value) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,174,getReflectionRegistry().add(value);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,178,* Unregisters the given object.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,179,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,181,static void unregister(Object value) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,182,getReflectionRegistry().remove(value);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,354,f (style == null) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,355,tyle = getDefaultStyle();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,369, given Class.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,412,"* given Class. If a cycle is detected as an objects is ""toString()'ed"","
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,413,* such an object is rendered as if <code>Object.toString()</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,414,* had been called and not implemented by the object.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,377,f (clazz.isArray()) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,378,"eflectionAppendArray(object, clazz, builder);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,422,if (isRegistered(object)) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,423,"// The object has already been appended, therefore we have an object cycle."
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,424,// Append a simple Object.toString style string. The field name is already appended at this point.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,425,builder.appendAsObjectToString(object);
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,381,ield[] fields = clazz.getDeclaredFields();
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,382,"ield.setAccessible(fields, true);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,383,or (int i = 0; i < fields.length; i++) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,384,ield f = fields[i];
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,385,f ((f.getName().indexOf('$') == -1)
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,386,& (useTransients || !Modifier.isTransient(f.getModifiers()))
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,387,& (!Modifier.isStatic(f.getModifiers()))) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,388,ry {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,389,"uilder.append(f.getName(), f.get(object));"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,390, catch (IllegalAccessException ex) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,391,/this can't happen. Would get a Security exception instead
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,392,/throw a runtime exception in case the impossible happens.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,393,"hrow new InternalError(""Unexpected IllegalAccessException: "" + ex.getMessage());"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,428,try {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,429,register(object);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,430,if (clazz.isArray()) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,431,builder.reflectionAppendArray(object);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,432,return;
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,434,Field[] fields = clazz.getDeclaredFields();
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,435,"Field.setAccessible(fields, true);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,436,for (int i = 0; i < fields.length; i++) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,437,Field f = fields[i];
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,438,String fieldName = f.getName();
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,439,if ((fieldName.indexOf('$') == -1)
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,440,&& (useTransients || !Modifier.isTransient(f.getModifiers()))
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,441,&& (!Modifier.isStatic(f.getModifiers()))) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,442,try {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,443,// Warning: Field.get(Object) creates wrappers objects for primitive types.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,444,Object fieldValue = f.get(object);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,445,if (isRegistered(fieldValue)
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,446,&& !f.getType().isPrimitive()) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,447,"// A known field value has already been appended, therefore we have an object cycle,"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,448,// append a simple Object.toString style string.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,449,"builder.getStyle().appendFieldStart(builder.getStringBuffer(), fieldName);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,450,builder.appendAsObjectToString(fieldValue);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,451,"// The recursion out of ""builder.append(fieldName, fieldValue);"" below will append the field"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,452,// end marker.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,453,} else {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,454,try {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,455,register(object);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,456,"builder.append(fieldName, fieldValue);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,457,} finally {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,458,unregister(object);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,461,} catch (IllegalAccessException ex) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,462,//this can't happen. Would get a Security exception instead
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,463,//throw a runtime exception in case the impossible happens.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,464,"throw new InternalError(""Unexpected IllegalAccessException: "" + ex.getMessage());"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,400, Appends the array elements in the given <code>Object</code> of the
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,401, given <code>Class</code> to a <code>ToStringBuilder</code>.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,403, @param object  the array object to append details of
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,404, @param clazz  the array class of the object parameter
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,405, @param builder  the builder to append to
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,407,"rivate static void reflectionAppendArray(Object object, Class clazz, ToStringBuilder builder) {"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,408,ry {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,409,/ A multi-dimension array invokes the append(Object) method.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,410,/ A single-dimension array of primitive type pt invokes the append(pt[]) method.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,411,"uilder.getClass().getDeclaredMethod(""append"", new Class[] { clazz.getComponentType().isArray() ? Object.class : clazz }).invoke("
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,412,"uilder,"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,413,ew Object[] { object });
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,414, catch (SecurityException e) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,415,"/ ""This cannot happen"""
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,416,"hrow new InternalError(""Unexpected SecurityException: "" + e.getMessage());"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,417, catch (NoSuchMethodException e) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,418,"/ ""This cannot happen"""
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,419,"hrow new InternalError(""Unexpected NoSuchMethodException: "" + e.getMessage());"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,420, catch (IllegalArgumentException e) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,421,/ Method.invoke exception
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,422,"/ ""This cannot happen"""
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,423,"hrow new InternalError(""Unexpected IllegalArgumentException: "" + e.getMessage());"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,424, catch (IllegalAccessException e) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,425,/ Method.invoke exception
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,426,"/ ""This cannot happen"""
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,427,"hrow new InternalError(""Unexpected IllegalAccessException: "" + e.getMessage());"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,428, catch (InvocationTargetException e) {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,429,/ Method.invoke exception
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,430,"/ ""This cannot happen"""
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,431,"hrow new InternalError(""Unexpected InvocationTargetException: "" + e.getMessage());"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,468,} finally {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,469,unregister(object);
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,527,* <p>Appends with the same format as the default <code>Object toString()
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,528,* </code> method. Appends the class name followed by
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,529,* {@link System#identityHashCode(java.lang.Object)}.</p>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,531,* @param object  the <code>Object</code> whose class name and id to output
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,533,public ToStringBuilder appendAsObjectToString(Object object) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,534,"this.getStyle().appendAsObjectToString(this.getStringBuffer(), object);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,535,return this;
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,811,* <p>Append to the <code>toString</code> an <code>Object</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,812,* array.</p>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,814,* @param array  the array to add to the <code>toString</code>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,815,* @return this
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,817,public ToStringBuilder reflectionAppendArray(Object array) {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,818,"style.reflectionAppendArrayDetail(buffer, null, array);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,819,return this;
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,57,import java.lang.reflect.Array;
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,84," @version $Id: ToStringStyle.java,v 1.10 2003/03/23 17:54:16 scolebourne Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,85,"* @version $Id: ToStringStyle.java,v 1.11 2003/03/27 08:54:31 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,323,"* <p>If a cycle is detected, an object will be appended with the Object.toString() format.</p>"
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,329,f (value instanceof Collection) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,332,if (ToStringBuilder.isRegistered(value)
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,333,&& !(value instanceof Number || value instanceof Boolean || value instanceof Character)) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,334,"appendAsObjectToString(buffer, value);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,337,else if (value instanceof Collection) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,754,* <p>Append to the <code>toString</code> the detail of an any array type.</p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,756,* @param buffer  the <code>StringBuffer</code> to populate
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,757,"* @param fieldName  the field name, typically not used as already appended"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,758,"* @param array  the array to add to the <code>toString</code>,"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,759,*  not <code>null</code>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,761,"protected void reflectionAppendArrayDetail(StringBuffer buffer, String fieldName, Object array) {"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,762,buffer.append(arrayStart);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,763,int length = Array.getLength(array);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,764,for (int i = 0; i < length; i++) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,765,"Object item = Array.get(array, i);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,766,if (i > 0) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,767,buffer.append(arraySeparator);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,769,if (item == null) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,770,"appendNullText(buffer, fieldName);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,772,} else {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,773,"appendInternal(buffer, fieldName, item, arrayContentDetail);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,776,buffer.append(arrayEnd);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1312,* <p>Appends with the same format as the default <code>Object toString()
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1313,* </code> method. Appends the class name followed by
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1314,* {@link System#identityHashCode(java.lang.Object)}.</p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1316,* @param buffer  the <code>StringBuffer</code> to populate
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1317,* @param object  the <code>Object</code> whose class name and id to output
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1319,"protected void appendAsObjectToString(StringBuffer buffer, Object object) {"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1320,"this.appendClassName(buffer, object);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1321,"this.appendIdentityHashCode(buffer, object);"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,66, Unit tests {@link org.apache.commons.lang.ToStringBuilder}.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,66,* Unit tests for {@link org.apache.commons.lang.ToStringBuilder}.
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,69," @version $Id: ToStringBuilderTest.java,v 1.6 2003/03/23 17:35:51 scolebourne Exp $"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,69,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,70,"* @author <a href=""mailto:alex@apache.org"">Alex Chaffee</a>"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,71,"* @version $Id: ToStringBuilderTest.java,v 1.7 2003/03/27 08:55:22 ggregory Exp $"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,167,ublic void testReflection() {
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,168,"ssertEquals(baseStr + ""[value=5]"", ToStringBuilder.reflectionToString(base));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,170,* Test wrapper for int primitive.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,172,public void testReflectionInteger() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,173,"assertEquals(baseStr + ""[value=5]"", ToStringBuilder.reflectionToString(base));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,177,* Test wrapper for char primitive.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,179,public void testReflectionCharacter() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,180,Character c = new Character('A');
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,181,"assertEquals(this.toBaseString(c) + ""[value=A]"", ToStringBuilder.reflectionToString(c));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,185,* Test wrapper for char boolean.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,187,public void testReflectionBoolean() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,188,Boolean b;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,189,b = Boolean.TRUE;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,190,"assertEquals(this.toBaseString(b) + ""[value=true]"", ToStringBuilder.reflectionToString(b));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,191,b = Boolean.FALSE;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,192,"assertEquals(this.toBaseString(b) + ""[value=false]"", ToStringBuilder.reflectionToString(b));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,196,* Create the same toString() as Object.toString().
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,197,* @param o the object to create the string for.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,198,* @return a String in the Object.toString format.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,232,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,241,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,250,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,259,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,268,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,277,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,286,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,295,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,304,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,315,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,325,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,334,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,343,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,352,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,361,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,370,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,380,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,390,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,417,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,447,// Reflection cycle tests
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,450,* Test an array element pointing to its container.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,452,public void testReflectionArrayCycle() throws Exception {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,453,Object[] objects = new Object[1];
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,454,objects[0] = objects;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,455,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,456,"this.toBaseString(objects) + ""[{"" + this.toBaseString(objects) + ""}]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,457,ToStringBuilder.reflectionToString(objects));
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,458,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,462,* Test an array element pointing to its container.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,464,public void testReflectionArrayCycleLevel2() throws Exception {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,465,Object[] objects = new Object[1];
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,466,Object[] objectsLevel2 = new Object[1];
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,467,objects[0] = objectsLevel2;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,468,objectsLevel2[0] = (Object) objects;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,469,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,470,"this.toBaseString(objects) + ""[{{"" + this.toBaseString(objects) + ""}}]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,471,ToStringBuilder.reflectionToString(objects));
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,472,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,473,"this.toBaseString(objectsLevel2) + ""[{{"" + this.toBaseString(objectsLevel2) + ""}}]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,474,ToStringBuilder.reflectionToString(objectsLevel2));
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,475,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,478,public void testReflectionArrayArrayCycle() throws Exception {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,479,Object[][] objects = new Object[2][2];
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,480,objects[0][0] = objects;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,481,objects[0][1] = objects;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,482,objects[1][0] = objects;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,483,objects[1][1] = objects;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,484,String basicToString = this.toBaseString(objects);
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,485,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,486,basicToString
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,488,+ basicToString
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,490,+ basicToString
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,492,+ basicToString
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,494,+ basicToString
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,496,ToStringBuilder.reflectionToString(objects));
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,497,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,501,* A reflection test fixture.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,503,static class ReflectionTestCycleA {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,504,ReflectionTestCycleB b;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,506,public String toString() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,507,return ToStringBuilder.reflectionToString(this);
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,512,* A reflection test fixture.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,514,static class ReflectionTestCycleB {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,515,ReflectionTestCycleA a;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,517,public String toString() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,518,return ToStringBuilder.reflectionToString(this);
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,523,* A reflection test fixture.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,525,static class SimpleReflectionTestFixture {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,526,Object o;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,528,public SimpleReflectionTestFixture() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,531,public SimpleReflectionTestFixture(Object o) {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,532,this.o = o;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,535,public String toString() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,536,return ToStringBuilder.reflectionToString(this);
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,541,"* Test an Object pointing to itself, the simplest test."
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,543,* @throws Exception
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,545,public void testSimpleReflectionObjectCycle() throws Exception {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,546,SimpleReflectionTestFixture simple = new SimpleReflectionTestFixture();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,547,simple.o = simple;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,548,assertTrue(ToStringBuilder.getReflectionRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,549,"assertEquals(this.toBaseString(simple) + ""[o="" + this.toBaseString(simple) + ""]"", simple.toString());"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,550,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,554,* Test Objects pointing to each other.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,556,* @throws Exception
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,558,public void testReflectionObjectCycle() throws Exception {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,559,ReflectionTestCycleA a = new ReflectionTestCycleA();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,560,ReflectionTestCycleB b = new ReflectionTestCycleB();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,561,a.b = b;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,562,b.a = a;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,563,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,564,"this.toBaseString(a) + ""[b="" + this.toBaseString(b) + ""[a="" + this.toBaseString(a) + ""]]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,565,a.toString());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,566,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,570,* Test a nasty combination of arrays and Objects pointing to each other.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,571,* objects[0] -> SimpleReflectionTestFixture[ o -> objects ]
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,573,* @throws Exception
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,575,public void testReflectionArrayAndObjectCycle() throws Exception {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,576,Object[] objects = new Object[1];
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,577,SimpleReflectionTestFixture simple = new SimpleReflectionTestFixture(objects);
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,578,objects[0] = (Object) simple;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,579,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,580,this.toBaseString(objects)
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,582,+ this.toBaseString(simple)
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,583,"+ ""[o="""
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,584,+ this.toBaseString(objects)
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,587,ToStringBuilder.reflectionToString(objects));
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,588,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,589,this.toBaseString(simple)
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,590,"+ ""[o={"""
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,591,+ this.toBaseString(simple)
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,593,ToStringBuilder.reflectionToString(simple));
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,594,this.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,597,void validateEmptyReflectionRegistry() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,598,assertTrue(ToStringBuilder.getReflectionRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,600,//  End: Reflection cycle tests
