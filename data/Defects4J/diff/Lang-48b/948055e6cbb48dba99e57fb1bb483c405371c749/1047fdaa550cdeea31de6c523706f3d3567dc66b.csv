is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,5,* reserved.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,9,* are met:
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,17,*    distribution.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,56,import java.util.Collection;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,57,import java.util.Iterator;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,58,import java.util.Map;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,60,* <p>Validate is a static utility class for validating arguments.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,62,* <p>The class is based along the lines of JUnit. If an argument value is
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,63,"* deemed invalid, an IllegalArgumentException is thrown. For example:"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,65,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,66,"* Validate.isTrue( i > 0, ""The value must be greater than zero: "", i);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,67,"* Validate.notNull( surname, ""The surname must not be null"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,68,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,70,"* @author <a href=""mailto:ola.berg@arkitema.se"">Ola Berg</a>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,71,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,72,"* @version $Id: Validate.java,v 1.1 2002/12/13 17:21:56 scolebourne Exp $"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,74,public class Validate {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,77,* Constructor. This class should not normally be instantiated.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,79,public Validate() {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,82,// isTrue
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,86,"* <p>Validate an argument, throwing IllegalArgumentException if the test"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,87,* result is false.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,89,"* <p>This is used when validating according to an arbitrary boolean expression,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,90,* such as validating a primitive number or using your own custom validation
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,91,* expression.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,92,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,93,"* Validate.isTrue( myObject.isOk(), ""The object is not OK: "", myObject);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,94,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,95,"* <p>For performance reasons, the object is passed as a separate parameter and"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,96,* appended to the message string only in the case of an error.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,98,* @param expression  a boolean expression
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,99,* @param message  the exception message you would like to see if the expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,100,* @param value  the value to append to the message in case of error
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,101,* @throws IllegalArgumentException if expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,103,"public static void isTrue(boolean expression, String message, Object value) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,104,if (expression == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,105,throw new IllegalArgumentException(message + value);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,110,"* <p>Validate an argument, throwing IllegalArgumentException if the test"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,111,* result is false.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,113,"* <p>This is used when validating according to an arbitrary boolean expression,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,114,* such as validating a primitive number or using your own custom validation
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,115,* expression.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,116,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,117,"* Validate.isTrue( i > 0, ""The value must be greater than zero: "", i);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,118,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,119,"* <p>For performance reasons, the object is passed as a separate parameter and"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,120,* appended to the message string only in the case of an error.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,122,* @param expression  a boolean expression
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,123,* @param message  the exception message you would like to see if the expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,124,* @param value  the value to append to the message in case of error
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,125,* @throws IllegalArgumentException if expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,127,"public static void isTrue(boolean expression, String message, long value) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,128,if (expression == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,129,throw new IllegalArgumentException(message + value);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,134,"* <p>Validate an argument, throwing IllegalArgumentException if the test"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,135,* result is false.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,137,"* <p>This is used when validating according to an arbitrary boolean expression,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,138,* such as validating a primitive number or using your own custom validation
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,139,* expression.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,140,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,141,"* Validate.isTrue( d > 0.0, ""The value must be greater than zero: "", d);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,142,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,143,"* <p>For performance reasons, the object is passed as a separate parameter and"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,144,* appended to the message string only in the case of an error.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,146,* @param expression  a boolean expression
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,147,* @param message  the exception message you would like to see if the expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,148,* @param value  the value to append to the message in case of error
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,149,* @throws IllegalArgumentException if expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,151,"public static void isTrue(boolean expression, String message, double value) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,152,if (expression == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,153,throw new IllegalArgumentException(message + value);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,158,"* <p>Validate an argument, throwing IllegalArgumentException if the test"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,159,* result is false.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,161,"* <p>This is used when validating according to an arbitrary boolean expression,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,162,* such as validating a primitive number or using your own custom validation
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,163,* expression.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,164,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,165,"* Validate.isTrue( (i > 0), ""The value must be greater than zero"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,166,"* Validate.isTrue( myObject.isOk(), ""The object is not OK"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,167,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,168,"* <p>For performance reasons, the message string should not involve a string append,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,169,"* instead use the {@link #isTrue(boolean, String, Object)} method."
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,171,* @param expression  a boolean expression
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,172,* @param message  the exception message you would like to see if the expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,173,* @throws IllegalArgumentException if expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,175,"public static void isTrue(boolean expression, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,176,if (expression == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,177,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,182,"* <p>Validate an argument, throwing IllegalArgumentException if the test"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,183,* result is false.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,185,"* <p>This is used when validating according to an arbitrary boolean expression,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,186,* such as validating a primitive number or using your own custom validation
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,187,* expression.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,188,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,189,* Validate.isTrue( i > 0 );
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,190,* Validate.isTrue( myObject.isOk() );
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,191,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,192,* <p>The message in the exception is 'The validated expression is false'.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,194,* @param expression  a boolean expression
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,195,* @throws IllegalArgumentException if expression is false
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,197,public static void isTrue(boolean expression) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,198,if (expression == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,199,"throw new IllegalArgumentException(""The validated expression is false"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,203,// notNull
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,207,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,208,* argument is null.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,209,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,210,"* Validate.notNull(myObject, ""The object must not be null"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,211,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,213,* @param object  the object to check is not null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,214,* @param message  the exception message you would like to see if the object is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,215,* @throws IllegalArgumentException if the object is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,217,"public static void notNull(Object object, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,218,if (object == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,219,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,224,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,225,* argument is null.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,226,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,227,* Validate.notNull(myObject);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,228,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,229,* <p>The message in the exception is 'The validated object is null'.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,231,* @param object  the object to check is not null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,232,* @throws IllegalArgumentException if the object is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,234,public static void notNull(Object object) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,235,if (object == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,236,"throw new IllegalArgumentException(""The validated object is null"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,240,// notEmpty array
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,244,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,245,* argument array is empty (null or no elements).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,246,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,247,"* Validate.notEmpty(myArray, ""The array must not be empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,248,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,250,* @param array  the array to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,251,* @param message  the exception message you would like to see if the array is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,252,* @throws IllegalArgumentException if the array is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,254,"public static void notEmpty(Object[] array, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,255,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,256,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,261,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,262,* argument array is empty (null or no elements).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,263,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,264,* Validate.notEmpty(myArray);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,265,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,266,* <p>The message in the exception is 'The validated array is empty'.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,268,* @param array  the array to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,269,* @throws IllegalArgumentException if the array is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,271,public static void notEmpty(Object[] array) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,272,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,273,"throw new IllegalArgumentException(""The validated array is empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,277,// notEmpty collection
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,281,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,282,* argument Collection is empty (null or no elements).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,283,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,284,"* Validate.notEmpty(myCollection, ""The collection must not be empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,285,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,287,* @param collection  the collection to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,288,* @param message  the exception message you would like to see if the collection is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,289,* @throws IllegalArgumentException if the collection is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,291,"public static void notEmpty(Collection collection, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,292,if (collection == null || collection.size() == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,293,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,298,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,299,* argument Collection is empty (null or no elements).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,300,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,301,* Validate.notEmpty(myCollection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,302,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,303,* <p>The message in the exception is 'The validated collection is empty'.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,305,* @param collection  the collection to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,306,* @throws IllegalArgumentException if the collection is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,308,public static void notEmpty(Collection collection) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,309,if (collection == null || collection.size() == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,310,"throw new IllegalArgumentException(""The validated collection is empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,314,// notEmpty map
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,318,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,319,* argument Map is empty (null or no elements).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,320,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,321,"* Validate.notEmpty(myMap, ""The collection must not be empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,322,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,324,* @param map  the map to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,325,* @param message  the exception message you would like to see if the map is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,326,* @throws IllegalArgumentException if the map is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,328,"public static void notEmpty(Map map, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,329,if (map == null || map.size() == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,330,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,335,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,336,* argument Map is empty (null or no elements).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,337,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,338,* Validate.notEmpty(myMap);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,339,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,340,* <p>The message in the exception is 'The validated map is empty'.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,342,* @param map  the map to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,343,* @throws IllegalArgumentException if the map is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,345,public static void notEmpty(Map map) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,346,if (map == null || map.size() == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,347,"throw new IllegalArgumentException(""The validated map is empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,351,// notEmpty string
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,355,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,356,* argument String is empty (null or zero length).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,357,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,358,"* Validate.notEmpty(myString, ""The string must not be empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,359,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,361,* @param string  the string to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,362,* @param message  the exception message you would like to see if the string is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,363,* @throws IllegalArgumentException if the string is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,365,"public static void notEmpty(String string, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,366,if (string == null || string.length() == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,367,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,372,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,373,* argument String is empty (null or zero length).
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,374,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,375,* Validate.notEmpty(myString);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,376,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,377,* <p>The message in the exception is 'The validated string is empty'.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,379,* @param string  the string to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,380,* @throws IllegalArgumentException if the string is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,382,public static void notEmpty(String string) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,383,if (string == null || string.length() == 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,384,"throw new IllegalArgumentException(""The validated string is empty"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,388,// notNullElements array
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,392,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,393,* argument array has null elements or is null.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,394,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,395,"* Validate.notEmpty(myArray, ""The array must not contain null elements"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,396,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,398,* @param array  the array to check
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,399,* @param message  the exception message if the array has null elements
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,400,* @throws IllegalArgumentException if the array has null elements or is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,402,"public static void noNullElements(Object[] array, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,403,Validate.notNull(array);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,404,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,405,if (array[i] == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,406,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,412,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,413,* argument array has null elements or is null.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,414,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,415,* Validate.notEmpty(myArray);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,416,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,417,* <p>The message in the exception is 'The validated array contains null element at index: '.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,419,* @param array  the array to check
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,420,* @throws IllegalArgumentException if the array has null elements or is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,422,public static void noNullElements(Object[] array) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,423,Validate.notNull(array);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,424,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,425,if (array[i] == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,426,"throw new IllegalArgumentException(""The validated array contains null element at index: "" + i);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,431,// notNullElements collection
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,435,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,436,* argument collection has null elements or is null.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,437,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,438,"* Validate.notEmpty(myCollection, ""The collection must not contain null elements"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,439,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,441,* @param collection  the collection to check
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,442,* @param message  the exception message if the array has null elements
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,443,* @throws IllegalArgumentException if the collection has null elements or is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,445,"public static void noNullElements(Collection collection, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,446,Validate.notNull(collection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,447,int i = 0;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,448,for (Iterator it = collection.iterator(); it.hasNext(); i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,449,if (it.next() == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,450,throw new IllegalArgumentException(message);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,456,"* <p>Validate an argument, throwing IllegalArgumentException if the"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,457,* argument collection has null elements or is null.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,458,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,459,* Validate.notEmpty(myCollection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,460,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,461,* <p>The message in the exception is 'The validated collection contains null element at index: '.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,463,* @param collection  the collection to check
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,464,* @throws IllegalArgumentException if the collection has null elements or is null
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,466,public static void noNullElements(Collection collection) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,467,Validate.notNull(collection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,468,int i = 0;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,469,for (Iterator it = collection.iterator(); it.hasNext(); i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,470,if (it.next() == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,471,"throw new IllegalArgumentException(""The validated collection contains null element at index: "" + i);"
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65," @version $Id: LangTestSuite.java,v 1.5 2002/10/13 22:42:59 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65,"* @version $Id: LangTestSuite.java,v 1.6 2002/12/13 17:21:56 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,101,suite.addTest(ValidateTest.suite());
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,9,* are met:
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,56,import java.util.ArrayList;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,57,import java.util.Collection;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,58,import java.util.HashMap;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,59,import java.util.List;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,60,import java.util.Map;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,62,import junit.framework.Test;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,63,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,64,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,65,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,67,* Unit tests {@link org.apache.commons.lang.Validate}.
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,69,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,70,"* @version $Id: ValidateTest.java,v 1.1 2002/12/13 17:21:56 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,72,public class ValidateTest extends TestCase {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,74,public ValidateTest(String name) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,75,super(name);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,78,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,79,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,82,public static Test suite() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,83,TestSuite suite = new TestSuite(ValidateTest.class);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,84,"suite.setName(""Validate Tests"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,85,return suite;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,88,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,89,super.setUp();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,92,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,93,super.tearDown();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,97,public void testIsTrue1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,98,Validate.isTrue(true);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,99,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,100,Validate.isTrue(false);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,101,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,102,"assertEquals(""The validated expression is false"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,107,public void testIsTrue2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,108,"Validate.isTrue(true, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,109,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,110,"Validate.isTrue(false, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,111,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,112,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,117,public void testIsTrue3() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,118,"Validate.isTrue(true, ""MSG"", new Integer(6));"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,119,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,120,"Validate.isTrue(false, ""MSG"", new Integer(6));"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,121,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,122,"assertEquals(""MSG6"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,127,public void testIsTrue4() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,128,"Validate.isTrue(true, ""MSG"", 7);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,129,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,130,"Validate.isTrue(false, ""MSG"", 7);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,131,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,132,"assertEquals(""MSG7"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,137,public void testIsTrue5() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,138,"Validate.isTrue(true, ""MSG"", 7.4d);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,139,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,140,"Validate.isTrue(false, ""MSG"", 7.4d);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,141,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,142,"assertEquals(""MSG7.4"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,147,public void testNotNull1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,148,Validate.notNull(new Object());
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,149,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,150,Validate.notNull(null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,151,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,152,"assertEquals(""The validated object is null"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,157,public void testNotNull2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,158,"Validate.notNull(new Object(), ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,159,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,160,"Validate.notNull(null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,161,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,162,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,167,public void testNotEmptyArray1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,168,Validate.notEmpty(new Object[] {null});
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,169,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,170,Validate.notEmpty((Object[]) null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,171,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,172,"assertEquals(""The validated array is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,174,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,175,Validate.notEmpty(new Object[0]);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,176,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,177,"assertEquals(""The validated array is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,182,public void testNotEmptyArray2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,183,"Validate.notEmpty(new Object[] {null}, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,184,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,185,"Validate.notEmpty((Object[]) null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,186,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,187,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,189,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,190,"Validate.notEmpty(new Object[0], ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,191,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,192,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,197,public void testNotEmptyCollection1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,198,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,199,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,200,Validate.notEmpty((Collection) null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,201,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,202,"assertEquals(""The validated collection is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,204,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,205,Validate.notEmpty(coll);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,206,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,207,"assertEquals(""The validated collection is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,209,coll.add(new Integer(8));
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,210,Validate.notEmpty(coll);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,214,public void testNotEmptyCollection2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,215,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,216,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,217,"Validate.notEmpty((Collection) null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,218,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,219,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,221,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,222,"Validate.notEmpty(coll, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,223,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,224,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,226,coll.add(new Integer(8));
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,227,"Validate.notEmpty(coll, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,231,public void testNotEmptyMap1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,232,Map map = new HashMap();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,233,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,234,Validate.notEmpty((Map) null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,235,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,236,"assertEquals(""The validated map is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,238,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,239,Validate.notEmpty(map);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,240,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,241,"assertEquals(""The validated map is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,243,"map.put(""ll"", new Integer(8));"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,244,Validate.notEmpty(map);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,248,public void testNotEmptyMap2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,249,Map map = new HashMap();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,250,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,251,"Validate.notEmpty((Map) null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,252,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,253,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,255,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,256,"Validate.notEmpty(map, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,257,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,258,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,260,"map.put(""ll"", new Integer(8));"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,261,"Validate.notEmpty(map, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,265,public void testNotEmptyString1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,266,"Validate.notEmpty(""hjl"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,267,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,268,Validate.notEmpty((String) null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,269,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,270,"assertEquals(""The validated string is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,272,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,273,"Validate.notEmpty("""");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,274,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,275,"assertEquals(""The validated string is empty"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,280,public void testNotEmptyString2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,281,"Validate.notEmpty(new Object[] {null}, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,282,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,283,"Validate.notEmpty((String) null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,284,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,285,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,287,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,288,"Validate.notEmpty("""", ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,289,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,290,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,295,public void testNoNullElementsArray1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,296,"String[] array = new String[] {""a"", ""b""};"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,297,Validate.noNullElements(array);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,298,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,299,Validate.noNullElements((Object[]) null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,300,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,301,"assertEquals(""The validated object is null"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,303,array[1] = null;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,304,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,305,Validate.notEmpty(array);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,306,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,307,"assertEquals(""The validated array contains null element at index: 1"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,312,public void testNoNullElementsArray2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,313,"String[] array = new String[] {""a"", ""b""};"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,314,"Validate.noNullElements(array, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,315,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,316,"Validate.noNullElements((Object[]) null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,317,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,318,"assertEquals(""The validated object is null"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,320,array[1] = null;
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,321,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,322,"Validate.notEmpty(array, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,323,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,324,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,329,public void testNoNullElementsCollection1() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,330,List coll = new ArrayList();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,331,"coll.add(""a"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,332,"coll.add(""b"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,333,Validate.noNullElements(coll);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,334,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,335,Validate.noNullElements((Collection) null);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,336,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,337,"assertEquals(""The validated object is null"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,339,"coll.set(1, null);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,340,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,341,Validate.notEmpty(coll);
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,342,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,343,"assertEquals(""The validated collection contains null element at index: 1"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,348,public void testNoNullElementsCollection2() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,349,List coll = new ArrayList();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,350,"coll.add(""a"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,351,"coll.add(""b"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,352,"Validate.noNullElements(coll, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,353,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,354,"Validate.noNullElements((Collection) null, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,355,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,356,"assertEquals(""The validated object is null"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,358,"coll.set(1, null);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,359,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,360,"Validate.notEmpty(coll, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,361,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,362,"assertEquals(""MSG"", ex.getMessage());"
