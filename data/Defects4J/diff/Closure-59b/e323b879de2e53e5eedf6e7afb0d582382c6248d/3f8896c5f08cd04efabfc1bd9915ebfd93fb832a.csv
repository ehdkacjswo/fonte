is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,143,Supplier<String> idSupplier = compiler.getUniqueNameIdSupplier();
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,144,// Make variable names unique to this instance.
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,146,"ompiler.getUniqueNameIdSupplier(),"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,148,"idSupplier,"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,151,// Make label names unique to this instance.
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,152,"new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false)"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,153,".process(null, fnNode);"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,156,static class LabelNameSupplier implements Supplier<String> {
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,157,final Supplier<String> idSupplier;
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,159,LabelNameSupplier(Supplier<String> idSupplier) {
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,160,this.idSupplier = idSupplier;
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,163,@Override
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,164,public String get() {
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,165,"return ""JSCompiler_inline_label_"" + idSupplier.get();"
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,20,import com.google.common.base.Supplier;
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,73,private final Supplier<String> nameSupplier;
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,74,private final boolean removeUnused;
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,77,"this(compiler, new DefaultNameSupplier(), true);"
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,80,RenameLabels(
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,81,"AbstractCompiler compiler,"
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,82,"Supplier<String> supplier,"
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,83,boolean removeUnused) {
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,85,this.nameSupplier = supplier;
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,86,this.removeUnused = removeUnused;
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,89,static class DefaultNameSupplier implements Supplier<String> {
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,90,// NameGenerator is used to create safe label names.
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,91,final NameGenerator nameGenerator =
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,92,"new NameGenerator(new HashSet<String>(), """", null);"
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,94,@Override
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,95,public String get() {
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,96,return nameGenerator.generateNextName();
False,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,91,/ NameGenerator is used to create safe label names.
False,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,92,inal NameGenerator nameGenerator =
False,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,93,"ew NameGenerator(new HashSet<String>(), """", null);"
False,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,132,ames.add(nameGenerator.generateNextName());
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,151,names.add(nameSupplier.get());
False,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,196,f (li.referenced) {
True,src/com/google/javascript/jscomp/RenameLabels.java,src/com/google/javascript/jscomp/RenameLabels.java,215,if (li.referenced || !removeUnused) {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,386,public void testInlineFunctions31() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,387,// Don't introduce a duplicate label in the same scope
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,388,"test(""function foo(){ lab:{4;} }"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,389,"""lab:{foo();}"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,390,"""lab:{{JSCompiler_inline_label_0:{4}}}"");"
True,test/com/google/javascript/jscomp/RenameLabelsTest.java,test/com/google/javascript/jscomp/RenameLabelsTest.java,88,public void testRenameReused() {
True,test/com/google/javascript/jscomp/RenameLabelsTest.java,test/com/google/javascript/jscomp/RenameLabelsTest.java,89,"test(""foo:{break foo}; foo:{break foo}"", ""a:{break a};a:{break a}"");"
