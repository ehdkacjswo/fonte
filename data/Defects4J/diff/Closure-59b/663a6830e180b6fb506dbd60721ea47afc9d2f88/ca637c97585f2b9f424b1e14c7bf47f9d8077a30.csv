is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,326,or (String str : stringInfoMap.keySet()) {
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,327,tringInfo info = stringInfoMap.get(str);
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,326,"for (Entry<String, StringInfo> stringInfoEntry : stringInfoMap.entrySet()) {"
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,327,StringInfo info = stringInfoEntry.getValue();
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,331,b.append(str);
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,331,sb.append(stringInfoEntry.getKey());
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,110,or (String ctorName : ctors.keySet()) {
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,111,f (!provides.containsKey(ctorName)) {
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,110,"for (Map.Entry<String, Node> ctorEntry : ctors.entrySet()) {"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,111,if (!provides.containsKey(ctorEntry.getKey())) {
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,113,".makeError(ctors.get(ctorName), checkLevel,"
False,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,114,"ISSING_PROVIDE_WARNING, ctorName));"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,113,"t.makeError(ctorEntry.getValue(), checkLevel,"
True,src/com/google/javascript/jscomp/CheckProvides.java,src/com/google/javascript/jscomp/CheckProvides.java,114,"MISSING_PROVIDE_WARNING, ctorEntry.getKey()));"
False,src/com/google/javascript/jscomp/LinkedFlowScope.java,src/com/google/javascript/jscomp/LinkedFlowScope.java,355,or (String key : cache.symbols.keySet()) {
False,src/com/google/javascript/jscomp/LinkedFlowScope.java,src/com/google/javascript/jscomp/LinkedFlowScope.java,356,f (!slots.containsKey(key)) {
False,src/com/google/javascript/jscomp/LinkedFlowScope.java,src/com/google/javascript/jscomp/LinkedFlowScope.java,357,"lots.put(key, cache.symbols.get(key));"
True,src/com/google/javascript/jscomp/LinkedFlowScope.java,src/com/google/javascript/jscomp/LinkedFlowScope.java,355,"for (Map.Entry<String, StaticSlot<JSType>> symbolEntry : cache.symbols.entrySet()) {"
True,src/com/google/javascript/jscomp/LinkedFlowScope.java,src/com/google/javascript/jscomp/LinkedFlowScope.java,356,if (!slots.containsKey(symbolEntry.getKey())) {
True,src/com/google/javascript/jscomp/LinkedFlowScope.java,src/com/google/javascript/jscomp/LinkedFlowScope.java,357,"slots.put(symbolEntry.getKey(), symbolEntry.getValue());"
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,151,or (Var var : a.reachingDef.keySet()) {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,153,efinition aDef = a.reachingDef.get(var);
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,151,"for (Map.Entry<Var, Definition> varEntry : a.reachingDef.entrySet()) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,152,Var var = varEntry.getKey();
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,153,Definition aDef = varEntry.getValue();
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,180,or (Var var : b.reachingDef.keySet()) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,180,"for (Map.Entry<Var, Definition> entry : b.reachingDef.entrySet()) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,181,Var var = entry.getKey();
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,182,"esultMap.put(var, b.reachingDef.get(var));"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,183,"resultMap.put(var, entry.getValue());"
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,244,or (Node n : callNodeToParentMap.keySet()) {
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,245,ode parent = callNodeToParentMap.get(n);
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,246,ode firstArg = n.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,244,"for (Map.Entry<Node, Node> nodeEntry : callNodeToParentMap.entrySet()) {"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,245,Node parent = nodeEntry.getValue();
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,246,Node firstArg = nodeEntry.getKey().getFirstChild().getNext();
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,262,"arent.replaceChild(n, Node.newString(sb.toString()));"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,262,"parent.replaceChild(nodeEntry.getKey(), Node.newString(sb.toString()));"
False,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,202,or (JsonML child : children) {
False,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,203,his.children.add(child);
True,src/com/google/javascript/jscomp/jsonml/JsonML.java,src/com/google/javascript/jscomp/jsonml/JsonML.java,202,this.children.addAll(Arrays.asList(children));
