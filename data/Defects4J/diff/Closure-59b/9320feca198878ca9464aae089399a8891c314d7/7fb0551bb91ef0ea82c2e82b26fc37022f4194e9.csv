is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,118,tring sourceName = (String) input.getProp(Node.SOURCENAME_PROP);
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,119,eturn sourceName != null;
True,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,118,return input.getSourceFileName() != null;
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,297,tring sourceName = (String) n.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,297,String sourceName = n.getSourceFileName();
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,94,& node.getProp(Node.SOURCENAME_PROP) != null
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,94,&& node.getSourceFileName() != null
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1406,tring sourceName = (String)root.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1406,String sourceName = root.getSourceFileName();
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,47,rivate boolean isExtern;
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,79,his.isExtern = isExtern;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,79,// TODO(nicksantos): Add a precondition check here. People are passing
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,80,"// in null, but they should not be."
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,81,if (ast != null && ast.getSourceFile() != null) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,82,ast.getSourceFile().setIsExtern(isExtern);
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,87,his.ast = new JsAst(file);
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,88,his.name = file.getName();
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,89,his.isExtern = isExtern;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,91,"this(new JsAst(file), file.getName(), isExtern);"
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,301,eturn isExtern;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,303,if (ast == null || ast.getSourceFile() == null) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,304,return false;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,306,return ast.getSourceFile().isExtern();
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,305,his.isExtern = isExtern;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,310,if (ast == null || ast.getSourceFile() == null) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,311,return;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,313,ast.getSourceFile().setIsExtern(isExtern);
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,31,rivate String sourceName = null;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,67,ase Token.SCRIPT:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,68,/ Remember the source file name in case we need to report an error.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,69,ourceName = (String) node.getProp(Node.SOURCENAME_PROP);
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,70,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,81,"ompiler.report(JSError.make(sourceName, n, error));"
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,74,"compiler.report(JSError.make(n.getSourceFileName(), n, error));"
True,src/com/google/javascript/jscomp/JSSourceFile.java,src/com/google/javascript/jscomp/JSSourceFile.java,26,import java.io.Serializable;
False,src/com/google/javascript/jscomp/JSSourceFile.java,src/com/google/javascript/jscomp/JSSourceFile.java,36,ublic class JSSourceFile extends SourceFile {
True,src/com/google/javascript/jscomp/JSSourceFile.java,src/com/google/javascript/jscomp/JSSourceFile.java,36,public class JSSourceFile extends SourceFile implements Serializable {
True,src/com/google/javascript/jscomp/JSSourceFile.java,src/com/google/javascript/jscomp/JSSourceFile.java,37,private static final long serialVersionUID = 1L;
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,50,reateAst(compiler);
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,50,parse(compiler);
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,75,rivate void createAst(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,75,private void parse(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,77,"arse(compiler, sourceFile.getName(), sourceFile.getCode());"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,78, catch (IOException e) {
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,79,ompiler.report(
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,80,"SError.make(AbstractCompiler.READ_ERROR, sourceFile.getName()));"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,84,"rivate void parse(AbstractCompiler compiler, String sourceName,"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,85,tring sourceStr) {
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,86,ry {
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,87,"ogger_.fine(""Parsing: "" + sourceName);"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,88,"oot = ParserRunner.parse(sourceName, sourceStr,"
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,77,"logger_.fine(""Parsing: "" + sourceFile.getName());"
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,78,"root = ParserRunner.parse(sourceFile, sourceFile.getCode(),"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,93,"ompiler.report(JSError.make(AbstractCompiler.READ_ERROR, sourceName));"
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,83,compiler.report(
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,84,"JSError.make(AbstractCompiler.READ_ERROR, sourceFile.getName()));"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,105,"oot.putProp(Node.SOURCENAME_PROP, sourceName);"
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,96,root.setStaticSourceFile(sourceFile);
False,src/com/google/javascript/jscomp/NameReferenceGraphReport.java,src/com/google/javascript/jscomp/NameReferenceGraphReport.java,140,tring filename = (String) node.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/NameReferenceGraphReport.java,src/com/google/javascript/jscomp/NameReferenceGraphReport.java,140,String filename = node.getSourceFileName();
False,src/com/google/javascript/jscomp/NodeTraversal.java,src/com/google/javascript/jscomp/NodeTraversal.java,614,tring name = (String) n.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/NodeTraversal.java,src/com/google/javascript/jscomp/NodeTraversal.java,614,String name = n.getSourceFileName();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2878,ourceName = (String) n.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2878,sourceName = n.getSourceFileName();
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,101,"String)n.getProp(Node.SOURCENAME_PROP),"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,101,"n.getSourceFileName(),"
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,215,".getProp(Node.SOURCENAME_PROP).toString(), getSourceRegion(n));"
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,215,"n.getSourceFileName(), getSourceRegion(n));"
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,23,import com.google.javascript.rhino.jstype.StaticSourceFile;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,31,import java.io.Serializable;
False,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,40,ublic abstract class SourceFile {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,42,"public class SourceFile implements StaticSourceFile, Serializable {"
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,43,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,59,private boolean isExternFile = false;
False,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,79,ourceFile(String fileName) {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,83,public SourceFile(String fileName) {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,142,@Override
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,147,/** Returns whether this is an extern. */
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,148,@Override
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,149,public boolean isExtern() {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,150,return isExternFile;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,153,/** Sets that this is an extern. */
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,154,void setIsExtern(boolean newVal) {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,155,isExternFile = newVal;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,314,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,332,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,366,private static final long serialVersionUID = 1L;
False,src/com/google/javascript/jscomp/SourceInformationAnnotator.java,src/com/google/javascript/jscomp/SourceInformationAnnotator.java,58,.getProp(Node.SOURCENAME_PROP)));
True,src/com/google/javascript/jscomp/SourceInformationAnnotator.java,src/com/google/javascript/jscomp/SourceInformationAnnotator.java,58,n.getSourceFileName()));
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,103,tring sourceFile = (String) node.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,103,String sourceFile = node.getSourceFileName();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,84,ourceName = (String) n.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,84,sourceName = n.getSourceFileName();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,156,ourceName = (String) n.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,156,sourceName = n.getSourceFileName();
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,28,lass SyntheticAst implements SourceAst {
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,28,public class SyntheticAst implements SourceAst {
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,31,rivate final String sourceName;
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,31,private final SourceFile sourceFile;
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,36,his.sourceName = sourceName;
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,36,this.sourceFile = new SourceFile(sourceName);
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,49,"oot.putProp(Node.SOURCENAME_PROP, sourceName);"
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,49,root.setStaticSourceFile(sourceFile);
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,54,eturn null;
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,54,return sourceFile;
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,589,tring sourceName = (String) n.getProp(Node.SOURCENAME_PROP);
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,589,String sourceName = n.getSourceFileName();
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,54,private final SourceFile sourceFile;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,58,this.sourceFile = new SourceFile(getSourceName());
False,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,100,"oot.putProp(Node.SOURCENAME_PROP, getSourceName());"
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,103,root.setStaticSourceFile(sourceFile);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,71,import com.google.javascript.rhino.jstype.StaticSourceFile;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,78,ublic class IRFactory {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,79,class IRFactory {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,86,private final StaticSourceFile sourceFile;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,120,"tring sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,122,"StaticSourceFile sourceFile,"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,124,his.sourceName = sourceName;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,126,this.sourceFile = sourceFile;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,128,// Sometimes this will be null in tests.
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,129,this.sourceName = sourceFile == null ? null : sourceFile.getName();
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,153,"emplateNode.putProp(Node.SOURCENAME_PROP, sourceName);"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,159,templateNode.setStaticSourceFile(sourceFile);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,164,"StaticSourceFile sourceFile,"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,161,"RFactory irFactory = new IRFactory(sourceString, node.getSourceName(),"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,168,"IRFactory irFactory = new IRFactory(sourceString, sourceFile,"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,338,"ourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,345,"sourceFile,"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,27,import com.google.javascript.rhino.JSDocInfo.Visibility;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,32,mport com.google.javascript.rhino.JSDocInfo.Visibility;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,33,import com.google.javascript.rhino.jstype.SimpleSourceFile;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,34,import com.google.javascript.rhino.jstype.StaticSourceFile;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,37,import java.util.List;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,37,mport java.util.List;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,51,private final StaticSourceFile sourceFile;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,124,"tring sourceName,"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,127,"StaticSourceFile sourceFile,"
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,128,his.sourceName = sourceName;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,131,this.sourceFile = sourceFile;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,133,// Sometimes this will be null in tests.
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,134,this.sourceName = sourceFile == null ? null : sourceFile.getName();
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,154,"typeparsing"","
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,161,"new SimpleSourceFile(""typeparsing"", false),"
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,2140,"emplateNode.putProp(Node.SOURCENAME_PROP, sourceName);"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,2147,templateNode.setStaticSourceFile(sourceFile);
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,29,import com.google.javascript.rhino.jstype.StaticSourceFile;
False,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,90,"ublic static Node parse(String sourceName,"
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,91,"public static Node parse(StaticSourceFile sourceFile,"
False,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,119,"stRoot = p.parse(sourceString, sourceName, 1);"
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,120,"astRoot = p.parse(sourceString, sourceFile.getName(), 1);"
False,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,121,"ogger.info(""Error parsing "" + sourceName + "": "" + e.getMessage());"
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,122,logger.info(
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,123,"""Error parsing "" + sourceFile.getName() + "": "" + e.getMessage());"
False,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,128,"stRoot, sourceString, config, errorReporter);"
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,130,"astRoot, sourceFile, sourceString, config, errorReporter);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,47,import com.google.javascript.rhino.jstype.SimpleSourceFile;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,48,import com.google.javascript.rhino.jstype.StaticSourceFile;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,91,// TODO(nicksantos): Remove this prop.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,149,AST_PROP          = 50;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,154,"STATIC_SOURCE_FILE = 51,    // A StaticSourceFile indicating the file"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,155,// where this node lives.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,156,LAST_PROP          = 51;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,241,"case STATIC_SOURCE_FILE:    return ""source_file"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,870,if (propType == SOURCENAME_PROP) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,871,return getSourceFileName();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,906,if (propType == SOURCENAME_PROP) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,907,putProp(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,908,"STATIC_SOURCE_FILE, new SimpleSourceFile((String) value, false));"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,909,return;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1225,public void setStaticSourceFile(StaticSourceFile file) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1226,"this.putProp(STATIC_SOURCE_FILE, file);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1229,public String getSourceFileName() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1230,StaticSourceFile file =
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1231,((StaticSourceFile) this.getProp(STATIC_SOURCE_FILE));
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1232,return file == null ? null : file.getName();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1235,public boolean isFromExterns() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1236,StaticSourceFile file =
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1237,((StaticSourceFile) this.getProp(STATIC_SOURCE_FILE));
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1238,return file == null ? false : file.isExtern();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1999,"utProp(SOURCENAME_PROP, other.getProp(SOURCENAME_PROP));"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2033,"putProp(SOURCENAME_PROP, other.getProp(SOURCENAME_PROP));"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2037,if (getProp(STATIC_SOURCE_FILE) == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2038,"putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1193,"ode root = IRFactory.transformTree(script, string, config, errorReporter);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1193,Node root = IRFactory.transformTree(
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1194,"script, null, string, config, errorReporter);"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,34,import com.google.javascript.rhino.jstype.SimpleSourceFile;
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,35,import com.google.javascript.rhino.jstype.StaticSourceFile;
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2645,"StaticSourceFile file = new SimpleSourceFile(script.getSourceName(), false);"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2649,"cript.getSourceName(),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2652,"file,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2687,"StaticSourceFile file = new SimpleSourceFile(""testcode"", false);"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2687,"testcode"", config, errorReporter);"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2691,"file, config, errorReporter);"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,26,import com.google.javascript.rhino.jstype.SimpleSourceFile;
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,27,import com.google.javascript.rhino.jstype.StaticSourceFile;
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,29,mport java.util.logging.Logger;
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,32,import java.util.logging.Logger;
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,923,"StaticSourceFile file = new SimpleSourceFile(""input"", false);"
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,922,"input"", string, ParserRunner.createConfig(isIdeMode, mode, false),"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,925,"file, string, ParserRunner.createConfig(isIdeMode, mode, false),"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,940,"StaticSourceFile file = new SimpleSourceFile(""input"", false);"
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,938,"input"", string, ParserRunner.createConfig(true, mode, false),"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,942,"file, string, ParserRunner.createConfig(true, mode, false),"
