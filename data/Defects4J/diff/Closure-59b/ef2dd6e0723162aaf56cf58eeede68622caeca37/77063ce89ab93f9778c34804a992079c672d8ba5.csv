is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,19,import java.util.Arrays;
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,22,* A utility class for working with Base64 values.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,23,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,25,final class Base64 {
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,27,// This is a utility class
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,28,private Base64() {}
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,31,*  A map used to convert integer values in the range 0-63 to their base64
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,32,*  values.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,34,private static final String BASE64_MAP =
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,35,"""ABCDEFGHIJKLMNOPQRSTUVWXYZ"" +"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,36,"""abcdefghijklmnopqrstuvwxyz"" +"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,37,"""0123456789+/"";"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,40,* A map used to convert base64 character into integer values.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,42,private static final int[] BASE64_DECODE_MAP = new int[256];
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,43,static {
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,44,"Arrays.fill(BASE64_DECODE_MAP, -1);"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,45,for (int i = 0; i < BASE64_MAP.length(); i++)
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,46,BASE64_DECODE_MAP[BASE64_MAP.charAt(i)] = i;
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,50,* @param value A value in the range of 0-63.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,51,* @return a base64 digit.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,53,public static char toBase64(int value) {
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,54,"assert (value <= 63 && value >= 0) : ""value out of range:"" + value;"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,55,return BASE64_MAP.charAt(value);
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,59,* @param c A base64 digit.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,60,* @return A value in the range of 0-63.
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,62,public static int fromBase64(char c) {
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,63,int result = BASE64_DECODE_MAP[c];
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,64,"assert (result != -1) : ""invalid char"";"
True,src/com/google/debugging/sourcemap/Base64.java,src/com/google/debugging/sourcemap/Base64.java,65,return BASE64_DECODE_MAP[c];
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,19,import java.io.IOException;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,22,* We encode our variable length numbers as base64 encoded strings with
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,23,* the least significant digit coming first.  Each base64 digit encodes
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,24,* a 5-bit value (0-31) and a continuation bit.  Signed values can be
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,25,* represented by using the least significant bit of the value as the
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,26,* sign bit.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,28,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,30,final class Base64VLQ {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,31,// Utility class.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,32,private Base64VLQ() {}
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,34,"// A Base64 VLQ digit can represent 5 bits, so it is base-32."
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,35,private static final int VLQ_BASE_SHIFT = 5;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,36,private static final int VLQ_BASE = 1 << VLQ_BASE_SHIFT;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,38,"// A mask of bits for a VLQ digit (11111), 31 decimal."
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,39,private static final int VLQ_BASE_MASK = VLQ_BASE-1;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,41,// The continuation bit is the 6th bit.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,42,private static final int VLQ_CONTINUATION_BIT = VLQ_BASE;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,45,* Converts from a two-complement value to a value where the sign bit is
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,46,"* is placed in the least significant bit.  For example, as decimals:"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,47,"*   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,48,"*   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,50,private static int toVLQSigned(int value) {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,51,if (value < 0) {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,52,return ((-value) << 1) + 1;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,53,} else {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,54,return (value << 1) + 0;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,59,* Converts to a two-complement value from a value where the sign bit is
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,60,"* is placed in the least significant bit.  For example, as decimals:"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,61,"*   2 (10 binary) becomes 1, 3 (11 binary) becomes -1"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,62,"*   4 (100 binary) becomes 2, 5 (101 binary) becomes -2"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,64,private static int fromVLQSigned(int value) {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,65,boolean negate = (value & 1) == 1;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,66,value = value >> 1;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,67,return negate ? -value : value;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,71,* Writes a VLQ encoded value to the provide appendable.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,72,* @throws IOException
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,74,"public static void encode(Appendable out, int value)"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,75,throws IOException {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,76,value = toVLQSigned(value);
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,77,do {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,78,int digit = value & VLQ_BASE_MASK;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,79,value >>>= VLQ_BASE_SHIFT;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,80,if (value > 0) {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,81,digit |= VLQ_CONTINUATION_BIT;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,83,out.append(Base64.toBase64(digit));
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,84,} while (value > 0);
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,88,"* A simple interface for advancing through a sequence of characters, that"
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,89,* communicates that advance back to the source.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,91,interface CharIterator {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,92,boolean hasNext();
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,93,char next();
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,97,* Decodes the next VLQValue from the provided CharIterator.
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,99,public static int decode(CharIterator in) {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,100,int result = 0;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,101,boolean continuation;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,102,int shift = 0;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,103,do {
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,104,char c = in.next();
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,105,int digit = Base64.fromBase64(c);
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,106,continuation = (digit & VLQ_CONTINUATION_BIT) != 0;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,107,digit &= VLQ_BASE_MASK;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,108,result = result + (digit << shift);
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,109,shift = shift + VLQ_BASE_SHIFT;
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,110,} while (continuation);
True,src/com/google/debugging/sourcemap/Base64VLQ.java,src/com/google/debugging/sourcemap/Base64VLQ.java,112,return fromVLQSigned(result);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,19,import org.json.JSONException;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,20,import org.json.JSONObject;
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,35,ourceMapConsumer consumer = null;
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,36,ourceMapFormat format = detectVersion(contents);
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,37,onsumer = createForVerion(detectVersion(contents));
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,38,onsumer.parse(contents);
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,39,eturn consumer;
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,43, @param contents
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,44, @return The best guess of the source map version.
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,45, @throws SourceMapParseException
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,47,rivate static SourceMapFormat detectVersion(String contents)
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,48,hrows SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,38,"// Version 1, starts with a magic string"
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,50,eturn SourceMapFormat.V1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,40,SourceMapConsumerV1 consumer =  new SourceMapConsumerV1();
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,41,consumer.parse(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,42,return consumer;
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,52,eturn SourceMapFormat.V2;
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,53, else {
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,54,"hrow new SourceMapParseException(""unable to detect source map format"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,44,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,45,"// Revision 2 and 3, are JSON Objects"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,46,JSONObject sourceMapRoot = new JSONObject(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,47,// Check basic assertions about the format.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,48,"int version = sourceMapRoot.getInt(""version"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,49,switch (version) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,50,case 2: {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,51,SourceMapConsumerV2 consumer =  new SourceMapConsumerV2();
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,52,consumer.parse(sourceMapRoot);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,53,return consumer;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,55,case 3: {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,56,SourceMapConsumerV3 consumer =  new SourceMapConsumerV3();
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,57,consumer.parse(sourceMapRoot);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,58,return consumer;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,60,default:
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,61,throw new SourceMapParseException(
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,62,"""Unknown source map version:"" + version);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,64,} catch (JSONException ex) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,65,"throw new SourceMapParseException(""JSON parse exception: "" + ex);"
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,59, @return The appropriate source map object for the given source map format.
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,60, @throws SourceMapParseException
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,62,rivate static SourceMapConsumer createForVerion(
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,63,ourceMapFormat format)
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,64,hrows SourceMapParseException {
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,65,witch (format) {
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,66,ase V1:
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,67,eturn new SourceMapConsumerV1();
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,68,ase V2:
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,69,eturn new SourceMapConsumerV2();
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,70,efault:
False,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,71,"hrow new SourceMapParseException(""unsupported source map format"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,69,"throw new SourceMapParseException(""unable to detect source map format"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,19,import com.google.common.base.Preconditions;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,20,import com.google.common.collect.Lists;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,21,import com.google.debugging.sourcemap.Base64VLQ.CharIterator;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,22,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,23,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,25,import org.json.JSONArray;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,26,import org.json.JSONException;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,27,import org.json.JSONObject;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,29,import java.util.ArrayList;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,30,import java.util.List;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,33,"* Class for parsing version 3 of the SourceMap format, as produced by the"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,34,"* Closure Compiler, etc."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,35,* http://goto.google.com/sourcemapv3
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,36,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,38,public class SourceMapConsumerV3 implements SourceMapConsumer {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,39,static final int UNMAPPED = -1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,41,private String[] sources;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,42,private String[] names;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,43,private int lineCount;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,44,// Slots in the lines list will be null if the line does not have any entries.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,45,private List<ArrayList<Entry>> lines = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,47,public SourceMapConsumerV3() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,52,* Parses the given contents containing a source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,54,public void parse(String contents) throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,55,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,56,JSONObject sourceMapRoot = new JSONObject(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,57,parse(sourceMapRoot);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,58,} catch (JSONException ex) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,59,"throw new SourceMapParseException(""JSON parse exception: "" + ex);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,64,* Parses the given contents containing a source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,66,public void parse(JSONObject sourceMapRoot) throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,67,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,68,// Check basic assertions about the format.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,69,"int version = sourceMapRoot.getInt(""version"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,70,if (version != 3) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,71,"throw new SourceMapParseException(""Unknown version: "" + version);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,74,"String file = sourceMapRoot.getString(""file"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,75,if (file.isEmpty()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,76,"throw new SourceMapParseException(""File entry is missing or empty"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,79,"lineCount = sourceMapRoot.getInt(""lineCount"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,80,"String lineMap = sourceMapRoot.getString(""mappings"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,82,"sources = getJavaStringArray(sourceMapRoot.getJSONArray(""sources""));"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,83,"names = getJavaStringArray(sourceMapRoot.getJSONArray(""names""));"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,85,lines = Lists.newArrayListWithCapacity(lineCount);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,87,new MappingBuilder(lineMap).build();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,88,} catch (JSONException ex) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,89,"throw new SourceMapParseException(""JSON parse exception: "" + ex);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,93,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,94,"public OriginalMapping getMappingForLine(int lineNumber, int column) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,95,// Normalize the line and column numbers to 0.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,96,lineNumber--;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,97,column--;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,99,if (lineNumber < 0 || lineNumber >= lines.size()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,100,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,103,Preconditions.checkState(lineNumber >= 0);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,104,Preconditions.checkState(column >= 0);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,107,// If the line is empty return the previous mapping.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,108,if (lines.get(lineNumber) == null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,109,return getPreviousMapping(lineNumber);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,112,ArrayList<Entry> entries = lines.get(lineNumber);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,113,// No empty lists.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,114,Preconditions.checkState(entries.size() > 0);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,115,if (entries.get(0).getGeneratedColumn() > column) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,116,return getPreviousMapping(lineNumber);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,119,"int index = search(entries, column, 0, entries.size() -1);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,120,"Preconditions.checkState(index >= 0, ""unexpected:""+index);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,121,return getOriginalMappingForEntry(entries.get(index));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,124,private String[] getJavaStringArray(JSONArray array) throws JSONException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,125,int len = array.length();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,126,String[] result = new String[len];
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,127,for(int i = 0; i< len; i++) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,128,result[i] = array.getString(i);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,130,return result;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,133,private class MappingBuilder {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,134,private final static int MAX_ENTRY_VALUES = 5;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,135,private final StringCharIterator content;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,136,private int line = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,137,private int previousCol = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,138,private int previousSrcId = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,139,private int previousSrcLine = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,140,private int previousSrcColumn = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,141,private int previousNameId = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,143,MappingBuilder(String lineMap) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,144,this.content = new StringCharIterator(lineMap);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,147,void build() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,148,int [] temp = new int[MAX_ENTRY_VALUES];
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,149,ArrayList<Entry> entries = new ArrayList<Entry>();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,150,while (content.hasNext()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,151,// ';' denotes a new line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,152,if (tryConsumeToken(';')) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,153,"// The line is complete, store the result for the line,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,154,// null if the line is empty.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,155,ArrayList<Entry> result;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,156,if (entries.size() > 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,157,result = entries;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,158,// A new array list for the next line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,159,entries = new ArrayList<Entry>();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,160,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,161,result = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,163,lines.add(result);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,164,entries.clear();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,165,line++;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,166,previousCol = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,167,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,168,// grab the next entry for the current line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,169,int entryValues = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,170,while (!entryComplete()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,171,temp[entryValues] = nextValue();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,172,entryValues++;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,174,"Entry entry = decodeEntry(temp, entryValues);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,176,validateEntry(entry);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,177,entries.add(entry);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,179,"// Consume the separating token, if there is one."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,180,"tryConsumeToken(',');"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,186,* Sanity check the entry.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,188,private void validateEntry(Entry entry) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,189,Preconditions.checkState(line < lineCount);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,190,Preconditions.checkState(entry.getSourceFileId() == UNMAPPED
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,191,|| entry.getSourceFileId() < sources.length);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,192,Preconditions.checkState(entry.getNameId() == UNMAPPED
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,193,|| entry.getNameId() < names.length);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,197,"* Decodes the next entry, using the previous encountered values to"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,198,* decode the relative values.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,200,* @param vals An array of integers that represent values in the entry.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,201,* @param entryValues The number of entries in the array.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,202,* @return The entry object.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,204,"private Entry decodeEntry(int[] vals, int entryValues) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,205,Entry entry;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,206,switch (entryValues) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,207,"// The first values, if present are in the following order:"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,208,//   0: the starting column in the current line of the generated file
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,209,//   1: the id of the original source file
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,210,//   2: the starting line in the original source
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,211,//   3: the starting column in the original source
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,212,//   4: the id of the original symbol name
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,213,// The values are relative to the last encountered value for that field.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,214,// Note: the previously column value for the generated file is reset
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,215,// to '0' when a new line is encountered.  This is done in the 'build'
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,216,// method.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,218,case 1:
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,219,// An unmapped section of the generated file.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,220,entry = new UnmappedEntry(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,221,vals[0] + previousCol);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,222,// Set the values see for the next entry.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,223,previousCol = entry.getGeneratedColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,224,return entry;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,226,case 4:
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,227,// A mapped section of the generated file.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,228,entry = new UnnamedEntry(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,229,"vals[0] + previousCol,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,230,"vals[1] + previousSrcId,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,231,"vals[2] + previousSrcLine,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,232,vals[3] + previousSrcColumn);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,233,// Set the values see for the next entry.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,234,previousCol = entry.getGeneratedColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,235,previousSrcId = entry.getSourceFileId();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,236,previousSrcLine = entry.getSourceLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,237,previousSrcColumn = entry.getSourceColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,238,return entry;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,240,case 5:
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,241,"// A mapped section of the generated file, that has an associated"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,242,// name.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,243,entry = new NamedEntry(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,244,"vals[0] + previousCol,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,245,"vals[1] + previousSrcId,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,246,"vals[2] + previousSrcLine,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,247,"vals[3] + previousSrcColumn,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,248,vals[4] + previousNameId);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,249,// Set the values see for the next entry.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,250,previousCol = entry.getGeneratedColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,251,previousSrcId = entry.getSourceFileId();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,252,previousSrcLine = entry.getSourceLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,253,previousSrcColumn = entry.getSourceColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,254,previousNameId = entry.getNameId();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,255,return entry;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,257,default:
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,258,throw new IllegalStateException(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,259,"""Unexpected number of values for entry:"" + entryValues);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,263,private boolean tryConsumeToken(char token) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,264,if (content.hasNext() && content.peek() == token) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,265,// consume the comma
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,266,content.next();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,267,return true;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,269,return false;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,272,private boolean entryComplete() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,273,if (!content.hasNext()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,274,return true;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,277,char c = content.peek();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,278,"return (c == ';' || c == ',');"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,281,private int nextValue() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,282,return Base64VLQ.decode(content);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,287,* Perform a binary search on the array to find a section that covers
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,288,* the target column.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,290,"private int search(ArrayList<Entry> entries, int target, int start, int end) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,291,while (true) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,292,int mid = ((end - start) / 2) + start;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,293,"int compare = compareEntry(entries, mid, target);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,294,if (compare == 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,295,return mid;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,296,} else if (compare < 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,297,// it is in the upper half
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,298,start = mid + 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,299,if (start > end) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,300,return end;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,302,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,303,// it is in the lower half
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,304,end = mid - 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,305,if (end < start) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,306,return end;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,313,* Compare an array entry's column value to the taget column value.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,315,"private int compareEntry(ArrayList<Entry> entries, int entry, int target) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,316,return entries.get(entry).getGeneratedColumn() - target;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,320,* Returns the mapping entry that proceeds the supplied line or null if no
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,321,* such entry exists.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,323,private OriginalMapping getPreviousMapping(int lineNumber) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,324,do {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,325,if (lineNumber == 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,326,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,328,lineNumber--;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,329,} while (lines.get(lineNumber) == null);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,330,ArrayList<Entry> entries = lines.get(lineNumber);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,331,return getOriginalMappingForEntry(entries.get(entries.size() -1));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,335,"* Creates an ""OriginalMapping"" object for the given entry object."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,337,private OriginalMapping getOriginalMappingForEntry(Entry entry) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,338,if (entry.getSourceFileId() == UNMAPPED) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,339,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,340,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,341,Builder x = OriginalMapping.newBuilder()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,342,.setOriginalFile(sources[entry.getSourceFileId()])
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,343,.setLineNumber(entry.getSourceLine())
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,344,.setColumnPosition(entry.getSourceColumn());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,345,if (entry.getNameId() != UNMAPPED) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,346,x.setIdentifier(names[entry.getNameId()]);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,348,return x.build();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,353,* A implementation of the Base64VLQ CharIterator used for decoding the
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,354,* mappings encoded in the JSON string.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,356,private static class StringCharIterator implements CharIterator {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,357,final String content;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,358,final int length;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,359,int current = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,361,StringCharIterator(String content) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,362,this.content = content;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,363,this.length = content.length();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,366,public char next() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,367,return content.charAt(current++);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,370,char peek() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,371,return content.charAt(current);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,374,public boolean hasNext() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,375,return  current < length;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,380,* Represents a mapping entry in the source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,382,private interface Entry {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,383,int getGeneratedColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,384,int getSourceFileId();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,385,int getSourceLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,386,int getSourceColumn();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,387,int getNameId();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,391,"* This class represents a portion of the generated file, that is not mapped"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,392,* to a section in the original source.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,394,private static class UnmappedEntry implements Entry {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,395,private final int column;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,397,UnmappedEntry(int column) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,398,this.column = column;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,401,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,402,public int getGeneratedColumn() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,403,return column;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,406,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,407,public int getSourceFileId() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,408,return UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,411,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,412,public int getSourceLine() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,413,return UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,416,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,417,public int getSourceColumn() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,418,return UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,421,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,422,public int getNameId() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,423,return UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,428,"* This class represents a portion of the generated file, that is mapped"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,429,* to a section in the original source.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,431,private static class UnnamedEntry extends UnmappedEntry {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,432,private final int srcFile;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,433,private final int srcLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,434,private final int srcColumn;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,436,"UnnamedEntry(int column, int srcFile, int srcLine, int srcColumn) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,437,super(column);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,438,this.srcFile = srcFile;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,439,this.srcLine = srcLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,440,this.srcColumn = srcColumn;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,443,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,444,public int getSourceFileId() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,445,return srcFile;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,448,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,449,public int getSourceLine() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,450,return srcLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,453,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,454,public int getSourceColumn() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,455,return srcColumn;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,458,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,459,public int getNameId() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,460,return UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,465,"* This class represents a portion of the generated file, that is mapped"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,466,"* to a section in the original source, and is associated with a name."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,468,private static class NamedEntry extends UnnamedEntry {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,469,private final int name;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,471,"NamedEntry(int column, int srcFile, int srcLine, int srcColumn, int name) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,472,"super(column, srcFile, srcLine, srcColumn);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,473,this.name = name;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,476,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,477,public int getNameId() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,478,return name;
False,src/com/google/debugging/sourcemap/SourceMapFormat.java,src/com/google/debugging/sourcemap/SourceMapFormat.java,30,2;
True,src/com/google/debugging/sourcemap/SourceMapFormat.java,src/com/google/debugging/sourcemap/SourceMapFormat.java,30,"V2,"
True,src/com/google/debugging/sourcemap/SourceMapFormat.java,src/com/google/debugging/sourcemap/SourceMapFormat.java,32,/** V3: An even more compact format */
True,src/com/google/debugging/sourcemap/SourceMapFormat.java,src/com/google/debugging/sourcemap/SourceMapFormat.java,33,V3;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorFactory.java,src/com/google/debugging/sourcemap/SourceMapGeneratorFactory.java,40,case V3:
True,src/com/google/debugging/sourcemap/SourceMapGeneratorFactory.java,src/com/google/debugging/sourcemap/SourceMapGeneratorFactory.java,41,return new SourceMapGeneratorV3();
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,46,  A map used to convert integer values in the range 0-63 to their base64
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,47,  values.
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,49,rivate static final String BASE64_MAP =
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,50,"ABCDEFGHIJKLMNOPQRSTUVWXYZ"" +"
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,51,"abcdefghijklmnopqrstuvwxyz"" +"
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,52,"0123456789+/"";"
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,712,hars[size++] = BASE64_MAP.charAt(charValue);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,703,chars[size++] = Base64.toBase64(charValue);
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,718,b.append(BASE64_MAP.charAt(0));
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java,709,sb.append(Base64.toBase64(0));
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,19,import com.google.common.base.Preconditions;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,20,import com.google.common.collect.Lists;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,21,import com.google.common.collect.Maps;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,23,import java.io.IOException;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,24,import java.util.ArrayDeque;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,25,import java.util.Deque;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,26,import java.util.LinkedHashMap;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,27,import java.util.List;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,28,import java.util.Map;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,29,import java.util.Map.Entry;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,31,import javax.annotation.Nullable;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,34,* Collects information mapping the generated (compiled) source back to
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,35,* its original source for debugging purposes.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,37,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,39,public class SourceMapGeneratorV3 implements SourceMapGenerator {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,41,private final static int UNMAPPED = -1;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,45,* A pre-order traversal ordered list of mappings stored in this map.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,47,private List<Mapping> mappings = Lists.newArrayList();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,50,* A map of source names to source name index
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,52,"private LinkedHashMap<String, Integer> sourceFileMap ="
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,53,Maps.newLinkedHashMap();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,56,* A map of source names to source name index
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,58,"private LinkedHashMap<String, Integer> originalNameMap ="
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,59,Maps.newLinkedHashMap();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,62,* Cache of the last mappings source name.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,64,private String lastSourceFile = null;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,67,* Cache of the last mappings source name index.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,69,private int lastSourceFileIndex = -1;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,72,* For validation store the last mapping added.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,74,private Mapping lastMapping;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,77,* The position that the current source map is offset in the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,78,* buffer being used to generated the compiled source file.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,80,"private FilePosition offsetPosition = new FilePosition(0, 0);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,83,* The position that the current source map is offset in the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,84,* generated the compiled source file by the addition of a
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,85,* an output wrapper prefix.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,87,"private FilePosition prefixPosition = new FilePosition(0, 0);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,91,* {@inheritDoc}
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,93,public void reset() {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,94,mappings.clear();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,95,lastMapping = null;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,96,sourceFileMap.clear();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,97,originalNameMap.clear();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,98,lastSourceFile = null;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,99,lastSourceFileIndex = -1;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,100,"offsetPosition = new FilePosition(0, 0);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,101,"prefixPosition = new FilePosition(0, 0);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,105,* @param validate Whether to perform (potentially costly) validation on the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,106,* generated source map.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,108,public void validate(boolean validate) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,109,// Nothing currently.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,113,* Sets the prefix used for wrapping the generated source file before
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,114,* it is written. This ensures that the source map is adjusted for the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,115,* change in character offsets.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,117,* @param prefix The prefix that is added before the generated source code.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,119,public void setWrapperPrefix(String prefix) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,120,// Determine the current line and character position.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,121,int prefixLine = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,122,int prefixIndex = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,124,for (int i = 0; i < prefix.length(); ++i) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,125,if (prefix.charAt(i) == '\n') {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,126,prefixLine++;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,127,prefixIndex = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,128,} else {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,129,prefixIndex++;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,133,"prefixPosition = new FilePosition(prefixLine, prefixIndex);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,137,* Sets the source code that exists in the buffer for which the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,138,* generated code is being generated. This ensures that the source map
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,139,* accurately reflects the fact that the source is being appended to
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,140,"* an existing buffer and as such, does not start at line 0, position 0"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,141,* but rather some other line and position.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,143,* @param offsetLine The index of the current line being printed.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,144,* @param offsetIndex The column index of the current character being printed.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,146,"public void setStartingPosition(int offsetLine, int offsetIndex) {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,147,Preconditions.checkState(offsetLine >= 0);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,148,Preconditions.checkState(offsetIndex >= 0);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,149,"offsetPosition = new FilePosition(offsetLine, offsetIndex);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,153,* Adds a mapping for the given node.  Mappings must be added in order.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,154,* @param startPosition The position on the starting line
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,155,* @param endPosition The position on the ending line.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,157,public void addMapping(
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,158,"String sourceName, @Nullable String symbolName,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,159,"FilePosition sourceStartPosition,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,160,"FilePosition startPosition, FilePosition endPosition) {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,162,// Don't bother if there is not sufficient information to be useful.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,163,if (sourceName == null || sourceStartPosition.getLine() < 0) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,164,return;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,167,FilePosition adjustedStart = startPosition;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,168,FilePosition adjustedEnd = endPosition;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,170,if (offsetPosition.getLine() != 0
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,171,|| offsetPosition.getColumn() != 0) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,172,"// If the mapping is found on the first line, we need to offset"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,173,// its character position by the number of characters found on
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,174,// the *last* line of the source file to which the code is
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,175,// being generated.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,176,int offsetLine = offsetPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,177,int startOffsetPosition = offsetPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,178,int endOffsetPosition = offsetPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,180,if (startPosition.getLine() > 0) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,181,startOffsetPosition = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,184,if (endPosition.getLine() > 0) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,185,endOffsetPosition = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,188,adjustedStart = new FilePosition(
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,189,"startPosition.getLine() + offsetLine,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,190,startPosition.getColumn() + startOffsetPosition);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,192,adjustedEnd = new FilePosition(
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,193,"endPosition.getLine() + offsetLine,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,194,endPosition.getColumn() + endOffsetPosition);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,197,// Create the new mapping.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,198,Mapping mapping = new Mapping();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,199,mapping.sourceFile = sourceName;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,200,mapping.originalPosition = sourceStartPosition;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,201,mapping.originalName = symbolName;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,202,mapping.startPosition = adjustedStart;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,203,mapping.endPosition = adjustedEnd;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,205,// Validate the mappings are in a proper order.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,206,if (lastMapping != null) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,207,int lastLine = lastMapping.startPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,208,int lastColumn = lastMapping.startPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,209,int nextLine = mapping.startPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,210,int nextColumn = mapping.startPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,211,Preconditions.checkState(nextLine > lastLine
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,212,"|| (nextLine == lastLine && nextColumn >= lastColumn),"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,213,"""Incorrect source mappings order, previous : (%s,%s)\n"""
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,214,"+ ""new : (%s,%s)\nnode : %s"","
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,215,"lastLine, lastColumn, nextLine, nextColumn);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,218,lastMapping = mapping;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,219,mappings.add(mapping);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,223,* Writes out the source map in the following format (line numbers are for
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,224,* reference only and are not part of the format):
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,226,* 1.  {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,227,"* 2.    version: 3,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,228,"* 3.    file: ""out.js"""
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,229,* 4.    lineCount: 2
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,230,* 5.    lineMaps: [
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,231,"* 6.        ""ABAAA"","
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,232,"* 7.        ""ABAA"""
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,233,"* 8.     ],"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,234,"* 9.    sourceRoot: """","
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,235,"* 10.   sources: [""foo.js"", ""bar.js""],"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,236,"* 11.   names: [""src"", ""maps"", ""are"", ""fun""],"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,237,"* 12.   mappings: ""a;;abcde,abcd,a;"""
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,238,* 16.  }
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,240,* Line 1: The entire file is a single JSON object
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,241,* Line 2: File revision (always the first entry in the object)
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,242,* Line 3: The name of the file that this source map is associated with.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,243,* Line 4: The number of lines represented in the sourcemap.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,244,"* Line 5: ""lineMaps"" field is a JSON array, where each entry represents a"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,245,*     line in the generated text.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,246,"* Line 6: A line entry, representing a series of line segments, where each"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,247,*     segment encodes an mappings-id and repetition count.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,248,"* Line 9: An optional source root, useful for relocating source files on a"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,249,"*     server or removing repeated prefix values in the ""sources"" entry."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,250,"* Line 10: A list of sources used by the ""mappings"" entry relative to the"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,251,*     sourceRoot.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,252,"* Line 11: A list of symbol names used by the ""mapping"" entry.  This list"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,253,*     may be incomplete.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,254,* Line 12: The mappings field.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,256,"public void appendTo(Appendable out, String name) throws IOException {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,257,int maxLine = prepMappings();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,259,// Add the header fields.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,260,"out.append(""{\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,261,"appendFirstField(out, ""version"", ""3"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,262,"appendField(out, ""file"", escapeString(name));"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,263,"appendField(out, ""lineCount"", String.valueOf(maxLine + 1));"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,265,// Add the mappings themselves.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,266,"appendFieldStart(out, ""mappings"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,267,"// out.append(""["");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,268,(new LineMapper(out)).appendLineMappings();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,269,"// out.append(""]"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,270,appendFieldEnd(out);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,272,// Files names
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,273,"appendFieldStart(out, ""sources"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,274,"out.append(""["");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,275,addSourceNameMap(out);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,276,"out.append(""]"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,277,appendFieldEnd(out);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,279,// Files names
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,280,"appendFieldStart(out, ""names"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,281,"out.append(""["");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,282,addSymbolNameMap(out);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,283,"out.append(""]"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,284,appendFieldEnd(out);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,286,"out.append(""\n}\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,290,* Writes the source name map to 'out'.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,292,private void addSourceNameMap(Appendable out) throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,293,"addNameMap(out, sourceFileMap);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,297,* Writes the source name map to 'out'.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,299,private void addSymbolNameMap(Appendable out) throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,300,"addNameMap(out, originalNameMap);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,303,"private void addNameMap(Appendable out, Map<String, Integer> map)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,304,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,305,int i = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,306,"for (Entry<String, Integer> entry : map.entrySet()) {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,307,String key = entry.getKey();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,308,if (i != 0) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,309,"out.append("","");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,311,out.append(escapeString(key));
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,312,i++;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,317,* Escapes the given string for JSON.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,319,private static String escapeString(String value) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,320,return Util.escapeString(value);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,323,// Source map field helpers.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,325,private static void appendFirstField(
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,326,"Appendable out, String name, String value)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,327,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,328,"out.append(""\"""");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,329,out.append(name);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,330,"out.append(""\"""");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,331,"out.append("":"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,332,out.append(value);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,335,"private static void appendField(Appendable out, String name, String value)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,336,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,337,"out.append("",\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,338,"out.append(""\"""");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,339,out.append(name);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,340,"out.append(""\"""");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,341,"out.append("":"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,342,out.append(value);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,345,"private static void appendFieldStart(Appendable out, String name)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,346,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,347,"appendField(out, name, """");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,350,"@SuppressWarnings(""unused"")"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,351,private static void appendFieldEnd(Appendable out)
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,352,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,356,"* Assigns sequential ids to used mappings, and returns the last line mapped."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,358,private int prepMappings() throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,359,// Mark any unused mappings.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,360,(new MappingTraversal()).traverse(new UsedMappingCheck());
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,362,// Renumber used mappings and keep track of the last line.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,363,int id = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,364,int maxLine = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,365,int sourceId = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,366,int nameId = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,367,for (Mapping m : mappings) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,368,if (m.used) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,369,m.id = id++;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,370,int endPositionLine = m.endPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,371,"maxLine = Math.max(maxLine, endPositionLine);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,375,// Adjust for the prefix.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,376,return maxLine + prefixPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,380,* A mapping from a given position in an input source file to a given position
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,381,* in the generated code.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,383,static class Mapping {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,385,* A unique ID for this mapping for record keeping purposes.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,387,int id = UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,390,* The source file index.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,392,String sourceFile;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,395,* The position of the code in the input source file. Both
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,396,* the line number and the character index are indexed by
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,397,* 1 for legacy reasons via the Rhino Node class.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,399,FilePosition originalPosition;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,402,* The starting position of the code in the generated source
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,403,* file which this mapping represents. Indexed by 0.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,405,FilePosition startPosition;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,408,* The ending position of the code in the generated source
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,409,* file which this mapping represents. Indexed by 0.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,411,FilePosition endPosition;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,414,* The original name of the token found at the position
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,415,* represented by this mapping (if any).
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,417,String originalName;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,420,* Whether the mapping is actually used by the source map.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,422,boolean used = false;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,426,"* Mark any visited mapping as ""used""."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,428,private class UsedMappingCheck implements MappingVisitor {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,430,* @throws IOException
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,432,@Override
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,433,"public void visit(Mapping m, int line, int col, int nextLine, int nextCol)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,434,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,435,if (m != null) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,436,m.used = true;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,441,private interface MappingVisitor {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,443,* @param m The mapping for the current code segment. null if the segment
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,444,*     is unmapped.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,445,* @param line The starting line for this code segment.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,446,* @param col The starting column for this code segment.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,447,* @param endLine The ending line
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,448,* @param endCol The ending column
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,449,* @throws IOException
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,451,"void visit(Mapping m, int line, int col, int endLine, int endCol)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,452,throws IOException;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,456,"* Walk the mappings and visit each segment of the mappings, unmapped"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,457,"* segments are visited with a null mapping, unused mapping are not visited."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,459,private class MappingTraversal {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,460,// The last line and column written
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,461,private int line;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,462,private int col;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,464,MappingTraversal() {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,467,// Append the line mapping entries.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,468,void traverse(MappingVisitor v) throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,469,// The mapping list is ordered as a pre-order traversal.  The mapping
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,470,// positions give us enough information to rebuild the stack and this
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,471,// allows the building of the source map in O(n) time.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,472,Deque<Mapping> stack = new ArrayDeque<Mapping>();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,473,for (Mapping m : mappings) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,474,// Find the closest ancestor of the current mapping:
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,475,"// An overlapping mapping is an ancestor of the current mapping, any"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,476,// non-overlapping mappings are siblings (or cousins) and must be
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,477,// closed in the reverse order of when they encountered.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,478,"while (!stack.isEmpty() && !isOverlapped(stack.peek(), m)) {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,479,Mapping previous = stack.pop();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,480,"maybeVisit(v, previous);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,483,// Any gaps between the current line position and the start of the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,484,// current mapping belong to the parent.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,485,Mapping parent = stack.peek();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,486,"maybeVisitParent(v, parent, m);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,488,stack.push(m);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,491,"// There are no more children to be had, simply close the remaining"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,492,// mappings in the reverse order of when they encountered.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,493,while (!stack.isEmpty()) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,494,Mapping m = stack.pop();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,495,"maybeVisit(v, m);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,500,* @return The line adjusted for the prefix position.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,502,private int getAdjustedLine(FilePosition p) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,503,return p.getLine() + prefixPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,507,* @return The column adjusted for the prefix position.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,509,private int getAdjustedCol(FilePosition p) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,510,int rawLine = p.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,511,int rawCol = p.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,512,// Only the first line needs the character position adjusted.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,513,return (rawLine != 0)
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,514,? rawCol : rawCol + prefixPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,518,* @return Whether m1 ends before m2 starts.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,520,"private boolean isOverlapped(Mapping m1, Mapping m2) {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,521,"// No need to use adjusted values here, relative positions are sufficient."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,522,int l1 = m1.endPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,523,int l2 = m2.startPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,524,int c1 = m1.endPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,525,int c2 = m2.startPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,527,return (l1 == l2 && c1 >= c2) || l1 > l2;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,531,* Write any needed entries from the current position to the end of the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,532,* provided mapping.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,534,"private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,535,int nextLine = getAdjustedLine(m.endPosition);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,536,int nextCol = getAdjustedCol(m.endPosition);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,537,// If this anything remaining in this mapping beyond the
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,538,"// current line and column position, write it out now."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,539,if (line < nextLine || (line == nextLine && col < nextCol)) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,540,"visit(v, m, nextLine, nextCol);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,545,* Write any needed entries to complete the provided mapping.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,547,"private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,548,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,549,int nextLine = getAdjustedLine(m.startPosition);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,550,int nextCol = getAdjustedCol(m.startPosition);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,551,"// If the previous value is null, no mapping exists."
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,552,Preconditions.checkState(line < nextLine || col <= nextCol);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,553,if (line < nextLine || (line == nextLine && col < nextCol)) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,554,"visit(v, parent, nextLine, nextCol);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,559,* Write any entries needed between the current position the next position
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,560,* and update the current position.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,562,"private void visit(MappingVisitor v, Mapping m,"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,563,"int nextLine, int nextCol)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,564,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,565,Preconditions.checkState(line <= nextLine);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,566,Preconditions.checkState(line < nextLine || col < nextCol);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,568,if (line == nextLine && col == nextCol) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,569,// Nothing to do.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,570,Preconditions.checkState(false);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,571,return;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,574,"v.visit(m, line, col, nextLine, nextCol);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,576,line = nextLine;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,577,col = nextCol;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,582,"* To facilitate incremental compiles, create a source map that is built"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,583,* piecemeal from other source maps.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,584,* @throws IOException
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,586,@Override
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,587,public void writeMetaMap(
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,588,"Appendable out, String name, List<SourceMapSection> appSections)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,589,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,590,// Add the header fields.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,591,"out.append(""{\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,592,"appendFirstField(out, ""version"", ""3"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,593,"appendField(out, ""file"", escapeString(name));"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,595,// Add the line character maps.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,596,"appendFieldStart(out, ""sections"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,597,"out.append(""[\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,598,boolean first = true;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,599,Long offset = new Long(0);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,600,for (SourceMapSection section : appSections) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,601,if (first) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,602,first = false;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,603,} else {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,604,"out.append("",\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,606,"out.append(""{\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,607,"appendFirstField(out, ""offset"", offset.toString());"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,608,"appendField(out, ""url"", escapeString(section.getSectionUrl()));"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,609,"out.append(""\n}"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,611,offset += section.getLength();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,614,"out.append(""\n]"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,615,appendFieldEnd(out);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,617,"out.append(""\n}\n"");"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,620,private int getSourceId(String sourceName) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,621,if (sourceName != lastSourceFile) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,622,lastSourceFile = sourceName;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,623,Integer index = sourceFileMap.get(sourceName);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,624,if (index != null) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,625,lastSourceFileIndex = index;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,626,} else {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,627,lastSourceFileIndex = sourceFileMap.size();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,628,"sourceFileMap.put(sourceName, lastSourceFileIndex);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,631,return lastSourceFileIndex;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,634,private int getNameId(String symbolName) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,635,int originalNameIndex;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,636,Integer index = originalNameMap.get(symbolName);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,637,if (index != null) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,638,originalNameIndex = index;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,639,} else {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,640,originalNameIndex = originalNameMap.size();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,641,"originalNameMap.put(symbolName, originalNameIndex);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,643,return originalNameIndex;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,646,private class LineMapper implements MappingVisitor {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,647,// The destination.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,648,private final Appendable out;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,650,private int previousLine = -1;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,651,private int previousColumn = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,653,// Previous values used for storing relative ids.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,654,private int previousSourceFileId;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,655,private int previousSourceLine;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,656,private int previousSourceColumn;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,657,private int previousNameId;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,659,LineMapper(Appendable out) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,660,this.out = out;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,664,* As each segment is visited write out the appropriate line mapping.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,666,"public void visit(Mapping m, int line, int col, int nextLine, int nextCol)"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,667,throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,669,int id = (m != null) ? m.id : UNMAPPED;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,671,if (previousLine != line) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,672,previousColumn = 0;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,675,if (line != nextLine || col != nextCol) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,676,if (previousLine == line) { // not the first entry for the line
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,677,"out.append(',');"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,679,"writeEntry(m, col);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,680,previousLine = line;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,681,previousColumn = col;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,684,for (int i = line; i <= nextLine; i++) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,685,if (i == nextLine) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,686,break;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,689,closeLine(false);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,690,openLine(false);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,695,* Writes an entry for the given column (of the generated text) and
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,696,* associated mapping.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,697,* The values are stored as relative to the last seen values for each
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,698,* field and encoded as Base64VLQs.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,700,"void writeEntry(Mapping m, int column) throws IOException {"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,701,// The relative generated column number
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,702,"Base64VLQ.encode(out, column - previousColumn);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,703,previousColumn = column;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,704,if (m != null) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,705,// The relative source file id
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,706,int sourceId = getSourceId(m.sourceFile);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,707,"Base64VLQ.encode(out, sourceId - previousSourceFileId);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,708,previousSourceFileId = sourceId;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,710,// The relative source file line and column
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,711,int srcline = m.originalPosition.getLine();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,712,int srcColumn = m.originalPosition.getColumn();
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,713,"Base64VLQ.encode(out, srcline - previousSourceLine);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,714,previousSourceLine = srcline;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,716,"Base64VLQ.encode(out, srcColumn - previousSourceColumn);"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,717,previousSourceColumn = srcColumn;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,719,if (m.originalName != null) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,720,// The relative id for the associated symbol name
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,721,int nameId = getNameId(m.originalName);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,722,"Base64VLQ.encode(out, (nameId - previousNameId));"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,723,previousNameId = nameId;
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,728,// Append the line mapping entries.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,729,void appendLineMappings() throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,730,// Start the first line.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,731,openLine(true);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,733,(new MappingTraversal()).traverse(this);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,735,// And close the final line.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,736,closeLine(true);
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,740,* Begin the entry for a new line.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,742,private void openLine(boolean firstEntry) throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,743,if (firstEntry) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,744,"out.append('\""');"
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,749,* End the entry for a line.
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,751,private void closeLine(boolean finalEntry) throws IOException {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,752,out.append(';');
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,753,if (finalEntry) {
True,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,754,"out.append('\""');"
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,31,  A map used to convert integer values in the range 0-63 to their base64
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,32,  values.
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,34,rivate static final String BASE64_MAP =
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,35,"ABCDEFGHIJKLMNOPQRSTUVWXYZ"" +"
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,36,"abcdefghijklmnopqrstuvwxyz"" +"
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,37,"0123456789+/"";"
False,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,117,eturn (previousValue * 64) + BASE64_MAP.indexOf(digit);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,109,return (previousValue * 64) + Base64.fromBase64(digit);
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,58,V3 {
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,59,@Override SourceMap getInstance() {
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,60,return new SourceMap(
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,61,SourceMapGeneratorFactory.getInstance(SourceMapFormat.V3));
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,6,* You may obtain a copy of the License at
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,13,* See the License for the specific language governing permissions and
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,14,* limitations under the License.
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,17,package com.google.debugging.sourcemap;
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,19,import junit.framework.TestCase;
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,22,* @author johnlenz@google.com (John Lenz)
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,24,public class Base64Test extends TestCase {
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,25,public void testBase64() {
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,26,for (int i = 0; i < 64; i++) {
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,27,testValue(i);
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,31,private void testValue(int value) {
True,test/com/google/debugging/sourcemap/Base64Test.java,test/com/google/debugging/sourcemap/Base64Test.java,32,"assertEquals(value, Base64.fromBase64(Base64.toBase64(value)));"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,6,* You may obtain a copy of the License at
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,14,* limitations under the License.
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,17,package com.google.debugging.sourcemap;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,19,import junit.framework.TestCase;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,22,* @author johnlenz@google.com (John Lenz)
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,24,public class Base64VLQTest extends TestCase {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,25,public void testBase64VLQSelectedValues1() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,26,for (int i = 0; i < 63; i++) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,27,testValue(i);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,31,public void testBase64VLQSelectedValues2() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,32,int base = 1;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,33,for (int i = 0; i < 30; i++) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,34,testValue(base-1);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,35,testValue(base);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,36,base *= 2;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,40,public void testBase64VLQSelectedSignedValues1() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,41,for (int i = -(64*64-1); i < (64*64-1); i++) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,42,testValue(i);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,46,public void testBase64VLQSelectedSignedValues2() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,47,int base = 1;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,48,for (int i = 0; i < 30; i++) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,49,testValue(base-1);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,50,testValue(base);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,51,base *= 2;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,53,base = -1;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,54,for (int i = 0; i < 30; i++) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,55,testValue(base-1);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,56,testValue(base);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,57,base *= 2;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,61,static class CharIteratorImpl implements Base64VLQ.CharIterator {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,62,private int current;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,63,private int length;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,64,private CharSequence cs;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,66,void set(CharSequence sb) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,67,this.current = 0;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,68,this.length = sb.length();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,69,this.cs = sb;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,72,@Override
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,73,public boolean hasNext() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,74,return current < length;
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,77,@Override
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,78,public char next() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,79,return cs.charAt(current++);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,83,// Disable this test if it is flaky.
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,84,public void testSpeed() {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,85,long start = System.currentTimeMillis();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,86,CharIteratorImpl ci = new CharIteratorImpl();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,87,try {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,88,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,89,for (int i = 0; i < 1000000; i++) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,90,"Base64VLQ.encode(sb, i);"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,91,ci.set(sb);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,92,int result = Base64VLQ.decode(ci);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,93,"assertEquals(i, result);"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,94,sb.setLength(0);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,96,} catch (Exception e) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,97,"throw new RuntimeException(""failed."", e);"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,99,long end = System.currentTimeMillis();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,100,"// Was 200ms or less, use a larger number to prevent flakiness"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,101,"assertTrue(""too slow"", end-start < 1000);"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,104,private void testValue(int value) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,105,try {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,106,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,107,"Base64VLQ.encode(sb, value);"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,108,CharIteratorImpl ci = new CharIteratorImpl();
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,109,ci.set(sb);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,110,int result = Base64VLQ.decode(ci);
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,111,"assertEquals(value, result);"
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,112,} catch (Exception e) {
True,test/com/google/debugging/sourcemap/Base64VLQTest.java,test/com/google/debugging/sourcemap/Base64VLQTest.java,113,"throw new RuntimeException(""failed for value "" + value, e);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,19,mport com.google.common.base.Preconditions;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,20,mport com.google.common.collect.LinkedListMultimap;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,21,mport com.google.common.collect.Maps;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,22,mport com.google.common.collect.Multimap;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,23,mport com.google.javascript.jscomp.Compiler;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,24,mport com.google.javascript.jscomp.CompilerOptions;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,25,mport com.google.javascript.jscomp.JSSourceFile;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,26,mport com.google.javascript.jscomp.Result;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,28,mport com.google.javascript.jscomp.SourceMap.DetailLevel;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,31,mport junit.framework.TestCase;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,33,mport org.json.JSONArray;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,34,mport org.json.JSONException;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,35,mport org.json.JSONObject;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,37,mport java.io.IOException;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,38,mport java.io.Reader;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,39,mport java.io.StringReader;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,40,mport java.util.Collection;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,41,mport java.util.Map;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,47,ublic class SourceMapGeneratorV1Test extends TestCase {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,48,rivate static final JSSourceFile[] EXTERNS = {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,49,"SSourceFile.fromCode(""externs"", """")"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,26,public class SourceMapGeneratorV1Test extends SourceMapTestCase {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,52,rivate DetailLevel detailLevel = SourceMap.DetailLevel.ALL;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,28,@Override
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,29,SourceMapConsumer getSourceMapConsumer() {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,30,return new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,33,@Override
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,34,Format getSourceMapFormat() {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,35,return SourceMap.Format.V1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,472, Creates a source map for the given JS code and asserts it is
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,473, equal to the expected golden map.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,475,"rivate void checkSourceMap(String js, String expectedMap)"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,476,hrows IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,477,"heckSourceMap(""testcode"", js, expectedMap);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,480,rivate String getSourceMap(RunResult result) throws IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,481,tringBuilder sb = new StringBuilder();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,482,"esult.sourceMap.appendTo(sb, ""testcode"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,483,eturn sb.toString();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,486,"rivate void checkSourceMap(String fileName, String js, String expectedMap)"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,487,hrows IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,488,"unResult result = compile(js, fileName);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,489,"ssertEquals(expectedMap, result.sourceMapFileContent);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,490,"ssertEquals(result.sourceMapFileContent, getSourceMap(result));"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,493,rivate static class RunResult {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,494,tring generatedSource;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,495,ourceMap sourceMap;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,496,ublic String sourceMapFileContent;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,499,rivate static class Token {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,500,tring tokenName;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,501,ilePosition position;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,505, Finds the all the __XX__ tokens in the given Javascript
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,506, string.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,508,"rivate Map<String, Token> findTokens(String js) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,509,"ap<String, Token> tokens = Maps.newLinkedHashMap();"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,511,nt currentLine = 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,512,nt positionOffset = 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,514,or (int i = 0; i < js.length(); ++i) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,515,har current = js.charAt(i);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,517,f (current == '\n') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,518,ositionOffset = i + 1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,519,urrentLine++;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,520,ontinue;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,523,f (current == '_' && (i < js.length() - 5)) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,524,/ Check for the _ token.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,525,f (js.charAt(i + 1) != '_') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,526,ontinue;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,529,/ Loop until we have another _ token.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,530,"tring tokenName = """";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,532,nt j = i + 2;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,533,or (; j < js.length(); ++j) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,534,f (js.charAt(j) == '_') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,535,reak;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,538,okenName += js.charAt(j);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,541,f (tokenName.length() > 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,542,oken token = new Token();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,543,oken.tokenName = tokenName;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,544,nt currentPosition = i - positionOffset;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,545,"oken.position = new FilePosition(currentLine, currentPosition);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,546,"okens.put(tokenName, token);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,549, = j;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,553,eturn tokens;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,556,rivate void compileAndCheck(String js) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,557,unResult result = compile(js);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,559,/ Find all instances of the __XXX__ pattern in the original
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,560,/ source code.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,561,"ap<String, Token> originalTokens = findTokens(js);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,563,/ Find all instances of the __XXX__ pattern in the generated
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,564,/ source code.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,565,"ap<String, Token> resultTokens = findTokens(result.generatedSource);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,567,/ Ensure that the generated instances match via the source map
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,568,/ to the original source code.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,570,/ Ensure the token counts match.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,571,"ssertEquals(originalTokens.size(), resultTokens.size());"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,573,ourceMapReader reader = new SourceMapReader();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,574,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,575,eader.parse(result.sourceMapFileContent);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,576, catch (SourceMapParseException e) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,577,"hrow new RuntimeException(""unexpected exception"", e);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,580,/ Map the tokens from the generated source back to the
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,581,/ input source and ensure that the map is correct.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,582,or (Token token : resultTokens.values()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,583,riginalMapping mapping = reader.getMappingForLine(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,584,"oken.position.getLine() + 1,"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,585,oken.position.getColumn() + 1);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,587,ssertNotNull(mapping);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,589,/ Find the associated token in the input source.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,590,oken inputToken = originalTokens.get(token.tokenName);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,591,ssertNotNull(inputToken);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,593,/ Ensure that the map correctly points to the token (we add 1
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,594,/ to normalize versus the Rhino line number indexing scheme).
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,595,"ssertEquals(mapping.position.getLine(),"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,596,nputToken.position.getLine() + 1);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,598,/ Ensure that if the token name does not being with an 'STR' (meaning a
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,599,/ string) it has an original name.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,600,"f (!inputToken.tokenName.startsWith(""STR"")) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,601,ssertTrue(!mapping.originalName.isEmpty());
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,604,"/ Ensure that if the mapping has a name, it matches the token."
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,605,f (!mapping.originalName.isEmpty()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,606,"ssertEquals(mapping.originalName, ""__"" + inputToken.tokenName + ""__"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,611,rivate RunResult compile(String js) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,612,"eturn compile(js, ""testcode"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,615,"rivate RunResult compile(String js, String fileName) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,616,"eturn compile(js, fileName, null, null);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,619,"rivate RunResult compile(String js1, String fileName1, String js2,"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,620,tring fileName2) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,621,ompiler compiler = new Compiler();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,622,ompilerOptions options = new CompilerOptions();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,623,ptions.sourceMapFormat = Format.V1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,624,"ptions.sourceMapOutputPath = ""testcode_source_map.out"";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,625,ptions.sourceMapDetailLevel = detailLevel;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,627,/ Turn on IDE mode to get rid of optimizations.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,628,ptions.ideMode = true;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,630,"SSourceFile[] inputs = { JSSourceFile.fromCode(fileName1, js1) };"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,632,f (js2 != null && fileName2 != null) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,633,"SSourceFile[] multiple =  { JSSourceFile.fromCode(fileName1, js1),"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,634,"SSourceFile.fromCode(fileName2, js2) };"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,635,nputs = multiple;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,638,"esult result = compiler.compile(EXTERNS, inputs, options);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,640,ssertTrue(result.success);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,641,tring source = compiler.toSource();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,643,tringBuilder sb = new StringBuilder();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,644,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,645,"esult.sourceMap.appendTo(sb, ""testcode"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,646, catch (IOException e) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,647,"hrow new RuntimeException(""unexpected exception"", e);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,650,unResult rr = new RunResult();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,651,r.generatedSource = source;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,652,r.sourceMap = result.sourceMap;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,653,r.sourceMapFileContent = sb.toString();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,654,eturn rr;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,657,ublic static class SourceMapParseException extends IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,658,rivate static final long serialVersionUID = 1L;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,660,ublic SourceMapParseException(String message) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,661,uper(message);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,665,ublic static class OriginalMapping {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,666,ublic final String srcfile;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,667,ublic final FilePosition position;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,668,ublic final String originalName;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,670,"riginalMapping(String srcfile, int line, int column, String name) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,671,his.srcfile = srcfile;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,672,"his.position = new FilePosition(line, column);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,673,his.originalName = name;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,678, Class for parsing and representing a SourceMap
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,679, TODO(johnlenz): This would be best as a separate open-source component.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,680,     Remove this when it is.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,682,ublic class SourceMapReader {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,683,"rivate static final String LINEMAP_HEADER = ""/** Begin line maps. **/"";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,684,rivate static final String FILEINFO_HEADER =
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,685,"/** Begin file information. **/"";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,687,rivate static final String DEFINITION_HEADER =
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,688,"/** Begin mapping definitions. **/"";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,691, Internal class for parsing the SourceMap. Used to maintain parser
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,692, state in an easy to use instance.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,694,rivate class ParseState {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,695,rivate Reader reader = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,696,rivate int currentPosition = 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,698,ublic ParseState(String contents) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,699,his.reader = new StringReader(contents);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,703, Consumes a single character. If we have already reached the end
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,704," of the string, returns  -1."
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,706,rivate int consumeCharacter() {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,707,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,708,urrentPosition++;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,709,eturn reader.read();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,710, catch (IOException iox) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,711,/ Should never happen. Local reader.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,712,"hrow new IllegalStateException(""IOException raised by reader"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,717, Consumes the specified value found in the contents string. If the value
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,718," is not found, throws a parse exception."
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,720,ublic void consume(String value) throws SourceMapParseException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,721,or (int i = 0; i < value.length(); ++i) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,722,nt ch = consumeCharacter();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,724,f (ch == -1 || ch != value.charAt(i)) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,725,"ail(""At character "" + currentPosition + "" expected: "" + value);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,731, Consumes characters until the newline character is found or the string
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,732, has been entirely consumed. Returns the string consumed (without the
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,733, newline).
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,735,ublic String consumeUntilEOL() {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,736,tringBuilder sb = new StringBuilder();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,738,nt ch = -1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,740,hile ((ch = consumeCharacter()) != '\n') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,741,f (ch == -1) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,742,eturn sb.toString();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,745,b.append((char) ch);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,748,eturn sb.toString();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,752, Indicates that parsing has failed by throwing a parse exception.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,754,ublic void fail(String message) throws SourceMapParseException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,755,hrow new SourceMapParseException(message);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,760," Mapping from a line number (0-indexed), to a list of mapping IDs, one for"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,761," each character on the line. For example, if the array for line 2 is"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,762," [4,,,,5,6,,,7], then there will be the entry:"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,764," 1 => {4, 4, 4, 4, 5, 6, 6, 6, 7}"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,767,"rivate Multimap<Integer, Integer> characterMap = null;"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,770, Map of Mapping IDs to the actual mapping object.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,772,"rivate Map<Integer, OriginalMapping> mappings = null;"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,774,ublic SourceMapReader() {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,778, Parses the given contents containing a source map.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,780,ublic void parse(String contents) throws SourceMapParseException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,781,arseState parser = new ParseState(contents);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,783,haracterMap = LinkedListMultimap.create();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,784,appings = Maps.newHashMap();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,786,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,787,/ /** Begin line maps. **/{ count: 2 }
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,788,arser.consume(LINEMAP_HEADER);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,789,tring countJSON = parser.consumeUntilEOL();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,791,SONObject countObject = new JSONObject(countJSON);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,793,"f (!countObject.has(""count"")) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,794,"arser.fail(""Missing 'count'"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,797,"nt lineCount = countObject.getInt(""count"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,799,f (lineCount <= 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,800,"arser.fail(""Count must be >= 1"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,803,"/ [0,,,,,,1,2]"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,804,or (int i = 0; i < lineCount; ++i) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,805,tring currentLine = parser.consumeUntilEOL();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,807,/ Blank lines are allowed in the spec to indicate no mapping
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,808,/ information for the line.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,809,f (currentLine.isEmpty()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,810,ontinue;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,813,SONArray charArray = new JSONArray(currentLine);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,815,nt lastID = -1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,817,or (int j = 0; j < charArray.length(); ++j) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,818,nt mappingID = lastID;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,820,f (!charArray.isNull(j)) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,821,appingID = charArray.optInt(j);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,824,/ Save the current character's mapping.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,825,"haracterMap.put(i, mappingID);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,827,astID = mappingID;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,831,/ /** Begin file information. **/
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,832,arser.consume(FILEINFO_HEADER);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,834,f (parser.consumeUntilEOL().length() > 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,835,"arser.fail(""Unexpected token after file information header"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,838,"/ File information. Not used, so we just consume it."
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,839,or (int i = 0; i < lineCount; ++i) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,840,arser.consumeUntilEOL();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,843,/ /** Begin mapping definitions. **/
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,844,arser.consume(DEFINITION_HEADER);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,846,f (parser.consumeUntilEOL().length() > 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,847,"arser.fail(""Unexpected token after definition header"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,850,tring currentLine = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,852,"/ ['d.js', 3, 78, 'foo']"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,853,or (int mappingID = 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,854,currentLine = parser.consumeUntilEOL()).length() > 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,855,+mappingID) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,857,SONArray mapArray = new JSONArray(currentLine);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,859,f (mapArray.length() < 3) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,860,"arser.fail(""Invalid mapping array"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,863,riginalMapping mapping = new OriginalMapping(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,864,"apArray.getString(0), // srcfile"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,865,"apArray.getInt(1),    // line"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,866,"apArray.getInt(2),    // column"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,867,"apArray.optString(3, """")); // identifier"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,869,"appings.put(mappingID, mapping);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,871, catch (JSONException ex) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,872,"arser.fail(""JSON parse exception: "" + ex);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,876,"ublic OriginalMapping getMappingForLine(int lineNumber, int columnIndex) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,877,"reconditions.checkNotNull(characterMap, ""parse() must be called first"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,879,f (!characterMap.containsKey(lineNumber - 1)) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,880,eturn null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,883,ollection<Integer> mapIds = characterMap.get(lineNumber - 1);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,885,nt columnPosition = columnIndex - 1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,886,f (columnPosition >= mapIds.size() || columnPosition < 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,887,eturn null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,890,/ TODO(user): Find a way to make this faster.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,891,nteger[] mapIdsAsArray = new Integer[mapIds.size()];
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,892,apIds.<Integer>toArray(mapIdsAsArray);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,894,nt mapId = mapIdsAsArray[columnPosition];
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,896,f (mapId < 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,897,eturn null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV1Test.java,900,eturn mappings.get(mapId);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,19,mport com.google.common.base.Preconditions;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,20,mport com.google.common.collect.Lists;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,21,mport com.google.common.collect.Maps;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,23,mport com.google.javascript.jscomp.Compiler;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,24,mport com.google.javascript.jscomp.CompilerOptions;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,25,mport com.google.javascript.jscomp.JSSourceFile;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,26,mport com.google.javascript.jscomp.Result;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,28,mport com.google.javascript.jscomp.SourceMap.DetailLevel;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,30,mport junit.framework.TestCase;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,32,mport org.json.JSONArray;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,33,mport org.json.JSONException;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,34,mport org.json.JSONObject;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,21,import com.google.javascript.jscomp.SourceMap.Format;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,37,mport java.util.Collections;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,38,mport java.util.List;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,39,mport java.util.Map;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,45,ublic class SourceMapGeneratorV2Test extends TestCase {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,46,rivate static final JSSourceFile[] EXTERNS = {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,47,"SSourceFile.fromCode(""externs"", """")"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,29,public class SourceMapGeneratorV2Test extends SourceMapTestCase {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,31,@Override
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,32,SourceMapConsumer getSourceMapConsumer() {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,33,return new SourceMapConsumerV2();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,50,rivate DetailLevel detailLevel = SourceMap.DetailLevel.ALL;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,36,@Override
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,37,Format getSourceMapFormat() {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,38,return SourceMap.Format.V2;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,455, Creates a source map for the given JS code and asserts it is
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,456, equal to the expected golden map.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,458,"rivate void checkSourceMap(String js, String expectedMap)"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,459,hrows IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,460,"heckSourceMap(""testcode"", js, expectedMap);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,463,rivate String getSourceMap(RunResult result) throws IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,464,tringBuilder sb = new StringBuilder();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,465,"esult.sourceMap.appendTo(sb, ""testcode"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,466,eturn sb.toString();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,469,"rivate void checkSourceMap(String fileName, String js, String expectedMap)"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,470,hrows IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,471,"unResult result = compile(js, fileName);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,472,"ssertEquals(expectedMap, result.sourceMapFileContent);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,473,"ssertEquals(result.sourceMapFileContent, getSourceMap(result));"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,476,rivate static class RunResult {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,477,tring generatedSource;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,478,ourceMap sourceMap;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,479,ublic String sourceMapFileContent;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,482,rivate static class Token {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,483,tring tokenName;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,484,ilePosition position;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,488, Finds the all the __XX__ tokens in the given Javascript
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,489, string.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,491,"rivate Map<String, Token> findTokens(String js) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,492,"ap<String, Token> tokens = Maps.newLinkedHashMap();"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,494,nt currentLine = 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,495,nt positionOffset = 0;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,497,or (int i = 0; i < js.length(); ++i) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,498,har current = js.charAt(i);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,500,f (current == '\n') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,501,ositionOffset = i + 1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,502,urrentLine++;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,503,ontinue;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,506,f (current == '_' && (i < js.length() - 5)) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,507,/ Check for the _ token.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,508,f (js.charAt(i + 1) != '_') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,509,ontinue;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,512,/ Loop until we have another _ token.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,513,"tring tokenName = """";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,515,nt j = i + 2;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,516,or (; j < js.length(); ++j) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,517,f (js.charAt(j) == '_') {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,518,reak;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,521,okenName += js.charAt(j);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,524,f (tokenName.length() > 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,525,oken token = new Token();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,526,oken.tokenName = tokenName;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,527,nt currentPosition = i - positionOffset;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,528,"oken.position = new FilePosition(currentLine, currentPosition);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,529,"okens.put(tokenName, token);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,532, = j;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,536,eturn tokens;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,539,rivate void compileAndCheck(String js) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,540,unResult result = compile(js);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,542,/ Find all instances of the __XXX__ pattern in the original
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,543,/ source code.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,544,"ap<String, Token> originalTokens = findTokens(js);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,546,/ Find all instances of the __XXX__ pattern in the generated
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,547,/ source code.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,548,"ap<String, Token> resultTokens = findTokens(result.generatedSource);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,550,/ Ensure that the generated instances match via the source map
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,551,/ to the original source code.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,553,/ Ensure the token counts match.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,554,"ssertEquals(originalTokens.size(), resultTokens.size());"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,556,ourceMapReader reader = new SourceMapReader();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,557,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,558,eader.parse(result.sourceMapFileContent);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,559, catch (SourceMapParseException e) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,560,"hrow new RuntimeException(""unexpected exception"", e);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,561, catch (IOException e) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,562,"hrow new RuntimeException(""unexpected exception"", e);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,565,/ Map the tokens from the generated source back to the
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,566,/ input source and ensure that the map is correct.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,567,or (Token token : resultTokens.values()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,568,riginalMapping mapping = reader.getMappingForLine(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,569,"oken.position.getLine() + 1,"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,570,oken.position.getColumn() + 1);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,572,ssertNotNull(mapping);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,574,/ Find the associated token in the input source.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,575,oken inputToken = originalTokens.get(token.tokenName);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,576,ssertNotNull(inputToken);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,578,/ Ensure that the map correctly points to the token (we add 1
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,579,/ to normalize versus the Rhino line number indexing scheme).
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,580,"ssertEquals(mapping.position.getLine(),"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,581,nputToken.position.getLine() + 1);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,583,/ Ensure that if the token name does not being with an 'STR' (meaning a
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,584,/ string) it has an original name.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,585,"f (!inputToken.tokenName.startsWith(""STR"")) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,586,ssertTrue(!mapping.originalName.isEmpty());
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,589,"/ Ensure that if the mapping has a name, it matches the token."
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,590,f (!mapping.originalName.isEmpty()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,591,"ssertEquals(mapping.originalName, ""__"" + inputToken.tokenName + ""__"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,596,rivate RunResult compile(String js) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,597,"eturn compile(js, ""testcode"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,600,"rivate RunResult compile(String js, String fileName) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,601,"eturn compile(js, fileName, null, null);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,604,"rivate RunResult compile(String js1, String fileName1, String js2,"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,605,tring fileName2) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,606,ompiler compiler = new Compiler();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,607,ompilerOptions options = new CompilerOptions();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,608,"ptions.sourceMapOutputPath = ""testcode_source_map.out"";"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,609,ptions.sourceMapFormat = SourceMap.Format.V2;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,610,ptions.sourceMapDetailLevel = detailLevel;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,612,/ Turn on IDE mode to get rid of optimizations.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,613,ptions.ideMode = true;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,615,"SSourceFile[] inputs = { JSSourceFile.fromCode(fileName1, js1) };"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,617,f (js2 != null && fileName2 != null) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,618,"SSourceFile[] multiple =  { JSSourceFile.fromCode(fileName1, js1),"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,619,"SSourceFile.fromCode(fileName2, js2) };"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,620,nputs = multiple;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,623,"esult result = compiler.compile(EXTERNS, inputs, options);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,625,ssertTrue(result.success);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,626,tring source = compiler.toSource();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,628,tringBuilder sb = new StringBuilder();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,629,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,630,esult.sourceMap.validate(true);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,631,"esult.sourceMap.appendTo(sb, ""testcode"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,632, catch (IOException e) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,633,"hrow new RuntimeException(""unexpected exception"", e);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,636,unResult rr = new RunResult();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,637,r.generatedSource = source;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,638,r.sourceMap = result.sourceMap;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,639,r.sourceMapFileContent = sb.toString();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,640,eturn rr;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,643,ublic static class SourceMapParseException extends IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,644,rivate static final long serialVersionUID = 1L;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,646,ublic SourceMapParseException(String message) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,647,uper(message);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,650,"ublic SourceMapParseException(String message, Exception ex) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,651,"uper(message, ex);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,655,ublic static class OriginalMapping {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,656,ublic final String srcfile;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,657,ublic final FilePosition position;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,658,ublic final String originalName;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,660,"riginalMapping(String srcfile, int line, int column, String name) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,661,his.srcfile = srcfile;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,662,"his.position = new FilePosition(line, column);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,663,his.originalName = name;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,668, Class for parsing and representing a SourceMap
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,669, TODO(johnlenz): This would be best as a seperate open-source component.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,670,     Remove this when it is.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,672,ublic class SourceMapReader {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,673,rivate List<List<Integer>> characterMap = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,676, Map of Mapping IDs to the actual mapping object.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,678,rivate List<OriginalMapping> mappings;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,679,rivate List<String> sources;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,680,rivate List<String> names;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,682,ublic SourceMapReader() {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,686, Parses the given contents containing a source map.
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,687, @throws IOException
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,689,ublic void parse(String contents) throws IOException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,690,haracterMap = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,691,appings = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,692,ources = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,693,ames = null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,695,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,696,SONObject sourceMapRoot = new JSONObject(contents);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,698,"nt version = sourceMapRoot.getInt(""version"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,699,f (version != 2) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,700,"hrow new SourceMapParseException(""unknown version"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,703,"tring file = sourceMapRoot.getString(""file"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,704,f (file.isEmpty()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,705,"hrow new SourceMapParseException(""file entry is missing or empty"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,708,"nt lineCount = sourceMapRoot.getInt(""lineCount"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,709,"SONArray lineMaps = sourceMapRoot.getJSONArray(""lineMaps"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,710,f (lineCount != lineMaps.length()) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,711,hrow new SourceMapParseException(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,712,"lineMaps lenght does not match lineCount"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,715,haracterMap = Lists.newArrayListWithCapacity(lineCount);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,717,or (int i=0; i< lineMaps.length(); i++) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,718,tring lineEntry = lineMaps.getString(i);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,719,ist<Integer> entries =
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,720,ourceMapLineDecoder.decodeLine(lineEntry);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,721,"tring msg = ""line: "" + entries;"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,722,ystem.err.println(msg);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,723,haracterMap.add(entries);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,726,ources = jsonArrayToJavaArray(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,727,"ourceMapRoot.getJSONArray(""sources""));"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,729,"f (sourceMapRoot.has(""names"")) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,730,ames = jsonArrayToJavaArray(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,731,"ourceMapRoot.getJSONArray(""names""));"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,732, else {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,733,ames = Collections.emptyList();
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,736,"SONArray jsonMappings = sourceMapRoot.getJSONArray(""mappings"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,737,appings = Lists.newArrayListWithCapacity(lineCount);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,738,or (int i = 0; i < jsonMappings.length(); i++) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,739,SONArray entry = jsonMappings.getJSONArray(i);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,741,tring name;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,742,ry {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,743,nt nameIndex = entry.getInt(3);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,744,ame = names.get(nameIndex);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,745, catch (JSONException e) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,746,"ame = entry.optString(3, """");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,749,riginalMapping mapping = new OriginalMapping(
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,750,"ources.get(entry.getInt(0)), // srcfile"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,751,"ntry.getInt(1),    // line"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,752,"ntry.getInt(2),    // column"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,753,ame); // identifier
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,754,appings.add(mapping);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,756, catch (JSONException ex) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,757,"hrow new SourceMapParseException(""JSON parse exception"", ex);"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,761,rivate List<String> jsonArrayToJavaArray(JSONArray jsonArray)
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,762,hrows JSONException {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,763,ist<String> result = Lists.newArrayListWithCapacity(jsonArray.length());
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,764,or (int i=0; i< jsonArray.length(); i++) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,765,tring source = jsonArray.getString(i);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,766,esult.add(source);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,768,eturn result;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,771,"ublic OriginalMapping getMappingForLine(int lineNumber, int columnIndex) {"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,772,"reconditions.checkNotNull(characterMap, ""parse() must be called first"");"
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,774,ist<Integer> mapIds = characterMap.get(lineNumber - 1);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,775,f (mapIds == null) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,776,eturn null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,779,nt columnPosition = columnIndex - 1;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,780,f (columnPosition >= mapIds.size() || columnPosition < 0) {
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,781,eturn null;
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,784,nt mapId = mapIds.get(columnPosition);
False,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV2Test.java,786,eturn mappings.get(mapId);
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,6,* You may obtain a copy of the License at
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,13,* See the License for the specific language governing permissions and
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,14,* limitations under the License.
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,17,package com.google.debugging.sourcemap;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,19,import com.google.javascript.jscomp.SourceMap;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,20,import com.google.javascript.jscomp.SourceMap.Format;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,24,* @author johnlenz@google.com (John Lenz)
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,26,public class SourceMapGeneratorV3Test extends SourceMapTestCase {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,28,@Override
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,29,SourceMapConsumer getSourceMapConsumer() {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,30,return new SourceMapConsumerV3();
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,33,@Override
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,34,Format getSourceMapFormat() {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,35,return SourceMap.Format.V3;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,38,public void testBasicMapping1() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,39,"compileAndCheck(""function __BASIC__() { }"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,42,public void testBasicMappingGoldenOutput() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,43,// Empty source map test
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,44,"checkSourceMap(""function __BASIC__() { }"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,46,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,47,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,48,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,49,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,50,"""\""mappings\"":\""AACSA,QAAAA,UAAS,EAAG;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,51,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,52,"""\""names\"":[\""__BASIC__\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,53,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,56,public void testBasicMapping2() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,57,"compileAndCheck(""function __BASIC__(__PARAM1__) {}"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,60,public void testLiteralMappings() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,61,"compileAndCheck(""function __BASIC__(__PARAM1__, __PARAM2__) { "" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,62,"""var __VAR__ = '__STR__'; }"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,65,public void testLiteralMappingsGoldenOutput() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,66,// Empty source map test
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,67,"checkSourceMap(""function __BASIC__(__PARAM1__, __PARAM2__) { "" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,68,"""var __VAR__ = '__STR__'; }"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,70,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,71,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,72,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,73,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,74,"""\""mappings\"":\""AACSA,QAAAA,UAAS,CAACC,UAAD,CAAaC,UAAb,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,75,"""CAAyB,CAAE,IAAIC,QAAU,SAAhB;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,76,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,77,"""\""names\"":[\""__BASIC__\"",\""__PARAM1__\"",\""__PARAM2__\"","" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,78,"""\""__VAR__\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,79,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,82,public void testMultilineMapping() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,83,"compileAndCheck(""function __BASIC__(__PARAM1__, __PARAM2__) {\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,84,"""var __VAR__ = '__STR__';\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,85,"""var __ANO__ = \""__STR2__\"";\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,89,public void testMultilineMapping2() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,90,"compileAndCheck(""function __BASIC__(__PARAM1__, __PARAM2__) {\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,91,"""var __VAR__ = 1;\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,92,"""var __ANO__ = 2;\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,96,public void testMultiFunctionMapping() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,97,"compileAndCheck(""function __BASIC__(__PARAM1__, __PARAM2__) {\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,98,"""var __VAR__ = '__STR__';\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,99,"""var __ANO__ = \""__STR2__\"";\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,100,"""}\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,102,"""function __BASIC2__(__PARAM3__, __PARAM4__) {\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,103,"""var __VAR2__ = '__STR2__';\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,104,"""var __ANO2__ = \""__STR3__\"";\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,105,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,108,public void testGoldenOutput0() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,109,// Empty source map test
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,110,"checkSourceMap("""","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,112,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,113,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,114,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,115,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,116,"""\""mappings\"":\"";\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,117,"""\""sources\"":[],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,118,"""\""names\"":[]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,119,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,122,public void testGoldenOutput1() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,123,detailLevel = SourceMap.DetailLevel.ALL;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,125,"checkSourceMap(""function f(foo, bar) { foo = foo + bar + 2; return foo; }"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,127,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,128,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,129,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,130,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,131,"""\""mappings\"":\""AACSA,QAAAA,EAAC,CAACC,GAAD,CAAMC,GAAN,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,132,"""CAAW,CAAED,GAAA,CAAMA,GAAN,CAAYC,GAAZ,CAAkB,CAAG,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,133,"""OAAOD,IAA9B;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,134,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,135,"""\""names\"":[\""f\"",\""foo\"",\""bar\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,136,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,138,detailLevel = SourceMap.DetailLevel.SYMBOLS;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,140,"checkSourceMap(""function f(foo, bar) { foo = foo + bar + 2; return foo; }"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,142,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,143,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,144,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,145,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,146,"""\""mappings\"":\""AACSA,QAAAA,EAAAA,CAAEC,GAAFD,CAAOE,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,147,"""GAAPF,EAAcC,GAAdD,CAAoBC,GAApBD,CAA0BE,GAA1BF,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,148,"""SAA0CC,IAA1CD;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,149,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,150,"""\""names\"":[\""f\"",\""foo\"",\""bar\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,151,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,154,public void testGoldenOutput2() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,155,"checkSourceMap(""function f(foo, bar) {\r\n\n\n\nfoo = foo + bar + foo;"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,156,"""\nreturn foo;\n}"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,158,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,159,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,160,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,161,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,162,"""\""mappings\"":\""AACSA,QAAAA,EAAC,CAACC,GAAD,CAAMC,GAAN,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,163,"""CAAW,CAIrBD,GAAA,CAAMA,GAAN,CAAYC,GAAZ,CAAkBD,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,164,"""GAClB,OAAOA,IALc;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,165,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,166,"""\""names\"":[\""f\"",\""foo\"",\""bar\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,167,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,170,public void testGoldenOutput3() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,171,"checkSourceMap(""c:\\myfile.js"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,172,"""foo;"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,174,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,175,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,176,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,177,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,178,"""\""mappings\"":\""AACAA;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,179,"""\""sources\"":[\""c:\\\\myfile.js\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,180,"""\""names\"":[\""foo\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,181,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,184,public void testGoldenOutput4() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,185,"checkSourceMap(""c:\\myfile.js"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,186,"""foo;   boo;   goo;"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,188,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,189,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,190,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,191,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,192,"""\""mappings\"":\""AACAA,GAAOC,IAAOC;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,193,"""\""sources\"":[\""c:\\\\myfile.js\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,194,"""\""names\"":[\""foo\"",\""boo\"",\""goo\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,195,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,198,public void testGoldenOutput5() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,199,detailLevel = SourceMap.DetailLevel.ALL;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,201,checkSourceMap(
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,202,"""c:\\myfile.js"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,203,"""/** @preserve\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,204,""" * this is a test.\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,205,""" */\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,206,"""var foo=a + 'this is a really long line that will force the"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,207,"+ "" mapping to span multiple lines 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,208,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,209,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,210,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,211,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,212,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,213,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,214,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,215,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,216,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,217,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,218,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,219,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,220,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,221,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,222,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,223,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,224,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,225,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,226,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,227,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,228,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,229,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,230,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,231,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,232,"+ ""' + c + d + e;"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,234,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,235,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,236,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,237,"""\""lineCount\"":6,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,238,"""\""mappings\"":\""A;;;;AAIA,IAAIA,IAAIC,CAAJD,CAAQ,mxCAARA;AAA8xCE,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,239,"""CAA9xCF,CAAkyCG,CAAlyCH,CAAsyCI;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,240,"""\""sources\"":[\""c:\\\\myfile.js\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,241,"""\""names\"":[\""foo\"",\""a\"",\""c\"",\""d\"",\""e\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,242,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,244,detailLevel = SourceMap.DetailLevel.SYMBOLS;
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,246,"checkSourceMap(""c:\\myfile.js"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,247,"""/** @preserve\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,248,""" * this is a test.\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,249,""" */\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,250,"""var foo=a + 'this is a really long line that will force the"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,251,"+ "" mapping to span multiple lines 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,252,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,253,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,254,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,255,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,256,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,257,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,258,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,259,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,260,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,261,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,262,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,263,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,264,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,265,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,266,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,267,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,268,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,269,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,270,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,271,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,272,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,273,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,274,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,275,"+ "" 123456789 123456789 123456789 123456789 123456789"""
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,276,"+ ""' + c + d + e;"","
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,278,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,279,"""\""version\"":3,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,280,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,281,"""\""lineCount\"":6,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,282,"""\""mappings\"":\""A;;;;IAIIA,IAAIC,CAAJD;AAA8xCE,CAA9xCF,CAAkyCG,"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,283,"""CAAlyCH,CAAsyCI;\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,284,"""\""sources\"":[\""c:\\\\myfile.js\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,285,"""\""names\"":[\""foo\"",\""a\"",\""c\"",\""d\"",\""e\""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,286,"""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,289,public void testBasicDeterminism() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,290,"RunResult result1 = compile(""file1"", ""foo;"", ""file2"", ""bar;"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,291,"RunResult result2 = compile(""file2"", ""foo;"", ""file1"", ""bar;"");"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,293,String map1 = getSourceMap(result1);
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,294,String map2 = getSourceMap(result2);
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,296,// Assert that the files section of the maps are the same. The actual
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,297,"// entries will differ, so we cannot do a simple full comparison."
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,299,// Line 5 has the file information.
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,300,"String files1 = map1.split(""\n"")[4];"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,301,"String files2 = map2.split(""\n"")[4];"
True,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java,303,"assertEquals(files1, files2);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,6,* You may obtain a copy of the License at
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,13,* See the License for the specific language governing permissions and
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,14,* limitations under the License.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,17,package com.google.debugging.sourcemap;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,19,import com.google.common.collect.Maps;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,20,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,21,import com.google.javascript.jscomp.Compiler;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,22,import com.google.javascript.jscomp.CompilerOptions;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,23,import com.google.javascript.jscomp.JSSourceFile;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,24,import com.google.javascript.jscomp.Result;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,25,import com.google.javascript.jscomp.SourceMap;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,26,import com.google.javascript.jscomp.SourceMap.DetailLevel;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,28,import junit.framework.TestCase;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,30,import java.io.IOException;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,31,import java.util.Map;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,34,* @author johnlenz@google.com (John Lenz)
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,36,public abstract class SourceMapTestCase extends TestCase {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,38,public SourceMapTestCase() {}
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,40,static final JSSourceFile[] EXTERNS = {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,41,"JSSourceFile.fromCode(""externs"", """")"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,44,protected DetailLevel detailLevel = SourceMap.DetailLevel.ALL;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,46,protected static class RunResult {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,47,String generatedSource;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,48,SourceMap sourceMap;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,49,public String sourceMapFileContent;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,52,protected static class Token {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,53,String tokenName;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,54,FilePosition position;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,57,@Override
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,58,public void setUp() {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,59,detailLevel = SourceMap.DetailLevel.ALL;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,63,* Creates a source map for the given JS code and asserts it is
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,64,* equal to the expected golden map.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,66,"protected void checkSourceMap(String js, String expectedMap)"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,67,throws IOException {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,68,"checkSourceMap(""testcode"", js, expectedMap);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,71,protected String getSourceMap(RunResult result) throws IOException {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,72,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,73,"result.sourceMap.appendTo(sb, ""testcode"");"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,74,return sb.toString();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,77,"protected void checkSourceMap(String fileName, String js, String expectedMap)"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,78,throws IOException {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,79,"RunResult result = compile(js, fileName);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,80,"assertEquals(expectedMap, result.sourceMapFileContent);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,81,"assertEquals(result.sourceMapFileContent, getSourceMap(result));"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,85,* Finds the all the __XX__ tokens in the given Javascript
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,86,* string.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,88,"private Map<String, Token> findTokens(String js) {"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,89,"Map<String, Token> tokens = Maps.newLinkedHashMap();"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,91,int currentLine = 0;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,92,int positionOffset = 0;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,94,for (int i = 0; i < js.length(); ++i) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,95,char current = js.charAt(i);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,97,if (current == '\n') {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,98,positionOffset = i + 1;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,99,currentLine++;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,100,continue;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,103,if (current == '_' && (i < js.length() - 5)) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,104,// Check for the _ token.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,105,if (js.charAt(i + 1) != '_') {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,106,continue;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,109,// Loop until we have another _ token.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,110,"String tokenName = """";"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,112,int j = i + 2;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,113,for (; j < js.length(); ++j) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,114,if (js.charAt(j) == '_') {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,115,break;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,118,tokenName += js.charAt(j);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,121,if (tokenName.length() > 0) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,122,Token token = new Token();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,123,token.tokenName = tokenName;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,124,int currentPosition = i - positionOffset;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,125,"token.position = new FilePosition(currentLine, currentPosition);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,126,"tokens.put(tokenName, token);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,129,i = j;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,133,return tokens;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,136,abstract SourceMap.Format getSourceMapFormat();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,138,abstract SourceMapConsumer getSourceMapConsumer();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,140,protected void compileAndCheck(String js) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,141,RunResult result = compile(js);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,143,// Find all instances of the __XXX__ pattern in the original
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,144,// source code.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,145,"Map<String, Token> originalTokens = findTokens(js);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,147,// Find all instances of the __XXX__ pattern in the generated
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,148,// source code.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,149,"Map<String, Token> resultTokens = findTokens(result.generatedSource);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,151,// Ensure that the generated instances match via the source map
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,152,// to the original source code.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,154,// Ensure the token counts match.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,155,"assertEquals(originalTokens.size(), resultTokens.size());"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,157,SourceMapConsumer reader = getSourceMapConsumer();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,158,try {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,159,reader.parse(result.sourceMapFileContent);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,160,} catch (SourceMapParseException e) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,161,"throw new RuntimeException(""unexpected exception"", e);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,164,// Map the tokens from the generated source back to the
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,165,// input source and ensure that the map is correct.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,166,for (Token token : resultTokens.values()) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,167,OriginalMapping mapping = reader.getMappingForLine(
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,168,"token.position.getLine() + 1,"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,169,token.position.getColumn() + 1);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,171,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,173,// Find the associated token in the input source.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,174,Token inputToken = originalTokens.get(token.tokenName);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,175,assertNotNull(inputToken);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,177,// Ensure that the map correctly points to the token (we add 1
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,178,// to normalize versus the Rhino line number indexing scheme).
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,179,"assertEquals(mapping.getLineNumber(),"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,180,inputToken.position.getLine() + 1);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,182,// Ensure that if the token name does not being with an 'STR' (meaning a
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,183,// string) it has an original name.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,184,"if (!inputToken.tokenName.startsWith(""STR"")) {"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,185,"assertTrue(""missing name for "" + inputToken.tokenName,"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,186,!mapping.getIdentifier().isEmpty());
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,189,"// Ensure that if the mapping has a name, it matches the token."
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,190,if (!mapping.getIdentifier().isEmpty()) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,191,"assertEquals(mapping.getIdentifier(),"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,192,"""__"" + inputToken.tokenName + ""__"");"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,197,private RunResult compile(String js) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,198,"return compile(js, ""testcode"");"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,201,"private RunResult compile(String js, String fileName) {"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,202,"return compile(js, fileName, null, null);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,205,protected RunResult compile(
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,206,"String js1, String fileName1, String js2, String fileName2) {"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,207,Compiler compiler = new Compiler();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,208,CompilerOptions options = new CompilerOptions();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,209,"options.sourceMapOutputPath = ""testcode_source_map.out"";"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,210,options.sourceMapFormat = getSourceMapFormat();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,211,options.sourceMapDetailLevel = detailLevel;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,213,// Turn on IDE mode to get rid of optimizations.
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,214,options.ideMode = true;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,216,"JSSourceFile[] inputs = { JSSourceFile.fromCode(fileName1, js1) };"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,218,if (js2 != null && fileName2 != null) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,219,"JSSourceFile[] multiple =  { JSSourceFile.fromCode(fileName1, js1),"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,220,"JSSourceFile.fromCode(fileName2, js2) };"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,221,inputs = multiple;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,224,"Result result = compiler.compile(EXTERNS, inputs, options);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,226,"assertTrue(""compilation failed"", result.success);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,227,String source = compiler.toSource();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,229,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,230,try {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,231,result.sourceMap.validate(true);
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,232,"result.sourceMap.appendTo(sb, ""testcode"");"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,233,} catch (IOException e) {
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,234,"throw new RuntimeException(""unexpected exception"", e);"
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,237,RunResult rr = new RunResult();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,238,rr.generatedSource = source;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,239,rr.sourceMap = result.sourceMap;
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,240,rr.sourceMapFileContent = sb.toString();
True,test/com/google/debugging/sourcemap/SourceMapTestCase.java,test/com/google/debugging/sourcemap/SourceMapTestCase.java,241,return rr;
