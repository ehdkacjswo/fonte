is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,45,lass CanCastToVisitor implements RelationshipVisitor<Boolean>{
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,45,class CanCastToVisitor implements RelationshipVisitor<Boolean> {
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,69,f (type.isVoidType() || type.isNullType()) {
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,70,/ allow cast from null or undefined to nullable/voidable types.
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,71,eturn thisType.isEquivalentTo(type);
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,72, else {
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,73,"f (thisType.visit(this, type)) {"
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,74,eturn true;
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,69,"if (thisType.visit(this, type)) {"
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,70,return true;
False,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,86,eturn false;
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,81,return thisType.isSubtype(functionType)
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,82,|| functionType.isSubtype(thisType);
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,139,boolean visited = false;
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,146,visited = true;
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,153,"// Special case the ""null|undefined"" union and allow it to be cast"
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,154,// to any cast to any type containing allowing either null|undefined.
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,155,if (!visited) {
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,156,JSType NULL_TYPE = thisType.getNativeType(JSTypeNative.NULL_TYPE);
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,157,JSType VOID_TYPE = thisType.getNativeType(JSTypeNative.VOID_TYPE);
True,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,src/com/google/javascript/rhino/jstype/CanCastToVisitor.java,158,"return NULL_TYPE.visit(this, thatType) || VOID_TYPE.visit(this, thatType);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1173,ypeOfThis = (ObjectType) maybeTypeOfThis;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1173,typeOfThis = maybeTypeOfThis;
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,155,Assert.assertTrue(a.canCastTo(b));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,156,Assert.assertTrue(a.canCastTo(a));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,157,Assert.assertTrue(b.canCastTo(b));
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,158,Assert.assertTrue(b.canCastTo(a));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5176,"assertTrue(typeJ + "" should be castable to "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5177,typeJ.canCastTo(typeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5178,"assertTrue(typeJ + "" should be castable to Named "" + namedTypeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5179,typeJ.canCastTo(namedTypeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5180,"assertTrue(typeJ + "" should be castable to Proxy "" + proxyTypeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5181,typeJ.canCastTo(proxyTypeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5183,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5184,"""Named "" + typeJ + "" should be castable to "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5185,namedTypeJ.canCastTo(typeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5186,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5187,"""Named "" + typeJ + "" should be castable to Named "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5188,namedTypeJ.canCastTo(namedTypeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5189,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5190,"""Named "" + typeJ + "" should be castable to Proxy "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5191,namedTypeJ.canCastTo(proxyTypeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5193,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5194,"""Proxy "" + typeJ + "" should be castable to "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5195,proxyTypeJ.canCastTo(typeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5196,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5197,"""Proxy "" + typeJ + "" should be castable to Named "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5198,proxyTypeJ.canCastTo(namedTypeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5199,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5200,"""Proxy "" + typeJ + "" should be castable to Proxy "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5201,proxyTypeJ.canCastTo(proxyTypeI));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5570, {@link JSTypeRegistry#createAnonymousObjectType()}}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5597,* {@link JSTypeRegistry#createAnonymousObjectType}}.
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5582, {@link JSTypeRegistry#createAnonymousObjectType()}} and adds
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5609,* {@link JSTypeRegistry#createAnonymousObjectType}} and adds
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5921,public void testCanCastTo() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5922,assertTrue(ALL_TYPE.canCastTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5923,assertTrue(ALL_TYPE.canCastTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5924,assertTrue(ALL_TYPE.canCastTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5925,assertTrue(ALL_TYPE.canCastTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5926,assertTrue(ALL_TYPE.canCastTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5927,assertTrue(ALL_TYPE.canCastTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5929,assertFalse(NUMBER_TYPE.canCastTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5930,assertFalse(NUMBER_TYPE.canCastTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5931,assertFalse(NUMBER_TYPE.canCastTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5932,assertTrue(NUMBER_TYPE.canCastTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5933,assertFalse(NUMBER_TYPE.canCastTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5934,assertFalse(NUMBER_TYPE.canCastTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5936,assertFalse(STRING_TYPE.canCastTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5937,assertFalse(STRING_TYPE.canCastTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5938,assertTrue(STRING_TYPE.canCastTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5939,assertFalse(STRING_TYPE.canCastTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5940,assertFalse(STRING_TYPE.canCastTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5941,assertFalse(STRING_TYPE.canCastTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5943,assertFalse(BOOLEAN_TYPE.canCastTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5944,assertFalse(BOOLEAN_TYPE.canCastTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5945,assertFalse(BOOLEAN_TYPE.canCastTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5946,assertFalse(BOOLEAN_TYPE.canCastTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5947,assertTrue(BOOLEAN_TYPE.canCastTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5948,assertFalse(BOOLEAN_TYPE.canCastTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5950,assertFalse(OBJECT_TYPE.canCastTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5951,assertFalse(OBJECT_TYPE.canCastTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5952,assertFalse(OBJECT_TYPE.canCastTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5953,assertFalse(OBJECT_TYPE.canCastTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5954,assertFalse(OBJECT_TYPE.canCastTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5955,assertTrue(OBJECT_TYPE.canCastTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5957,assertFalse(BOOLEAN_TYPE.canCastTo(OBJECT_NUMBER_STRING));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5958,assertFalse(OBJECT_NUMBER_STRING.canCastTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5960,assertFalse(ARRAY_TYPE.canCastTo(U2U_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5961,assertFalse(U2U_FUNCTION_TYPE.canCastTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5963,assertFalse(NULL_VOID.canCastTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5964,"assertTrue(NULL_VOID.canCastTo(createUnionType(ARRAY_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5966,// We currently allow any function to be cast to any other function type
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5967,assertTrue(ARRAY_FUNCTION_TYPE.canCastTo(BOOLEAN_OBJECT_FUNCTION_TYPE));
