is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,312,// Make sure that the name is not within a loop
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,313,if (NodeUtil.isWithinLoop(use)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,314,return false;
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,414,oolean isCallInLoop = isCallWithinLoop(callNode);
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,414,boolean isCallInLoop = NodeUtil.isWithinLoop(callNode);
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,481, @return Whether the specified callNode has a loop parent that
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,482, is within the current scope.
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,484,rivate boolean isCallWithinLoop(Node callNode) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,485,or (Node parent : callNode.getAncestors()) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,486,f (NodeUtil.isLoopStructure(parent)) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,487,eturn true;
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,490,f (NodeUtil.isFunction(parent)) {
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,491,reak;
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,494,eturn false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1034,* @return Whether the specified node has a loop parent that
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1035,* is within the current scope.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1037,static boolean isWithinLoop(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1038,for (Node parent : n.getAncestors()) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1039,if (NodeUtil.isLoopStructure(parent)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1040,return true;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1043,if (NodeUtil.isFunction(parent)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1044,break;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1047,return false;
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,126,public void testDoNotInlineWithinLoop() {
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,127,"noInline(""var y = noSFX(); do { var z = y.foo(); } while (true);"");"
