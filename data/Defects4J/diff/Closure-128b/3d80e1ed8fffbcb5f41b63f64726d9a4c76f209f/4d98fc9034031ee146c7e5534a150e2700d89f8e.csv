is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,216, else if (NodeUtil.isFunction(n)) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,216,} else if (n.isFunction()) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,286,odeUtil.isFunction(n)) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,286,n.isFunction()) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,498,f (NodeUtil.isFunction(parent)) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,498,if (parent.isFunction()) {
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,87,eturn NodeUtil.isFunction(input);
True,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,87,return input.isFunction();
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,162,reconditions.checkArgument(NodeUtil.isFunction(functionNode));
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,162,Preconditions.checkArgument(functionNode.isFunction());
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,262, else if (NodeUtil.isFunction(n)) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,262,} else if (n.isFunction()) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,321,f (target != null && NodeUtil.isFunction(target)) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,321,if (target != null && target.isFunction()) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,418,f (NodeUtil.isGetProp(useParent)) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,418,if (useParent.isGetProp()) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,438,f (rValue != null && NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,438,if (rValue != null && rValue.isFunction()) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,585,| (NodeUtil.isGetProp(targetExpression)
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,586,|  NodeUtil.isName(targetExpression))) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,585,|| (targetExpression.isGetProp()
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,586,||  targetExpression.isName())) {
False,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,98,f (NodeUtil.isFunction(n) && isConstructor(n)) {
True,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,98,if (n.isFunction() && isConstructor(n)) {
False,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,101, else if (NodeUtil.isAssign(n)
False,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,102,& NodeUtil.isFunction(n.getFirstChild().getNext())
True,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,101,} else if (n.isAssign()
True,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,102,&& n.getFirstChild().getNext().isFunction()
False,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,124,reconditions.checkArgument(NodeUtil.isFunction(func));
True,src/com/google/javascript/jscomp/CheckPropertyOrder.java,src/com/google/javascript/jscomp/CheckPropertyOrder.java,124,Preconditions.checkArgument(func.isFunction());
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,150,f (colorings.isEmpty() || !NodeUtil.isName(n) ||
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,151,odeUtil.isFunction(parent)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,150,if (colorings.isEmpty() || !n.isName() ||
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,151,parent.isFunction()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,173,f (NodeUtil.isVar(parent)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,173,if (parent.isVar()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,207,f (!vNode.getValue().equals(coalescedVar) && NodeUtil.isVar(parent)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,207,if (!vNode.getValue().equals(coalescedVar) && parent.isVar()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,230,f (!NodeUtil.isFunction(v.getParentNode())) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,230,if (!v.getParentNode().isFunction()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,404,eturn (NodeUtil.isName(n)
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,405,| (n.hasChildren() && NodeUtil.isName(n.getFirstChild())));
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,404,return (n.isName()
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,405,|| (n.hasChildren() && n.getFirstChild().isName()));
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,420,f (NodeUtil.isName(n) && var.getName().equals(n.getString()) &&
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,420,if (n.isName() && var.getName().equals(n.getString()) &&
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,425, else if (NodeUtil.isVar(parent)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,425,} else if (parent.isVar()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,434,eturn name != null && NodeUtil.isName(name) &&
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,434,return name != null && name.isName() &&
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,441,eturn name != null && NodeUtil.isName(name) &&
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,441,return name != null && name.isName() &&
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,164,f (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,164,if (n.isVar()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,197,f (!NodeUtil.isName(lhs)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,197,if (!lhs.isName()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,221,f (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,221,if (n.isVar()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,228,reconditions.checkState(NodeUtil.isName(lhs));
True,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,228,Preconditions.checkState(lhs.isName());
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,633,f (NodeUtil.isFunction(curHandler)) {
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,633,if (curHandler.isFunction()) {
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,824,f (NodeUtil.isFunction(handler)) {
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,824,if (handler.isFunction()) {
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,554,f (jsScope == t.getScope() || !NodeUtil.isName(n)
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,555,| NodeUtil.isFunction(parent)) {
True,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,554,if (jsScope == t.getScope() || !n.isName()
True,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,555,|| parent.isFunction()) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,193,f (!NodeUtil.isName(lhs)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,193,if (!lhs.isName()) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,210,odeUtil.isName(rhs) &&
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,210,rhs.isName() &&
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,212,odeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,212,n.isAssign()) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,238,f (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,238,if (n.isAssign()) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,363,f (NodeUtil.isName(n) && variable.equals(n.getString())) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,363,if (n.isName() && variable.equals(n.getString())) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,48, else if (NodeUtil.isFunction(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,48,} else if (parent.isFunction() && parent.getFirstChild() == n) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,54, else if (NodeUtil.isAssign(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,54,} else if (parent.isAssign() && parent.getFirstChild() == n) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,78, else if (NodeUtil.isFunction(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,78,} else if (parent.isFunction() && parent.getFirstChild() == n) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,84, else if (NodeUtil.isAssign(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,84,} else if (parent.isAssign() && parent.getFirstChild() == n) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,215,reconditions.checkArgument(NodeUtil.isFunction(function));
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,216,reconditions.checkArgument(NodeUtil.isName(argumentName));
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,215,Preconditions.checkArgument(function.isFunction());
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,216,Preconditions.checkArgument(argumentName.isName());
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,235,reconditions.checkArgument(NodeUtil.isFunction(node));
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,235,Preconditions.checkArgument(node.isFunction());
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,292,reconditions.checkArgument(NodeUtil.isAssign(node));
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,292,Preconditions.checkArgument(node.isAssign());
False,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,73,f (!NodeUtil.isExpressionNode(n) && !NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,73,if (!NodeUtil.isExpressionNode(n) && !n.isVar()) {
False,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,84,f (NodeUtil.isName(forVar)
False,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,85,& NodeUtil.isVar(n) && n.hasOneChild()) {
True,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,84,if (forVar.isName()
True,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,85,&& n.isVar() && n.hasOneChild()) {
False,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,114,f (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/Denormalize.java,src/com/google/javascript/jscomp/Denormalize.java,114,if (n.isVar()) {
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,102,eturn (parent.getFirstChild() == node) && NodeUtil.isCall(parent);
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,102,return (parent.getFirstChild() == node) && parent.isCall();
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,122,f ((functionNode == null) || !NodeUtil.isFunction(functionNode)) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,122,if ((functionNode == null) || !functionNode.isFunction()) {
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,126,f (!NodeUtil.isGetProp(node)) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,126,if (!node.isGetProp()) {
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,131,eturn NodeUtil.isGetProp(nameNode) &&
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,131,return nameNode.isGetProp() &&
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,216,NodeUtil.isFunction(rValue) ||
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,216,!rValue.isFunction() ||
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,224,NodeUtil.isGetProp(lValue)) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,224,!lValue.isGetProp()) {
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,390,f (NodeUtil.isFunction(node)) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,390,if (node.isFunction()) {
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,395,f (NodeUtil.isThis(child)) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,395,if (child.isThis()) {
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,430,eturn NodeUtil.isName(n) && (NodeUtil.isConstantName(n)
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,430,return n.isName() && (NodeUtil.isConstantName(n)
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,444,& !NodeUtil.isAssign(parent)
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,444,&& !parent.isAssign()
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,476,reconditions.checkState(NodeUtil.isName(expr) || NodeUtil.isGet(expr));
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,476,Preconditions.checkState(expr.isName() || NodeUtil.isGet(expr));
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,222,reconditions.checkArgument(NodeUtil.isFunction(function));
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,222,Preconditions.checkArgument(function.isFunction());
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,309,f (NodeUtil.isFunction(cur)) {
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,309,if (cur.isFunction()) {
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,94,f (NodeUtil.isGetProp(n) && !NodeUtil.isGetProp(p)) {
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,94,if (n.isGetProp() && !p.isGetProp()) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,94,f (NodeUtil.isCall(n) && NodeUtil.functionCallHasSideEffects(n)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,94,if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,98,f (NodeUtil.isNew(n) && NodeUtil.constructorCallHasSideEffects(n)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,98,if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,130,reconditions.checkState(NodeUtil.isFunction(t.getScopeRoot()));
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,130,Preconditions.checkState(t.getScopeRoot().isFunction());
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,192,f (NodeUtil.isName(n)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,192,if (n.isName()) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,196,| NodeUtil.isVar(parent) || parent.getType() == Token.INC ||
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,196,|| parent.isVar() || parent.getType() == Token.INC ||
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,241,reconditions.checkArgument(NodeUtil.isName(use));
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,241,Preconditions.checkArgument(use.isName());
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,251,f (NodeUtil.isFunction(defCfgNode)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,251,if (defCfgNode.isFunction()) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,265,f (NodeUtil.isAssign(def) && !NodeUtil.isExprAssign(def.getParent())) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,265,if (def.isAssign() && !NodeUtil.isExprAssign(def.getParent())) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,340,eturn !NodeUtil.isFunction(input);
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,340,return !input.isFunction();
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,376,f (NodeUtil.isAssign(def)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,376,if (def.isAssign()) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,386, else if (NodeUtil.isVar(defParent)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,386,} else if (defParent.isVar()) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,416,f (NodeUtil.isName(lhs) && lhs.getString().equals(varName)) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,416,if (lhs.isName() && lhs.getString().equals(varName)) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,437,f (NodeUtil.isName(n) && n.getString().equals(varName) &&
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,437,if (n.isName() && n.getString().equals(varName) &&
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,439,(NodeUtil.isAssign(parent) &&
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,439,!(parent.isAssign() &&
False,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,461,f (NodeUtil.isName(node)) {
True,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,461,if (node.isName()) {
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,335,odeUtil.isName(value) &&
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,335,value.isName() &&
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,450,odeUtil.isGetProp(value) &&
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,451,odeUtil.isThis(value.getFirstChild())) {
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,450,value.isGetProp() &&
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,451,value.getFirstChild().isThis()) {
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,528,f (NodeUtil.isGetProp(lhs) && NodeUtil.isThis(lhs.getFirstChild())) {
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,528,if (lhs.isGetProp() && lhs.getFirstChild().isThis()) {
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,530,f (NodeUtil.isName(rhs) &&
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,530,if (rhs.isName() &&
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,158,f (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,158,if (n.isVar()) {
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,318,f (NodeUtil.isName(functionName) || NodeUtil.isGetProp(functionName)) {
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,318,if (functionName.isName() || functionName.isGetProp()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,207,f (NodeUtil.isVar(lhs)) {
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,207,if (lhs.isVar()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,211,f (NodeUtil.isName(lhs)) {
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,211,if (lhs.isName()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,255,f (NodeUtil.isAssignmentOp(n) && NodeUtil.isName(n.getFirstChild())) {
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,255,if (NodeUtil.isAssignmentOp(n) && n.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,260,f (!NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,260,if (!n.isAssign()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,275,reconditions.checkState(NodeUtil.isName(node));
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,275,Preconditions.checkState(node.isName());
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,125,f (NodeUtil.isGetProp(node)) {
True,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,125,if (node.isGetProp()) {
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,130, else if (NodeUtil.isFunction(node)) {
True,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,130,} else if (node.isFunction()) {
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,140,f (NodeUtil.isName(parent)) {
True,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,140,if (parent.isName()) {
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,142,f (NodeUtil.isVar(gramp) &&
True,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,142,if (gramp.isVar() &&
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,149, else if (NodeUtil.isAssign(parent)) {
True,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,149,} else if (parent.isAssign()) {
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,177,f (!NodeUtil.isCall(node) && !NodeUtil.isNew(node)) {
True,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,177,if (!node.isCall() && !node.isNew()) {
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,178,f (NodeUtil.isVar(lhs)) {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,178,if (lhs.isVar()) {
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,181,f (NodeUtil.isName(lhs) && !conditional) {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,181,if (lhs.isName() && !conditional) {
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,213,f (NodeUtil.isAssignmentOp(n) && NodeUtil.isName(n.getFirstChild())) {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,213,if (NodeUtil.isAssignmentOp(n) && n.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,220,f (!NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,220,if (!n.isAssign()) {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,245,f (NodeUtil.isVar(lhs)) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,245,if (lhs.isVar()) {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,248,f (NodeUtil.isName(lhs)) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,248,if (lhs.isName()) {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,278,f (NodeUtil.isName(n.getFirstChild())) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,278,if (n.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,288,"f (NodeUtil.isName(obj) && ""arguments"".equals(obj.getString())) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,288,"if (obj.isName() && ""arguments"".equals(obj.getString())) {"
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,297,"f (NodeUtil.isName(n) && ""arguments"".equals(n.getString())) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,297,"if (n.isName() && ""arguments"".equals(n.getString())) {"
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,304,f (NodeUtil.isName(target)) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,304,if (target.isName()) {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,394,"f (NodeUtil.isName(n) && jsScope.isDeclared(n.getString(), true)) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,394,"if (n.isName() && jsScope.isDeclared(n.getString(), true)) {"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,819,f (!(NodeUtil.isName(n) ||
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,820,odeUtil.isGet(n) && !NodeUtil.isGetProp(parent))) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,819,if (!(n.isName() ||
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,820,NodeUtil.isGet(n) && !parent.isGetProp())) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,920,odeUtil.isFunction(ancestor)) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,920,ancestor.isFunction()) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1364,f (NodeUtil.isCall(parent) && t.inGlobalScope()) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1364,if (parent.isCall() && t.inGlobalScope()) {
False,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,122,odeUtil.isGetProp(site) || NodeUtil.isName(site));
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,122,site.isGetProp() || site.isName());
False,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,393,eturn NodeUtil.isCall(site);
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,393,return site.isCall();
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,140,f (NodeUtil.isAssign(parent) &&
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,140,if (parent.isAssign() &&
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,171,f (NodeUtil.isGetProp(parent)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,171,if (parent.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,174, else if (NodeUtil.isFunction(parent)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,174,} else if (parent.isFunction()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,177, else if (NodeUtil.isAssign(parent)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,177,} else if (parent.isAssign()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,199,f (NodeUtil.isFunction(rhs)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,199,if (rhs.isFunction()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,203,f (NodeUtil.isName(lhs) ||
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,204,odeUtil.isGetProp(lhs) ||
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,205,odeUtil.isGetProp(rhs)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,203,if (lhs.isName() ||
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,204,lhs.isGetProp() ||
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,205,rhs.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,230,f (NodeUtil.isName(param) || NodeUtil.isGetProp(param)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,230,if (param.isName() || param.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,253,f (NodeUtil.isName(n) || NodeUtil.isGetProp(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,253,if (n.isName() || n.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,262,f (NodeUtil.isGetProp(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,262,if (n.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,265, else if (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,265,} else if (n.isAssign()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,280,f ((NodeUtil.isName(lhs) || NodeUtil.isGetProp(lhs)) &&
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,280,if ((lhs.isName() || lhs.isGetProp()) &&
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,282,NodeUtil.isFunction(rhs) &&
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,283,NodeUtil.isNew(rhs)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,282,!rhs.isFunction() &&
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,283,!rhs.isNew()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,294,reconditions.checkArgument(NodeUtil.isCall(call));
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,294,Preconditions.checkArgument(call.isCall());
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,296,f (!NodeUtil.isGetProp(getProp)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,296,if (!getProp.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,318,f (!NodeUtil.isString(symbol)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,318,if (!symbol.isString()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,338,f (NodeUtil.isName(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,338,if (n.isName()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,349,reconditions.checkArgument(NodeUtil.isName(n) || NodeUtil.isGetProp(n));
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,350,f (NodeUtil.isName(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,349,Preconditions.checkArgument(n.isName() || n.isGetProp());
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,350,if (n.isName()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,365,f (!NodeUtil.isGetProp(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,365,if (!n.isGetProp()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,389,f (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,389,if (n.isAssign()) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,451,reconditions.checkArgument(NodeUtil.isGetProp(n));
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,451,Preconditions.checkArgument(n.isGetProp());
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,521,reconditions.checkArgument(NodeUtil.isGetProp(n));
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,521,Preconditions.checkArgument(n.isGetProp());
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,541,f (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,541,if (n.isAssign()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,872,f (isName(assignTarget)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,872,if (assignTarget.isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1361,tatic boolean isNull(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1362,eturn n.isNull();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1366,eturn isNull(n) || isUndefined(n);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1362,return n.isNull() || isUndefined(n);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1396,& !isUndefined(n) && !isNull(n);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1392,&& !isUndefined(n) && !n.isNull();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1501,ode start = (isFunction(n)) ? n.getLastChild() : n;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1497,Node start = (n.isFunction()) ? n.getLastChild() : n;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1513, Is this a GETPROP node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1515,tatic boolean isGetProp(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1516,eturn n.isGetProp();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1520, Is this a NAME node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1522,tatic boolean isName(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1523,eturn n.isName();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1527, Is this a NEW node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1529,tatic boolean isNew(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1530,eturn n.isNew();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1534, Is this a VAR node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1536,tatic boolean isVar(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1537,eturn n.isVar();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1557,reconditions.checkState(isName(n));
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1525,Preconditions.checkState(n.isName());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1559,f (isVar(parent)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1527,if (parent.isVar()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1561, else if (isAssign(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1529,} else if (parent.isAssign() && parent.getFirstChild() == n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1569, Is this a STRING node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1571,tatic boolean isString(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1572,eturn n.isString();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1588, Is this an ASSIGN node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1590,tatic boolean isAssign(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1591,eturn n.isAssign();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1655,f (NodeUtil.isFunction(parent)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1609,if (parent.isFunction()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1779,eturn isName(n) && !n.getString().isEmpty();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1782,** @return Whether the node is a label name. */
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1783,tatic boolean isLabelName(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1784,eturn (n != null && n.isLabelName());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1733,return n.isName() && !n.getString().isEmpty();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1891, Is this a CALL node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1893,tatic boolean isCall(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1894,eturn n.isCall();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1902,eturn NodeUtil.isCall(node) || NodeUtil.isNew(node);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1906, Is this a FUNCTION node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1908,tatic boolean isFunction(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1909,eturn n.isFunction();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1844,return node.isCall() || node.isNew();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1916,reconditions.checkArgument(isFunction(fn));
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1851,Preconditions.checkArgument(fn.isFunction());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1921, Is this a THIS node?
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1923,tatic boolean isThis(Node node) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1924,eturn node.isThis();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1929, Is this an ARRAYLIT node
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1931,tatic boolean isArrayLiteral(Node node) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1932,eturn node.isArrayLit();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2004,reconditions.checkArgument(isFunction(function));
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1924,Preconditions.checkArgument(function.isFunction());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2614,hile (isGetProp(cur)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2534,while (cur.isGetProp()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2711,eturn !isFunction(n);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2631,return !n.isFunction();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2725,| (!isFunction(n) && (parent == null
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2645,|| (!n.isFunction() && (parent == null
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3087,reconditions.checkState(isFunction(function));
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3007,Preconditions.checkState(function.isFunction());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3106,"eturn isString(propNode) && ""toString"".equals(propNode.getString());"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3026,"return propNode.isString() && ""toString"".equals(propNode.getString());"
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,83,f (!NodeUtil.isName(n)) {
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,83,if (!n.isName()) {
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,98,f (NodeUtil.isAssign(parent) &&
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,99,odeUtil.isName(parent.getFirstChild()) &&
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,98,if (parent.isAssign() &&
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,99,parent.getFirstChild().isName() &&
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,124,reconditions.checkArgument(NodeUtil.isAssign(assign));
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,124,Preconditions.checkArgument(assign.isAssign());
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,101,f (!NodeUtil.isFunction(function)) {
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,101,if (!function.isFunction()) {
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,166,f (NodeUtil.isName(node) && ARGUMENTS.equals(node.getString())) {
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,166,if (node.isName() && ARGUMENTS.equals(node.getString())) {
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,224,f (NodeUtil.isCall(getElemParent) &&
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,224,if (getElemParent.isCall() &&
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,97,NodeUtil.isFunction(rValue) ||
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,97,!rValue.isFunction() ||
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,227,f (NodeUtil.isFunction(function)) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,227,if (function.isFunction()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,455,"reconditions.checkArgument(NodeUtil.isFunction(function),"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,455,"Preconditions.checkArgument(function.isFunction(),"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,504,"reconditions.checkArgument(NodeUtil.isFunction(function),"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,504,"Preconditions.checkArgument(function.isFunction(),"
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,85,f (rValue == null || !NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,85,if (rValue == null || !rValue.isFunction()) {
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,112,f (!NodeUtil.isVar(useNodeParent)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,112,if (!useNodeParent.isVar()) {
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,161,reconditions.checkState(NodeUtil.isFunction(fnNode));
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,161,Preconditions.checkState(fnNode.isFunction());
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,192,eturn (parent.getFirstChild() == node) && NodeUtil.isCall(parent);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,192,return (parent.getFirstChild() == node) && parent.isCall();
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,947,oolean nullRight = NodeUtil.isNull(right);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,947,boolean nullRight = right.isNull();
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,522,f (NodeUtil.isName(lhsAssign) && NodeUtil.isName(condition)
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,522,if (lhsAssign.isName() && condition.isName()
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,545,& NodeUtil.isName(n.getFirstChild().getFirstChild())) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,545,&& n.getFirstChild().getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,38,f (NodeUtil.isCall(subtree) ){
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,38,if (subtree.isCall() ){
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,133,f (!NodeUtil.isName(callTarget)) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,133,if (!callTarget.isName()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,370,f (callTarget == null || !NodeUtil.isGetProp(callTarget)) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,370,if (callTarget == null || !callTarget.isGetProp()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,382,f (NodeUtil.isFunction(breakTarget) ||
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,383,reakTarget.getType() == Token.SCRIPT) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,382,if (breakTarget.isFunction() || breakTarget.isScript()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,736,odeUtil.isAssign(getBlockExpression(elseBranch).getFirstChild())) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,735,getBlockExpression(elseBranch).getFirstChild().isAssign()) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,761,odeUtil.isAssign(getBlockExpression(thenBranch).getFirstChild())) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,760,getBlockExpression(thenBranch).getFirstChild().isAssign()) {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,665,"f (!NodeUtil.isName(date) || !""Date"".equals(date.getString())) {"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,665,"if (!date.isName() || !""Date"".equals(date.getString())) {"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,669,f (callGoogNow == null || !NodeUtil.isCall(callGoogNow) ||
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,669,if (callGoogNow == null || !callGoogNow.isCall() ||
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,858,odeUtil.isFunction(node) ||
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,859,odeUtil.isVar(node));
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,858,node.isFunction() ||
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,859,node.isVar());
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,191,f (NodeUtil.isGetProp(name) || NodeUtil.isName(name)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,191,if (name.isGetProp() || name.isName()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,202,f ((rValue != null) && NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,202,if ((rValue != null) && rValue.isFunction()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,334,f (!NodeUtil.isNew(callNode)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,334,if (!callNode.isNew()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,351,f (NodeUtil.isCall(callNode)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,351,if (callNode.isCall()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,356, else if (NodeUtil.isNew(callNode)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,356,} else if (callNode.isNew()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,388,f (NodeUtil.isFunction(node)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,388,if (node.isFunction()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,408,f (NodeUtil.isCall(node) || NodeUtil.isNew(node)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,408,if (node.isCall() || node.isNew()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,529,f (NodeUtil.isName(lhs)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,529,if (lhs.isName()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,544,& NodeUtil.isAssign(op)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,544,&& op.isAssign()
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,550,f (NodeUtil.isThis(lhs.getFirstChild())) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,550,if (lhs.getFirstChild().isThis()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,555,f (NodeUtil.isName(objectNode)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,555,if (objectNode.isName()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,584,f (NodeUtil.isCall(node)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,584,if (node.isCall()
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,590,f (NodeUtil.isNew(node)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,590,if (node.isNew()
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,691, else if (NodeUtil.isName(parent)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,691,} else if (parent.isName()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,693, else if (NodeUtil.isAssign(parent)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,693,} else if (parent.isAssign()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,801,f (objectNode != null && NodeUtil.isName(objectNode)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,801,if (objectNode != null && objectNode.isName()
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,817, else if (objectNode != null && NodeUtil.isThis(objectNode)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,817,} else if (objectNode != null && objectNode.isThis()) {
False,src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java,src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java,128,f (NodeUtil.isFunction(propertyValue)) {
True,src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java,src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java,128,if (propertyValue.isFunction()) {
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,637,f (NodeUtil.isCall(parent) &&
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,637,if (parent.isCall() &&
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,644,f (!(NodeUtil.isGetProp(parent) &&
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,644,if (!(parent.isGetProp() &&
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,95,f (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,95,if (n.isAssign()) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,97, else if (NodeUtil.isVar(n)) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,97,} else if (n.isVar()) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,99, else if (NodeUtil.isFunction(n)){
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,99,} else if (n.isFunction()){
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,165,f (!NodeUtil.isString(id)) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,165,if (!id.isString()) {
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,115,f (NodeUtil.isFunction(n)) {
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,115,if (n.isFunction()) {
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,226,f (NodeUtil.isFunction(n)) {
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,226,if (n.isFunction()) {
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,308,f (!NodeUtil.isFunction(anonymousFnNode) ||
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,308,if (!anonymousFnNode.isFunction() ||
False,src/com/google/javascript/jscomp/ShadowVariables.java,src/com/google/javascript/jscomp/ShadowVariables.java,290,f (NodeUtil.isFunction(cur)) {
True,src/com/google/javascript/jscomp/ShadowVariables.java,src/com/google/javascript/jscomp/ShadowVariables.java,290,if (cur.isFunction()) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,69,eturn !NodeUtil.isFunction(input);
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,69,return !input.isFunction();
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,403,eturn NodeUtil.isCall(input) || NodeUtil.isNew(input);
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,403,return input.isCall() || input.isNew();
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,749,f (NodeUtil.isName(reference)) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,749,if (reference.isName()) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,786,| (NodeUtil.isName(n) && !NodeUtil.isFunction(parent))) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,786,|| (n.isName() && !parent.isFunction())) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,799,reconditions.checkArgument(NodeUtil.isName(variableReference));
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,799,Preconditions.checkArgument(variableReference.isName());
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,848,eturn NodeUtil.isName(node) || NodeUtil.isGet(node);
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,848,return node.isName() || NodeUtil.isGet(node);
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,987,reconditions.checkArgument(NodeUtil.isName(usingNameNode));
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,987,Preconditions.checkArgument(usingNameNode.isName());
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,74,reconditions.checkState(NodeUtil.isFunction(function));
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,74,Preconditions.checkState(function.isFunction());
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,84,f (NodeUtil.isGetProp(useSite)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,84,if (useSite.isGetProp()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,138,f (NodeUtil.isName(node)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,138,if (node.isName()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,145, else if (NodeUtil.isGetProp(node)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,145,} else if (node.isGetProp()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,163,f (inExterns && NodeUtil.isName(node) && parent.getType() == Token.LP) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,163,if (inExterns && node.isName() && parent.getType() == Token.LP) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,175,NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,175,!rValue.isFunction()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,354,f (NodeUtil.isGetProp(lValue)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,354,if (lValue.isGetProp()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,356, else if (NodeUtil.isName(lValue)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,356,} else if (lValue.isName()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,390,& NodeUtil.isName(nameNode)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,390,&& nameNode.isName()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,407,& (NodeUtil.isExprAssign(gramps) || NodeUtil.isName(parent))) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,407,&& (NodeUtil.isExprAssign(gramps) || parent.isName())) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,418,reconditions.checkState(NodeUtil.isFunction(function));
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,418,Preconditions.checkState(function.isFunction());
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425, else if (NodeUtil.isAssign(parent)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425,} else if (parent.isAssign()) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,451,f (NodeUtil.isGetProp(useSite)) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,451,if (useSite.isGetProp()) {
False,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,45,reconditions.checkArgument(NodeUtil.isFunction(functionNode));
True,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,45,Preconditions.checkArgument(functionNode.isFunction());
False,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,58,reconditions.checkArgument(NodeUtil.isFunction(functionNode));
True,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,58,Preconditions.checkArgument(functionNode.isFunction());
False,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,79,f (rValue != null && NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,79,if (rValue != null && rValue.isFunction()) {
False,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,108,f (NodeUtil.isGetProp(useParent)) {
True,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,src/com/google/javascript/jscomp/SimpleFunctionAliasAnalysis.java,108,if (useParent.isGetProp()) {
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,86,eturn NodeUtil.isCall(node)
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,87,| NodeUtil.isNew(node)
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,88,| NodeUtil.isFunction(node)
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,89,| NodeUtil.isName(node)
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,86,return node.isCall()
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,87,|| node.isNew()
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,88,|| node.isFunction()
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,89,|| node.isName()
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,92,| (NodeUtil.isString(node) && NodeUtil.isGet(node.getParent()));
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,92,|| (node.isString() && NodeUtil.isGet(node.getParent()));
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,242,f (NodeUtil.isFunction(original)) {
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,242,if (original.isFunction()) {
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,253,eturn !NodeUtil.isFunction(n1);
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,253,return !n1.isFunction();
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,464,sAssignFunction = NodeUtil.isAssign(originalParent) ||
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,465,odeUtil.isName(originalParent);
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,464,isAssignFunction = originalParent.isAssign() ||
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,465,originalParent.isName();
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,468,sAssignFunction && NodeUtil.isVar(originalParent.getParent());
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,468,isAssignFunction && originalParent.getParent().isVar();
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,689,reconditions.checkArgument(NodeUtil.isFunction(functionNode));
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,689,Preconditions.checkArgument(functionNode.isFunction());
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,704,f (NodeUtil.isName(parent) && NodeUtil.isVar(gramps)) {
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,704,if (parent.isName() && gramps.isVar()) {
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,746,f (NodeUtil.isFunction(ancestor)) {
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,746,if (ancestor.isFunction()) {
False,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,39,f (!NodeUtil.isFunction(n.getParent()) && canFuseIntoOneStatement(n)) {
True,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,39,if (!n.getParent().isFunction() && canFuseIntoOneStatement(n)) {
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,71,f (NodeUtil.isFunction(rhs)) {
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,71,if (rhs.isFunction()) {
False,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,225,f (NodeUtil.isVar(n) && !n.getFirstChild().hasChildren()) {
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,225,if (n.isVar() && !n.getFirstChild().hasChildren()) {
False,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,136,reconditions.checkState(NodeUtil.isFunction(parent));
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,136,Preconditions.checkState(parent.isFunction());
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,101,reconditions.checkArgument(NodeUtil.isVar(parent)
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,102,| NodeUtil.isFunction(parent)
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,101,Preconditions.checkArgument(parent.isVar()
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,102,|| parent.isFunction()
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,685,f (NodeUtil.isFunction(node)) {
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,686,f (NodeUtil.isName(parent)) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,685,if (node.isFunction()) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,686,if (parent.isName()) {
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,688, else if (NodeUtil.isAssign(parent)) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,688,} else if (parent.isAssign()) {
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,693, else if (NodeUtil.isCall(node) || NodeUtil.isNew(node)) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,693,} else if (node.isCall() || node.isNew()) {
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,708,f (NodeUtil.isGetProp(node)) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,708,if (node.isGetProp()) {
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,710,"f (NodeUtil.isName(child) && child.getString().endsWith(""$self"")) {"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,710,"if (child.isName() && child.getString().endsWith(""$self"")) {"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,736,ssertTrue(NodeUtil.isFunction(functionNode));
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,736,assertTrue(functionNode.isFunction());
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,743,ssertTrue(NodeUtil.isFunction(functionNode));
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,743,assertTrue(functionNode.isFunction());
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1051,ublic void testIsLabelName() {
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1052,ompiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1054,/ Test removing the initializer.
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1055,"tring code = ""a:while(1) {a; continue a; break a; break;}"";"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1056,ode actual = parse(code);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1058,ode labelNode = actual.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1059,ssertTrue(labelNode.getType() == Token.LABEL);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1060,ssertTrue(NodeUtil.isLabelName(labelNode.getFirstChild()));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1061,ssertFalse(NodeUtil.isLabelName(labelNode.getLastChild()));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1063,ode whileNode = labelNode.getLastChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1064,ssertTrue(whileNode.getType() == Token.WHILE);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1065,ode whileBlock = whileNode.getLastChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1066,ssertTrue(whileBlock.getType() == Token.BLOCK);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1067,ssertFalse(NodeUtil.isLabelName(whileBlock));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1069,ode firstStatement = whileBlock.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1070,ssertTrue(firstStatement.getType() == Token.EXPR_RESULT);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1071,ode variableReference = firstStatement.getFirstChild();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1072,ssertTrue(variableReference.getType() == Token.NAME);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1073,ssertFalse(NodeUtil.isLabelName(variableReference));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1075,ode continueStatement = firstStatement.getNext();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1076,ssertTrue(continueStatement.getType() == Token.CONTINUE);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1077,ssertTrue(NodeUtil.isLabelName(continueStatement.getFirstChild()));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1079,ode firstBreak = continueStatement.getNext();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1080,ssertTrue(firstBreak.getType() == Token.BREAK);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1081,ssertTrue(NodeUtil.isLabelName(firstBreak.getFirstChild()));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1083,ode secondBreak = firstBreak.getNext();
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1084,ssertTrue(secondBreak.getType() == Token.BREAK);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1085,ssertFalse(secondBreak.hasChildren());
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1086,ssertFalse(NodeUtil.isLabelName(secondBreak.getFirstChild()));
False,test/com/google/javascript/jscomp/ParallelCompilerPassTest.java,test/com/google/javascript/jscomp/ParallelCompilerPassTest.java,108,f ((NodeUtil.isString(n) || NodeUtil.isName(n))
True,test/com/google/javascript/jscomp/ParallelCompilerPassTest.java,test/com/google/javascript/jscomp/ParallelCompilerPassTest.java,108,if ((n.isString() || n.isName())
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,217,f (NodeUtil.isFunction(n)
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,217,if (n.isFunction()
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,516,f (NodeUtil.isFunction(n)
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,516,if (n.isFunction()
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,385,f (NodeUtil.isName(n) && !NodeUtil.isFunction(parent)
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,385,if (n.isName() && !parent.isFunction()
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,117,reconditions.checkState(NodeUtil.isVar(labeledVariable));
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,117,Preconditions.checkState(labeledVariable.isVar());
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,200,f (NodeUtil.isFunction(n)
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,200,if (n.isFunction()
