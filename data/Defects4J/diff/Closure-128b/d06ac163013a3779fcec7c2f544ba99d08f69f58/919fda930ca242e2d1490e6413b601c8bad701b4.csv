is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,25,import com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge;
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,148,"omputeMayUse(n, n, output, false);"
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,150,"// If there's an ON_EX edge, this cfgNode may or may not get executed."
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,151,// We can express this concisely by just pretending this happens in
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,152,// a conditional.
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,153,boolean conditional = hasExceptionHandler(n);
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,154,"computeMayUse(n, n, output, conditional);"
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,159,private boolean hasExceptionHandler(Node cfgNode) {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,160,"List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(cfgNode);"
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,161,"for (DiGraphEdge<Node, Branch> edge : branchEdges) {"
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,162,if (edge.getValue() == Branch.ON_EX) {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,163,return true;
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,166,return false;
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,503,public void testIssue794a() {
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,504,noInline(
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,505,"""var x = 1; "" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,506,"""try { x += someFunction(); } catch (e) {}"" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,507,"""x += 1;"" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,508,"""try { x += someFunction(); } catch (e) {}"" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,509,"""return x;"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,512,public void testIssue794b() {
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,513,noInline(
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,514,"""var x = 1; "" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,515,"""try { x = x + someFunction(); } catch (e) {}"" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,516,"""x = x + 1;"" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,517,"""try { x = x + someFunction(); } catch (e) {}"" +"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,518,"""return x;"");"
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,111,public void testTryCatch() {
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,112,assertMatch(
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,113,"""D: var x = 1; "" +"
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,114,"""try { U: var y = foo() + x; } catch (e) {} "" +"
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,115,"""U: var z = x;"");"
