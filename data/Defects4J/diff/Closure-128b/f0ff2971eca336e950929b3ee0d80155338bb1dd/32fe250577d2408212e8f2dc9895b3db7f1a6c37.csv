is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,159,nt numOffsets = charArray.length();
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,385,nt sourceId = 0;
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,386,nt nameId = 0;
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,623,"nt line = 0, column = 0;"
False,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,src/com/google/debugging/sourcemap/SourceMapGeneratorV3.java,708,nt id = (m != null) ? m.id : UNMAPPED;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,208,** No longer does anything. */
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,209,Deprecated
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,210,rotected void initOptionsFromFlags(CompilerOptions options) {}
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,888,utputNameMaps(options);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,884,outputNameMaps();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1224,"rivate void outputNameMaps(B options) throws FlagUsageException,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1220,"private void outputNameMaps() throws FlagUsageException,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1426,"rintModuleGraphJsonTo(compiler.getDegenerateModuleGraph(), out);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1422,printModuleGraphJsonTo(out);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1435,"oid printModuleGraphJsonTo(JSModuleGraph graph,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1436,ppendable out) throws IOException {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1431,void printModuleGraphJsonTo(Appendable out) throws IOException {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,395,"(NodeUtil.isObjectLitKey(lValue, lValue.getParent()) ||"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,395,!(NodeUtil.isObjectLitKey(lValue) ||
False,src/com/google/javascript/jscomp/AstChangeProxy.java,src/com/google/javascript/jscomp/AstChangeProxy.java,115,ode oldParent = newChild.getParent();
False,src/com/google/javascript/jscomp/AstChangeProxy.java,src/com/google/javascript/jscomp/AstChangeProxy.java,124,ode oldParent = newChild.getParent();
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,143,"f (isDeprecatedFunction(n, parent)) {"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,143,if (isDeprecatedFunction(n)) {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,158,ode parent = n.getParent();
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,159,"f (isDeprecatedFunction(n, parent)) {"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,158,if (isDeprecatedFunction(n)) {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,367, @param t The current traversal.
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,368, @param name The name node.
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,620,"rivate static boolean isDeprecatedFunction(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,617,private static boolean isDeprecatedFunction(Node n) {
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,113,"f (NodeUtil.isObjectLitKey(parent, gramps)) {"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,113,if (NodeUtil.isObjectLitKey(parent)) {
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,125,ode rhs = lhs.getNext();
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,156,"f (n.isThis() && shouldReportThis(n, parent)) {"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,155,if (n.isThis() && shouldReportThis(n)) {
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,164,"rivate boolean shouldReportThis(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,163,private boolean shouldReportThis(Node n) {
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,164,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,64,"f (insideGetCssNameCall(n, parent)) {"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,64,if (insideGetCssNameCall(n)) {
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,67,"f (insideGetUniqueIdCall(n, parent)) {"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,67,if (insideGetUniqueIdCall(n)) {
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,70,"f (insideAssignmentToIdConstant(n, parent)) {"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,70,if (insideAssignmentToIdConstant(n)) {
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,80,"rivate boolean insideGetCssNameCall(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,80,private boolean insideGetCssNameCall(Node n) {
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,81,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,91,"rivate boolean insideGetUniqueIdCall(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,92,private boolean insideGetUniqueIdCall(Node n) {
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,93,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,102,"rivate boolean insideAssignmentToIdConstant(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,104,private boolean insideAssignmentToIdConstant(Node n) {
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,105,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,371,"f (!NodeUtil.isObjectLitKey(r.node, rParent) &&"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,371,if (!NodeUtil.isObjectLitKey(r.node) &&
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,442,"oolean isObjKey = NodeUtil.isObjectLitKey(n, n.getParent());"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,442,boolean isObjKey = NodeUtil.isObjectLitKey(n);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,540,ode greatGreatGramps = greatGramps.getParent();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,936,tring passToCheck = currentPassName;
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,191,"eclaration(JSModule module, Node node, Node parent, Node gramps) {"
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,191,"Declaration(JSModule module, Node node) {"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,338,"ew Declaration(t.getModule(), name, parent, gramps));"
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,338,"new Declaration(t.getModule(), name));"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,345,"ew Declaration(t.getModule(), name, parent, gramps));"
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,345,"new Declaration(t.getModule(), name));"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,364,"ew Declaration(t.getModule(), current, currentParent,"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,365,urrentParent.getParent()));
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,364,"new Declaration(t.getModule(), current));"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,382,"ew Declaration(t.getModule(), parent, gramps,"
False,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,383,ramps.getParent()));
True,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,src/com/google/javascript/jscomp/CrossModuleCodeMotion.java,381,"new Declaration(t.getModule(), parent));"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,57," else if (NodeUtil.isObjectLitKey(n, parent)) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,57,} else if (NodeUtil.isObjectLitKey(n)) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,87," else if (NodeUtil.isObjectLitKey(n, parent)) {"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,87,} else if (NodeUtil.isObjectLitKey(n)) {
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,318,taticScope<T> scope = typeSystem.getRootScope();
True,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,783,"// TODO(johnlenz): shouldn't we use ""alt"" here?"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,233,ode extractedConditional = extractConditional(
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,234,"onconditionalExpr, exprInjectionPoint, needResult);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,233,"extractConditional(nonconditionalExpr, exprInjectionPoint, needResult);"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,308,"reconditions.checkState(!NodeUtil.isObjectLitKey(n, n.getParent()));"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,307,Preconditions.checkState(!NodeUtil.isObjectLitKey(n));
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,763,nt parentType = parent.getType();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,270,* We must get the JSDocInfo from the function's type since the function
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,271, itself does not have an associated JSDocInfo node.
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,273,SDocInfo functionJSDocInfo = functionType.getJSDocInfo();
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,26,mport com.google.javascript.jscomp.DataFlowAnalysis.FlowState;
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,28,mport com.google.javascript.jscomp.MustBeReachingVariableDef.MustDef;
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,204,lowState<MustDef> state = graphNode.getAnnotation();
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,205,inal MustDef defs = state.getIn();
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,295,"etDefinition(getDefCfgNode(), null);"
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,296,"etNumUseInUseCfgNode(useCfgNode, null);"
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,291,getDefinition(getDefCfgNode());
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,292,getNumUseInUseCfgNode(useCfgNode);
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,450,"rivate void getDefinition(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,446,private void getDefinition(Node n) {
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,479,"rivate void getNumUseInUseCfgNode(Node n, Node parant) {"
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,475,private void getNumUseInUseCfgNode(Node n) {
False,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,src/com/google/javascript/jscomp/FunctionArgumentInjector.java,141,nt anonArg = 0;
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,448,oolean foundTemplateType = false;
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,794,"f (parent != null && NodeUtil.isObjectLitKey(n, parent)) {"
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,794,if (parent != null && NodeUtil.isObjectLitKey(n)) {
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,1035,SDocInfo info = ref.node.getJSDocInfo();
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,65,ode assignment;
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,143,ecomposeExpressions(fnNames);
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,143,decomposeExpressions();
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,642,"ode newCode = injector.inline(t, callNode, fnName, fnNode, mode);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,642,"injector.inline(t, callNode, fnName, fnNode, mode);"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,803,rivate void decomposeExpressions(Set<String> fnNames) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,804,xpressionDecomposer decomposer = new ExpressionDecomposer(
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,805,"ompiler, compiler.getUniqueNameIdSupplier(), fnNames);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,803,private void decomposeExpressions() {
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,99,eference declaration = referenceInfo.references.get(0);
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,104,"plitObject(v, declaration, init, referenceInfo);"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,103,"splitObject(v, init, referenceInfo);"
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,399,"rivate void splitObject(Var v, Reference declaration,"
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,400,"eference init,"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,398,"private void splitObject(Var v, Reference init,"
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,207,ode rhs = lhs.getNext();
False,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,src/com/google/javascript/jscomp/MarkNoSideEffectCalls.java,138,ode nameNode = null;
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,166,ode aNode = aDef.node;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,643," else if (NodeUtil.isObjectLitKey(n, parent)) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,643,} else if (NodeUtil.isObjectLitKey(n)) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,919,"f (maybeHiddenAlias(name, n)) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,919,if (maybeHiddenAlias(n)) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,990,"rivate boolean maybeHiddenAlias(String name, Node n) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,990,private boolean maybeHiddenAlias(Node n) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1414, else if (NodeUtil.isObjectLitKey(
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1415,"ootNameNode, rootNameNode.getParent())) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1414,} else if (NodeUtil.isObjectLitKey(rootNameNode)) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,138,ode gParent = parent.getParent();
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,139,ode ggParent = gParent.getParent();
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,144,"arent, gParent, ggParent));"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,142,parent));
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,148,", name, type, root, parent, gParent, root.getLastChild()));"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,146,"t, name, type, root, root.getLastChild()));"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,208,", lhs, getType(rhs), n, parent, parent.getParent());"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,206,"t, lhs, getType(rhs), n);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,376,"SType type, Node n, Node parent, Node gParent, Node rValue) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,374,"JSType type, Node n, Node rValue) {"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,385,", parent, parent.getParent(), rValue);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,383,"n, rValue);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,404,"Nullable Node assign, @Nullable Node parent, @Nullable Node gParent) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,402,@Nullable Node assign) {
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,421,"lassName, classType, null, null, null, null);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,419,"className, classType, null, null);"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,534,"tring name, FunctionType type, @Nullable Node n, @Nullable Node parent,"
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,535,"Nullable Node gParent, @Nullable Node rhs) {"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,532,"String name, FunctionType type, @Nullable Node n, @Nullable Node rhs) {"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,250,nt nextSlot = 0;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,251,nt nextSkipSlot = 0;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,262,extSlot++;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2071, @param parent The node's parent
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2073,"tatic boolean isObjectLitKey(Node node, Node parent) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2068,static boolean isObjectLitKey(Node node) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2825," else if (isObjectLitKey(node, parent)) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2820,} else if (isObjectLitKey(node)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3051," else if (isObjectLitKey(parent, parent.getParent())) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3046,} else if (isObjectLitKey(parent)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3079," else if (isObjectLitKey(parent, parent.getParent())) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3074,} else if (isObjectLitKey(parent)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3112,"f (isObjectLitKey(lValue, lValue.getParent())) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3107,if (isObjectLitKey(lValue)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3126,"f (isObjectLitKey(lValue, lValue.getParent())) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3121,if (isObjectLitKey(lValue)) {
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,375,"oStatementNormalizations(t, n, parent);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,375,"doStatementNormalizations(t, n);"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,429,"oolean isObjLitKey = NodeUtil.isObjectLitKey(n, parent);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,429,boolean isObjLitKey = NodeUtil.isObjectLitKey(n);
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,503,"odeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,503,"NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,477,oolean paramRemoved = false;
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1389,ode parent = n.getParent();
False,src/com/google/javascript/jscomp/PhaseOptimizer.java,src/com/google/javascript/jscomp/PhaseOptimizer.java,312," Gets the pass names, in order."
False,src/com/google/javascript/jscomp/PhaseOptimizer.java,src/com/google/javascript/jscomp/PhaseOptimizer.java,314,rivate List<String> getPassOrder() {
False,src/com/google/javascript/jscomp/PhaseOptimizer.java,src/com/google/javascript/jscomp/PhaseOptimizer.java,315,ist<String> order = Lists.newArrayList();
False,src/com/google/javascript/jscomp/PhaseOptimizer.java,src/com/google/javascript/jscomp/PhaseOptimizer.java,316,or (NamedPass pass : myPasses) {
False,src/com/google/javascript/jscomp/PhaseOptimizer.java,src/com/google/javascript/jscomp/PhaseOptimizer.java,317,rder.add(pass.name);
False,src/com/google/javascript/jscomp/PhaseOptimizer.java,src/com/google/javascript/jscomp/PhaseOptimizer.java,319,eturn order;
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,234,"andleTypedefDefinition(t, n, parent);"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,234,"handleTypedefDefinition(t, n);"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,339,"odeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,339,"NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,616,"f (isLocalValueType(jstypeReturn, true)) {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,616,if (isLocalValueType(jstypeReturn)) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,672,"rivate boolean isLocalValueType(JSType jstype, boolean recurse) {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,672,private boolean isLocalValueType(JSType jstype) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,812,tring name = objectNode.getString();
False,src/com/google/javascript/jscomp/RemoveTryCatch.java,src/com/google/javascript/jscomp/RemoveTryCatch.java,101,oolean isInTryBlock = false;
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,549,ode argParent = arg.getParent();
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,805,odingConvention convention = codingConvention;
False,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,366,nt count = 0;
False,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,373,ount++;
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,305,nt type = n.getType();
False,src/com/google/javascript/jscomp/ShadowVariables.java,src/com/google/javascript/jscomp/ShadowVariables.java,201,"ssignment bestShadow = findBestShadow(s, var);"
True,src/com/google/javascript/jscomp/ShadowVariables.java,src/com/google/javascript/jscomp/ShadowVariables.java,201,Assignment bestShadow = findBestShadow(s);
False,src/com/google/javascript/jscomp/ShadowVariables.java,src/com/google/javascript/jscomp/ShadowVariables.java,237,"rivate Assignment findBestShadow(Scope curScope, Var candidate) {"
True,src/com/google/javascript/jscomp/ShadowVariables.java,src/com/google/javascript/jscomp/ShadowVariables.java,237,private Assignment findBestShadow(Scope curScope) {
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425," else if (NodeUtil.isObjectLitKey(parent, parent.getParent())) {"
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425,} else if (NodeUtil.isObjectLitKey(parent)) {
False,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,93,"| NodeUtil.isObjectLitKey(node, node.getParent())"
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,93,|| NodeUtil.isObjectLitKey(node)
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,271,ist<Node> specializedChildren = Lists.newLinkedList();
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,305,ode originalRoot = specializedInputRootsByOriginal.get(block);
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,369,ode value = key.getFirstChild();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,76,"canRoot(n, parent);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,76,scanRoot(n);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,84,"rivate void scanRoot(Node n, Scope parent) {"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,84,private void scanRoot(Node n) {
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,113,"canVars(body, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,113,scanVars(body);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,117,"canVars(n, null);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,117,scanVars(n);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,124,"rivate void scanVars(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,124,private void scanVars(Node n) {
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,159,"canVars(block, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,159,scanVars(block);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,174,"canVars(child, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,174,scanVars(child);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,973,SType rvalueType = getJSType(assign.getLastChild());
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,500,tring varName = name.getString();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,761,ode value = name.getFirstChild();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,969,"pdateBind(n, fnType);"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,967,updateBind(n);
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,976,"rivate void updateBind(Node n, FunctionType fnType) {"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,974,private void updateBind(Node n) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,521,"odeUtil.isObjectLitKey(n, parent)) {"
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,521,NodeUtil.isObjectLitKey(n)) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,367,ode nameNode = null;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,519,"heckForClassDefiningCalls(t, n, parent);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,518,"checkForClassDefiningCalls(t, n);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,696,oolean isExtern = keyNode.isFromExterns();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,708,"rivate JSType getDeclaredTypeInAnnotation(String sourceName,"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,709,"ode node, JSDocInfo info) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,706,"private JSType getDeclaredTypeInAnnotation(Node node, JSDocInfo info) {"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,711,ode objNode =
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,712,ode.isGetProp() ? node.getFirstChild() :
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,713,"odeUtil.isObjectLitKey(node, node.getParent()) ? node.getParent() :"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,714,ull;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,825,"odeUtil.isObjectLitKey(lValue, lValue.getParent())) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,818,NodeUtil.isObjectLitKey(lValue)) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,885,ode fnBlock = isFnLiteral ? parametersNode.getNext() : null;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1133,oolean isExtern = n.isFromExterns();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1286,"eturn getDeclaredTypeInAnnotation(sourceName, lValue, info);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1277,"return getDeclaredTypeInAnnotation(lValue, info);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1307,SType knownType = null;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1336,"eturn getDeclaredTypeInAnnotation(sourceName, lValue, info);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1326,"return getDeclaredTypeInAnnotation(lValue, info);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1359,rivate void checkForClassDefiningCalls(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1360,"odeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1349,"private void checkForClassDefiningCalls(NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1969,ode body = astParameters.getNext();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1632,ode args = current.getFirstChild();
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,931,astCommandLineRunner.printModuleGraphJsonTo(
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,932,"astCompiler.getModuleGraph(), builder);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,931,lastCommandLineRunner.printModuleGraphJsonTo(builder);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,270,"ssertEquals(expected, NodeUtil.isObjectLitKey(node, node.getParent()));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,270,"assertEquals(expected, NodeUtil.isObjectLitKey(node));"
