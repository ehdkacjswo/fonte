is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,423,// The collection behaves like init.
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,424,"createEdge(collection, Branch.UNCOND, forNode);"
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,800,eturn n;
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,802,return n.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,183,eturn n == parent.getLastChild();
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,183,// TODO(user): Investigate how we should handle the case where
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,184,// we have a very complex expression inside the FOR-IN header.
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,185,return n != parent.getFirstChild();
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,194,// n.getParent() isn't null. This just the case where n is the root
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,195,// node that gatherCb started at.
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,196,if (parent == null) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,197,return;
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,196,| parent.isVar() || parent.isInc() ||
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,197,arent.isDec() || parent.isParamList() ||
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,198,arent.isCatch()) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,202,|| parent.isVar() || parent.isInc() || parent.isDec() ||
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,203,parent.isParamList() || parent.isCatch()) {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,218,"omputeGenKill(rhs, gen, kill, conditional);"
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,220,// rhs is executed only once so we don't go into it every loop.
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,201,// TODO(user): This is a problem with removeNoOpStatements. Everything
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,202,// every expression in a FOR-IN header looks like side effect free on it's
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,203,// own.
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,204,if (NodeUtil.isForIn(parent)) {
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,205,return;
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,384,public void testForInWithAssignment() {
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,385,inFunction(
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,386,"""var _f = function (commands) {"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,387,"""  var k, v, ref;"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,388,"""  for (k in ref = commands) {"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,389,"""    v = ref[k];"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,390,"""    alert(k + ':' + v);"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,394,"""var _f = function (commands) {"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,395,"""  var k,ref;"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,396,"""  for (k in ref = commands) {"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,397,"""    commands = ref[k];"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,398,"""    alert(k + ':' + commands);"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,687,"  node4 [label=\""FOR\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,688,"  node1 -> node4 "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,689,"[label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,690,"  node0 -> node4 [weight=1];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,691,"  node5 [label=\""NAME\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,692,"  node4 -> node5 [weight=1];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,687,"""  node4 [label=\""NAME\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,688,"""  node1 -> node4 [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,689,"""  node5 [label=\""FOR\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,690,"""  node0 -> node5 [weight=1];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,694,"  node4 -> node6 [weight=1];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,692,"""  node5 -> node6 [weight=1];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,693,"""  node5 -> node4 [weight=1];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,694,"""  node4 -> node5 [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,696,"  node4 -> node7 [weight=1];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,696,"""  node5 -> node7 [weight=1];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,703,"  node8 -> node4 "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,704,"[label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,705,"  node7 -> node8 "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,706,"[label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,703,"""  node8 -> node5 [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,704,"""  node7 -> node8 [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,708,"  node4 -> node11 "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,709,"[label=\""ON_FALSE\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,710,"  node4 -> node7 "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,711,"[label=\""ON_TRUE\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,706,"""  node5 -> node11 [label=\""ON_FALSE\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,707,"""  node5 -> node7 [label=\""ON_TRUE\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,713,"  node11 -> RETURN "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,714,"[label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,715,"  node0 -> node1 "" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,716,"[label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,709,"""  node11 -> RETURN [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,710,"""  node0 -> node1 [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1274,"oken.SCRIPT, Token.VAR, Token.VAR,"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1268,"Token.SCRIPT, Token.VAR, Token.VAR, Token.NAME,"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,414,public void testForIn() {
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,415,"noInline(""var x; var y = {}; for(x in y){}"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,416,"noInline(""var x; var y = {}; var z; for(x in z = y){print(z)}"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,417,"noInline(""var x; var y = {}; var z; for(x in y){print(z)}"");"
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,238,public void testForInAssignment() {
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,239,"assertLiveBeforeX(""var a,b; for (var y in a = b) { X:a[y] }"", ""a"");"
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,240,// No one refers to b after the first iteration.
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,241,"assertNotLiveBeforeX(""var a,b; for (var y in a = b) { X:a[y] }"", ""b"");"
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,242,"assertLiveBeforeX(""var a,b; for (var y in a = b) { X:a[y] }"", ""y"");"
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,243,"assertLiveAfterX(""var a,b; for (var y in a = b) { a[y]; X: y();}"", ""a"");"
False,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,104,"ssertMatch(""D: var x = []; U: for (var y in x) { }"");"
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,104,// Uses within FOR-IN header are hard to test. They are covered
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,105,// by the tests in the flow sensitive inliner.
True,test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java,test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java,459,public void testForInLoop() {
True,test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java,test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java,460,"testSame(""for(var x in y) {}"");"
