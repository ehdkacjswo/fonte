is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,117,"private final Map<TypeToken<?>, TypeAdapter<?>> typeTokenCache"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,118,"= Collections.synchronizedMap(new HashMap<TypeToken<?>, TypeAdapter<?>>());"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,331,/ TODO: cache?
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,334,TypeAdapter<?> cached = typeTokenCache.get(type);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,335,if (cached != null) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,336,return (TypeAdapter<T>) cached;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,353,"typeTokenCache.put(type, candidate);"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,2, Copyright (C) 2010 Google Inc.
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,20,mport java.util.LinkedHashMap;
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,21,mport java.util.Map;
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,24, A cache that evict objects from the cache using an LRU (least recently used)
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,25, policy.  Object start getting evicted from the cache once the {@code maxCapacity}
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,26, is reached.
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,28, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,29, @author Joel Leitch
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,31,"inal class LruCache<K, V> extends LinkedHashMap<K, V> {"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,32,rivate final int maxCapacity;
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,34,ublic LruCache(int maxCapacity) {
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,35,"uper(maxCapacity, 0.7F, true);"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,36,his.maxCapacity = maxCapacity;
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,39,"Override protected boolean removeEldestEntry(Map.Entry<K, V> entry) {"
False,gson/src/main/java/com/google/gson/LruCache.java,gson/src/main/java/com/google/gson/LruCache.java,40,eturn size() > maxCapacity;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,2, Copyright (C) 2010 Google Inc.
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,20,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,23, Unit test for the {@link LruCache} class.
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,25, @author Inderjeet Singh
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,26, @author Joel Leitch
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,28,ublic class LruCacheTest extends TestCase {
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,30,ublic void testCacheHitAndMiss() throws Exception {
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,31,"ruCache<String, Integer> cache = new LruCache<String, Integer>(3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,33,"tring key = ""key1"";"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,34,ssertNull(cache.get(key));
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,35,"ache.put(key, 1);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,36,"ssertEquals(1, cache.get(key).intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,38,"tring key2 = ""key2"";"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,39,"ache.put(key2, 2);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,40,"ssertEquals(1, cache.get(key).intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,41,"ssertEquals(2, cache.get(key2).intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,44,ublic void testCacheKeyOverwrite() throws Exception {
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,45,"ruCache<String, Integer> cache = new LruCache<String, Integer>(3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,47,"tring key = ""key1"";"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,48,ssertNull(cache.get(key));
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,49,"ache.put(key, 1);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,50,"ssertEquals(1, cache.get(key).intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,52,"ache.put(key, 5);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,53,"ssertEquals(5, cache.get(key).intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,56,ublic void testCacheEviction() throws Exception {
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,57,"ruCache<String, Integer> cache = new LruCache<String, Integer>(5);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,59,"ache.put(""key1"", 1);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,60,"ache.put(""key2"", 2);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,61,"ache.put(""key3"", 3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,62,"ache.put(""key4"", 4);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,63,"ache.put(""key5"", 5);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,64,"ssertEquals(1, cache.get(""key1"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,65,"ssertEquals(2, cache.get(""key2"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,66,"ssertEquals(3, cache.get(""key3"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,67,"ssertEquals(4, cache.get(""key4"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,68,"ssertEquals(5, cache.get(""key5"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,70,/ Access key1 to show key2 will be evicted (shows not a FIFO cache)
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,71,"ache.get(""key1"");"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,72,"ache.get(""key3"");"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,73,"ache.put(""key6"", 6);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,74,"ache.put(""key7"", 7);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,75,"ssertEquals(1, cache.get(""key1"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,76,"ssertNull(cache.get(""key2""));"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,77,"ssertEquals(3, cache.get(""key3"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,78,"ssertNull(cache.get(""key4""));"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,79,"ssertEquals(5, cache.get(""key5"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,80,"ssertEquals(6, cache.get(""key6"").intValue());"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,81,"ssertEquals(7, cache.get(""key7"").intValue());"
