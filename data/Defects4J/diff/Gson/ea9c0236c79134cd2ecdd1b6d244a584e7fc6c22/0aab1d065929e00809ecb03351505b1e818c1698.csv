is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,68,rivate static final DefaultInetAddressAdapter INET_ADDRESS_ADAPTER =
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,69,ew DefaultInetAddressAdapter();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,70,rivate static final CollectionTypeAdapter COLLECTION_TYPE_ADAPTER = new CollectionTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,68,private static final CollectionTypeAdapter COLLECTION_TYPE_ADAPTER = new CollectionTypeAdapter();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,121,"ap.registerForTypeHierarchy(InetAddress.class, INET_ADDRESS_ADAPTER, true);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,155,"ap.registerForTypeHierarchy(InetAddress.class, wrapDeserializer(INET_ADDRESS_ADAPTER), true);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,441,tatic final class DefaultInetAddressAdapter
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,442,"mplements JsonDeserializer<InetAddress>, JsonSerializer<InetAddress> {"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,444,"ublic InetAddress deserialize(JsonElement json, Type typeOfT,"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,445,sonDeserializationContext context) throws JsonParseException {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,446,ry {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,447,eturn InetAddress.getByName(json.getAsString());
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,448, catch (UnknownHostException e) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,449,hrow new JsonParseException(e);
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,453,"ublic JsonElement serialize(InetAddress src, Type typeOfSrc,"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,454,sonSerializationContext context) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,455,eturn new JsonPrimitive(src.getHostAddress());
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,246,.factory(TypeAdapters.INET_ADDRESS_FACTORY)
False,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,169,"ublic <T> Builder typeHierarchyAdapter(TypeToken<T> type, TypeAdapter<T> typeAdapter) {"
False,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,170,"actories.add(TypeAdapters.newTypeHierarchyFactory(type, typeAdapter));"
True,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,169,"public <T> Builder typeHierarchyAdapter(Class<T> clazz, TypeAdapter<T> typeAdapter) {"
True,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,170,"factories.add(TypeAdapters.newTypeHierarchyFactory(clazz, typeAdapter));"
False,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,36,"Override public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> type) {"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,36,"public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> type) {"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,19,mport com.google.gson.reflect.TypeToken;
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,20,mport com.google.gson.stream.JsonReader;
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,21,mport com.google.gson.stream.JsonToken;
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,22,mport com.google.gson.stream.JsonWriter;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,20,import java.net.InetAddress;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,28,import com.google.gson.reflect.TypeToken;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,29,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,30,import com.google.gson.stream.JsonToken;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,31,import com.google.gson.stream.JsonWriter;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,178,public static final TypeAdapter<InetAddress> INET_ADDRESS = new TypeAdapter<InetAddress>() {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,179,public InetAddress read(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,180,return InetAddress.getByName(reader.nextString());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,182,"public void write(JsonWriter writer, InetAddress value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,183,writer.value(value.getHostAddress());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,187,public static final TypeAdapter.Factory INET_ADDRESS_FACTORY =
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,188,"newTypeHierarchyFactory(InetAddress.class, INET_ADDRESS);"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,260,"ypeToken<T> type, TypeAdapter<T> typeAdapter) {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,274,"final Class<T> clazz, final TypeAdapter<T> typeAdapter) {"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,263,/ TODO: use Inder's TypeHierarchyAdapter here
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,264,hrow new UnsupportedOperationException();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,277,return clazz.isAssignableFrom(typeToken.getRawType()) ? (TypeAdapter<T>) typeAdapter : null;
