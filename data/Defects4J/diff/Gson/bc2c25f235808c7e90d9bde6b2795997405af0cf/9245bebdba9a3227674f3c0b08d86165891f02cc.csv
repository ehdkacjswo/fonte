is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,32,mport java.util.ArrayList;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,93,"ap.register(Enum.class, wrapSerializer(ENUM_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,94,"ap.register(URL.class, wrapSerializer(URL_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,95,"ap.register(URI.class, wrapSerializer(URI_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,96,"ap.register(Locale.class, wrapSerializer(LOCALE_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,92,"map.register(Enum.class, ENUM_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,93,"map.register(URL.class, URL_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,94,"map.register(URI.class, URI_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,95,"map.register(Locale.class, LOCALE_TYPE_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,98,"ap.register(Map.class, wrapSerializer(MAP_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,99,"ap.register(Date.class, wrapSerializer(DATE_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,100,"ap.register(BigDecimal.class, wrapSerializer(BIG_DECIMAL_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,101,"ap.register(BigInteger.class, wrapSerializer(BIG_INTEGER_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,97,"map.register(Map.class, MAP_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,98,"map.register(Date.class, DATE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,99,"map.register(BigDecimal.class, BIG_DECIMAL_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,100,"map.register(BigInteger.class, BIG_INTEGER_TYPE_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,161,"SuppressWarnings(""unchecked"")"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,162,rivate static JsonSerializer<?> wrapSerializer(JsonSerializer<?> serializer) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,163,eturn new JsonSerializerExceptionWrapper(serializer);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,308,"erializers.register(typeOfT, new JsonSerializerExceptionWrapper<T>(serializer));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,308,"serializers.register(typeOfT, serializer);"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,20,mport java.util.Collection;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,21,mport java.util.Map;
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,19,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,22, Decorators a {@code JsonSerializer} instance with exception handling.  This wrapper class
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,23, ensures that a {@code JsonSerializer} will not propagate any exception other than a
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,24, {@link JsonParseException}.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,26, @param <T> type of the serializer being wrapped.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,28, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,29, @author Joel Leitch
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,31,lass JsonSerializerExceptionWrapper<T> implements JsonSerializer<T> {
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,32,rivate final JsonSerializer<T> delegate;
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,35, Returns a wrapped {@link JsonSerializer} object that has been decorated with
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,36, {@link JsonParseException} handling.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,38, @param delegate the {@code JsonSerializer} instance to be wrapped
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,39, @throws IllegalArgumentException if {@code delegate} is {@code null}.
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,41,sonSerializerExceptionWrapper(JsonSerializer<T> delegate) {
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,42,reconditions.checkNotNull(delegate);
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,43,his.delegate = delegate;
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,46,"ublic JsonElement serialize(T src, Type typeOfSrc, JsonSerializationContext context) {"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,47,ry {
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,48,"eturn delegate.serialize(src, typeOfSrc, context);"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,49, catch (JsonParseException e) {
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,50,/ just rethrow the exception
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,51,hrow e;
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,52, catch (Exception e) {
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,53,/ throw as a JsonParseException
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,54,tringBuilder errorMsg = new StringBuilder()
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,55,"append(""The JsonSerializer "")"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,56,append(delegate)
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,57,"append("" failed to serialized object "")"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,58,append(src)
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,59,"append("" given the type "")"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,60,append(typeOfSrc);
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,61,"hrow new JsonParseException(errorMsg.toString(), e);"
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,65,Override
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,66,ublic String toString() {
False,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonSerializerExceptionWrapper.java,67,eturn delegate.toString();
False,gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java,gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java,55, catch (JsonParseException expected) { }
True,gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java,gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java,55,} catch (IllegalStateException expected) { }
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,19,mport com.google.gson.DefaultTypeAdapters.DefaultDateTypeAdapter;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,21,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,23,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,24,mport java.text.DateFormat;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,25,mport java.util.Date;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,28, Simple unit tests for the {@link JsonSerializerExceptionWrapper} class.
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,30, @author Inderjeet Singh
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,31, @author Joel Leitch
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,33,ublic class JsonSerializerExceptionWrapperTest extends TestCase {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,35,ublic void testRethrowJsonParseException() throws Exception {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,36,"tring errorMsg = ""please rethrow me"";"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,37,sonSerializerExceptionWrapper<String> wrappedJsonSerializer =
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,38,ew JsonSerializerExceptionWrapper<String>(
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,39,ew ExceptionJsonSerializer(new JsonParseException(errorMsg)));
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,41,ry {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,42,"rappedJsonSerializer.serialize(""blah"", String.class, null);"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,43,"ail(""JsonParseException should have been thrown"");"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,44, catch (JsonParseException expected) {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,45,ssertNull(expected.getCause());
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,46,"ssertEquals(errorMsg, expected.getMessage());"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,50,ublic void testWrappedExceptionPropagation() throws Exception {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,51,llegalArgumentException exceptionToThrow = new IllegalArgumentException();
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,52,sonSerializerExceptionWrapper<String> wrappedJsonSerializer =
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,53,ew JsonSerializerExceptionWrapper<String>(
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,54,ew ExceptionJsonSerializer(exceptionToThrow));
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,56,ry {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,57,"rappedJsonSerializer.serialize(""blah"", String.class, null);"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,58,"ail(""JsonParseException should have been thrown"");"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,59, catch (JsonParseException expected) {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,60,"ssertEquals(exceptionToThrow, expected.getCause());"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,64,ublic void testProperSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,65,ate now = new Date();
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,66,efaultDateTypeAdapter dateSerializer = new DefaultDateTypeAdapter(DateFormat.LONG);
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,67,sonSerializerExceptionWrapper<Date> wrappedJsonSerializer =
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,68,ew JsonSerializerExceptionWrapper<Date>(dateSerializer);
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,70,"sonElement expected = dateSerializer.serialize(now, Date.class, null);"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,71,"sonElement actual = wrappedJsonSerializer.serialize(now, Date.class, null);"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,72,"ssertEquals(expected.getAsString(), actual.getAsString());"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,75,rivate static class ExceptionJsonSerializer implements JsonSerializer<String> {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,76,rivate final RuntimeException exceptionToThrow;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,78,ublic ExceptionJsonSerializer(RuntimeException exceptionToThrow) {
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,79,his.exceptionToThrow = exceptionToThrow;
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,82,"ublic JsonElement serialize(String src, Type typeOfSrc, JsonSerializationContext context) {"
False,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,83,hrow exceptionToThrow;
False,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,98,"ssertEquals(1, ((Integer) map.get(""a"")).intValue());"
False,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,99,"ssertEquals(2, ((Integer) map.get(""b"")).intValue());"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,98,"assertEquals(1, map.get(""a"").intValue());"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,99,"assertEquals(2, map.get(""b"").intValue());"
