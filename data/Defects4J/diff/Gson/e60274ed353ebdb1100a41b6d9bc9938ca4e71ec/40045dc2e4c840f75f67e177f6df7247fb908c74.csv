is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,74,"* For parameterized type, Gson ignores the more-specific type and sticks to the declared type"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,76,public void testParameterizedSubclassFields() {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,77,ClassWithParameterizedBaseFields target = new ClassWithParameterizedBaseFields(
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,78,"new ParameterizedSub<String>(""one"", ""two""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,79,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,80,"assertTrue(json.contains(""\""t\"":\""one\""""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,81,"assertFalse(json.contains(""\""s\""""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,85,"* For parameterized type in a List, Gson ignores the more-specific type and sticks to"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,86,* the declared type
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,88,public void testListOfParameterizedSubclassFields() {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,89,Collection<ParameterizedBase<String>> list = new ArrayList<ParameterizedBase<String>>();
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,90,"list.add(new ParameterizedBase<String>(""one""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,91,"list.add(new ParameterizedSub<String>(""two"", ""three""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,92,ClassWithContainersOfParameterizedBaseFields target =
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,93,"new ClassWithContainersOfParameterizedBaseFields(list, null);"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,94,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,95,"assertTrue(json, json.contains(""{\""t\"":\""one\""}""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,96,"assertFalse(json, json.contains(""\""s\"":""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,100,"* For parameterized type in a map, Gson ignores the more-specific type and sticks to the"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,101,* declared type
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,103,public void testMapOfParameterizedSubclassFields() {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,104,"Map<String, ParameterizedBase<String>> map = new HashMap<String, ParameterizedBase<String>>();"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,105,"map.put(""base"", new ParameterizedBase<String>(""one""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,106,"map.put(""sub"", new ParameterizedSub<String>(""two"", ""three""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,107,ClassWithContainersOfParameterizedBaseFields target =
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,108,"new ClassWithContainersOfParameterizedBaseFields(null, map);"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,109,"JsonObject json = gson.toJsonTree(target).getAsJsonObject().get(""map"").getAsJsonObject();"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,110,"assertEquals(""one"", json.get(""base"").getAsJsonObject().get(""t"").getAsString());"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,111,"JsonObject sub = json.get(""sub"").getAsJsonObject();"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,112,"assertEquals(""two"", sub.get(""t"").getAsString());"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,113,"assertNull(sub.get(""s""));"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,147,private static class ParameterizedBase<T> {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,148,T t;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,149,ParameterizedBase(T t) {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,150,this.t = t;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,154,private static class ParameterizedSub<T> extends ParameterizedBase<T> {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,155,T s;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,156,"ParameterizedSub(T t, T s) {"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,157,super(t);
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,158,this.s = s;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,162,private static class ClassWithParameterizedBaseFields {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,163,ParameterizedBase<String> b;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,164,ClassWithParameterizedBaseFields(ParameterizedBase<String> b) {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,165,this.b = b;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,169,private static class ClassWithContainersOfParameterizedBaseFields {
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,170,Collection<ParameterizedBase<String>> collection;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,171,"Map<String, ParameterizedBase<String>> map;"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,172,"ClassWithContainersOfParameterizedBaseFields(Collection<ParameterizedBase<String>> collection,"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,173,"Map<String, ParameterizedBase<String>> map) {"
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,174,this.collection = collection;
True,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java,175,this.map = map;
