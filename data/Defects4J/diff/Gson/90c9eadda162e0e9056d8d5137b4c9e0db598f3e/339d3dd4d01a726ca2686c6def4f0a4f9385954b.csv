is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,250,factory(new CollectionTypeAdapterFactory(constructorConstructor))
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,258,"uilder.factory(new GsonToMiniGsonTypeAdapterFactory(this, serializers, deserializers))"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,257,builder
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,258,".factory(new GsonToMiniGsonTypeAdapterFactory(this, serializers, deserializers))"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,259,.factory(new CollectionTypeAdapterFactory(constructorConstructor))
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,21,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,22,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,23,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,24,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,292,public void testUserCollectionTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,293,Type listOfString = new TypeToken<List<String>>() {}.getType();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,294,Object stringListSerializer = new JsonSerializer<List<String>>() {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,295,"public JsonElement serialize(List<String> src, Type typeOfSrc,"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,296,JsonSerializationContext context) {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,297,"return new JsonPrimitive(src.get(0) + "";"" + src.get(1));"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,300,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,301,".registerTypeAdapter(listOfString, stringListSerializer)"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,302,.create();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,303,"assertEquals(""\""ab;cd\"""", gson.toJson(Arrays.asList(""ab"", ""cd""), listOfString));"
