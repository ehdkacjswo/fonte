is_addition,old_file_path,new_file_path,line_num,content
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,2,* Copyright (C) 2011 Google Inc.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,5,* you may not use this file except in compliance with the License.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,6,* You may obtain a copy of the License at
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,13,* See the License for the specific language governing permissions and
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,14,* limitations under the License.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,17,package com.google.gson.graph;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,19,import com.google.gson.Gson;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,20,import com.google.gson.GsonBuilder;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,21,import com.google.gson.InstanceCreator;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,22,import com.google.gson.JsonElement;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,23,import com.google.gson.TypeAdapter;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,24,import com.google.gson.TypeAdapterFactory;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,25,import com.google.gson.internal.ConstructorConstructor;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,26,import com.google.gson.internal.ObjectConstructor;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,27,import com.google.gson.reflect.TypeToken;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,28,import com.google.gson.stream.JsonReader;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,29,import com.google.gson.stream.JsonToken;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,30,import com.google.gson.stream.JsonWriter;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,31,import java.io.IOException;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,32,import java.lang.reflect.Type;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,33,import java.util.HashMap;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,34,import java.util.IdentityHashMap;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,35,import java.util.LinkedList;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,36,import java.util.Map;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,37,import java.util.Queue;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,40,* Writes a graph of objects as a list of named nodes.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,42,// TODO: proper documentation
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,43,public final class GraphAdapterBuilder {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,44,private final ConstructorConstructor constructorConstructor = new ConstructorConstructor();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,45,"private final Map<Type, InstanceCreator<?>> instanceCreators"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,46,"= new HashMap<Type, InstanceCreator<?>>();"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,48,public GraphAdapterBuilder addType(Type type) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,49,final ObjectConstructor<?> objectConstructor = constructorConstructor.get(TypeToken.get(type));
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,50,InstanceCreator<Object> instanceCreator = new InstanceCreator<Object>() {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,51,public Object createInstance(Type type) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,52,return objectConstructor.construct();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,55,"return addType(type, instanceCreator);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,58,"public GraphAdapterBuilder addType(Type type, InstanceCreator<?> instanceCreator) {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,59,if (type == null || instanceCreator == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,60,throw new NullPointerException();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,62,"instanceCreators.put(type, instanceCreator);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,63,return this;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,66,public void registerOn(GsonBuilder gsonBuilder) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,67,Factory factory = new Factory(instanceCreators);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,68,gsonBuilder.registerTypeAdapterFactory(factory);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,69,"for (Map.Entry<Type, InstanceCreator<?>> entry : instanceCreators.entrySet()) {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,70,"gsonBuilder.registerTypeAdapter(entry.getKey(), factory);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,74,"static class Factory implements TypeAdapterFactory, InstanceCreator {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,75,"private final Map<Type, InstanceCreator<?>> instanceCreators;"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,76,private final ThreadLocal<Graph> graphThreadLocal = new ThreadLocal<Graph>();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,78,"Factory(Map<Type, InstanceCreator<?>> instanceCreators) {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,79,this.instanceCreators = instanceCreators;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,82,"public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,83,if (!instanceCreators.containsKey(type.getType())) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,84,return null;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,87,"final TypeAdapter<T> typeAdapter = gson.getNextAdapter(this, type);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,88,final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,89,return new TypeAdapter<T>() {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,90,"@Override public void write(JsonWriter out, T value) throws IOException {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,91,if (value == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,92,out.nullValue();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,93,return;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,96,Graph graph = graphThreadLocal.get();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,97,boolean writeEntireGraph = false;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,100,* We have one of two cases:
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,101,*  1. We've encountered the first known object in this graph. Write
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,102,"*     out the graph, starting with that object."
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,103,*  2. We've encountered another graph object in the course of #1.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,104,*     Just write out this object's name. We'll circle back to writing
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,105,*     out the object's value as a part of #1.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,108,if (graph == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,109,writeEntireGraph = true;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,110,"graph = new Graph(new IdentityHashMap<Object, Element<?>>());"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,113,"@SuppressWarnings(""unchecked"") // graph.map guarantees consistency between value and T"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,114,Element<T> element = (Element<T>) graph.map.get(value);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,115,if (element == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,116,"element = new Element<T>(value, graph.nextName(), typeAdapter, null);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,117,"graph.map.put(value, element);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,118,graph.queue.add(element);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,121,if (writeEntireGraph) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,122,graphThreadLocal.set(graph);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,123,try {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,124,out.beginObject();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,125,Element<?> current;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,126,while ((current = graph.queue.poll()) != null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,127,out.name(current.id);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,128,current.write(out);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,130,out.endObject();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,131,} finally {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,132,graphThreadLocal.remove();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,134,} else {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,135,out.value(element.id);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,139,@Override public T read(JsonReader in) throws IOException {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,140,if (in.peek() == JsonToken.NULL) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,141,in.nextNull();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,142,return null;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,146,* Again we have one of two cases:
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,147,*  1. We've encountered the first known object in this graph. Read
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,148,*     the entire graph in as a map from names to their JsonElements.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,149,*     Then convert the first JsonElement to its Java object.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,150,*  2. We've encountered another graph object in the course of #1.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,151,"*     Read in its name, then deserialize its value from the"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,152,*     JsonElement in our map. We need to do this lazily because we
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,153,*     don't know which TypeAdapter to use until a value is
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,154,*     encountered in the wild.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,157,String currentName = null;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,158,Graph graph = graphThreadLocal.get();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,159,boolean readEntireGraph = false;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,161,if (graph == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,162,"graph = new Graph(new HashMap<Object, Element<?>>());"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,163,readEntireGraph = true;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,165,// read the entire tree into memory
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,166,in.beginObject();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,167,while (in.hasNext()) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,168,String name = in.nextName();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,169,if (currentName == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,170,currentName = name;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,172,JsonElement element = elementAdapter.read(in);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,173,"graph.map.put(name, new Element<T>(null, name, typeAdapter, element));"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,175,in.endObject();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,176,} else {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,177,currentName = in.nextString();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,180,if (readEntireGraph) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,181,graphThreadLocal.set(graph);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,183,try {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,184,"@SuppressWarnings(""unchecked"") // graph.map guarantees consistency between value and T"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,185,Element<T> element = (Element<T>) graph.map.get(currentName);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,186,"// now that we know the typeAdapter for this name, go from JsonElement to 'T'"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,187,if (element.value == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,188,element.typeAdapter = typeAdapter;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,189,element.read(graph);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,191,return element.value;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,192,} finally {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,193,if (readEntireGraph) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,194,graphThreadLocal.remove();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,202,* Hook for the graph adapter to get a reference to a deserialized value
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,203,* before that value is fully populated. This is useful to deserialize
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,204,* values that directly or indirectly reference themselves: we can hand
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,205,* out an instance before read() returns.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,207,* <p>Gson should only ever call this method when we're expecting it to;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,208,* that is only when we've called back into Gson to deserialize a tree.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,210,public Object createInstance(Type type) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,211,Graph graph = graphThreadLocal.get();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,212,if (graph == null || graph.nextCreate == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,213,"throw new IllegalStateException(""Unexpected call to createInstance() for "" + type);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,215,InstanceCreator<?> creator = instanceCreators.get(type);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,216,Object result = creator.createInstance(type);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,217,graph.nextCreate.value = result;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,218,graph.nextCreate = null;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,219,return result;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,223,static class Graph {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,225,* The graph elements. On serialization keys are objects (using an identity
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,226,* hash map) and on deserialization keys are the string names (using a
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,227,* standard hash map).
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,229,"private final Map<Object, Element<?>> map;"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,232,* The queue of elements to write during serialization. Unused during
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,233,* deserialization.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,235,private final Queue<Element> queue = new LinkedList<Element>();
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,238,* The instance currently being deserialized. Used as a backdoor between
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,239,* the graph traversal (which needs to know instances) and instance creators
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,240,* which create them.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,242,private Element nextCreate;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,244,"private Graph(Map<Object, Element<?>> map) {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,245,this.map = map;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,249,* Returns a unique name for an element to be inserted into the graph.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,251,public String nextName() {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,252,"return ""0x"" + Integer.toHexString(map.size() + 1);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,257,* An element of the graph during serialization or deserialization.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,259,static class Element<T> {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,261,* This element's name in the top level graph object.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,263,private final String id;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,266,* The value if known. During deserialization this is lazily populated.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,268,private T value;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,271,* This element's type adapter if known. During deserialization this is
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,272,* lazily populated.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,274,private TypeAdapter<T> typeAdapter;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,277,* The element to deserialize. Unused in serialization.
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,279,private final JsonElement element;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,281,"Element(T value, String id, TypeAdapter<T> typeAdapter, JsonElement element) {"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,282,this.value = value;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,283,this.id = id;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,284,this.typeAdapter = typeAdapter;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,285,this.element = element;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,288,void write(JsonWriter out) throws IOException {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,289,"typeAdapter.write(out, value);"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,292,void read(Graph graph) throws IOException {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,293,if (graph.nextCreate != null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,294,"throw new IllegalStateException(""Unexpected recursive call to read()"");"
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,296,graph.nextCreate = this;
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,297,value = typeAdapter.fromJsonTree(element);
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,298,if (value == null) {
True,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java,299,"throw new IllegalStateException(""non-null value deserialized to null: "" + element);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,2, Copyright (C) 2011 Google Inc.
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,5, you may not use this file except in compliance with the License.
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,6, You may obtain a copy of the License at
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,10," Unless required by applicable law or agreed to in writing, software"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,13, See the License for the specific language governing permissions and
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,14, limitations under the License.
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,17,ackage com.google.gson.graph;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,19,mport com.google.gson.Gson;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,20,mport com.google.gson.JsonElement;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,21,mport com.google.gson.TypeAdapter;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,22,mport com.google.gson.TypeAdapterFactory;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,23,mport com.google.gson.internal.bind.JsonTreeReader;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,24,mport com.google.gson.reflect.TypeToken;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,25,mport com.google.gson.stream.JsonReader;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,26,mport com.google.gson.stream.JsonToken;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,27,mport com.google.gson.stream.JsonWriter;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,28,mport java.io.IOException;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,29,mport java.lang.reflect.Type;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,30,mport java.util.Arrays;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,31,mport java.util.HashMap;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,32,mport java.util.HashSet;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,33,mport java.util.IdentityHashMap;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,34,mport java.util.LinkedList;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,35,mport java.util.Map;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,36,mport java.util.Queue;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,37,mport java.util.Set;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,40, Writes a graph of objects as a list of named nodes.
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,42,/ TODO: proper documentation
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,43,ublic final class GraphTypeAdapterFactory implements TypeAdapterFactory {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,44,rivate final ThreadLocal<Graph> graphThreadLocal = new ThreadLocal<Graph>();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,45,rivate final Set<Type> graphTypes;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,47,rivate GraphTypeAdapterFactory(Type... graphTypes) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,48,his.graphTypes = new HashSet<Type>();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,49,his.graphTypes.addAll(Arrays.asList(graphTypes));
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,52,ublic static GraphTypeAdapterFactory of(Type... graphTypes) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,53,eturn new GraphTypeAdapterFactory(graphTypes);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,56,"ublic <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,57,f (!graphTypes.contains(type.getType())) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,58,eturn null;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,61,"inal TypeAdapter<T> typeAdapter = gson.getNextAdapter(this, type);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,62,inal TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,63,eturn new TypeAdapter<T>() {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,64,"Override public void write(JsonWriter out, T value) throws IOException {"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,65,f (value == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,66,ut.nullValue();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,67,eturn;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,70,raph graph = graphThreadLocal.get();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,71,oolean writeEntireGraph = false;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,73,f (graph == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,74,riteEntireGraph = true;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,75,"raph = new Graph(new IdentityHashMap<Object, Element<?>>());"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,78,lement<T> element = (Element<T>) graph.map.get(value);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,79,f (element == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,80,"lement = new Element<T>(value, graph.nextName(), typeAdapter, null);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,81,"raph.map.put(value, element);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,82,raph.queue.add(element);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,85,f (writeEntireGraph) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,86,raphThreadLocal.set(graph);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,87,ry {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,88,ut.beginObject();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,89,lement<?> current;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,90,hile ((current = graph.queue.poll()) != null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,91,ut.name(current.id);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,92,urrent.write(out);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,94,ut.endObject();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,95, finally {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,96,raphThreadLocal.remove();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,98, else {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,99,ut.value(element.id);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,103,Override public T read(JsonReader in) throws IOException {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,104,f (in.peek() == JsonToken.NULL) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,105,n.nextNull();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,106,eturn null;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,109,tring currentName = null;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,110,raph graph = graphThreadLocal.get();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,111,oolean readEntireGraph = false;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,113,f (graph == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,114,"raph = new Graph(new HashMap<Object, Element<?>>());"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,115,eadEntireGraph = true;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,117,/ read the entire tree into memory
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,118,n.beginObject();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,119,hile (in.hasNext()) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,120,tring name = in.nextName();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,121,f (currentName == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,122,urrentName = name;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,124,sonElement element = elementAdapter.read(in);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,125,"raph.map.put(name, new Element<T>(null, name, typeAdapter, element));"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,127,n.endObject();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,128, else {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,129,urrentName = in.nextString();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,132,f (readEntireGraph) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,133,raphThreadLocal.set(graph);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,135,ry {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,136,lement<T> element = (Element<T>) graph.map.get(currentName);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,137,f (element.value == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,138,lement.typeAdapter = typeAdapter;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,139,lement.read();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,141,eturn element.value;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,142, finally {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,143,f (readEntireGraph) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,144,raphThreadLocal.remove();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,151,tatic class Graph {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,153, The graph elements. On serialization keys are objects (using an identity
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,154, hash map) and on deserialization keys are the string names (using a
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,155, standard hash map).
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,157,"rivate final Map<Object, Element<?>> map;"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,158,rivate final Queue<Element> queue = new LinkedList<Element>();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,160,"rivate Graph(Map<Object, Element<?>> map) {"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,161,his.map = map;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,165, Returns a unique name for an element to be inserted into the graph.
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,167,ublic String nextName() {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,168,"eturn ""0x"" + Integer.toHexString(map.size() + 1);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,172,tatic class Element<T> {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,173,rivate final String id;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,174,rivate T value;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,175,rivate TypeAdapter<T> typeAdapter;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,176,rivate final JsonElement element;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,177,rivate boolean reading = false;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,179,"lement(T value, String id, TypeAdapter<T> typeAdapter, JsonElement element) {"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,180,his.value = value;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,181,his.id = id;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,182,his.typeAdapter = typeAdapter;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,183,his.element = element;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,186,rivate void write(JsonWriter out) throws IOException {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,187,"ypeAdapter.write(out, value);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,190,rivate void read() throws IOException {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,191,f (reading) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,192,/ TODO: this currently fails because we don't have the instance we want yet
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,193,"ystem.out.println(""ALREADY READING "" + id);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,194,eturn;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,196,eading = true;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,197,ry {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,198,/ TODO: use TypeAdapter.fromJsonTree() when that's public
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,199,alue = typeAdapter.read(new JsonTreeReader(element));
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,200,f (value == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,201,"hrow new IllegalStateException(""non-null value deserialized to null: "" + element);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,203, finally {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,204,eading = false;
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,23,ublic final class GraphTypeAdapterFactoryTest extends TestCase {
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,23,public final class GraphAdapterBuilderTest extends TestCase {
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,32,son gson = new GsonBuilder()
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,33,registerTypeAdapterFactory(GraphTypeAdapterFactory.of(Roshambo.class))
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,34,create();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,32,GsonBuilder gsonBuilder = new GsonBuilder();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,33,new GraphAdapterBuilder()
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,34,.addType(Roshambo.class)
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,35,.registerOn(gsonBuilder);
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,36,Gson gson = gsonBuilder.create();
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,47,son gson = new GsonBuilder()
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,48,registerTypeAdapterFactory(GraphTypeAdapterFactory.of(Roshambo.class))
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,49,create();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,49,GsonBuilder gsonBuilder = new GsonBuilder();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,50,new GraphAdapterBuilder()
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,51,.addType(Roshambo.class)
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,52,.registerOn(gsonBuilder);
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,53,Gson gson = gsonBuilder.create();
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,57,"ssertSame(rock, paper.beats); // TODO: currently fails"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,61,"assertSame(rock, paper.beats);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,64,public void testSerializationDirectSelfReference() {
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,65,"Roshambo suicide = new Roshambo(""SUICIDE"");"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,66,suicide.beats = suicide;
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,68,GsonBuilder gsonBuilder = new GsonBuilder();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,69,new GraphAdapterBuilder()
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,70,.addType(Roshambo.class)
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,71,.registerOn(gsonBuilder);
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,72,Gson gson = gsonBuilder.create();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,74,"assertEquals(""{'0x1':{'name':'SUICIDE','beats':'0x1'}}"","
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,75,"gson.toJson(suicide).replace('\""', '\''));"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,78,public void testDeserializationDirectSelfReference() {
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,79,"String json = ""{'0x1':{'name':'SUICIDE','beats':'0x1'}}"";"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,81,GsonBuilder gsonBuilder = new GsonBuilder();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,82,new GraphAdapterBuilder()
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,83,.addType(Roshambo.class)
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,84,.registerOn(gsonBuilder);
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,85,Gson gson = gsonBuilder.create();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,87,"Roshambo suicide = gson.fromJson(json, Roshambo.class);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,88,"assertEquals(""SUICIDE"", suicide.name);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,89,"assertSame(suicide, suicide.beats);"
False,gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java,gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java,50,ublic <T> ObjectConstructor<T> getConstructor(TypeToken<T> typeToken) {
True,gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java,gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java,50,public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) {
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java,53,bjectConstructor<T> constructor = constructorConstructor.getConstructor(typeToken);
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java,53,ObjectConstructor<T> constructor = constructorConstructor.get(typeToken);
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,128,bjectConstructor<T> constructor = constructorConstructor.getConstructor(typeToken);
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,128,ObjectConstructor<T> constructor = constructorConstructor.get(typeToken);
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,71,bjectConstructor<T> constructor = constructorConstructor.getConstructor(type);
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,71,ObjectConstructor<T> constructor = constructorConstructor.get(type);
