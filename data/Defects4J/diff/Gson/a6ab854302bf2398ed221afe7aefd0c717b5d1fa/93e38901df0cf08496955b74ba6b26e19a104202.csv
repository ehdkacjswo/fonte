is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,92,"eturn putInternal(key, value);"
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,92,if (key == null) {
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,93,"throw new NullPointerException(""key == null"");"
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,95,"Node<K, V> created = find(key, true);"
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,96,V result = created.value;
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,97,created.value = value;
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,98,return result;
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,106," putInternal(K key, V value) {"
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,107,"ode<K, V> created = find(key, true);"
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,108, result = created.value;
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,109,reated.value = value;
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,110,eturn result;
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,171,"eturn find((K) key, false);"
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,170,"return key != null ? find((K) key, false) : null;"
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,196,* @param unlink true to also unlink this node from the iteration linked list.
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,197,"oid removeInternal(Node<K, V> node) {"
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,198,/ Unlink the node.
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,199,ode.prev.next = node.next;
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,200,ode.next.prev = node.prev;
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,201,ode.next = node.prev = null; // Help the GC (for performance)
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,198,"void removeInternal(Node<K, V> node, boolean unlink) {"
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,199,if (unlink) {
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,200,node.prev.next = node.next;
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,201,node.next.prev = node.prev;
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,202,node.next = node.prev = null; // Help the GC (for performance)
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,218,emoveInternal(adjacent); // takes care of rebalance and size--
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,220,"removeInternal(adjacent, false); // takes care of rebalance and size--"
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,257,emoveInternal(node);
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,259,"removeInternal(node, true);"
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,528,inkedTreeMap.this.removeInternal(lastReturned);
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,530,"LinkedTreeMap.this.removeInternal(lastReturned, true);"
False,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,560,emoveInternal(node);
True,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java,562,"removeInternal(node, true);"
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,21,import java.util.Iterator;
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,22,import java.util.Map;
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,35,public void testRemoveRootDoesNotDoubleUnlink() {
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,36,"LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();"
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,37,"map.put(""a"", ""android"");"
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,38,"map.put(""c"", ""cola"");"
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,39,"map.put(""b"", ""bbq"");"
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,40,"Iterator<Map.Entry<String,String>> it = map.entrySet().iterator();"
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,41,it.next();
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,42,it.next();
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,43,it.next();
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,44,it.remove();
True,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,45,"assertIterationOrder(map.keySet(), ""a"", ""c"");"
