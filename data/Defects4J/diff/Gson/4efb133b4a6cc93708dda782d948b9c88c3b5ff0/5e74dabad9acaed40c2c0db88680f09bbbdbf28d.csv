is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,56,reconditions.checkNotNull(separatorString);
False,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,57,"reconditions.checkArgument(!"""".equals(separatorString));"
True,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,56,$Preconditions.checkNotNull(separatorString);
True,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,57,"$Preconditions.checkArgument(!"""".equals(separatorString));"
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,19,mport com.google.gson.internal.Cache;
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,20,mport com.google.gson.internal.LruCache;
True,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,19,import com.google.gson.internal.$Cache;
True,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,20,import com.google.gson.internal.$LruCache;
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,33,"inal Cache<Class<?>, Constructor<?>> constructorCache;"
True,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,33,"final $Cache<Class<?>, Constructor<?>> constructorCache;"
False,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,40,"onstructorCache = new LruCache<Class<?>, Constructor<?>>(cacheSize);"
True,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,gson/src/main/java/com/google/gson/DefaultConstructorAllocator.java,40,"constructorCache = new $LruCache<Class<?>, Constructor<?>>(cacheSize);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,19,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,19,import com.google.gson.internal.$Types;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,618,lass<?> rawTypeOfSrc = Types.getRawType(typeOfSrc);
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,619,"hildGenericType = Types.getCollectionElementType(typeOfSrc, rawTypeOfSrc);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,618,Class<?> rawTypeOfSrc = $Types.getRawType(typeOfSrc);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,619,"childGenericType = $Types.getCollectionElementType(typeOfSrc, rawTypeOfSrc);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,642,"ype childType = Types.getCollectionElementType(typeOfT, Types.getRawType(typeOfT));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,642,"Type childType = $Types.getCollectionElementType(typeOfT, $Types.getRawType(typeOfT));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,1030,lass<?> rawType = Types.getRawType(type);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,1030,Class<?> rawType = $Types.getRawType(type);
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,53,his.delegate = Preconditions.checkNotNull(delegate);
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,53,this.delegate = $Preconditions.checkNotNull(delegate);
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,72,"ublic void visitArrayMember(JsonArray parent, JsonPrimitive member,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,72,"public void visitArrayMember(JsonArray parent, JsonPrimitive member,"
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,77,"ublic void visitArrayMember(JsonArray parent, JsonArray member,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,77,"public void visitArrayMember(JsonArray parent, JsonArray member,"
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,82,"ublic void visitArrayMember(JsonArray parent, JsonObject member,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,82,"public void visitArrayMember(JsonArray parent, JsonObject member,"
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,87,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonPrimitive member,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,87,"public void visitObjectMember(JsonObject parent, String memberName, JsonPrimitive member,"
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,92,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonArray member,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,92,"public void visitObjectMember(JsonObject parent, String memberName, JsonArray member,"
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,97,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonObject member,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,97,"public void visitObjectMember(JsonObject parent, String memberName, JsonObject member,"
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,102,"ublic void visitNullObjectMember(JsonObject parent, String memberName,"
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,102,"public void visitNullObjectMember(JsonObject parent, String memberName,"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,33,his.strategies = Preconditions.checkNotNull(strategies);
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,33,this.strategies = $Preconditions.checkNotNull(strategies);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,mport com.google.gson.internal.Cache;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,20,mport com.google.gson.internal.LruCache;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,21,mport com.google.gson.internal.Pair;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,22,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,import com.google.gson.internal.$Cache;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,20,import com.google.gson.internal.$LruCache;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,21,import com.google.gson.internal.$Pair;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,22,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,45,"rivate static final Cache<Pair<Class<?>, String>, Collection<Annotation>> ANNOTATION_CACHE ="
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,46,"ew LruCache<Pair<Class<?>,String>, Collection<Annotation>>(getMaxCacheSize());"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,45,"private static final $Cache<$Pair<Class<?>, String>, Collection<Annotation>> ANNOTATION_CACHE ="
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,46,"new $LruCache<$Pair<Class<?>,String>, Collection<Annotation>>(getMaxCacheSize());"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,65,his.declaringClazz = Preconditions.checkNotNull(declaringClazz);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,65,this.declaringClazz = $Preconditions.checkNotNull(declaringClazz);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,160,"air<Class<?>, String> key = new Pair<Class<?>, String>(declaringClazz, name);"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,160,"$Pair<Class<?>, String> key = new $Pair<Class<?>, String>(declaringClazz, name);"
False,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,23, type.
True,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,23,* type.
False,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,33,his.adaptee = Preconditions.checkNotNull(adaptee);
True,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,33,this.adaptee = $Preconditions.checkNotNull(adaptee);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,19,mport com.google.gson.internal.Primitives;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,19,import com.google.gson.internal.$Primitives;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,391,eturn Primitives.wrap(classOfT).cast(object);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,391,return $Primitives.wrap(classOfT).cast(object);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,444,eturn Primitives.wrap(classOfT).cast(object);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,444,return $Primitives.wrap(classOfT).cast(object);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,523,eturn Primitives.wrap(classOfT).cast(object);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,523,return $Primitives.wrap(classOfT).cast(object);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,550,"ew ObjectNavigator(deserializationExclusionStrategy), fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,550,"new ObjectNavigator(deserializationExclusionStrategy), fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,30,mport com.google.gson.internal.Preconditions;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,200," to/from the JSON Primitive string value {@code ""(x,y)""}. The Java map would"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,200,"* to/from the JSON Primitive string value {@code ""(x,y)""}. The Java map would"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,368,et<ExclusionStrategy> strategySet =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,369,Preconditions.checkNotNull(mode) == Mode.SERIALIZE)
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,368,Set<ExclusionStrategy> strategySet =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,369,($Preconditions.checkNotNull(mode) == Mode.SERIALIZE)
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,473,reconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,474,| typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,473,$Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,474,|| typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,552,reconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,553,| typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,552,$Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,553,|| typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,629,ersionExclusionStrategy versionExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,629,VersionExclusionStrategy versionExclusionStrategy =
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,19,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,19,import com.google.gson.internal.$Types;
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,45,"hrow new JsonParseException(""Expecting array found: "" + json);"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,45,"throw new JsonParseException(""Expecting array found: "" + json);"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,48,f (Types.isArray(targetType)) {
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,48,if ($Types.isArray(targetType)) {
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,51,"eturn (T) objectConstructor.constructArray(Types.getArrayComponentType(targetType),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,51,"return (T) objectConstructor.constructArray($Types.getArrayComponentType(targetType),"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,55,eturn (T) objectConstructor.construct(Types.getRawType(targetType));
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,55,return (T) objectConstructor.construct($Types.getRawType(targetType));
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,60,"hrow new JsonParseException(""Expecting array found: "" + json);"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,60,"throw new JsonParseException(""Expecting array found: "" + json);"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,70,"hild = visitChildAsObject(Types.getArrayComponentType(arrayType), jsonChild);"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,70,"child = visitChildAsObject($Types.getArrayComponentType(arrayType), jsonChild);"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,72,"hild = visitChildAsArray(Types.getArrayComponentType(arrayType),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,72,"child = visitChildAsArray($Types.getArrayComponentType(arrayType),"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,75,"hild = visitChildAsObject(Types.getArrayComponentType(arrayType),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,75,"child = visitChildAsObject($Types.getArrayComponentType(arrayType),"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,98,"hrow new JsonParseException(""Expecting array but found object field "" + f.getName() + "": """
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,98,"throw new JsonParseException(""Expecting array but found object field "" + f.getName() + "": """
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,103,"hrow new JsonParseException(""Expecting array but found field "" + f.getName() + "": """
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,103,"throw new JsonParseException(""Expecting array but found field "" + f.getName() + "": """
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,19,mport com.google.gson.internal.Pair;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,20,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,19,import com.google.gson.internal.$Pair;
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,20,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,54,his.json = Preconditions.checkNotNull(json);
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,54,this.json = $Preconditions.checkNotNull(json);
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,77,"air<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,77,"$Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,87,"rotected Object invokeCustomDeserializer(JsonElement element,"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,88,"air<JsonDeserializer<?>, ObjectTypePair> pair) {"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,87,"protected Object invokeCustomDeserializer(JsonElement element,"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,88,"$Pair<JsonDeserializer<?>, ObjectTypePair> pair) {"
False,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,45,his.delegate = Preconditions.checkNotNull(delegate);
True,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,45,this.delegate = $Preconditions.checkNotNull(delegate);
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,49,reconditions.checkNotNull(fieldName);
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,50,"reconditions.checkArgument(!"""".equals(fieldName.trim()));"
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,49,$Preconditions.checkNotNull(fieldName);
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,50,"$Preconditions.checkArgument(!"""".equals(fieldName.trim()));"
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,60,"embers.put(Preconditions.checkNotNull(property), value);"
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,60,"members.put($Preconditions.checkNotNull(property), value);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,19,mport com.google.gson.internal.Pair;
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,20,mport com.google.gson.internal.Primitives;
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,19,import com.google.gson.internal.$Pair;
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,20,import com.google.gson.internal.$Primitives;
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,59,"hrow new JsonParseException(""Expecting object found: "" + json);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,59,"throw new JsonParseException(""Expecting object found: "" + json);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,78,"hrow new JsonParseException(""Expecting object found: "" + json);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,78,"throw new JsonParseException(""Expecting object found: "" + json);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,102,"hrow new JsonParseException(""Expecting object found: "" + json);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,102,"throw new JsonParseException(""Expecting object found: "" + json);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,105,oolean isPrimitive = Primitives.isPrimitive(declaredTypeOfField);
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,105,boolean isPrimitive = $Primitives.isPrimitive(declaredTypeOfField);
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,115,"air<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,115,"$Pair<JsonDeserializer<?>, ObjectTypePair> pair = objTypePair.getMatchingHandler(deserializers);"
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,97,reconditions.checkArgument(primitive instanceof Number
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,98,| isPrimitiveOrString(primitive));
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,97,$Preconditions.checkArgument(primitive instanceof Number
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,98,|| isPrimitiveOrString(primitive));
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,19,mport com.google.gson.internal.Pair;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,20,mport com.google.gson.internal.Preconditions;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,21,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,19,import com.google.gson.internal.$Pair;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,20,import com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,21,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,80,ype componentType = Types.getArrayComponentType(arrayType);
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,80,Type componentType = $Types.getArrayComponentType(arrayType);
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,177,"air<JsonSerializer<?>,ObjectTypePair> pair = objTypePair.getMatchingHandler(serializers);"
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,177,"$Pair<JsonSerializer<?>,ObjectTypePair> pair = objTypePair.getMatchingHandler(serializers);"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,196,reconditions.checkState(root.isJsonObject());
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,196,$Preconditions.checkState(root.isJsonObject());
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,219,oot = Preconditions.checkNotNull(newRoot);
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,219,root = $Preconditions.checkNotNull(newRoot);
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,19,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,19,import com.google.gson.internal.$Types;
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,40,lass<?> rawTypeOfSrc = Types.getRawType(typeOfSrc);
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,41,"hildGenericType = Types.getMapKeyAndValueTypes(typeOfSrc, rawTypeOfSrc)[1];"
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,40,Class<?> rawTypeOfSrc = $Types.getRawType(typeOfSrc);
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,41,"childGenericType = $Types.getMapKeyAndValueTypes(typeOfSrc, rawTypeOfSrc)[1];"
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,65,"ype[] keyAndValueTypes = Types.getMapKeyAndValueTypes(typeOfT, Types.getRawType(typeOfT));"
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,65,"Type[] keyAndValueTypes = $Types.getMapKeyAndValueTypes(typeOfT, $Types.getRawType(typeOfT));"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,19,mport com.google.gson.internal.Types;
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,20,mport com.google.gson.internal.UnsafeAllocator;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,19,import com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,20,import com.google.gson.internal.$UnsafeAllocator;
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,36,rivate static final UnsafeAllocator unsafeAllocator = UnsafeAllocator.create();
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,36,private static final $UnsafeAllocator unsafeAllocator = $UnsafeAllocator.create();
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,57,"eturn Array.newInstance(Types.getRawType(type), length);"
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,57,"return Array.newInstance($Types.getRawType(type), length);"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,63,lass<T> clazz = (Class<T>) Types.getRawType(typeOfT);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,63,Class<T> clazz = (Class<T>) $Types.getRawType(typeOfT);
False,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,40,reconditions.checkNotNull(obj);
True,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,40,$Preconditions.checkNotNull(obj);
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,19,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,19,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,68,his.letterModifier = Preconditions.checkNotNull(modifier);
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,68,this.letterModifier = $Preconditions.checkNotNull(modifier);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,19,mport com.google.gson.internal.Primitives;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,20,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,19,import com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,20,import com.google.gson.internal.$Primitives;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,99,f (exclusionStrategy.shouldSkipClass(Types.getRawType(objTypePair.type))) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,99,if (exclusionStrategy.shouldSkipClass($Types.getRawType(objTypePair.type))) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,112,f (Types.isArray(objTypePair.type)) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,112,if ($Types.isArray(objTypePair.type)) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,132,| Primitives.unwrap(realClazz).isPrimitive();
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,132,|| $Primitives.unwrap(realClazz).isPrimitive();
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,18,mport com.google.gson.internal.Pair;
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,18,import com.google.gson.internal.$Pair;
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,55,"HANDLER> Pair<HANDLER, ObjectTypePair> getMatchingHandler("
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,55,"<HANDLER> $Pair<HANDLER, ObjectTypePair> getMatchingHandler("
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,60,bjectTypePair moreSpecificType = toMoreSpecificType();
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,60,ObjectTypePair moreSpecificType = toMoreSpecificType();
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,63,"eturn new Pair<HANDLER, ObjectTypePair>(handler, moreSpecificType);"
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,63,"return new $Pair<HANDLER, ObjectTypePair>(handler, moreSpecificType);"
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,68,"eturn handler == null ? null : new Pair<HANDLER, ObjectTypePair>(handler, this);"
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,68,"return handler == null ? null : new $Pair<HANDLER, ObjectTypePair>(handler, this);"
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,71,bjectTypePair toMoreSpecificType() {
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,71,ObjectTypePair toMoreSpecificType() {
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,82,ype getMoreSpecificType() {
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,82,Type getMoreSpecificType() {
False,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,91,"/ TODO (inder): This solution will not work if the field is of a generic type, but"
True,gson/src/main/java/com/google/gson/ObjectTypePair.java,gson/src/main/java/com/google/gson/ObjectTypePair.java,91,"// TODO (inder): This solution will not work if the field is of a generic type, but"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,19,mport com.google.gson.internal.Pair;
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,20,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,19,import com.google.gson.internal.$Pair;
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,20,import com.google.gson.internal.$Types;
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,43,"rivate final List<Pair<Class<?>, T>> typeHierarchyList = new ArrayList<Pair<Class<?>, T>>();"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,43,"private final List<$Pair<Class<?>, T>> typeHierarchyList = new ArrayList<$Pair<Class<?>, T>>();"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,47,"air<Class<?>, T> pair = new Pair<Class<?>, T>(typeOfT, value);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,47,"$Pair<Class<?>, T> pair = new $Pair<Class<?>, T>(typeOfT, value);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,51,"ublic synchronized void registerForTypeHierarchy(Pair<Class<?>, T> pair) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,51,"public synchronized void registerForTypeHierarchy($Pair<Class<?>, T> pair) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,73,"air<Class<?>, T> entry = typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,73,"$Pair<Class<?>, T> entry = typeHierarchyList.get(i);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,103,"air<Class<?>, T> entry = other.typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,103,"$Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,121,"air<Class<?>, T> entry = other.typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,121,"$Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,142,lass<?> rawClass = Types.getRawType(type);
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,142,Class<?> rawClass = $Types.getRawType(type);
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,155,"or (Pair<Class<?>, T> entry : typeHierarchyList) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,155,"for ($Pair<Class<?>, T> entry : typeHierarchyList) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,189,"or (Pair<Class<?>, T> entry : typeHierarchyList) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,189,"for ($Pair<Class<?>, T> entry : typeHierarchyList) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,214,eturn Types.getRawType(type).getSimpleName();
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,214,return $Types.getRawType(type).getSimpleName();
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,19,mport com.google.gson.internal.LruCache;
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,20,mport com.google.gson.internal.Preconditions;
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,21,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,19,import com.google.gson.internal.$LruCache;
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,20,import com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,21,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,37,"rivate static final LruCache<Type, List<Class<?>>> classCache ="
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,38,"ew LruCache<Type, List<Class<?>>>(500);"
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,39,"rivate static final LruCache<Class<?>, Field[]> fieldsCache ="
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,40,"ew LruCache<Class<?>, Field[]>(500);"
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,37,"private static final $LruCache<Type, List<Class<?>>> classCache ="
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,38,"new $LruCache<Type, List<Class<?>>>(500);"
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,39,"private static final $LruCache<Class<?>, Field[]> fieldsCache ="
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,40,"new $LruCache<Class<?>, Field[]>(500);"
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,49,his.exclusionStrategy = Preconditions.checkNotNull(exclusionStrategy);
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,49,this.exclusionStrategy = $Preconditions.checkNotNull(exclusionStrategy);
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,63, Returns a list of classes corresponding to the inheritance of specified type
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,63,* Returns a list of classes corresponding to the inheritance of specified type
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,69,lass<?> topLevelClass = Types.getRawType(type);
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,69,Class<?> topLevelClass = $Types.getRawType(type);
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,94,f (Types.isArray(declaredTypeOfField)) {
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,94,if ($Types.isArray(declaredTypeOfField)) {
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,123,lass<?> rawType = Types.getRawType(typeDefiningF);
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,123,Class<?> rawType = $Types.getRawType(typeDefiningF);
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,128,"eturn Types.resolve(typeDefiningF, rawType, f.getGenericType());"
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,128,"return $Types.resolve(typeDefiningF, rawType, f.getGenericType());"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,21,mport com.google.gson.internal.Preconditions;
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,21,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,33,reconditions.checkArgument(version >= 0.0D);
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,33,$Preconditions.checkArgument(version >= 0.0D);
False,gson/src/main/java/com/google/gson/internal/Cache.java,gson/src/main/java/com/google/gson/internal/$Cache.java,25,"ublic interface Cache<K, V> {"
True,gson/src/main/java/com/google/gson/internal/Cache.java,gson/src/main/java/com/google/gson/internal/$Cache.java,25,"public interface $Cache<K, V> {"
False,gson/src/main/java/com/google/gson/internal/LruCache.java,gson/src/main/java/com/google/gson/internal/$LruCache.java,24, An implementation of the {@link Cache} interface that evict objects from the cache using an
True,gson/src/main/java/com/google/gson/internal/LruCache.java,gson/src/main/java/com/google/gson/internal/$LruCache.java,24,* An implementation of the {@link $Cache} interface that evict objects from the cache using an
False,gson/src/main/java/com/google/gson/internal/LruCache.java,gson/src/main/java/com/google/gson/internal/$LruCache.java,31,"ublic final class LruCache<K, V> extends LinkedHashMap<K, V> implements Cache<K, V> {"
True,gson/src/main/java/com/google/gson/internal/LruCache.java,gson/src/main/java/com/google/gson/internal/$LruCache.java,31,"public final class $LruCache<K, V> extends LinkedHashMap<K, V> implements $Cache<K, V> {"
False,gson/src/main/java/com/google/gson/internal/LruCache.java,gson/src/main/java/com/google/gson/internal/$LruCache.java,36,ublic LruCache(int maxCapacity) {
True,gson/src/main/java/com/google/gson/internal/LruCache.java,gson/src/main/java/com/google/gson/internal/$LruCache.java,36,public $LruCache(int maxCapacity) {
False,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,28,"ublic final class Pair<FIRST, SECOND> {"
True,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,28,"public final class $Pair<FIRST, SECOND> {"
False,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,32,"ublic Pair(FIRST first, SECOND second) {"
True,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,32,"public $Pair(FIRST first, SECOND second) {"
False,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,45,"f (!(o instanceof Pair<?, ?>)) {"
True,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,45,"if (!(o instanceof $Pair<?, ?>)) {"
False,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,49,"air<?, ?> that = (Pair<?, ?>) o;"
True,gson/src/main/java/com/google/gson/internal/Pair.java,gson/src/main/java/com/google/gson/internal/$Pair.java,49,"$Pair<?, ?> that = ($Pair<?, ?>) o;"
False,gson/src/main/java/com/google/gson/internal/Preconditions.java,gson/src/main/java/com/google/gson/internal/$Preconditions.java,32,ublic final class Preconditions {
True,gson/src/main/java/com/google/gson/internal/Preconditions.java,gson/src/main/java/com/google/gson/internal/$Preconditions.java,32,public final class $Preconditions {
False,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,31,ublic final class Primitives {
False,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,32,rivate Primitives() {}
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,31,public final class $Primitives {
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,32,private $Primitives() {}
False,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,81,reconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,81,$Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,97,reconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,97,$Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,114,reconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/$Primitives.java,114,$Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,19,mport static com.google.gson.internal.Preconditions.checkArgument;
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,20,mport static com.google.gson.internal.Preconditions.checkNotNull;
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,19,import static com.google.gson.internal.$Preconditions.checkArgument;
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,20,import static com.google.gson.internal.$Preconditions.checkNotNull;
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,41,ublic final class Types {
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,41,public final class $Types {
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,44,rivate Types() {}
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,44,private $Types() {}
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,272,"ypes.getGenericSupertype(context, contextRawType, supertype));"
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,272,"$Types.getGenericSupertype(context, contextRawType, supertype));"
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,476,"& Types.equals(this, (ParameterizedType) other);"
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,476,"&& $Types.equals(this, (ParameterizedType) other);"
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,516,"& Types.equals(this, (GenericArrayType) o);"
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,516,"&& $Types.equals(this, (GenericArrayType) o);"
False,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,568,"& Types.equals(this, (WildcardType) other);"
True,gson/src/main/java/com/google/gson/internal/Types.java,gson/src/main/java/com/google/gson/internal/$Types.java,568,"&& $Types.equals(this, (WildcardType) other);"
False,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,30,ublic abstract class UnsafeAllocator {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,30,public abstract class $UnsafeAllocator {
False,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,33,ublic static UnsafeAllocator create() {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,33,public static $UnsafeAllocator create() {
False,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,44,eturn new UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,44,return new $UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,63,eturn new UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,63,return new $UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,86,eturn new UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,86,return new $UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,97,eturn new UnsafeAllocator() {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/$UnsafeAllocator.java,97,return new $UnsafeAllocator() {
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,19,mport com.google.gson.internal.Preconditions;
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,20,mport com.google.gson.internal.Types;
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,19,import com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,20,import com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,23,mport java.lang.reflect.Method;
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,44," Such type tokens must be constructed programatically, either by {@link"
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,45, Method#getGenericReturnType extracting types from members} or by using the
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,46, {@link Types} factory class.
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,69,his.rawType = (Class<? super T>) Types.getRawType(type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,64,this.rawType = (Class<? super T>) $Types.getRawType(type);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,78,his.type = Types.canonicalize(Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,79,his.rawType = (Class<? super T>) Types.getRawType(this.type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,73,this.type = $Types.canonicalize($Preconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,74,this.rawType = (Class<? super T>) $Types.getRawType(this.type);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,84, Returns the type from super class's type parameter in {@link Types#canonicalize(java.lang.reflect.Type)
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,79,* Returns the type from super class's type parameter in {@link $Types#canonicalize
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,94,eturn Types.canonicalize(parameterized.getActualTypeArguments()[0]);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,89,return $Types.canonicalize(parameterized.getActualTypeArguments()[0]);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,139,eturn rawType.isAssignableFrom(Types.getRawType(from));
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,134,return rawType.isAssignableFrom($Types.getRawType(from));
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,144,eturn rawType.isAssignableFrom(Types.getRawType(from))
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,139,return rawType.isAssignableFrom($Types.getRawType(from))
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,204,lass<?> clazz = Types.getRawType(from);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,199,Class<?> clazz = $Types.getRawType(from);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,293,"& Types.equals(type, ((TypeToken<?>) o).type);"
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,288,"&& $Types.equals(type, ((TypeToken<?>) o).type);"
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,297,eturn Types.typeToString(type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,292,return $Types.typeToString(type);
False,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,19,mport com.google.gson.internal.Types;
True,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,19,import com.google.gson.internal.$Types;
False,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,29, Unit tests for the {@code GenericArrayType}s created by the {@link Types} class.
True,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,29,* Unit tests for the {@code GenericArrayType}s created by the {@link $Types} class.
False,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,40,"urType = Types.arrayOf(Types.newParameterizedTypeWithOwner(null, List.class, String.class));"
True,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,40,"ourType = $Types.arrayOf($Types.newParameterizedTypeWithOwner(null, List.class, String.class));"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,19,mport com.google.gson.internal.Cache;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,20,mport com.google.gson.internal.LruCache;
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,19,import com.google.gson.internal.$Cache;
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,20,import com.google.gson.internal.$LruCache;
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,25, Unit test for the {@link LruCache} class.
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,25,* Unit test for the {@link $LruCache} class.
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,33,"ache<String, Integer> cache = new LruCache<String, Integer>(3);"
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,33,"$Cache<String, Integer> cache = new $LruCache<String, Integer>(3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,47,"ache<String, Integer> cache = new LruCache<String, Integer>(3);"
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,47,"$Cache<String, Integer> cache = new $LruCache<String, Integer>(3);"
False,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,59,"ache<String, Integer> cache = new LruCache<String, Integer>(5);"
True,gson/src/test/java/com/google/gson/LruCacheTest.java,gson/src/test/java/com/google/gson/LruCacheTest.java,59,"$Cache<String, Integer> cache = new $LruCache<String, Integer>(5);"
False,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,19,mport com.google.gson.internal.Types;
True,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,19,import com.google.gson.internal.$Types;
False,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,29, Unit tests for {@code ParamterizedType}s created by the {@link Types} class.
True,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,29,* Unit tests for {@code ParamterizedType}s created by the {@link $Types} class.
False,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,40,"urType = Types.newParameterizedTypeWithOwner(null, List.class, String.class);"
True,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,40,"ourType = $Types.newParameterizedTypeWithOwner(null, List.class, String.class);"
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,19,mport com.google.gson.internal.Primitives;
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,20,mport com.google.gson.internal.Types;
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,19,import com.google.gson.internal.$Primitives;
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,20,import com.google.gson.internal.$Types;
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,54,f (Primitives.isWrapperType(Primitives.wrap(clazz))) {
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,54,if ($Primitives.isWrapperType($Primitives.wrap(clazz))) {
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,130,oolean addQuotes = !clazz.isArray() && !Primitives.unwrap(clazz).isPrimitive();
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,130,boolean addQuotes = !clazz.isArray() && !$Primitives.unwrap(clazz).isPrimitive();
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,156,lass<?> rawType = Types.getRawType(genericClass);
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,156,Class<?> rawType = $Types.getRawType(genericClass);
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,159,f (Primitives.isPrimitive(genericClass)) {
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,159,if ($Primitives.isPrimitive(genericClass)) {
True,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,19,import com.google.gson.internal.$Primitives;
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,23,mport com.google.gson.JsonParseException;
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,24,mport com.google.gson.internal.Primitives;
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,36,lass<?> aClass = Primitives.wrap(to);
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,37,f (Primitives.isWrapperType(aClass)) {
True,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,34,Class<?> aClass = $Primitives.wrap(to);
True,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,35,if ($Primitives.isWrapperType(aClass)) {
