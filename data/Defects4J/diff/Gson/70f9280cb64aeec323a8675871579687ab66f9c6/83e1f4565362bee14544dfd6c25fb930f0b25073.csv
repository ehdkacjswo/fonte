is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,267, A pool of short strings intended to prevent object allocation.
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,269,rivate static final StringPool stringPool = new StringPool();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,982,tringBuilder builder = null;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,983,nt hashCode = 0;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,977,StringBuilder builder = new StringBuilder();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,994,f (builder == null) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,995,"eturn stringPool.get(buffer, start, p - start - 1, hashCode);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,996, else {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,997,"uilder.append(buffer, start, p - start - 1);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,998,eturn builder.toString();
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,988,"builder.append(buffer, start, p - start - 1);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,989,return builder.toString();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1003,f (builder == null) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1004,uilder = new StringBuilder();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1013,ashCode = (hashCode * 31) + c;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1016, else {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1017,ashCode = (hashCode * 31) + c;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1021,f (builder == null) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1022,uilder = new StringBuilder();
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,17,ackage com.google.gson.stream;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,20, A pool of string instances. Unlike the {@link String#intern() VM's
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,21," interned strings}, this pool provides no guarantee of reference equality."
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,22, It is intended only to save allocations.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,24, <p>This class is safe for concurrent use.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,26,inal class StringPool {
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,28, The maximum length of strings to add to the pool. Strings longer than this
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,29, don't benefit from pooling because we spend more time on pooling than we
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,30, save on garbage collection.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,32,rivate static final int MAX_LENGTH = 20;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,33,rivate final String[] pool = new String[1024];
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,36," Returns a string equal to {@code new String(array, start, length)}."
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,38,"ublic String get(char[] array, int start, int length, int hashCode) {"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,39,f (length > StringPool.MAX_LENGTH) {
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,40,"eturn new String(array, start, length);"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,43,/ Pick a bucket using Doug Lea's supplemental secondaryHash function (from HashMap)
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,44,ashCode ^= (hashCode >>> 20) ^ (hashCode >>> 12);
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,45,ashCode ^= (hashCode >>> 7) ^ (hashCode >>> 4);
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,46,nt index = hashCode & (pool.length - 1);
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,48,tring pooled = pool[index];
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,49,f (pooled == null || pooled.length() != length) {
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,50,"tring result = new String(array, start, length);"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,51,ool[index] = result;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,52,eturn result;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,55,or (int i = 0; i < length; i++) {
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,56,f (pooled.charAt(i) != array[start + i]) {
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,57,"tring result = new String(array, start, length);"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,58,ool[index] = result;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,59,eturn result;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,63,eturn pooled;
