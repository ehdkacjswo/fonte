is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,37,lass Escaper {
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,37,final class Escaper {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,19,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,22, Formats Json in a compact way eliminating all unnecessary whitespace.
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,24, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,26,inal class JsonCompactFormatter implements JsonFormatter {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,28,rivate static class FormattingVisitor implements JsonElementVisitor {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,29,rivate final Appendable writer;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,30,rivate final Escaper escaper;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,31,rivate final boolean serializeNulls;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,33,"ormattingVisitor(Appendable writer, Escaper escaper, boolean serializeNulls) {"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,34,his.writer = writer;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,35,his.escaper = escaper;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,36,his.serializeNulls = serializeNulls;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,39,ublic void visitPrimitive(JsonPrimitive primitive) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,40,"rimitive.toString(writer, escaper);"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,43,ublic void visitNull() throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,44,"riter.append(""null"");"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,47,ublic void startArray(JsonArray array) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,48,riter.append('[');
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,51,"ublic void visitArrayMember(JsonArray parent, JsonPrimitive member,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,52,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,53,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,54,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,56,"ember.toString(writer, escaper);"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,59,"ublic void visitArrayMember(JsonArray parent, JsonArray member,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,60,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,61,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,62,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,66,"ublic void visitArrayMember(JsonArray parent, JsonObject member,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,67,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,68,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,69,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,73,"ublic void visitNullArrayMember(JsonArray parent, boolean isFirst) throws IOException {"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,74,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,75,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,79,ublic void endArray(JsonArray array) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,80,riter.append(']');
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,83,ublic void startObject(JsonObject object) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,84,riter.append('{');
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,87,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonPrimitive member,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,88,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,89,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,90,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,92,"riter.append('""');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,93,riter.append(escaper.escapeJsonString(memberName));
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,94,"riter.append(""\"":"");"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,95,"ember.toString(writer, escaper);"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,98,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonArray member,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,99,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,100,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,101,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,103,"riter.append('""');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,104,riter.append(escaper.escapeJsonString(memberName));
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,105,"riter.append(""\"":"");"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,108,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonObject member,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,109,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,110,f (!isFirst) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,111,"riter.append(',');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,113,"riter.append('""');"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,114,riter.append(escaper.escapeJsonString(memberName));
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,115,"riter.append(""\"":"");"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,118,"ublic void visitNullObjectMember(JsonObject parent, String memberName,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,119,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,120,f (serializeNulls) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,121,"isitObjectMember(parent, memberName, (JsonObject) null, isFirst);"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,125,ublic void endObject(JsonObject object) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,126,riter.append('}');
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,130,rivate final boolean escapeHtmlChars;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,132,sonCompactFormatter() {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,133,his(true);
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,136,sonCompactFormatter(boolean escapeHtmlChars) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,137,his.escapeHtmlChars = escapeHtmlChars;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,140,"ublic void format(JsonElement root, Appendable writer,"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,141,oolean serializeNulls) throws IOException {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,142,f (root == null) {
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,143,eturn;
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,145,sonElementVisitor visitor = new FormattingVisitor(
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,146,"riter, new Escaper(escapeHtmlChars), serializeNulls);"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,147,"sonTreeNavigator navigator = new JsonTreeNavigator(visitor, serializeNulls);"
False,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,gson/src/main/java/com/google/gson/JsonCompactFormatter.java,148,avigator.navigate(root);
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,19,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,22, Common interface for a formatter for Json.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,24, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,26,nterface JsonFormatter {
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,29, Writes a formatted version of the Json corresponding to
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,30, the specified Json.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,32, @param root the root of the Json tree.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,33, @param writer the writer to output the formatter JSON to.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,34, @param serializeNulls serialize null values in the output.
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,36,"ublic void format(JsonElement root, Appendable writer,"
False,gson/src/main/java/com/google/gson/JsonFormatter.java,gson/src/main/java/com/google/gson/JsonFormatter.java,37,oolean serializeNulls) throws IOException;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,19,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,22, Formats Json in a nicely indented way with a specified print margin.
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,23, This printer tries to keep elements on the same line as much as possible
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,24, while respecting right margin.
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,26, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,28,inal class JsonPrintFormatter implements JsonFormatter {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,30,rivate final int printMargin;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,31,rivate final int indentationSize;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,32,rivate final int rightMargin;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,33,rivate final boolean escapeHtmlChars;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,35,ublic static final int DEFAULT_PRINT_MARGIN = 80;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,36,ublic static final int DEFAULT_INDENTATION_SIZE = 2;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,37,ublic static final int DEFAULT_RIGHT_MARGIN = 4;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,39,sonPrintFormatter() {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,40,his(true);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,43,sonPrintFormatter(boolean escapeHtmlChars) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,44,"his(DEFAULT_PRINT_MARGIN, DEFAULT_INDENTATION_SIZE, DEFAULT_RIGHT_MARGIN, escapeHtmlChars);"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,47,"sonPrintFormatter(int printMargin, int indentationSize, int rightMargin,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,48,oolean escapeHtmlChars) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,49,his.printMargin = printMargin;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,50,his.indentationSize = indentationSize;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,51,his.rightMargin = rightMargin;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,52,his.escapeHtmlChars = escapeHtmlChars;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,55,rivate class JsonWriter {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,56,rivate final Appendable writer;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,57,rivate StringBuilder line;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,58,rivate int level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,59,sonWriter(Appendable writer) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,60,his.writer = writer;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,61,evel = 0;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,62,ine = new StringBuilder();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,65,oid key(String key) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,66,reakLineIfThisToNextExceedsLimit(key.length() + 2);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,67,"etLine().append('""');"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,68,etLine().append(key);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,69,"etLine().append('""');"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,72,oid value(String value) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,73,reakLineIfThisToNextExceedsLimit(value.length() + 2);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,74,etLine().append(value);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,77,oid fieldSeparator() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,78,etLine().append(':');
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,79,reakLineIfNeeded();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,82,oid elementSeparator() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,83,"etLine().append(',');"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,84,reakLineIfNeeded();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,87,oid beginObject() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,88,reakLineIfNeeded();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,89,etLine().append('{');
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,90,+level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,93,oid endObject() {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,94,etLine().append('}');
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,95,-level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,98,oid beginArray() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,99,reakLineIfNeeded();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,100,etLine().append('[');
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,101,+level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,104,oid endArray() {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,105,etLine().append(']');
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,106,-level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,109,rivate void breakLineIfNeeded() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,110,reakLineIfThisToNextExceedsLimit(0);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,113,rivate void breakLineIfThisToNextExceedsLimit(int nextLength) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,114,f (getLine().length() + nextLength > printMargin - rightMargin) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,115,inishLine();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,119,rivate void finishLine() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,120,f (line != null) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,121,"riter.append(line).append(""\n"");"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,123,ine = null;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,126,rivate StringBuilder getLine() {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,127,f (line == null) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,128,reateNewLine();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,130,eturn line;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,133,rivate void createNewLine() {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,134,ine = new StringBuilder();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,135,or (int i = 0; i < level; ++i) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,136,or (int j = 0; j < indentationSize; ++j) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,137,ine.append(' ');
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,143,rivate class PrintFormattingVisitor implements JsonElementVisitor {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,144,rivate final JsonWriter writer;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,145,rivate final Escaper escaper;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,146,rivate final boolean serializeNulls;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,148,"rintFormattingVisitor(JsonWriter writer, Escaper escaper, boolean serializeNulls) {"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,149,his.writer = writer;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,150,his.escaper = escaper;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,151,his.serializeNulls = serializeNulls;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,154,rivate void addCommaCheckingFirst(boolean first) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,155,f (!first) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,156,riter.elementSeparator();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,160,ublic void startArray(JsonArray array) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,161,riter.beginArray();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,164,"ublic void visitArrayMember(JsonArray parent, JsonPrimitive member,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,165,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,166,ddCommaCheckingFirst(isFirst);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,167,riter.value(escapeJsonPrimitive(member));
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,170,"ublic void visitArrayMember(JsonArray parent, JsonArray member,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,171,oolean first) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,172,ddCommaCheckingFirst(first);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,175,"ublic void visitArrayMember(JsonArray parent, JsonObject member,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,176,oolean first) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,177,ddCommaCheckingFirst(first);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,180,"ublic void visitNullArrayMember(JsonArray parent, boolean isFirst) throws IOException {"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,181,ddCommaCheckingFirst(isFirst);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,184,ublic void endArray(JsonArray array) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,185,riter.endArray();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,188,ublic void startObject(JsonObject object) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,189,riter.beginObject();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,192,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonPrimitive member,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,193,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,194,ddCommaCheckingFirst(isFirst);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,195,riter.key(escaper.escapeJsonString(memberName));
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,196,riter.fieldSeparator();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,197,riter.value(escapeJsonPrimitive(member));
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,200,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonArray member,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,201,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,202,ddCommaCheckingFirst(isFirst);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,203,riter.key(escaper.escapeJsonString(memberName));
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,204,riter.fieldSeparator();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,207,"ublic void visitObjectMember(JsonObject parent, String memberName, JsonObject member,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,208,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,209,ddCommaCheckingFirst(isFirst);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,210,riter.key(escaper.escapeJsonString(memberName));
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,211,riter.fieldSeparator();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,214,"ublic void visitNullObjectMember(JsonObject parent, String memberName,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,215,oolean isFirst) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,216,f (serializeNulls) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,217,"isitObjectMember(parent, memberName, (JsonObject) null, isFirst);"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,221,ublic void endObject(JsonObject object) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,222,riter.endObject();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,225,ublic void visitPrimitive(JsonPrimitive primitive) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,226,riter.value(escapeJsonPrimitive(primitive));
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,229,ublic void visitNull() throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,230,"riter.value(""null"");"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,233,rivate String escapeJsonPrimitive(JsonPrimitive member) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,234,tringBuilder builder = new StringBuilder();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,235,"ember.toString(builder, escaper);"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,236,eturn builder.toString();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,240,"ublic void format(JsonElement root, Appendable writer,"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,241,oolean serializeNulls) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,242,f (root == null) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,243,eturn;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,245,sonWriter jsonWriter = new JsonWriter(writer);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,246,sonElementVisitor visitor = new PrintFormattingVisitor(
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,247,"sonWriter, new Escaper(escapeHtmlChars), serializeNulls);"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,248,"sonTreeNavigator navigator = new JsonTreeNavigator(visitor, serializeNulls);"
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,249,avigator.navigate(root);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,250,sonWriter.finishLine();
