is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,19,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,20,mport java.util.ArrayList;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,21,mport java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,22,mport java.util.EnumSet;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,23,mport java.util.Set;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,25,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,31,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,33,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,34,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,35,import java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,36,import java.util.EnumSet;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,37,import java.util.Set;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,143,public void testEnumSubclassAsParameterizedType() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,144,Collection<Roshambo> list = new ArrayList<Roshambo>();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,145,list.add(Roshambo.ROCK);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,146,list.add(Roshambo.PAPER);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,148,String json = gson.toJson(list);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,149,"assertEquals(""[\""ROCK\"",\""PAPER\""]"", json);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,151,Type collectionType = new TypeToken<Collection<Roshambo>>() {}.getType();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,152,"Collection<Roshambo> actualJsonList = gson.fromJson(json, collectionType);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,153,"MoreAsserts.assertContains(actualJsonList, Roshambo.ROCK);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,154,"MoreAsserts.assertContains(actualJsonList, Roshambo.PAPER);"
