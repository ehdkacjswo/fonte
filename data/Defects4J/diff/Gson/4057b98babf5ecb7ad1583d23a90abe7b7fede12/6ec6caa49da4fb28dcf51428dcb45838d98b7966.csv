is_addition,old_file_path,new_file_path,line_num,content
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,20,import com.google.gson.JsonElement;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,23,import com.google.gson.internal.bind.JsonTreeReader;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,26,import com.google.gson.stream.JsonToken;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,31,import java.util.HashMap;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,62,final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,71,boolean writeEntireGraph = false;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,67,/ this is the top-level object in the graph; write the whole graph recursively
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,69,raph = new Graph();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,70,raphThreadLocal.set(graph);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,71,"lement element = new Element<T>(value, graph.elements.size() + 1, typeAdapter);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,72,"raph.elements.put(value, element);"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,74,writeEntireGraph = true;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,75,"graph = new Graph(new IdentityHashMap<Object, Element<?>>());"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,78,Element<T> element = (Element<T>) graph.map.get(value);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,79,if (element == null) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,80,"element = new Element<T>(value, graph.nextName(), typeAdapter, null);"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,81,"graph.map.put(value, element);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,75,ut.beginObject();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,76,lement current;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,77,hile ((current = graph.queue.poll()) != null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,78,ut.name(current.getName());
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,79,urrent.write(out);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,85,if (writeEntireGraph) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,86,graphThreadLocal.set(graph);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,87,try {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,88,out.beginObject();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,89,Element<?> current;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,90,while ((current = graph.queue.poll()) != null) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,91,out.name(current.id);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,92,current.write(out);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,94,out.endObject();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,95,} finally {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,96,graphThreadLocal.remove();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,81,ut.endObject();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,82,raphThreadLocal.remove();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,84,/ this is an element nested in the graph; just reference it by ID
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,86,lement element = graph.elements.get(value);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,87,f (element == null) {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,88,"lement = new Element<T>(value, graph.elements.size() + 1, typeAdapter);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,89,"raph.elements.put(value, element);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,90,raph.queue.add(element);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,92,ut.value(element.getName());
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,99,out.value(element.id);
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,97,/ TODO:
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,98,eturn null;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,104,if (in.peek() == JsonToken.NULL) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,105,in.nextNull();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,106,return null;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,109,String currentName = null;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,110,Graph graph = graphThreadLocal.get();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,111,boolean readEntireGraph = false;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,113,if (graph == null) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,114,"graph = new Graph(new HashMap<Object, Element<?>>());"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,115,readEntireGraph = true;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,117,// read the entire tree into memory
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,118,in.beginObject();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,119,while (in.hasNext()) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,120,String name = in.nextName();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,121,if (currentName == null) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,122,currentName = name;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,124,JsonElement element = elementAdapter.read(in);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,125,"graph.map.put(name, new Element<T>(null, name, typeAdapter, element));"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,127,in.endObject();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,128,} else {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,129,currentName = in.nextString();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,132,if (readEntireGraph) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,133,graphThreadLocal.set(graph);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,135,try {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,136,Element<T> element = (Element<T>) graph.map.get(currentName);
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,137,if (element.value == null) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,138,element.typeAdapter = typeAdapter;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,139,element.read();
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,141,return element.value;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,142,} finally {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,143,if (readEntireGraph) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,144,graphThreadLocal.remove();
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,104,"rivate final Map<Object, Element> elements = new IdentityHashMap<Object, Element>();"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,153,* The graph elements. On serialization keys are objects (using an identity
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,154,* hash map) and on deserialization keys are the string names (using a
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,155,* standard hash map).
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,157,"private final Map<Object, Element<?>> map;"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,160,"private Graph(Map<Object, Element<?>> map) {"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,161,this.map = map;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,165,* Returns a unique name for an element to be inserted into the graph.
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,167,public String nextName() {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,168,"return ""0x"" + Integer.toHexString(map.size() + 1);"
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,109,rivate final T value;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,110,rivate final int id;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,111,rivate final TypeAdapter<T> typeAdapter;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,112,"lement(T value, int id, TypeAdapter<T> typeAdapter) {"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,173,private final String id;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,174,private T value;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,175,private TypeAdapter<T> typeAdapter;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,176,private final JsonElement element;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,177,private boolean reading = false;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,179,"Element(T value, String id, TypeAdapter<T> typeAdapter, JsonElement element) {"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,183,this.element = element;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,117,rivate String getName() {
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,118,"eturn ""0x"" + Integer.toHexString(id);"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,190,private void read() throws IOException {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,191,if (reading) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,192,// TODO: this currently fails because we don't have the instance we want yet
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,193,"System.out.println(""ALREADY READING "" + id);"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,194,return;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,196,reading = true;
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,197,try {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,198,// TODO: use TypeAdapter.fromJsonTree() when that's public
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,199,value = typeAdapter.read(new JsonTreeReader(element));
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,200,if (value == null) {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,201,"throw new IllegalStateException(""non-null value deserialized to null: "" + element);"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,203,} finally {
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,204,reading = false;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,28,mport com.google.gson.internal.bind.JsonElementWriter;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,28,import com.google.gson.internal.bind.JsonTreeWriter;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,255,sonElementWriter jsonWriter = new JsonElementWriter();
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,255,JsonTreeWriter jsonWriter = new JsonTreeWriter();
False,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,24,ublic void testBasicCycle() {
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,24,public void testSerialization() {
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,42,public void testDeserialization() {
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,43,"String json = ""{'0x1':{'name':'ROCK','beats':'0x2'},"" +"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,44,"""'0x2':{'name':'SCISSORS','beats':'0x3'},"" +"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,45,"""'0x3':{'name':'PAPER','beats':'0x1'}}"";"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,47,Gson gson = new GsonBuilder()
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,48,.registerTypeAdapterFactory(GraphTypeAdapterFactory.of(Roshambo.class))
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,49,.create();
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,51,"Roshambo rock = gson.fromJson(json, Roshambo.class);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,52,"assertEquals(""ROCK"", rock.name);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,53,Roshambo scissors = rock.beats;
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,54,"assertEquals(""SCISSORS"", scissors.name);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,55,Roshambo paper = scissors.beats;
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,56,"assertEquals(""PAPER"", paper.name);"
True,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/graph/GraphTypeAdapterFactoryTest.java,57,"assertSame(rock, paper.beats); // TODO: currently fails"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,29,mport com.google.gson.internal.bind.JsonElementWriter;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,29,import com.google.gson.internal.bind.JsonTreeWriter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,440,sonElementWriter writer = new JsonElementWriter();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,440,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,19,mport com.google.gson.internal.bind.JsonElementWriter;
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,19,import com.google.gson.internal.bind.JsonTreeWriter;
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,21,mport com.google.gson.reflect.TypeToken;
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,227,sonElementWriter jsonWriter = new JsonElementWriter();
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,226,JsonTreeWriter jsonWriter = new JsonTreeWriter();
False,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java,33,ublic final class JsonElementWriter extends JsonWriter {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java,33,public final class JsonTreeWriter extends JsonWriter {
False,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java,57,ublic JsonElementWriter() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java,57,public JsonTreeWriter() {
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,269,sonElementWriter jsonWriter = new JsonElementWriter();
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,269,JsonTreeWriter jsonWriter = new JsonTreeWriter();
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,35,mport java.lang.reflect.AccessibleObject;
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,23,ublic final class JsonElementWriterTest extends TestCase {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,23,public final class JsonTreeWriterTest extends TestCase {
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,25,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,25,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,35,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,35,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,48,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,48,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,57,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,57,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,73,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,73,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,87,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,87,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,98,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,98,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,108,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,108,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,118,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,118,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,123,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,123,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,134,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,134,JsonTreeWriter writer = new JsonTreeWriter();
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,155,sonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java,155,JsonTreeWriter writer = new JsonTreeWriter();
