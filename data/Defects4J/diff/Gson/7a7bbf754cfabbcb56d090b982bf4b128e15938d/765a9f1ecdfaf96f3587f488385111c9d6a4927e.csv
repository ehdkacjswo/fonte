is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,19,import com.google.gson.stream.JsonReader;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,443,sonElement root = new JsonParser().parse(json);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,444," target = (T) fromJson(root, typeOfT);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,445,eturn target;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,444,JsonReader jsonReader = new JsonReader(json);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,445,jsonReader.setLenient(true);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,446,JsonElement root = GsonReader.parse(jsonReader);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,447,"return (T) fromJson(root, typeOfT);"
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,18,import com.google.gson.stream.JsonReader;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,53,sonParserJavacc parser = new JsonParserJavacc(json);
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,54,sonElement element = parser.parse();
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,55,eturn element;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,56, catch (TokenMgrError e) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,57,"hrow new JsonParseException(""Failed parsing JSON source: "" + json + "" to Json"", e);"
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,58, catch (ParseException e) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,59,"hrow new JsonParseException(""Failed parsing JSON source: "" + json + "" to Json"", e);"
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,54,JsonReader jsonReader = new JsonReader(json);
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,55,jsonReader.setLenient(true);
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,56,return GsonReader.parse(jsonReader);
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,153,eturn (Number) value;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,153,return value instanceof String ? stringToNumber((String) value) : (Number) value;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,156,static Number stringToNumber(String value) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,157,try {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,158,long longValue = Long.parseLong(value);
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,159,if (longValue >= Integer.MIN_VALUE && longValue <= Integer.MAX_VALUE) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,160,return (int) longValue;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,161,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,162,return longValue;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,164,} catch (NumberFormatException ignored) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,167,try {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,168,return new BigDecimal(value);
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,169,} catch (NumberFormatException ignored) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,170,"return Double.parseDouble(value); // probably NaN, -Infinity or Infinity"
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,18,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,19,import com.google.gson.stream.JsonToken;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,21,import java.io.IOException;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,48,rivate final JsonParserJavacc parser;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,51,private final JsonReader parser;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,50,rivate JsonElement nextElement;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,65,arser = new JsonParserJavacc(reader);
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,67,parser = new JsonReader(reader);
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,68,parser.setLenient(true);
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,67,extElement = null;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,78,ynchronized (lock) {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,79,f (nextElement != null) {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,80,sonElement returnValue = nextElement;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,81,extElement = null;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,82,eturn returnValue;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,80,if (!hasNext()) {
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,81,throw new NoSuchElementException();
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,87,eturn parser.parse();
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,88, catch (TokenMgrError e) {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,89,"hrow new JsonParseException(""Failed parsing JSON source to Json"", e);"
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,90, catch (ParseException e) {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,91,"hrow new JsonParseException(""Failed parsing JSON source to Json"", e);"
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,85,return GsonReader.parse(parser);
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,113,extElement = next();
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,114,eturn true;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,115, catch (NoSuchElementException e) {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,116,extElement = null;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,117,eturn false;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,107,return parser.peek() != JsonToken.END_DOCUMENT;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,108,} catch (IOException e) {
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,109,throw new JsonParseException(e);
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,21,import com.google.gson.stream.JsonReader;
False,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,89,sonParserJavacc parser = new JsonParserJavacc(reader);
False,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,90,sonElement element1 = parser.parse();
False,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,91,sonElement element2 = parser.parse();
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,90,JsonReader parser = new JsonReader(reader);
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,91,parser.setLenient(true);
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,92,JsonElement element1 = GsonReader.parse(parser);
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,93,JsonElement element2 = GsonReader.parse(parser);
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,256,ublic void testHighPrecisionLong() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,256,public void disabled_testHighPrecisionLong() throws IOException {
