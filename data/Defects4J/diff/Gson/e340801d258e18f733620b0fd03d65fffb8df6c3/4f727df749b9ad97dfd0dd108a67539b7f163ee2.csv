is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,298,ublic static enum MyEnum {
False,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,299,"ALUE1, VALUE2;"
False,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,301,ublic String getExpectedJson() {
False,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,302,"eturn ""\"""" + toString() + ""\"""";"
False,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,23,mport com.google.gson.common.TestTypes.MyEnum;
False,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,107,ublic void testTopLevelEnumInASingleElementArrayDeserialization() {
False,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,108,"tring json = ""["" + MyEnum.VALUE1.getExpectedJson() + ""]"";"
False,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,109,"yEnum target = gson.fromJson(json, MyEnum.class);"
False,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,110,"ssertEquals(json, ""["" + target.getExpectedJson() + ""]"");"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,23,mport com.google.gson.common.TestTypes.MyEnum;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,180,ublic void testCollectionOfEnumsSerialization() {
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,181,ype type = new TypeToken<Collection<MyEnum>>() {}.getType();
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,182,ollection<MyEnum> target = new ArrayList<MyEnum>();
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,183,arget.add(MyEnum.VALUE1);
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,184,arget.add(MyEnum.VALUE2);
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,185,"tring expectedJson = ""[\""VALUE1\"",\""VALUE2\""]"";"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,186,tring actualJson = gson.toJson(target);
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,187,"ssertEquals(expectedJson, actualJson);"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,188,"ctualJson = gson.toJson(target, type);"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,189,"ssertEquals(expectedJson, actualJson);"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,192,ublic void testCollectionOfEnumsDeserialization() {
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,193,ype type = new TypeToken<Collection<MyEnum>>() {}.getType();
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,194,"tring json = ""[\""VALUE1\"",\""VALUE2\""]"";"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,195,"ollection<MyEnum> target = gson.fromJson(json, type);"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,196,"oreAsserts.assertContains(target, MyEnum.VALUE1);"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,197,"oreAsserts.assertContains(target, MyEnum.VALUE2);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,20,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,21,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,25,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,26,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,27,import java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,39,ublic void testEnumSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,40,tring result = gson.toJson(TestEnum.TEST_1);
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,41,"ssertEquals('""' + TestEnum.TEST_1.toString() + '""', result);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,45,public void testTopLevelEnumSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,46,String result = gson.toJson(MyEnum.VALUE1);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,47,"assertEquals('""' + MyEnum.VALUE1.toString() + '""', result);"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,44,ublic void testEnumDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,45,"estEnum result = gson.fromJson('""' + TestEnum.TEST_1.toString() + '""', TestEnum.class);"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,46,"ssertEquals(TestEnum.TEST_1, result);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,50,public void testTopLevelEnumDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,51,"MyEnum result = gson.fromJson('""' + MyEnum.VALUE1.toString() + '""', MyEnum.class);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,52,"assertEquals(MyEnum.VALUE1, result);"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,49,ublic void testEnumFieldSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,50,tring result = gson.toJson(TestEnum.TEST_1);
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,51,"ssertEquals('""' + TestEnum.TEST_1.toString() + '""', result);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,55,public void testTopLevelEnumInASingleElementArrayDeserialization() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,56,"String json = ""["" + MyEnum.VALUE1.getExpectedJson() + ""]"";"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,57,"MyEnum target = gson.fromJson(json, MyEnum.class);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,58,"assertEquals(json, ""["" + target.getExpectedJson() + ""]"");"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,54,ublic void testEnumFieldDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,55,"oo result = gson.fromJson(""{\""f\"":\""TEST_1\""}"", Foo.class);"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,56,"ssertEquals(TestEnum.TEST_1, result.f);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,61,public void testCollectionOfEnumsSerialization() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,62,Type type = new TypeToken<Collection<MyEnum>>() {}.getType();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,63,Collection<MyEnum> target = new ArrayList<MyEnum>();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,64,target.add(MyEnum.VALUE1);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,65,target.add(MyEnum.VALUE2);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,66,"String expectedJson = ""[\""VALUE1\"",\""VALUE2\""]"";"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,67,String actualJson = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,68,"assertEquals(expectedJson, actualJson);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,69,"actualJson = gson.toJson(target, type);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,70,"assertEquals(expectedJson, actualJson);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,73,public void testCollectionOfEnumsDeserialization() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,74,Type type = new TypeToken<Collection<MyEnum>>() {}.getType();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,75,"String json = ""[\""VALUE1\"",\""VALUE2\""]"";"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,76,"Collection<MyEnum> target = gson.fromJson(json, type);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,77,"MoreAsserts.assertContains(target, MyEnum.VALUE1);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,78,"MoreAsserts.assertContains(target, MyEnum.VALUE2);"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,59,rivate static enum TestEnum {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,60,"EST_1,"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,61,EST_2;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,81,public void testClassWithEnumFieldSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,82,ClassWithEnumFields target = new ClassWithEnumFields();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,83,"assertEquals(target.getExpectedJson(), gson.toJson(target));"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,86,public void testClassWithEnumFieldDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,87,"String json = ""{value1:'VALUE1',value2:'VALUE2'}"";"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,88,"ClassWithEnumFields target = gson.fromJson(json, ClassWithEnumFields.class);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,89,"assertEquals(MyEnum.VALUE1,target.value1);"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,90,"assertEquals(MyEnum.VALUE2,target.value2);"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,64,rivate static class Foo {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,65,rivate TestEnum f;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,67,ublic Foo() {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,68,his(TestEnum.TEST_1);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,93,private static enum MyEnum {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,94,"VALUE1, VALUE2;"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,96,public String getExpectedJson() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,97,"return ""\"""" + toString() + ""\"""";"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,71,ublic Foo(TestEnum f) {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,72,his.f = f;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,101,private static class ClassWithEnumFields {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,102,private final MyEnum value1 = MyEnum.VALUE1;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,103,private final MyEnum value2 = MyEnum.VALUE2;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,104,public String getExpectedJson() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,105,"return ""{\""value1\"":\"""" + value1 + ""\"",\""value2\"":\"""" + value2 + ""\""}"";"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,31,mport com.google.gson.common.TestTypes.MyEnum;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,223,ublic void testClassWithEnumFieldSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,224,lassWithEnumFields target = new ClassWithEnumFields();
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,225,"ssertEquals(target.getExpectedJson(), gson.toJson(target));"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,228,ublic void testClassWithEnumFieldDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,229,tring json = new ClassWithEnumFields().getExpectedJson();
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,230,"lassWithEnumFields target = gson.fromJson(json, ClassWithEnumFields.class);"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,231,"ssertEquals(json, target.getExpectedJson());"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,234,ublic void testTopLevelEnumSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,235,yEnum target = MyEnum.VALUE1;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,236,"ssertEquals(target.getExpectedJson(), gson.toJson(target));"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,239,ublic void testTopLevelEnumDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,240,tring json = MyEnum.VALUE1.getExpectedJson();
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,241,"yEnum target = gson.fromJson(json, MyEnum.class);"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,242,"ssertEquals(json, target.getExpectedJson());"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,559,rivate static class ClassWithEnumFields {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,560,rivate final MyEnum value1 = MyEnum.VALUE1;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,561,rivate final MyEnum value2 = MyEnum.VALUE2;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,562,ublic String getExpectedJson() {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,563,"eturn ""{\""value1\"":\"""" + value1 + ""\"",\""value2\"":\"""" + value2 + ""\""}"";"
