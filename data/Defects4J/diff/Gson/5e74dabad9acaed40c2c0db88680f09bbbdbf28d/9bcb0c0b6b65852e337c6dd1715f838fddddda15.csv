is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,19,import com.google.gson.internal.Preconditions;
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,77,heckNotNull(type);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,78,his.type = Types.canonicalize(type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,78,this.type = Types.canonicalize(Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,314,tatic void checkNotNull(Object obj) {
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,315,heckArgument(obj != null);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,318,tatic void checkArgument(boolean condition) {
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,319,f (!condition) {
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,320,"hrow new IllegalArgumentException(""condition failed: "" + condition);"
