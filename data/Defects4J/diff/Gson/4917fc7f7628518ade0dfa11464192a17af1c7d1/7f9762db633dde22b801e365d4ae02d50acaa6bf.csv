is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,57,tmlEscapeSet.add('\'');
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,57,htmlEscapeSet.add('\'');
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,69,tringBuffer escapedString = new StringBuffer(plainText.length() + 20);
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,69,StringBuilder escapedString = new StringBuilder(plainText.length() + 20);
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,78,"rivate void escapeJsonString(CharSequence plainText, StringBuffer out) throws IOException {"
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,78,"private void escapeJsonString(CharSequence plainText, StringBuilder out) throws IOException {"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,19,mport com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,21,mport java.util.regex.Matcher;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,22,mport java.util.regex.Pattern;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,25, This class can be used to check the validity of a JSON field name.
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,27, <p>The primary use of this object is to ensure that any Java fields that use the
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,28, {@link com.google.gson.annotations.SerializedName} annotation is providing valid JSON
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,29, field names.  This will make the code fail-fast rather than letting the invalid
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,30, field name propagate to the client and it fails to parse.</p>
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,32, @author Joel Leitch
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,34,lass JsonFieldNameValidator {
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,35,"rivate static final String COMMON_PATTERN = ""[a-zA-Z][a-zA-Z0-9\\ \\$_\\-]*$"";"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,37,rivate static final Pattern JSON_FIELD_NAME_PATTERN =
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,38,"attern.compile(""(^"" + COMMON_PATTERN + "")|(^[\\$_]"" + COMMON_PATTERN + "")"");"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,42, Performs validation on the JSON field name to ensure it is a valid field name.
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,44, @param fieldName the name of the field to validate
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,45, @return {@code fieldName} if it is a valid JSON field name
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,46, @throws IllegalArgumentException if the field name is an invalid JSON field name
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,48,ublic String validate(String fieldName) {
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,49,Gson$Preconditions.checkNotNull(fieldName);
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,50,"Gson$Preconditions.checkArgument(!"""".equals(fieldName.trim()));"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,52,atcher matcher = JSON_FIELD_NAME_PATTERN.matcher(fieldName);
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,53,f (!matcher.matches()) {
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,54,"hrow new IllegalArgumentException(fieldName + "" is not a valid JSON field name."");"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,56,eturn fieldName;
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,22, A {@link FieldNamingStrategy2} that acts as a chain of responsibility.  If the
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,23, {@link com.google.gson.annotations.SerializedName} annotation is applied to a field then this
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,24, strategy will translate the name to the {@code serializedName.value()}; otherwise it delegates
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,25, to the wrapped {@link FieldNamingStrategy2}.
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,22,* A {@link FieldNamingStrategy2} that acts as a chain of responsibility. If the
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,23,* {@link com.google.gson.annotations.SerializedName} annotation is applied to a
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,24,* field then this strategy will translate the name to the {@code
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,25,* serializedName.value()}; otherwise it delegates to the wrapped
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,26,* {@link FieldNamingStrategy2}.
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,27, <p>NOTE: this class performs JSON field name validation for any of the fields marked with
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,28, an {@code @SerializedName} annotation.</p>
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,28,* <p>
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,29,* NOTE: this class performs JSON field name validation for any of the fields
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,30,* marked with an {@code @SerializedName} annotation.
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,31,* </p>
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,35,rivate static final JsonFieldNameValidator fieldNameValidator = new JsonFieldNameValidator();
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,44,eturn serializedName == null ? delegate.translateName(f)
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,45, fieldNameValidator.validate(serializedName.value());
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,46,return serializedName == null ? delegate.translateName(f) : serializedName.value();
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,19,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,22, Unit tests for the {@link JsonFieldNameValidator} class.
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,24, @author Joel Leitch
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,26,ublic class JsonFieldNameValidatorTest extends TestCase {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,28,rivate JsonFieldNameValidator validator;
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,30,Override
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,31,rotected void setUp() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,32,uper.setUp();
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,33,alidator = new JsonFieldNameValidator();
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,36,ublic void testValidFieldBeginsWithDollarSign() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,37,"tring fieldName = ""$abc"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,38,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,41,ublic void testValidFieldBeginsWithUnderscore() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,42,"tring fieldName = ""_abc"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,43,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,46,ublic void testValidFieldBeginsWithLetter() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,47,"tring fieldName = ""abc"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,48,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,51,ublic void testValidFieldMixingLetter() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,52,"tring fieldName = ""$abc_12v$34"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,53,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,56,ublic void testInvalidFieldStartingWithNumbers() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,57,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,58,"alidator.validate(""1abc"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,59,"ail(""Json field name can not start with a number"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,60, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,63,ublic void testInvalidFieldStartingTwoDollarSigns() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,64,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,65,"alidator.validate(""$$abc"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,66,"ail(""Json field name can not start with a double dollar sign"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,67, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,70,ublic void testInvalidFieldStartingTwoUnderscores() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,71,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,72,"alidator.validate(""__abc"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,73,"ail(""Json field name can not start with a double underscore"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,74, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,77,ublic void testInvalidFieldStartingDollarUnderscore() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,78,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,79,"alidator.validate(""$_abc"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,80,"ail(""Json field name can not start with two non-alphabet characters"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,81, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,84,ublic void testJavaAndJsKeywordAsFieldName() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,85,"tring fieldName = ""break"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,86,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,89,ublic void testInvalidCharacters() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,90,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,91,"alidator.validate(""abc.123"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,92,"ail(""Json field name can not contain a period character"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,93, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,96,ublic void testDashesInFieldName() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,97,"tring fieldName = ""test-field-name"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,98,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,101,ublic void testSpacesInFieldName() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,102,"tring fieldName = ""test field name"";"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,103,"ssertEquals(fieldName, validator.validate(fieldName));"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,106,ublic void testSpacesInBeginningOfName() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,107,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,108,"alidator.validate("" testFieldName"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,109,"ail(""Json field name can not contain a period character"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,110, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,18,mport java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,28,import java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,138,public void testComplexFieldNameStrategy() throws Exception {
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,139,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,140,String json = gson.toJson(new ClassWithComplexFieldName(10));
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,141,"String escapedFieldName = ""@value\\\""_s$\\\\"";"
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,142,"assertEquals(""{\"""" + escapedFieldName + ""\"":10}"", json);"
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,144,"ClassWithComplexFieldName obj = gson.fromJson(json, ClassWithComplexFieldName.class);"
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,145,"assertEquals(10, obj.value);"
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,173,private static class ClassWithComplexFieldName {
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,174,"@SerializedName(""@value\""_s$\\"") public final long value;"
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,176,ClassWithComplexFieldName(long value) {
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,177,this.value = value;
