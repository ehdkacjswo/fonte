is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,216,/* State machine when parsing numbers */
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,217,private static final int NUMBER_CHAR_NONE = 0;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,218,private static final int NUMBER_CHAR_SIGN = 1;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,219,private static final int NUMBER_CHAR_DIGIT = 2;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,220,private static final int NUMBER_CHAR_DECIMAL = 3;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,221,private static final int NUMBER_CHAR_FRACTION_DIGIT = 4;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,222,private static final int NUMBER_CHAR_EXP_E = 5;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,223,private static final int NUMBER_CHAR_EXP_SIGN = 6;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,224,private static final int NUMBER_CHAR_EXP_DIGIT = 7;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,267,* A pool of short strings intended to prevent object allocation.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,269,private static final StringPool stringPool = new StringPool();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,627,rivate static final int NUMBER_CHAR_NONE = 0;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,628,rivate static final int NUMBER_CHAR_SIGN = 1;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,629,rivate static final int NUMBER_CHAR_DIGIT = 2;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,630,rivate static final int NUMBER_CHAR_DECIMAL = 3;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,631,rivate static final int NUMBER_CHAR_FRACTION_DIGIT = 4;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,632,rivate static final int NUMBER_CHAR_EXP_E = 5;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,633,rivate static final int NUMBER_CHAR_EXP_SIGN = 6;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,634,rivate static final int NUMBER_CHAR_EXP_DIGIT = 7;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,983,int hashCode = 0;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,988,"eturn new String(buffer, start, p - start - 1);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,995,"return stringPool.get(buffer, start, p - start - 1, hashCode);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1013,hashCode = (hashCode * 31) + c;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1016,} else {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1017,hashCode = (hashCode * 31) + c;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,22, It is intended only to save allocations. This class is not thread safe.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,22,* It is intended only to save allocations.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,24,* <p>This class is safe for concurrent use.
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,26,rivate final String[] pool = new String[512];
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,28,* The maximum length of strings to add to the pool. Strings longer than this
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,29,* don't benefit from pooling because we spend more time on pooling than we
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,30,* save on garbage collection.
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,32,private static final int MAX_LENGTH = 20;
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,33,private final String[] pool = new String[1024];
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,31,"ublic String get(char[] array, int start, int length) {"
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,32,/ Compute an arbitrary hash of the content
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,33,nt hashCode = 0;
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,34,or (int i = start; i < start + length; i++) {
False,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,35,ashCode = (hashCode * 31) + array[i];
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,38,"public String get(char[] array, int start, int length, int hashCode) {"
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,39,if (length > StringPool.MAX_LENGTH) {
True,gson/src/main/java/com/google/gson/stream/StringPool.java,gson/src/main/java/com/google/gson/stream/StringPool.java,40,"return new String(array, start, length);"
