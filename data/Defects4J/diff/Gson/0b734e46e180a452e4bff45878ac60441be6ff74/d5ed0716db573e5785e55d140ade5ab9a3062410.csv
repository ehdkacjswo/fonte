is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,144, <pre>{@code
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,145,"son gson = new GsonBuilder().registerTypeAdapter(Foo.class,"
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,146,ew TypeAdapter<Foo>() {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,147,ublic Foo read(JsonReader in) throws IOException {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,148,f (in.peek() == JsonToken.NULL) {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,149,n.nextNull();
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,150,eturn null;
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,152,/ read a Foo from in and return it
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,154,"ublic void write(JsonWriter out, Foo src) throws IOException {"
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,155,f (src == null) {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,156,ut.nullValue();
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,157,eturn;
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,159,/ write src as JSON to out
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,161,.create();
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,144,* <pre>   {@code
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,146,"* Gson gson = new GsonBuilder().registerTypeAdapter(Foo.class,"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,147,*   new TypeAdapter<Foo>() {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,148,*     public Foo read(JsonReader in) throws IOException {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,149,*       if (in.peek() == JsonToken.NULL) {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,150,*         in.nextNull();
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,151,*         return null;
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,153,*       // read a Foo from in and return it
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,155,"*     public void write(JsonWriter out, Foo src) throws IOException {"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,156,*       if (src == null) {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,157,*         out.nullValue();
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,158,*         return;
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,160,*       // write src as JSON to out
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,162,*   }).create();
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,165, <pre>{@code
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,166,"son gson = new GsonBuilder().registerTypeAdapter(Foo.class,"
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,167,ypeAdapter.nullSafe(new TypeAdapter<Foo>() {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,168,ublic Foo read(JsonReader in) throws IOException {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,169,/ read a Foo from in and return it
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,171,"ublic void write(JsonWriter out, Foo src) throws IOException {"
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,172,/ write src as JSON to out
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,174,).create();
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,166,* <pre>   {@code
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,168,"* Gson gson = new GsonBuilder().registerTypeAdapter(Foo.class,"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,169,*   new TypeAdapter<Foo>() {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,170,*     public Foo read(JsonReader in) throws IOException {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,171,*       // read a Foo from in and return it
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,173,"*     public void write(JsonWriter out, Foo src) throws IOException {"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,174,*       // write src as JSON to out
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,176,*   }.nullSafe()).create();
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,178,ublic static <T> TypeAdapter<T> nullSafe(final TypeAdapter<T> typeAdapter) {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,180,public TypeAdapter<T> nullSafe() {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,184,"ypeAdapter.write(out, value);"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,186,"write(out, value);"
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,192,eturn typeAdapter.read(reader);
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,194,return read(reader);
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,176,son = new GsonBuilder().registerTypeAdapter(
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,177,"erson.class, TypeAdapter.nullSafe(typeAdapter)).create();"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,176,"gson = new GsonBuilder().registerTypeAdapter(Person.class, typeAdapter.nullSafe()).create();"
