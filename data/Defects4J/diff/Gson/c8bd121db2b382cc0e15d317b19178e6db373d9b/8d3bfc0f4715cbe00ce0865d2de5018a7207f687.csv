is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,56,Preconditions.checkNotNull(separatorString);
False,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,57,"Preconditions.checkArgument(!"""".equals(separatorString));"
True,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,56,$Gson$Preconditions.checkNotNull(separatorString);
True,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java,57,"$Gson$Preconditions.checkArgument(!"""".equals(separatorString));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,19,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,634,lass<?> rawTypeOfSrc = $Types.getRawType(typeOfSrc);
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,635,"hildGenericType = $Types.getCollectionElementType(typeOfSrc, rawTypeOfSrc);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,634,Class<?> rawTypeOfSrc = $Gson$Types.getRawType(typeOfSrc);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,635,"childGenericType = $Gson$Types.getCollectionElementType(typeOfSrc, rawTypeOfSrc);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,658,"ype childType = $Types.getCollectionElementType(typeOfT, $Types.getRawType(typeOfT));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,658,"Type childType = $Gson$Types.getCollectionElementType(typeOfT, $Gson$Types.getRawType(typeOfT));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,1046,lass<?> rawType = $Types.getRawType(type);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,1046,Class<?> rawType = $Gson$Types.getRawType(type);
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,53,his.delegate = $Preconditions.checkNotNull(delegate);
True,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,gson/src/main/java/com/google/gson/DelegatingJsonElementVisitor.java,53,this.delegate = $Gson$Preconditions.checkNotNull(delegate);
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,33,his.strategies = $Preconditions.checkNotNull(strategies);
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,33,this.strategies = $Gson$Preconditions.checkNotNull(strategies);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,mport com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,20,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,import com.google.gson.internal.$Gson$Preconditions;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,20,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,59,his.declaringClazz = $Preconditions.checkNotNull(declaringClazz);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,59,this.declaringClazz = $Gson$Preconditions.checkNotNull(declaringClazz);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,75,his.declaringClazz = $Preconditions.checkNotNull(declaringClazz);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,75,this.declaringClazz = $Gson$Preconditions.checkNotNull(declaringClazz);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,258,lass<?> rawType = $Types.getRawType(typeDefiningF);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,258,Class<?> rawType = $Gson$Types.getRawType(typeDefiningF);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,263,"eturn $Types.resolve(typeDefiningF, rawType, f.getGenericType());"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,263,"return $Gson$Types.resolve(typeDefiningF, rawType, f.getGenericType());"
False,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,33,his.adaptee = $Preconditions.checkNotNull(adaptee);
True,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,gson/src/main/java/com/google/gson/FieldNamingStrategy2Adapter.java,33,this.adaptee = $Gson$Preconditions.checkNotNull(adaptee);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,20,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,20,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,485,Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,485,$Gson$Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,564,Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,564,$Gson$Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,19,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,48,f ($Types.isArray(targetType)) {
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,48,if ($Gson$Types.isArray(targetType)) {
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,51,"eturn (T) objectConstructor.constructArray($Types.getArrayComponentType(targetType),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,51,"return (T) objectConstructor.constructArray($Gson$Types.getArrayComponentType(targetType),"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,55,eturn (T) objectConstructor.construct($Types.getRawType(targetType));
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,55,return (T) objectConstructor.construct($Gson$Types.getRawType(targetType));
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,70,"hild = visitChildAsObject($Types.getArrayComponentType(arrayType), jsonChild);"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,70,"child = visitChildAsObject($Gson$Types.getArrayComponentType(arrayType), jsonChild);"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,72,"hild = visitChildAsArray($Types.getArrayComponentType(arrayType),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,72,"child = visitChildAsArray($Gson$Types.getArrayComponentType(arrayType),"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,75,"hild = visitChildAsObject($Types.getArrayComponentType(arrayType),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,75,"child = visitChildAsObject($Gson$Types.getArrayComponentType(arrayType),"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,53,his.json = $Preconditions.checkNotNull(json);
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,53,this.json = $Gson$Preconditions.checkNotNull(json);
False,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,45,his.delegate = $Preconditions.checkNotNull(delegate);
True,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,gson/src/main/java/com/google/gson/JsonDeserializerExceptionWrapper.java,45,this.delegate = $Gson$Preconditions.checkNotNull(delegate);
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,49,Preconditions.checkNotNull(fieldName);
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,50,"Preconditions.checkArgument(!"""".equals(fieldName.trim()));"
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,49,$Gson$Preconditions.checkNotNull(fieldName);
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,50,"$Gson$Preconditions.checkArgument(!"""".equals(fieldName.trim()));"
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,60,"embers.put($Preconditions.checkNotNull(property), value);"
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,60,"members.put($Gson$Preconditions.checkNotNull(property), value);"
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,97,Preconditions.checkArgument(primitive instanceof Number
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,97,$Gson$Preconditions.checkArgument(primitive instanceof Number
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,19,mport com.google.gson.internal.$Types;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,20,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,19,import com.google.gson.internal.$Gson$Types;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,20,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,79,ype componentType = $Types.getArrayComponentType(arrayType);
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,79,Type componentType = $Gson$Types.getArrayComponentType(arrayType);
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,195,Preconditions.checkState(root.isJsonObject());
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,195,$Gson$Preconditions.checkState(root.isJsonObject());
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,218,oot = $Preconditions.checkNotNull(newRoot);
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,218,root = $Gson$Preconditions.checkNotNull(newRoot);
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,19,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,40,lass<?> rawTypeOfSrc = $Types.getRawType(typeOfSrc);
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,41,"hildGenericType = $Types.getMapKeyAndValueTypes(typeOfSrc, rawTypeOfSrc)[1];"
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,40,Class<?> rawTypeOfSrc = $Gson$Types.getRawType(typeOfSrc);
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,41,"childGenericType = $Gson$Types.getMapKeyAndValueTypes(typeOfSrc, rawTypeOfSrc)[1];"
False,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,65,"ype[] keyAndValueTypes = $Types.getMapKeyAndValueTypes(typeOfT, $Types.getRawType(typeOfT));"
True,gson/src/main/java/com/google/gson/MapTypeAdapter.java,gson/src/main/java/com/google/gson/MapTypeAdapter.java,65,"Type[] keyAndValueTypes = $Gson$Types.getMapKeyAndValueTypes(typeOfT, $Gson$Types.getRawType(typeOfT));"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,19,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,56,"eturn Array.newInstance($Types.getRawType(type), length);"
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,56,"return Array.newInstance($Gson$Types.getRawType(type), length);"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,62,lass<T> clazz = (Class<T>) $Types.getRawType(typeOfT);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,62,Class<T> clazz = (Class<T>) $Gson$Types.getRawType(typeOfT);
False,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,40,Preconditions.checkNotNull(obj);
True,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,40,$Gson$Preconditions.checkNotNull(obj);
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,19,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,68,his.letterModifier = $Preconditions.checkNotNull(modifier);
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,68,this.letterModifier = $Gson$Preconditions.checkNotNull(modifier);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,19,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,98,f (exclusionStrategy.shouldSkipClass($Types.getRawType(objTypePair.type))) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,98,if (exclusionStrategy.shouldSkipClass($Gson$Types.getRawType(objTypePair.type))) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,111,f ($Types.isArray(objTypePair.type)) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,111,if ($Gson$Types.isArray(objTypePair.type)) {
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,19,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,141,lass<?> rawClass = $Types.getRawType(type);
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,141,Class<?> rawClass = $Gson$Types.getRawType(type);
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,213,eturn $Types.getRawType(type).getSimpleName();
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,213,return $Gson$Types.getRawType(type).getSimpleName();
False,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,25,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,25,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,83,Preconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,83,$Gson$Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,99,Preconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,99,$Gson$Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,116,Preconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/Primitives.java,gson/src/main/java/com/google/gson/Primitives.java,116,$Gson$Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,25,mport com.google.gson.internal.$Preconditions;
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,26,mport com.google.gson.internal.$Types;
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,25,import com.google.gson.internal.$Gson$Preconditions;
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,26,import com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,47,his.exclusionStrategy = $Preconditions.checkNotNull(exclusionStrategy);
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,47,this.exclusionStrategy = $Gson$Preconditions.checkNotNull(exclusionStrategy);
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,66,f ($Types.isArray(resolvedTypeOfField)) {
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,66,if ($Gson$Types.isArray(resolvedTypeOfField)) {
False,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,97,lass<?> topLevelClass = $Types.getRawType(type);
True,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,gson/src/main/java/com/google/gson/ReflectingFieldNavigator.java,97,Class<?> topLevelClass = $Gson$Types.getRawType(type);
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,21,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,21,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,33,Preconditions.checkArgument(version >= 0.0D);
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,33,$Gson$Preconditions.checkArgument(version >= 0.0D);
False,gson/src/main/java/com/google/gson/internal/$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,32,ublic final class $Preconditions {
True,gson/src/main/java/com/google/gson/internal/$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,32,public final class $Gson$Preconditions {
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,19,mport static com.google.gson.internal.$Preconditions.checkArgument;
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,20,mport static com.google.gson.internal.$Preconditions.checkNotNull;
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,19,import static com.google.gson.internal.$Gson$Preconditions.checkArgument;
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,20,import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,41,ublic final class $Types {
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,41,public final class $Gson$Types {
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,44,rivate $Types() {}
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,44,private $Gson$Types() {}
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,272,"Types.getGenericSupertype(context, contextRawType, supertype));"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,272,"$Gson$Types.getGenericSupertype(context, contextRawType, supertype));"
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,438,"rivate static class ParameterizedTypeImpl implements ParameterizedType, Serializable {"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,438,"private static final class ParameterizedTypeImpl implements ParameterizedType, Serializable {"
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,476,"& $Types.equals(this, (ParameterizedType) other);"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,476,"&& $Gson$Types.equals(this, (ParameterizedType) other);"
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,503,"rivate static class GenericArrayTypeImpl implements GenericArrayType, Serializable {"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,503,"private static final class GenericArrayTypeImpl implements GenericArrayType, Serializable {"
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,516,"& $Types.equals(this, (GenericArrayType) o);"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,516,"&& $Gson$Types.equals(this, (GenericArrayType) o);"
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,535,"rivate static class WildcardTypeImpl implements WildcardType, Serializable {"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,535,"private static final class WildcardTypeImpl implements WildcardType, Serializable {"
False,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,568,"& $Types.equals(this, (WildcardType) other);"
True,gson/src/main/java/com/google/gson/internal/$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,568,"&& $Gson$Types.equals(this, (WildcardType) other);"
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,19,mport com.google.gson.internal.$Types;
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,20,mport com.google.gson.internal.$Preconditions;
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,19,import com.google.gson.internal.$Gson$Types;
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,20,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,64,his.rawType = (Class<? super T>) $Types.getRawType(type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,64,this.rawType = (Class<? super T>) $Gson$Types.getRawType(type);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,73,his.type = $Types.canonicalize($Preconditions.checkNotNull(type));
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,74,his.rawType = (Class<? super T>) $Types.getRawType(this.type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,73,this.type = $Gson$Types.canonicalize($Gson$Preconditions.checkNotNull(type));
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,74,this.rawType = (Class<? super T>) $Gson$Types.getRawType(this.type);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,79, Returns the type from super class's type parameter in {@link $Types#canonicalize
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,79,* Returns the type from super class's type parameter in {@link $Gson$Types#canonicalize
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,89,eturn $Types.canonicalize(parameterized.getActualTypeArguments()[0]);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,89,return $Gson$Types.canonicalize(parameterized.getActualTypeArguments()[0]);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,134,eturn rawType.isAssignableFrom($Types.getRawType(from));
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,134,return rawType.isAssignableFrom($Gson$Types.getRawType(from));
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,139,eturn rawType.isAssignableFrom($Types.getRawType(from))
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,139,return rawType.isAssignableFrom($Gson$Types.getRawType(from))
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,199,lass<?> clazz = $Types.getRawType(from);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,199,Class<?> clazz = $Gson$Types.getRawType(from);
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,288,"& $Types.equals(type, ((TypeToken<?>) o).type);"
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,288,"&& $Gson$Types.equals(type, ((TypeToken<?>) o).type);"
False,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,292,eturn $Types.typeToString(type);
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,292,return $Gson$Types.typeToString(type);
False,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,19,mport com.google.gson.internal.$Types;
True,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,29, Unit tests for the {@code GenericArrayType}s created by the {@link $Types} class.
True,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,29,* Unit tests for the {@code GenericArrayType}s created by the {@link $Gson$Types} class.
False,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,40,"urType = $Types.arrayOf($Types.newParameterizedTypeWithOwner(null, List.class, String.class));"
True,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,gson/src/test/java/com/google/gson/GenericArrayTypeTest.java,40,"ourType = $Gson$Types.arrayOf($Gson$Types.newParameterizedTypeWithOwner(null, List.class, String.class));"
False,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,19,mport com.google.gson.internal.$Types;
True,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,29, Unit tests for {@code ParamterizedType}s created by the {@link $Types} class.
True,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,29,* Unit tests for {@code ParamterizedType}s created by the {@link $Gson$Types} class.
False,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,40,"urType = $Types.newParameterizedTypeWithOwner(null, List.class, String.class);"
True,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,gson/src/test/java/com/google/gson/ParameterizedTypeTest.java,40,"ourType = $Gson$Types.newParameterizedTypeWithOwner(null, List.class, String.class);"
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,19,mport com.google.gson.internal.$Types;
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,19,import com.google.gson.internal.$Gson$Types;
False,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,155,lass<?> rawType = $Types.getRawType(genericClass);
True,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,gson/src/test/java/com/google/gson/ParamterizedTypeFixtures.java,155,Class<?> rawType = $Gson$Types.getRawType(genericClass);
