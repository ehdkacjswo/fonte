is_addition,old_file_path,new_file_path,line_num,content
False,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,30,rivate final HttpServletRequest request;
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,30,private final CallPath callPath;
False,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,34,his.request = request;
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,34,this(request.getPathInfo());
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,37,public CallPathProvider(String pathInfo) {
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,38,int index1 = pathInfo.indexOf('/');
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,39,int index2 = pathInfo.substring(index1+1).indexOf('/');
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,40,"String versionStr = pathInfo.substring(index1+1, index2+1);"
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,41,String callPathStr = pathInfo;
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,42,try {
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,43,// Skip over the version number from the URL
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,44,Double.parseDouble(versionStr);
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,45,callPathStr = pathInfo.substring(index2+1);
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,46,} catch (NumberFormatException e) {
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,47,// Assume that version number wasn't specified
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,49,this.callPath = new CallPath(callPathStr);
False,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,39,tring pathInfo = request.getPathInfo();
False,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,40,"ystem.out.println(""Incoming request with pathInfo: "" + pathInfo);"
False,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,41,tring callPath = pathInfo;
False,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,42,eturn new CallPath(callPath);
True,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,wsf/src/main/java/com/google/gson/wsf/inject/CallPathProvider.java,54,return callPath;
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,2,* Copyright (C) 2010 Google Inc.
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,5,* you may not use this file except in compliance with the License.
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,6,* You may obtain a copy of the License at
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,13,* See the License for the specific language governing permissions and
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,14,* limitations under the License.
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,16,package com.google.gson.wsf.inject;
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,18,import junit.framework.TestCase;
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,21,* Unit test for {@link CallPathProvider}
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,23,* @author Inderjeet Singh
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,25,public class CallPathProviderTest extends TestCase {
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,27,public void testVersionIsSkipped() {
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,28,"CallPathProvider provider = new CallPathProvider(""/1.0/rest/service1"");"
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,29,"assertEquals(""/rest/service1"", provider.get().get());"
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,32,public void testVersionNotPresent() {
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,33,"CallPathProvider provider = new CallPathProvider(""/rest/service1"");"
True,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,wsf/src/test/java/com/google/gson/wsf/inject/CallPathProviderTest.java,34,"assertEquals(""/rest/service1"", provider.get().get());"
