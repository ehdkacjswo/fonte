is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,21,mport java.lang.reflect.ParameterizedType;
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,42,f (!(type instanceof ParameterizedType)) {
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,43,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,72,"ypeAdapter<T> result = new CollectionTypeAdapter(elementTypeAdapter, constructor);"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,68,"TypeAdapter<T> result = new CollectionTypeAdapter(context, elementType, elementTypeAdapter, constructor);"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,73,private final MiniGson context;
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,74,private final Type elementType;
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,80,"ublic CollectionTypeAdapter(TypeAdapter<E> elementTypeAdapter,"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,78,"public CollectionTypeAdapter(MiniGson context, Type elementType, TypeAdapter<E> elementTypeAdapter,"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,80,this.context = context;
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,81,this.elementType = elementType;
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,110,"lementTypeAdapter.write(writer, element);"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,110,"Type runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(elementType, collection, element);"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,111,TypeAdapter t = runtimeType != elementType ?
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,112,context.getAdapter(TypeToken.get(runtimeType)) : elementTypeAdapter;
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,113,"t.write(writer, element);"
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,19,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,20,import java.util.Collection;
False,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,29,mport java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,70,public static class ClassWithBaseCollectionField {
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,71,"public static final String FIELD_KEY = ""base"";"
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,72,public final Collection<Base> base;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,73,public ClassWithBaseCollectionField(Collection<Base> base) {
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,74,this.base = base;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,18,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,19,import java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,20,import java.util.LinkedList;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,21,import java.util.List;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,22,import java.util.Queue;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,23,import java.util.Set;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,24,import java.util.SortedSet;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,25,import java.util.TreeSet;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,27,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,36,import com.google.gson.common.TestTypes.ClassWithBaseCollectionField;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,29,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,31,mport java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,32,mport java.util.LinkedList;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,33,mport java.util.List;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,34,mport java.util.Queue;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,35,mport java.util.Set;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,36,mport java.util.SortedSet;
False,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,37,mport java.util.TreeSet;
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,89,public void testClassWithBaseCollectionFieldSerialization() {
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,90,Collection<Base> baseClasses = new ArrayList<Base>();
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,91,baseClasses.add(new Sub());
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,92,baseClasses.add(new Sub());
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,93,ClassWithBaseCollectionField sub = new ClassWithBaseCollectionField(baseClasses);
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,94,JsonObject json = gson.toJsonTree(sub).getAsJsonObject();
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,95,JsonArray bases = json.get(ClassWithBaseArrayField.FIELD_KEY).getAsJsonArray();
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,96,for (JsonElement element : bases) {
True,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,gson/src/test/java/com/google/gson/functional/InheritanceTest.java,97,"assertEquals(Sub.SUB_NAME, element.getAsJsonObject().get(Sub.SUB_FIELD_KEY).getAsString());"
