is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,20,mport com.google.gson.stream.MalformedJsonException;
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,21,import com.google.gson.stream.MalformedJsonException;
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,36,boolean isEmpty = true;
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,38,witch (reader.peek()) {
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,39,ase STRING:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,40,eturn new JsonPrimitive(reader.nextString());
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,41,ase NUMBER:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,42,tring number = reader.nextString();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,43,eturn new JsonPrimitive(JsonPrimitive.stringToNumber(number));
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,44,ase BOOLEAN:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,45,eturn new JsonPrimitive(reader.nextBoolean());
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,46,ase NULL:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,47,eader.nextNull();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,38,reader.peek();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,39,isEmpty = false;
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,40,return parseRecursive(reader);
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,41,} catch (EOFException e) {
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,43,"* For compatibility with JSON 1.5 and earlier, we return a JsonNull for"
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,44,* empty documents instead of throwing.
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,46,if (isEmpty) {
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,49,ase BEGIN_ARRAY:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,50,sonArray array = new JsonArray();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,51,eader.beginArray();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,52,hile (reader.hasNext()) {
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,53,rray.add(parse(reader));
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,55,eader.endArray();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,56,eturn array;
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,57,ase BEGIN_OBJECT:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,58,sonObject object = new JsonObject();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,59,eader.beginObject();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,60,hile (reader.hasNext()) {
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,61,"bject.add(reader.nextName(), parse(reader));"
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,63,eader.endObject();
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,64,eturn object;
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,65,ase END_DOCUMENT:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,66,ase NAME:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,67,ase END_OBJECT:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,68,ase END_ARRAY:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,69,efault:
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,70,hrow new IllegalArgumentException();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,48,} else {
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,49,throw new JsonIOException(e);
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,72, catch (EOFException e) {
False,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,73,eturn JsonNull.createJsonNull();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,60,private static JsonElement parseRecursive(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,61,switch (reader.peek()) {
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,62,case STRING:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,63,return new JsonPrimitive(reader.nextString());
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,64,case NUMBER:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,65,String number = reader.nextString();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,66,return new JsonPrimitive(JsonPrimitive.stringToNumber(number));
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,67,case BOOLEAN:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,68,return new JsonPrimitive(reader.nextBoolean());
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,69,case NULL:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,70,reader.nextNull();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,71,return JsonNull.createJsonNull();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,72,case BEGIN_ARRAY:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,73,JsonArray array = new JsonArray();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,74,reader.beginArray();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,75,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,76,array.add(parseRecursive(reader));
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,78,reader.endArray();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,79,return array;
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,80,case BEGIN_OBJECT:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,81,JsonObject object = new JsonObject();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,82,reader.beginObject();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,83,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,84,"object.add(reader.nextName(), parseRecursive(reader));"
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,86,reader.endObject();
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,87,return object;
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,88,case END_DOCUMENT:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,89,case NAME:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,90,case END_OBJECT:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,91,case END_ARRAY:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,92,default:
True,gson/src/main/java/com/google/gson/Streams.java,gson/src/main/java/com/google/gson/Streams.java,93,throw new IllegalArgumentException();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,23,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,34,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,150,public void testTruncatedDeserialization() {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,151,try {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,152,"gson.fromJson(""[\""a\"", \""b\"","", new TypeToken<List<String>>() {}.getType());"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,153,fail();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,154,} catch (JsonParseException expected) {
