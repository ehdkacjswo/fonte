is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,73,rivate final List<TypeAdapter.Factory> factories
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,74, new ArrayList<TypeAdapter.Factory>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,73,private final List<TypeAdapter.Factory> factories = new ArrayList<TypeAdapter.Factory>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,76,rivate final List<TypeAdapter.Factory> hierarchyFactories
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,77, new ArrayList<TypeAdapter.Factory>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,75,private final List<TypeAdapter.Factory> hierarchyFactories = new ArrayList<TypeAdapter.Factory>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,455,"egisterInstanceCreator(type, (InstanceCreator<?>) typeAdapter);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,453,"instanceCreators.put(type, (InstanceCreator) typeAdapter);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,459,"actories.add(TreeTypeAdapter.newFactory(typeToken, typeAdapter));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,457,"factories.add(TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,479, Configures Gson to use a custom {@link InstanceCreator} for the specified type. If an instance
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,480," creator was previously registered for the specified class, it is overwritten. Since this method"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,481," takes a type instead of a Class object, it can be used to register a specific handler for a"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,482, generic type corresponding to a raw type.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,485, @param typeOfT The Type definition for T
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,486, @param instanceCreator the instance creator for T
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,487," @return a reference to this {@code GsonBuilder} object to fulfill the ""Builder"" pattern"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,489,"rivate <T> GsonBuilder registerInstanceCreator(Type typeOfT,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,490,nstanceCreator<? extends T> instanceCreator) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,491,"nstanceCreators.put(typeOfT, instanceCreator);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,492,eturn this;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,497," This method combines the registration of an {@link InstanceCreator}, {@link JsonSerializer},"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,498, and a {@link JsonDeserializer}. It is best used when a single object {@code typeAdapter}
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,499, implements all the required interfaces for custom serialization with Gson.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,500," If an instance creator, serializer or deserializer was previously registered for the specified"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,501," type hierarchy, it is overwritten. If an instance creator, serializer or deserializer is"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,502," registered for a specific type in the type hierarchy, it will be invoked instead of the one"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,503, registered for the type hierarchy.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,478,* This method combines the registration of a {@link JsonSerializer} and a {@link
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,479,* JsonDeserializer}. It is best used when a single object {@code typeAdapter} implements both of
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,480,* the required interfaces for custom serialization with Gson. If a serializer or deserializer was
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,481,"* previously registered for the specified type hierarchy, it is overwritten. If a serializer or"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,482,"* deserializer is registered for a specific type in the type hierarchy, it will be invoked"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,483,* instead of the one registered for the type hierarchy.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,507," @param typeAdapter This object must implement at least one of the {@link InstanceCreator},"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,508," {@link JsonSerializer}, and a {@link JsonDeserializer} interfaces."
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,487,* @param typeAdapter This object must implement at least one of {@link JsonSerializer} or {@link
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,488,*        JsonDeserializer} interfaces.
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,82,* Returns a new factory that will match each type against {@code exactType}.
False,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,82,"eturn new SingleTypeFactory(typeAdapter, exactType, null);"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,85,"return new SingleTypeFactory(typeAdapter, exactType, false, null);"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,89,* Returns a new factory that will match each type and its raw type against
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,90,* {@code exactType}.
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,92,"public static Factory newFactoryWithMatchRawType(TypeToken<?> exactType, Object typeAdapter) {"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,93,// only bother matching raw types if exact type is a raw type
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,94,boolean matchRawType = exactType.getType() == exactType.getRawType();
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,95,"return new SingleTypeFactory(typeAdapter, exactType, matchRawType, null);"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,99,* Returns a new factory that will match each type's raw type for assignability
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,100,* to {@code hierarchyType}.
False,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,86,"eturn new SingleTypeFactory(typeAdapter, null, hierarchyType);"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,103,"return new SingleTypeFactory(typeAdapter, null, false, hierarchyType);"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,108,private final boolean matchRawType;
False,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,95,"rivate SingleTypeFactory(Object typeAdapter, TypeToken<?> exactType, Class<?> hierarchyType) {"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,113,"private SingleTypeFactory(Object typeAdapter, TypeToken<?> exactType, boolean matchRawType,"
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,114,Class<?> hierarchyType) {
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,123,this.matchRawType = matchRawType;
False,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,110, exactType.equals(type)
True,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,130,? exactType.equals(type) || matchRawType && exactType.getType() == type.getRawType()
