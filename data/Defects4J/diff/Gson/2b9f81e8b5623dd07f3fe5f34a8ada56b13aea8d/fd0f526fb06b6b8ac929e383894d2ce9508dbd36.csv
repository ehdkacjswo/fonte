is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,102,static final ParameterizedTypeHandlerMap<JsonSerializer<?>> DEFAULT_HIERARCHY_SERIALIZERS =
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,103,createDefaultHierarchySerializers();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,106,static final ParameterizedTypeHandlerMap<JsonDeserializer<?>> DEFAULT_HIERARCHY_DESERIALIZERS =
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,107,createDefaultHierarchyDeserializers();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,111,"ap.registerForTypeHierarchy(Enum.class, ENUM_TYPE_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,112,"ap.registerForTypeHierarchy(InetAddress.class, INET_ADDRESS_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,117,"ap.registerForTypeHierarchy(Collection.class, COLLECTION_TYPE_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,118,"ap.registerForTypeHierarchy(Map.class, MAP_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,146,private static ParameterizedTypeHandlerMap<JsonSerializer<?>> createDefaultHierarchySerializers() {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,147,ParameterizedTypeHandlerMap<JsonSerializer<?>> map =
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,148,new ParameterizedTypeHandlerMap<JsonSerializer<?>>();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,149,"map.registerForTypeHierarchy(Enum.class, ENUM_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,150,"map.registerForTypeHierarchy(InetAddress.class, INET_ADDRESS_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,151,"map.registerForTypeHierarchy(Collection.class, COLLECTION_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,152,"map.registerForTypeHierarchy(Map.class, MAP_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,153,map.makeUnmodifiable();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,154,return map;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,149,"ap.registerForTypeHierarchy(Enum.class, wrapDeserializer(ENUM_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,150,"ap.registerForTypeHierarchy(InetAddress.class, wrapDeserializer(INET_ADDRESS_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,155,"ap.registerForTypeHierarchy(Collection.class, wrapDeserializer(COLLECTION_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,156,"ap.registerForTypeHierarchy(Map.class, wrapDeserializer(MAP_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,197,private static ParameterizedTypeHandlerMap<JsonDeserializer<?>> createDefaultHierarchyDeserializers() {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,198,ParameterizedTypeHandlerMap<JsonDeserializer<?>> map =
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,199,new ParameterizedTypeHandlerMap<JsonDeserializer<?>>();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,200,"map.registerForTypeHierarchy(Enum.class, wrapDeserializer(ENUM_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,201,"map.registerForTypeHierarchy(InetAddress.class, wrapDeserializer(INET_ADDRESS_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,202,"map.registerForTypeHierarchy(Collection.class, wrapDeserializer(COLLECTION_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,203,"map.registerForTypeHierarchy(Map.class, wrapDeserializer(MAP_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,204,map.makeUnmodifiable();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,205,return map;
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,232,static ParameterizedTypeHandlerMap<JsonSerializer<?>> getAllDefaultSerializers() {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,233,ParameterizedTypeHandlerMap<JsonSerializer<?>> defaultSerializers =
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,234,"getDefaultSerializers(false, LongSerializationPolicy.DEFAULT);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,235,defaultSerializers.register(DEFAULT_HIERARCHY_SERIALIZERS);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,236,return defaultSerializers;
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,239,static ParameterizedTypeHandlerMap<JsonDeserializer<?>> getAllDefaultDeserializers() {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,240,ParameterizedTypeHandlerMap<JsonDeserializer<?>> defaultDeserializers =
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,241,getDefaultDeserializers().copyOf();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,242,defaultDeserializers.register(DEFAULT_HIERARCHY_DESERIALIZERS);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,243,return defaultDeserializers;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,155,"alse, DefaultTypeAdapters.getDefaultSerializers(),"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,156,"efaultTypeAdapters.getDefaultDeserializers(), DEFAULT_JSON_NON_EXECUTABLE, true, false);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,155,"false, DefaultTypeAdapters.getAllDefaultSerializers(),"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,156,"DefaultTypeAdapters.getAllDefaultDeserializers(), DEFAULT_JSON_NON_EXECUTABLE, true, false);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,525,arameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,526,arameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,525,ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,526,DefaultTypeAdapters.DEFAULT_HIERARCHY_SERIALIZERS.copyOf();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,527,customSerializers.register(serializers.copyOf());
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,528,ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,529,DefaultTypeAdapters.DEFAULT_HIERARCHY_DESERIALIZERS.copyOf();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,530,customDeserializers.register(deserializers.copyOf());
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,108,public synchronized void register(ParameterizedTypeHandlerMap<T> other) {
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,109,if (!modifiable) {
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,110,"throw new IllegalStateException(""Attempted to modify an unmodifiable map."");"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,112,"for (Map.Entry<Type, T> entry : other.map.entrySet()) {"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,113,"register(entry.getKey(), entry.getValue());"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,115,// Quite important to traverse the typeHierarchyList from stack bottom first since
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,116,// we want to register the handlers in the same order to preserve priority order
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,117,for (int i = other.typeHierarchyList.size()-1; i >= 0; --i) {
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,118,"Pair<Class<?>, T> entry = other.typeHierarchyList.get(i);"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,119,registerForTypeHierarchy(entry);
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,19,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,20,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,21,import java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,22,import java.util.EnumSet;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,23,import java.util.Set;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,25,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,31,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,33,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,34,mport java.util.ArrayList;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,35,mport java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,36,mport java.util.EnumSet;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,37,mport java.util.Set;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,123,ssertRoshambo();
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,126,ublic void disabled_testEnumSubclassWithRegisteredTypeAdapter() {
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,127,son = new GsonBuilder()
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,128,"/        .registerTypeHierarchyAdapter(Roshambo.class, new MyEnumTypeAdapter())"
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,129,create();
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,130,ssertRoshambo();
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,133,rivate void assertRoshambo() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,131,public void testEnumSubclassWithRegisteredTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,132,gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,133,".registerTypeHierarchyAdapter(Roshambo.class, new MyEnumTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,134,.create();
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,135,assertFalse(Roshambo.class == Roshambo.ROCK.getClass());
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,136,"assertEquals(""\""123ROCK\"""", gson.toJson(Roshambo.ROCK));"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,137,"assertEquals(""[\""123ROCK\"",\""123PAPER\"",\""123SCISSORS\""]"", gson.toJson(EnumSet.allOf(Roshambo.class)));"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,138,"assertEquals(Roshambo.ROCK, gson.fromJson(""\""123ROCK\"""", Roshambo.class));"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,139,"assertEquals(EnumSet.allOf(Roshambo.class),"
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,140,"gson.fromJson(""[\""123ROCK\"",\""123PAPER\"",\""123SCISSORS\""]"", new TypeToken<Set<Roshambo>>() {}.getType()));"
