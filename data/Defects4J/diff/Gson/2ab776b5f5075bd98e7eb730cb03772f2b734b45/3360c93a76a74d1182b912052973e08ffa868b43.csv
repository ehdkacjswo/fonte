is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,54,final TypeAdapter<?> typeAdapter;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,55,lass<TypeAdapter<?>> typeAdapter = (Class<TypeAdapter<?>>) value;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,56,eturn constructorConstructor.get(TypeToken.get(typeAdapter)).construct();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,58,f (TypeAdapterFactory.class.isAssignableFrom(value)) {
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,59,lass<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,60,eturn constructorConstructor.get(TypeToken.get(typeAdapterFactory))
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,56,Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,57,typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,58,} else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,59,Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,60,typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,63,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,64,throw new IllegalArgumentException(
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,65,"""@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."");"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,65,hrow new IllegalArgumentException(
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,66,"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."");"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,68,return typeAdapter.nullSafe();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,136,public void testNullSafeObjectFromJson() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,137,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,138,"NullableClass fromJson = gson.fromJson(""null"", NullableClass.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,139,assertNull(fromJson);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,224,@JsonAdapter(value = NullableClassJsonAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,225,private static class NullableClass {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,228,private static class NullableClassJsonAdapter extends TypeAdapter<NullableClass> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,229,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,230,"public void write(JsonWriter out, NullableClass value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,231,"out.value(""nullable"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,234,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,235,public NullableClass read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,236,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,237,return new NullableClass();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,204,public void testJsonAdapterWrappedInNullSafeAsRequested() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,205,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,206,"String fromJson = ""{'part':null}"";"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,208,"GadgetWithOptionalPart gadget = gson.fromJson(fromJson, GadgetWithOptionalPart.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,209,assertNull(gadget.part);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,211,String toJson = gson.toJson(gadget);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,212,"assertFalse(toJson.contains(""PartJsonFieldAnnotationAdapter""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,215,private static final class GadgetWithOptionalPart {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,216,@JsonAdapter(value = PartJsonFieldAnnotationAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,217,final Part part;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,219,private GadgetWithOptionalPart(Part part) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,220,this.part = part;
