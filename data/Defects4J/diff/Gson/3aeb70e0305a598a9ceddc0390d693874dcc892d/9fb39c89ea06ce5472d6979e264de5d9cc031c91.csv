is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,31,"rotected static final JsonElement serialize(JsonSerializationContext context,"
True,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,31,"protected static JsonElement serialize(JsonSerializationContext context,"
False,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,36,"rotected static final Map<Object, Object> constructMapType("
True,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,gson/src/main/java/com/google/gson/BaseMapTypeAdapter.java,36,"protected static Map<Object, Object> constructMapType("
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,24,import com.google.gson.internal.bind.GsonCompatibleMapTypeAdapter;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,26,import com.google.gson.internal.bind.ObjectTypeAdapter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,26,mport com.google.gson.internal.bind.StringToValueMapTypeAdapter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,37,mport java.io.StringReader;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,249,.factory(GsonCompatibleMapTypeAdapter.FACTORY)
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,251,factory(StringToValueMapTypeAdapter.FACTORY)
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,253,.factory(ObjectTypeAdapter.FACTORY)
True,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,89,@Override public <T> T construct(Type type) {
True,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,90,throw new UnsupportedOperationException();
True,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,93,"@Override public Object constructArray(Type type, int length) {"
True,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,94,throw new UnsupportedOperationException();
True,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,97,"@Override public <T> T deserializeDefault(JsonElement json, Type typeOfT) throws JsonParseException {"
True,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,gson/src/main/java/com/google/gson/GsonToMiniGsonTypeAdapter.java,98,throw new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,49,"SuppressWarnings(""unchecked"")"
True,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,50,* TODO: remove this from the public API
True,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,52,"@SuppressWarnings(""unchecked"") @Deprecated"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,59,"// TODO: Queue=LinkedList, SortedSet=TreeSet"
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,60,onstructor<?> constructor;
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,61,Constructor<?> constructor = null;
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,63, catch (NoSuchMethodException e) {
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,64,eturn null;
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,64,} catch (NoSuchMethodException ignored) {
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,89,if (constructor == null) {
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,90,"throw new UnsupportedOperationException(""TODO: use unsafeAllocator.newInstance"");"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,17,package com.google.gson.internal.bind;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,19,import com.google.gson.internal.$Gson$Types;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,20,import com.google.gson.reflect.TypeToken;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,21,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,22,import com.google.gson.stream.JsonToken;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,23,import com.google.gson.stream.JsonWriter;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,24,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,25,import java.lang.reflect.Constructor;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,26,import java.lang.reflect.ParameterizedType;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,27,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,28,import java.util.LinkedHashMap;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,29,import java.util.Map;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,32,* Adapt a map whose keys are any type.
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,34,"public final class GsonCompatibleMapTypeAdapter<V> extends TypeAdapter<Map<String, V>> {"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,35,public static final Factory FACTORY = new Factory() {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,36,"public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> typeToken) {"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,37,Type type = typeToken.getType();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,39,Class<? super T> rawType = typeToken.getRawType();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,40,if (!Map.class.isAssignableFrom(rawType)) {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,41,return null;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,44,Type childGenericType = Object.class;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,45,if (type instanceof ParameterizedType) {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,46,Class<?> rawTypeOfSrc = $Gson$Types.getRawType(type);
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,47,"childGenericType = $Gson$Types.getMapKeyAndValueTypes(type, rawTypeOfSrc)[1];"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,49,TypeAdapter valueAdapter = context.getAdapter(TypeToken.get(childGenericType));
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,51,Constructor<?> constructor;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,52,try {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,53,Class<?> constructorType = (rawType == Map.class) ? LinkedHashMap.class : rawType;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,54,constructor = constructorType.getConstructor();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,55,} catch (NoSuchMethodException e) {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,56,return null;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,59,"@SuppressWarnings(""unchecked"") // we don't define a type parameter for the key or value types"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,60,"TypeAdapter<T> result = new GsonCompatibleMapTypeAdapter(valueAdapter, constructor);"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,61,return result;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,65,private final TypeAdapter<V> valueTypeAdapter;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,66,"private final Constructor<? extends Map<String, V>> constructor;"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,68,"public GsonCompatibleMapTypeAdapter(TypeAdapter<V> valueTypeAdapter,"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,69,"Constructor<? extends Map<String, V>> constructor) {"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,70,this.valueTypeAdapter = valueTypeAdapter;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,71,this.constructor = constructor;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,74,"public Map<String, V> read(JsonReader reader) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,75,if (reader.peek() == JsonToken.NULL) {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,76,reader.nextNull(); // TODO: does this belong here?
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,77,return null;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,80,"Map<String, V> map = Reflection.newInstance(constructor);"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,81,reader.beginObject();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,82,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,83,String key = reader.nextName();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,84,V value = valueTypeAdapter.read(reader);
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,85,"map.put(key, value);"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,87,reader.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,88,return map;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,91,"public void write(JsonWriter writer, Map<String, V> map) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,92,if (map == null) {
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,93,writer.nullValue(); // TODO: better policy here?
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,94,return;
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,97,writer.beginObject();
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,98,"for (Map.Entry<String, V> entry : map.entrySet()) {"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,99,writer.name(entry.getKey());
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,100,"valueTypeAdapter.write(writer, entry.getValue());"
True,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/GsonCompatibleMapTypeAdapter.java,102,writer.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,gson/src/main/java/com/google/gson/internal/bind/MiniGson.java,65,factories.add(ObjectTypeAdapter.FACTORY);
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,17,package com.google.gson.internal.bind;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,19,import com.google.gson.reflect.TypeToken;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,20,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,21,import com.google.gson.stream.JsonToken;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,22,import com.google.gson.stream.JsonWriter;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,23,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,24,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,25,import java.util.LinkedHashMap;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,26,import java.util.List;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,27,import java.util.Map;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,30,* Adapts types whose static type is only 'Object'. Uses getClass() on
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,31,* serialization and a primitive/Map/List on deserialization.
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,33,public final class ObjectTypeAdapter extends TypeAdapter<Object> {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,34,public static final Factory FACTORY = new Factory() {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,35,"@SuppressWarnings(""unchecked"")"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,36,"@Override public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> type) {"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,37,if (type.getRawType() == Object.class) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,38,return (TypeAdapter<T>) new ObjectTypeAdapter(context);
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,40,return null;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,44,private final MiniGson miniGson;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,46,private ObjectTypeAdapter(MiniGson miniGson) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,47,this.miniGson = miniGson;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,50,@Override public Object read(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,51,JsonToken token = reader.peek();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,52,switch (token) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,53,case BEGIN_ARRAY:
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,54,List<Object> list = new ArrayList<Object>();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,55,reader.beginArray();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,56,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,57,list.add(read(reader));
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,59,reader.endArray();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,60,return list;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,62,case BEGIN_OBJECT:
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,63,"Map<String, Object> map = new LinkedHashMap<String, Object>();"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,64,reader.beginObject();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,65,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,66,"map.put(reader.nextName(), read(reader));"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,68,reader.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,69,return map;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,71,case STRING:
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,72,return reader.nextString();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,74,case NUMBER:
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,75,return reader.nextDouble();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,77,case BOOLEAN:
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,78,return reader.nextBoolean();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,80,case NULL:
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,81,reader.nextNull();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,82,return null;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,85,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,88,"@SuppressWarnings(""unchecked"")"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,89,"@Override public void write(JsonWriter writer, Object value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,90,if (value == null) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,91,writer.nullValue(); // TODO: better policy here?
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,92,return;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,95,TypeAdapter<Object> typeAdapter = (TypeAdapter<Object>) miniGson.getAdapter(value.getClass());
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,96,if (typeAdapter instanceof ObjectTypeAdapter) {
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,97,writer.beginObject();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,98,writer.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,99,return;
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,102,"typeAdapter.write(writer, value);"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,138,eturn true;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,138,return !f.isSynthetic();
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,141,eturn true;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,141,return !f.isSynthetic();
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,19,import com.google.gson.internal.bind.MiniGson;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,20,import com.google.gson.internal.bind.TypeAdapter;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,21,import java.util.Arrays;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,22,import java.util.Map;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,23,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,25,public final class ObjectTypeAdapterTest extends TestCase {
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,26,private final MiniGson gson = new MiniGson.Builder().build();
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,27,private final TypeAdapter<Object> adapter = gson.getAdapter(Object.class);
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,29,public void testDeserialize() throws Exception {
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,30,"Map<?, ?> map = (Map) adapter.fromJson(""{a: 5, b: [1, 2, null]}"");"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,31,"assertEquals(5.0, map.get(""a""));"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,32,"assertEquals(Arrays.asList(1.0, 2.0, null), map.get(""b""));"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,35,public void testSerialize() throws Exception {
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,36,Object object = new Object() {
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,37,Object a = 5;
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,38,"Object b = Arrays.asList(1, 2, null);"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,40,"assertEquals(""{'a':5,'b':[1,2,null]}"", adapter.toJson(object).replace(""\"""", ""'""));"
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,43,public void testSerializeObject() throws Exception {
True,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java,44,"assertEquals(""{}"", adapter.toJson(new Object()));"
