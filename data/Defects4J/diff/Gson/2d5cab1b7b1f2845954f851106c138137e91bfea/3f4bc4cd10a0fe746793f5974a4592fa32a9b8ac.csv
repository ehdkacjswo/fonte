is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,41,private static final int MAX_CAPACITY = 8192;
False,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,567,/ TODO: don't do anything if we're already at MAX_CAPACITY
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,570,if (oldCapacity >= MAX_CAPACITY) {
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,571,return oldTable;
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,574,int newCapacity = oldCapacity * 2;
False,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,570,"ode<K, V>[] newTable = new Node[oldCapacity * 2];"
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,577,"Node<K, V>[] newTable = new Node[newCapacity];"
False,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,587,f ((node.hash & oldCapacity) == 0) {
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,594,if ((node.hash & (newCapacity - 1)) == i) {
False,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,602,f ((node.hash & oldCapacity) == 0) {
True,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java,609,if ((node.hash & (newCapacity - 1)) == i) {
