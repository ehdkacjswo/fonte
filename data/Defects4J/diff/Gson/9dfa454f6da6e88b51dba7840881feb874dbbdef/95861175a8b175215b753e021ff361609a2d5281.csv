is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,91,rivate final ObjectNavigatorFactory navigatorFactory;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,91,private final ExclusionStrategy strategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,92,private final FieldNamingStrategy fieldNamingPolicy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,139,his(createDefaultObjectNavigatorFactory());
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,140,"this(createExclusionStrategy(VersionConstants.IGNORE_VERSIONS), DEFAULT_NAMING_POLICY);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,149,son(ObjectNavigatorFactory factory) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,150,"his(factory, createObjectConstructor(DefaultTypeAdapters.DEFAULT_INSTANCE_CREATORS),"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,150,"Gson(ExclusionStrategy strategy, FieldNamingStrategy fieldNamingPolicy) {"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,151,"this(strategy, fieldNamingPolicy, createObjectConstructor(DefaultTypeAdapters.DEFAULT_INSTANCE_CREATORS),"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,155,"son(ObjectNavigatorFactory factory, MappedObjectConstructor objectConstructor,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,156,"Gson(ExclusionStrategy strategy, FieldNamingStrategy fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,157,"MappedObjectConstructor objectConstructor,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,159,his.navigatorFactory = factory;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,161,this.strategy = strategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,162,this.fieldNamingPolicy = fieldNamingPolicy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,177,rivate static ObjectNavigatorFactory createDefaultObjectNavigatorFactory() {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,178,eturn new ObjectNavigatorFactory(
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,179,"reateExclusionStrategy(VersionConstants.IGNORE_VERSIONS), DEFAULT_NAMING_POLICY);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,180,private ObjectNavigatorFactory createDefaultObjectNavigatorFactory() {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,181,"return new ObjectNavigatorFactory(strategy, fieldNamingPolicy);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,271,sonSerializationContext context =
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,272,"ew JsonSerializationContextDefault(navigatorFactory, serializeNulls, serializers);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,273,JsonSerializationContext context = new JsonSerializationContextDefault(
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,274,"createDefaultObjectNavigatorFactory(), serializeNulls, serializers);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,377,"sonDeserializationContext context = new JsonDeserializationContextDefault(navigatorFactory,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,378,"eserializers, objectConstructor, typeAdapter);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,379,JsonDeserializationContext context = new JsonDeserializationContextDefault(
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,380,"createDefaultObjectNavigatorFactory(), deserializers, objectConstructor, typeAdapter);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,344,bjectNavigatorFactory objectNavigatorFactory =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,345,"ew ObjectNavigatorFactory(exclusionStrategy, fieldNamingPolicy);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,360,"son gson = new Gson(objectNavigatorFactory, objConstructor, typeAdapter, formatter,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,361,"erializeNulls, customSerializers, customDeserializers);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,358,"Gson gson = new Gson(exclusionStrategy, fieldNamingPolicy, objConstructor, typeAdapter,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,359,"formatter, serializeNulls, customSerializers, customDeserializers);"
False,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,55,son gson = new Gson(new ObjectNavigatorFactory(new ModifierBasedExclusionStrategy(
False,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,56,"rue, Modifier.TRANSIENT, Modifier.STATIC), Gson.DEFAULT_NAMING_POLICY));"
True,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,55,Gson gson = new Gson(new ModifierBasedExclusionStrategy(
True,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionalWithInternalDependenciesTest.java,56,"true, Modifier.TRANSIENT, Modifier.STATIC), Gson.DEFAULT_NAMING_POLICY);"
False,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,46,ublic void testSingleThread() {
False,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,47,"yObject myObj = new MyObject(""hello"", ""world"", 42);"
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,46,public void testSingleThreadSerialization() {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,47,MyObject myObj = new MyObject();
False,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,57,ublic void testMultiThread() throws InterruptedException {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,57,public void testSingleThreadDeserialization() {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,58,for (int i = 0; i < 10; i++) {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,59,"gson.fromJson(""{'a':'hello','b':'world','i':1}"", MyObject.class);"
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,64,* Source-code based on
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,65,* http://groups.google.com/group/google-gson/browse_thread/thread/563bb51ee2495081
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,67,public void testMultiThreadSerialization() throws InterruptedException {
False,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,69,tring json = gson.toJson(myObj);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,79,gson.toJson(myObj);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,95,* Source-code based on
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,96,* http://groups.google.com/group/google-gson/browse_thread/thread/563bb51ee2495081
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,98,public void testMultiThreadDeserialization() throws InterruptedException {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,99,final CountDownLatch startLatch = new CountDownLatch(1);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,100,final CountDownLatch finishedLatch = new CountDownLatch(10);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,101,final AtomicBoolean failed = new AtomicBoolean(false);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,102,ExecutorService executor = Executors.newFixedThreadPool(10);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,103,for (int taskCount = 0; taskCount < 10; taskCount++) {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,104,executor.execute(new Runnable() {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,105,public void run() {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,106,try {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,107,startLatch.await();
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,108,for (int i = 0; i < 10; i++) {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,109,"gson.fromJson(""{'a':'hello','b':'world','i':1}"", MyObject.class);"
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,111,} catch (Throwable t) {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,112,failed.set(true);
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,113,} finally {
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,114,finishedLatch.countDown();
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,119,startLatch.countDown();
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,120,finishedLatch.await();
True,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java,121,assertFalse(failed.get());
