is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,54,if (stack.isEmpty()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,55,return JsonNull.INSTANCE; // TODO: is this really what we want?
False,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,55,hrow new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,58,"throw new IllegalStateException(""Expected one JSON element but was "" + stack);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,135,if (value == null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,136,return nullValue();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,163,if (value == null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,164,return nullValue();
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,21,mport com.google.gson.internal.Streams;
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,59,tringWriter stringWriter = new StringWriter();
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,60,sonWriter jsonWriter = new JsonWriter(stringWriter);
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,57,JsonElementWriter jsonWriter = new JsonElementWriter();
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,63,sonReader reader = new JsonReader(new StringReader(stringWriter.toString()));
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,64,eader.setLenient(true);
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,65,eturn Streams.parse(reader);
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,60,return jsonWriter.get();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,26,// TODO: figure out what should be returned by an empty writer
