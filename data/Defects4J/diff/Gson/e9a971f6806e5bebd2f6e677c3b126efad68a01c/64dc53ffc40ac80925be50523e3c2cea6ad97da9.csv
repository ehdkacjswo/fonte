is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,91,"ype runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(componentType, array, value);"
True,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,91,"Type runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(componentType, value);"
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,110,"ype runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(elementType, collection, element);"
True,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapter.java,110,"Type runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(elementType, element);"
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,26," In case of a field of an object, parent is the object instance, and child is the field value."
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,27," In case of an Array, parent is the array instance, and the child is the array element."
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,29,"ublic static Type getRuntimeTypeIfMoreSpecific(Type type, Object parent, Object child) {"
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,30,f (parent == null || child == null) {
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,31,eturn type;
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,33,f (type == Object.class || type instanceof TypeVariable || type instanceof Class<?>) {
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,34,ype = (Class<?>) child.getClass();
True,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,27,"public static Type getRuntimeTypeIfMoreSpecific(Type type, Object value) {"
True,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,28,if (value != null
True,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,29,&& (type == Object.class || type instanceof TypeVariable || type instanceof Class<?>)) {
True,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,30,type = (Class<?>) value.getClass();
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,125,"ype resolvedTypeOfField = Reflection.getRuntimeTypeIfMoreSpecific(declaredTypeOfField, value, fieldValue);"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,125,"Type resolvedTypeOfField = Reflection.getRuntimeTypeIfMoreSpecific(declaredTypeOfField, fieldValue);"
