is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,57,tmlEscapeSet.add('\'');
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,58,/   htmlEscapeSet.add('/');  -- Removing slash for now since it causes some incompatibilities
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,57,"// Removing ' for now since it is a valid character in JSON, but not javascript"
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,58,"// When enabling this, remember to enable the test EscaperTest.disable_testSingleQuoteEscaping"
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,59,//    htmlEscapeSet.add('\'');
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,60,//    htmlEscapeSet.add('/');  -- Removing slash for now since it causes some incompatibilities
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,46,f (json.isJsonArray()) {
True,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,46,if (json == null || json.isJsonNull()) {
True,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,47,return null;
True,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,48,} else if (json.isJsonArray()) {
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,52, else if (json.isJsonNull()) {
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,53,eturn null;
True,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,42,if (src == null) {
True,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,43,return JsonNull.createJsonNull();
False,gson/src/test/java/com/google/gson/EscaperTest.java,gson/src/test/java/com/google/gson/EscaperTest.java,68,ublic void testSingleQuoteEscaping() throws Exception {
True,gson/src/test/java/com/google/gson/EscaperTest.java,gson/src/test/java/com/google/gson/EscaperTest.java,68,public void disable_testSingleQuoteEscaping() throws Exception {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,24,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,25,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,179,public void testCustomTypeAdapterPassesNullSerialization() {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,180,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,181,".registerTypeAdapter(ObjectWithField.class, new JsonSerializer<ObjectWithField>() {"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,182,"public JsonElement serialize(ObjectWithField src, Type typeOfSrc,"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,183,JsonSerializationContext context) {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,184,return context.serialize(null);
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,186,}).create();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,187,ObjectWithField target = new ObjectWithField();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,188,"target.value = ""value1"";"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,189,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,190,"assertFalse(json.contains(""value1""));"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,193,public void testCustomTypeAdapterPassesNullDesrialization() {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,194,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,195,".registerTypeAdapter(ObjectWithField.class, new JsonDeserializer<ObjectWithField>() {"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,196,"public ObjectWithField deserialize(JsonElement json, Type type,"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,197,JsonDeserializationContext context) {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,198,"return context.deserialize(null, type);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,200,}).create();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,201,"String json = ""{value:'value1'}"";"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,202,"ObjectWithField target = gson.fromJson(json, ObjectWithField.class);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,203,"assertFalse(""value1"".equals(target.value));"
