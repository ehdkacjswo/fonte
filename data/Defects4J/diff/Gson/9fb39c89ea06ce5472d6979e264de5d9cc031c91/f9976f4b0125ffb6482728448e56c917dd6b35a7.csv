is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,43,mport java.util.StringTokenizer;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,68,rivate static final LocaleTypeAdapter LOCALE_TYPE_ADAPTER = new LocaleTypeAdapter();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,101,"ap.register(Locale.class, LOCALE_TYPE_ADAPTER, true);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,134,"ap.register(Locale.class, wrapDeserializer(LOCALE_TYPE_ADAPTER), true);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,514,rivate static final class LocaleTypeAdapter
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,515,"mplements JsonSerializer<Locale>, JsonDeserializer<Locale> {"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,516,"ublic JsonElement serialize(Locale src, Type typeOfSrc, JsonSerializationContext context) {"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,517,eturn new JsonPrimitive(src.toString());
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,520,"ublic Locale deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,521,hrows JsonParseException {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,522,tring locale = json.getAsString();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,523,"tringTokenizer tokenizer = new StringTokenizer(locale, ""_"");"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,524,tring language = null;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,525,tring country = null;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,526,tring variant = null;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,527,f (tokenizer.hasMoreElements()) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,528,anguage = tokenizer.nextToken();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,530,f (tokenizer.hasMoreElements()) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,531,ountry = tokenizer.nextToken();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,533,f (tokenizer.hasMoreElements()) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,534,ariant = tokenizer.nextToken();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,536,f (country == null && variant == null) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,537,eturn new Locale(language);
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,538, else if (variant == null) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,539,"eturn new Locale(language, country);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,540, else {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,541,"eturn new Locale(language, country, variant);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,545,Override
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,546,ublic String toString() {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,547,eturn LocaleTypeAdapter.class.getSimpleName();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,245,.factory(TypeAdapters.LOCALE_FACTORY)
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,23,import java.util.Locale;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,24,import java.util.StringTokenizer;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,183,public static final TypeAdapter<Locale> LOCALE = new TypeAdapter<Locale>() {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,184,public Locale read(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,185,String locale = reader.nextString();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,186,"StringTokenizer tokenizer = new StringTokenizer(locale, ""_"");"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,187,String language = null;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,188,String country = null;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,189,String variant = null;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,190,if (tokenizer.hasMoreElements()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,191,language = tokenizer.nextToken();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,193,if (tokenizer.hasMoreElements()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,194,country = tokenizer.nextToken();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,196,if (tokenizer.hasMoreElements()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,197,variant = tokenizer.nextToken();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,199,if (country == null && variant == null) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,200,return new Locale(language);
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,201,} else if (variant == null) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,202,"return new Locale(language, country);"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,203,} else {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,204,"return new Locale(language, country, variant);"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,207,"public void write(JsonWriter writer, Locale value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,208,writer.value(value.toString());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,212,"public static final TypeAdapter.Factory LOCALE_FACTORY = newFactory(Locale.class, LOCALE);"
