is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,17,package com.google.gson.internal.bind;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,19,import com.google.gson.JsonArray;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,20,import com.google.gson.JsonElement;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,21,import com.google.gson.JsonNull;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,22,import com.google.gson.JsonObject;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,23,import com.google.gson.JsonPrimitive;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,24,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,25,import com.google.gson.stream.JsonToken;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,26,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,27,import java.io.Reader;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,28,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,29,import java.util.Iterator;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,30,import java.util.List;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,31,import java.util.Map;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,36,public final class JsonElementReader extends JsonReader {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,37,private static final Reader UNREADABLE_READER = new Reader() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,38,"@Override public int read(char[] buffer, int offset, int count) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,39,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,41,@Override public void close() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,42,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,46,private final List<Object> stack = new ArrayList<Object>();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,49,* Creates a new instance that reads a JSON-encoded stream from {@code in}.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,51,public JsonElementReader(JsonElement element) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,52,super(UNREADABLE_READER);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,53,stack.add(element);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,56,@Override public void beginArray() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,57,expect(JsonToken.BEGIN_ARRAY);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,58,JsonArray array = (JsonArray) peekStack();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,59,stack.add(array.iterator());
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,62,@Override public void endArray() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,63,expect(JsonToken.END_ARRAY);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,64,popStack(); // empty iterator
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,65,popStack(); // array
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,68,@Override public void beginObject() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,69,expect(JsonToken.BEGIN_OBJECT);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,70,JsonObject object = (JsonObject) peekStack();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,71,stack.add(object.entrySet().iterator());
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,74,@Override public void endObject() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,75,expect(JsonToken.END_OBJECT);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,76,popStack(); // empty iterator
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,77,popStack(); // object
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,80,@Override public boolean hasNext() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,81,JsonToken token = peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,82,return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,85,@Override public JsonToken peek() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,86,if (stack.isEmpty()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,87,return JsonToken.END_DOCUMENT;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,90,Object o = peekStack();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,91,if (o instanceof Iterator) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,92,boolean isObject = stack.get(stack.size() - 2) instanceof JsonObject;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,93,Iterator<?> iterator = (Iterator<?>) o;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,94,if (iterator.hasNext()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,95,if (isObject) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,96,return JsonToken.NAME;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,97,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,98,stack.add(iterator.next());
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,99,return peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,101,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,102,return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,104,} else if (o instanceof JsonObject) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,105,return JsonToken.BEGIN_OBJECT;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,106,} else if (o instanceof JsonArray) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,107,return JsonToken.BEGIN_ARRAY;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,108,} else if (o instanceof JsonPrimitive) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,109,JsonPrimitive primitive = (JsonPrimitive) o;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,110,if (primitive.isString()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,111,return JsonToken.STRING;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,112,} else if (primitive.isBoolean()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,113,return JsonToken.BOOLEAN;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,114,} else if (primitive.isNumber()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,115,return JsonToken.NUMBER;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,116,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,117,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,119,} else if (o instanceof JsonNull) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,120,return JsonToken.NULL;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,121,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,122,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,126,private Object peekStack() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,127,return stack.get(stack.size() - 1);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,130,private Object popStack() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,131,return stack.remove(stack.size() - 1);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,134,private void expect(JsonToken expected) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,135,if (peek() != expected) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,136,"throw new IllegalStateException(""Expected "" + expected + "" but was "" + peek());"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,140,@Override public String nextName() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,141,expect(JsonToken.NAME);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,142,Iterator<?> i = (Iterator) peekStack();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,143,"Map.Entry<?, ?> entry = (Map.Entry<?, ?>) i.next();"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,144,stack.add(entry.getValue());
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,145,return (String) entry.getKey();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,148,@Override public String nextString() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,149,expect(JsonToken.STRING);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,150,return ((JsonPrimitive) popStack()).getAsString();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,153,@Override public boolean nextBoolean() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,154,expect(JsonToken.BOOLEAN);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,155,return ((JsonPrimitive) popStack()).getAsBoolean();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,158,@Override public void nextNull() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,159,expect(JsonToken.NULL);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,160,popStack();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,163,@Override public double nextDouble() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,164,expect(JsonToken.NUMBER);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,165,return ((JsonPrimitive) popStack()).getAsDouble();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,168,@Override public long nextLong() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,169,expect(JsonToken.NUMBER);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,170,return ((JsonPrimitive) popStack()).getAsLong();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,173,@Override public int nextInt() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,174,expect(JsonToken.NUMBER);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,175,return ((JsonPrimitive) popStack()).getAsInt();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,178,@Override public void close() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,181,@Override public void skipValue() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,182,if (peek() == JsonToken.NAME) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,183,nextName();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,184,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,185,popStack();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,189,@Override public String toString() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,190,return getClass().getSimpleName();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,186,ublic final class JsonReader implements Closeable {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,186,public class JsonReader implements Closeable {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,282,ublic void setLenient(boolean lenient) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,282,public final void setLenient(boolean lenient) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,289,ublic boolean isLenient() {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,289,public final boolean isLenient() {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,17,package com.google.gson.internal.bind;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,19,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,20,import com.google.gson.JsonParser;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,21,import com.google.gson.stream.JsonToken;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,22,import java.io.IOException;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,23,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,25,public final class JsonElementReaderTest extends TestCase {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,27,public void testArray() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,28,"JsonElement array = new JsonParser().parse(""[1, 2, 3]"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,29,JsonElementReader reader = new JsonElementReader(array);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,30,"assertEquals(JsonToken.BEGIN_ARRAY, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,31,reader.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,32,"assertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,33,"assertEquals(1, reader.nextInt());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,34,"assertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,35,"assertEquals(2, reader.nextInt());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,36,"assertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,37,"assertEquals(3, reader.nextInt());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,38,"assertEquals(JsonToken.END_ARRAY, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,39,reader.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,40,"assertEquals(JsonToken.END_DOCUMENT, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,43,public void testObject() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,44,"JsonElement array = new JsonParser().parse(""{\""A\"": 1, \""B\"": 2}"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,45,JsonElementReader reader = new JsonElementReader(array);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,46,"assertEquals(JsonToken.BEGIN_OBJECT, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,47,reader.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,48,"assertEquals(JsonToken.NAME, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,49,"assertEquals(""A"", reader.nextName());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,50,"assertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,51,"assertEquals(1, reader.nextInt());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,52,"assertEquals(JsonToken.NAME, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,53,"assertEquals(""B"", reader.nextName());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,54,"assertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,55,"assertEquals(2, reader.nextInt());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,56,"assertEquals(JsonToken.END_OBJECT, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,57,reader.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,58,"assertEquals(JsonToken.END_DOCUMENT, reader.peek());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,61,public void testEmptyArray() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,62,"JsonElement array = new JsonParser().parse(""[]"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,63,JsonElementReader reader = new JsonElementReader(array);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,64,reader.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,65,reader.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,68,public void testEmptyObject() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,69,"JsonElement array = new JsonParser().parse(""{}"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,70,JsonElementReader reader = new JsonElementReader(array);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,71,reader.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,72,reader.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,75,// TODO: more test coverage
