is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,235,factories.add(TypeAdapters.CURRENCY_FACTORY);
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,30,import java.util.Currency;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,580,public static final TypeAdapter<Currency> CURRENCY = new TypeAdapter<Currency>() {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,581,@Override
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,582,public Currency read(JsonReader in) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,583,return Currency.getInstance(in.nextString());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,585,@Override
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,586,"public void write(JsonWriter out, Currency value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,587,out.value(value.getCurrencyCode());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,589,}.nullSafe();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,590,"public static final TypeAdapterFactory CURRENCY_FACTORY = newFactory(Currency.class, CURRENCY);"
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,19,mport com.google.gson.Gson;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,20,mport com.google.gson.GsonBuilder;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,21,mport com.google.gson.JsonElement;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,22,mport com.google.gson.JsonPrimitive;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,23,mport com.google.gson.JsonSerializationContext;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,24,mport com.google.gson.JsonSerializer;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,25,mport com.google.gson.common.MoreAsserts;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,26,mport com.google.gson.common.TestTypes.BagOfPrimitives;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,27,mport com.google.gson.reflect.TypeToken;
False,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,29,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,28,import java.util.PriorityQueue;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,31,import java.util.Stack;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,32,import java.util.Vector;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,34,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,35,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,36,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,37,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,38,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,39,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,40,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,41,import com.google.gson.common.TestTypes.BagOfPrimitives;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,42,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,44,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,130,public void testPriorityQueue() throws Exception {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,131,Type type = new TypeToken<PriorityQueue<Integer>>(){}.getType();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,132,"PriorityQueue<Integer> queue = gson.fromJson(""[10, 20, 22]"", type);"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,133,"assertEquals(3, queue.size());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,134,String json = gson.toJson(queue);
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,135,"assertEquals(10, queue.remove().intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,136,"assertEquals(20, queue.remove().intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,137,"assertEquals(22, queue.remove().intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,138,"assertEquals(""[10,20,22]"", json);"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,141,public void testVector() {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,142,Type type = new TypeToken<Vector<Integer>>(){}.getType();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,143,"Vector<Integer> target = gson.fromJson(""[10, 20, 31]"", type);"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,144,"assertEquals(3, target.size());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,145,"assertEquals(10, target.get(0).intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,146,"assertEquals(20, target.get(1).intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,147,"assertEquals(31, target.get(2).intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,148,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,149,"assertEquals(""[10,20,31]"", json);"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,152,public void testStack() {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,153,Type type = new TypeToken<Stack<Integer>>(){}.getType();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,154,"Stack<Integer> target = gson.fromJson(""[11, 13, 17]"", type);"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,155,"assertEquals(3, target.size());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,156,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,157,"assertEquals(17, target.pop().intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,158,"assertEquals(13, target.pop().intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,159,"assertEquals(11, target.pop().intValue());"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,160,"assertEquals(""[11,13,17]"", json);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,2,* Copyright (C) 2015 Google Inc.
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,19,import java.util.Currency;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,20,import java.util.Properties;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,22,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,24,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,27,* Functional test for Json serialization and deserialization for classes in java.util
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,29,public class JavaUtilTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,30,private Gson gson;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,32,@Override
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,33,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,34,super.setUp();
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,35,gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,38,public void testCurrency() throws Exception {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,39,"CurrencyHolder target = gson.fromJson(""{'value':'USD'}"", CurrencyHolder.class);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,40,"assertEquals(""USD"", target.value.getCurrencyCode());"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,41,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,42,"assertEquals(""{\""value\"":\""USD\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,44,// null handling
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,45,"target = gson.fromJson(""{'value':null}"", CurrencyHolder.class);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,46,assertNull(target.value);
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,47,"assertEquals(""{}"", gson.toJson(target));"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,50,private static class CurrencyHolder {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,51,Currency value;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,54,public void testProperties() {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,55,"Properties props = gson.fromJson(""{'a':'v1','b':'v2'}"", Properties.class);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,56,"assertEquals(""v1"", props.getProperty(""a""));"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,57,"assertEquals(""v2"", props.getProperty(""b""));"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,58,String json = gson.toJson(props);
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,59,"assertTrue(json.contains(""\""a\"":\""v1\""""));"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,60,"assertTrue(json.contains(""\""b\"":\""v2\""""));"
