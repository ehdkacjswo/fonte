is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,19,import com.google.gson.TypeAdapter;
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,20,import com.google.gson.TypeAdapterFactory;
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,24,mport com.google.gson.TypeAdapter;
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,90,lass<? extends TypeAdapter<?>> value();
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,90,/** Either a {@link TypeAdapter} or {@link TypeAdapterFactory}. */
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,91,Class<?> value();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,24,mport com.google.gson.internal.ObjectConstructor;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,44,eturn annotation != null
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,45, (TypeAdapter<T>) constructorConstructor.get(TypeToken.get(annotation.value())).construct()
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,46, null;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,43,if (annotation == null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,44,return null;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,46,"return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,49,"@SuppressWarnings(""unchecked"") // Casts guarded by conditionals."
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,50,"static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,51,"TypeToken<?> fieldType, JsonAdapter annotation) {"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,52,Class<?> value = annotation.value();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,53,if (TypeAdapter.class.isAssignableFrom(value)) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,54,Class<TypeAdapter<?>> typeAdapter = (Class<TypeAdapter<?>>) value;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,55,return constructorConstructor.get(TypeToken.get(typeAdapter)).construct();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,57,if (TypeAdapterFactory.class.isAssignableFrom(value)) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,58,Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,59,return constructorConstructor.get(TypeToken.get(typeAdapterFactory))
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,60,.construct()
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,61,".create(gson, fieldType);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,64,throw new IllegalArgumentException(
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,65,"""@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."");"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,41,import static com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,103,eturn (annotation != null)
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,104, constructorConstructor.get(TypeToken.get(annotation.value())).construct()
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,105, gson.getAdapter(fieldType);
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,105,if (annotation != null) {
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,106,"TypeAdapter<?> adapter = getTypeAdapter(constructorConstructor, gson, fieldType, annotation);"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,107,if (adapter != null) return adapter;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,109,return gson.getAdapter(fieldType);
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,19,mport java.io.IOException;
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,20,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,22,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,29,import com.google.gson.TypeAdapterFactory;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,31,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,34,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,35,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,36,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,56,public void testJsonAdapterFactoryInvoked() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,57,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,58,"String json = gson.toJson(new C(""bar""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,59,"assertEquals(""\""jsonAdapterFactory\"""", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,60,"C c = gson.fromJson(""\""bar\"""", C.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,61,"assertEquals(""jsonAdapterFactory"", c.value);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,128,rivate static final class JsonAdapter extends TypeAdapter<A> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,136,static final class JsonAdapter extends TypeAdapter<A> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,147,@JsonAdapter(C.JsonAdapterFactory.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,148,private static class C {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,149,final String value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,150,C(String value) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,151,this.value = value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,153,static final class JsonAdapterFactory implements TypeAdapterFactory {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,154,"public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,155,return new TypeAdapter<T>() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,156,"@Override public void write(JsonWriter out, T value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,157,"out.value(""jsonAdapterFactory"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,159,@Override public T read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,160,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java,161,"return (T) new C(""jsonAdapterFactory"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,22,import com.google.gson.TypeAdapterFactory;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,24,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,42,public void testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,43,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,44,"String json = gson.toJson(new Gizmo(new Part(""Part"")));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,45,"assertEquals(""{\""part\"":\""GizmoPartTypeAdapterFactory\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,46,"Gizmo computer = gson.fromJson(""{'part':'Part'}"", Gizmo.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,47,"assertEquals(""GizmoPartTypeAdapterFactory"", computer.part.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,93,private static final class Gizmo {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,94,@JsonAdapter(GizmoPartTypeAdapterFactory.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,95,final Part part;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,96,Gizmo(Part part) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,97,this.part = part;
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,85,art(String name) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,103,public Part(String name) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,118,private static class GizmoPartTypeAdapterFactory implements TypeAdapterFactory {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,119,"public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,120,return new TypeAdapter<T>() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,121,"@Override public void write(JsonWriter out, T value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,122,"out.value(""GizmoPartTypeAdapterFactory"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,124,"@SuppressWarnings(""unchecked"")"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,125,@Override public T read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,126,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,127,"return (T) new Part(""GizmoPartTypeAdapterFactory"");"
