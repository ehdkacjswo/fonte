is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,321,f (isFloatingPoint(this)) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,321,if (value instanceof Number) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,343,f (isFloatingPoint(this) && isFloatingPoint(other)) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,343,if (value instanceof Number && other.value instanceof Number) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,367," Returns true if the specified number is a floating point type (BigDecimal, double, float)"
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,369,rivate static boolean isFloatingPoint(JsonPrimitive primitive) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,370,f (primitive.value instanceof Number) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,371,umber number = (Number) primitive.value;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,372,eturn number instanceof BigDecimal || number instanceof Double || number instanceof Float;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,374,eturn false;
