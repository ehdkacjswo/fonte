is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,2,* Copyright (C) 2010 Google Inc.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,19,import java.lang.reflect.ParameterizedType;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,20,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,21,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,22,import java.util.LinkedHashMap;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,23,import java.util.List;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,24,import java.util.Map;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,27,* Adapts maps containing complex keys as arrays of map entries.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,29,* <h3>Maps as JSON objects</h3>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,30,* The standard GSON map type adapter converts Java {@link Map Maps} to JSON
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,31,* Objects. This requires that map keys can be serialized as strings; this is
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,32,"* insufficient for some key types. For example, consider a map whose keys are"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,33,* points on a grid. The default JSON form encodes reasonably: <pre>   {@code
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,34,"*   Map<Point, String> original = new LinkedHashMap<Point, String>();"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,35,"*   original.put(new Point(5, 6), ""a"");"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,36,"*   original.put(new Point(8, 8), ""b"");"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,37,"*   System.out.println(gson.toJson(original, type));"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,38,* }</pre>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,39,* The above code prints this JSON object:<pre>   {@code
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,41,"*     ""(5,6)"": ""a"","
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,42,"*     ""(8,8)"": ""b"""
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,44,* }</pre>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,45,* But GSON is unable to deserialize this value because the JSON string name is
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,46,* just the {@link Object#toString() toString()} of the map key. Attempting to
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,47,* convert the above JSON to an object fails with a parse exception:
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,48,"* <pre>com.google.gson.JsonParseException: Expecting object found: ""(5,6)"""
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,49,*   at com.google.gson.JsonObjectDeserializationVisitor.visitFieldUsingCustomHandler
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,50,*   at com.google.gson.ObjectNavigator.navigateClassFields
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,51,*   ...</pre>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,53,* <h3>Maps as JSON arrays</h3>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,54,* An alternative approach taken by this type adapter is to encode maps as
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,55,* arrays of map entries. Each map entry is a two element array containing a key
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,56,* and a value. This approach is more flexible because any type can be used as
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,57,* the map's key; not just strings. But it's also less portable because the
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,58,* receiver of such JSON must be aware of the map entry convention.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,60,* <p>Register this adapter when you are creating your GSON instance.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,61,* <pre>   {@code
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,62,*   Gson gson = new GsonBuilder()
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,63,"*     .registerTypeAdapter(Map.class, new MapAsArrayTypeAdapter())"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,64,*     .create();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,65,* }</pre>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,66,* This will change the structure of the JSON emitted by the code above. Now we
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,67,* get an array. In this case the arrays elements are map entries:
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,68,* <pre>   {@code
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,72,"*         ""x"": 5,"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,73,"*         ""y"": 6"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,75,"*       ""a"","
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,79,"*         ""x"": 8,"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,80,"*         ""y"": 8"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,82,"*       ""b"""
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,85,* }</pre>
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,86,* This format will serialize and deserialize just fine as long as this adapter
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,87,* is registered.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,89,* <p>This adapter returns regular JSON objects for maps whose keys are not
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,90,* complex. A key is complex if its JSON-serialized form is an array or an
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,91,* object.
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,93,public final class MapAsArrayTypeAdapter
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,94,"implements JsonSerializer<Map<?, ?>>, JsonDeserializer<Map<?, ?>> {"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,96,"public Map<?, ?> deserialize(JsonElement json, Type typeOfT,"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,97,JsonDeserializationContext context) throws JsonParseException {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,98,"Map<Object, Object> result = new LinkedHashMap<Object, Object>();"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,99,Type[] keyAndValueType = typeToTypeArguments(typeOfT);
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,100,if (json.isJsonArray()) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,101,JsonArray array = json.getAsJsonArray();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,102,for (int i = 0; i < array.size(); i++) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,103,JsonArray entryArray = array.get(i).getAsJsonArray();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,104,"Object k = context.deserialize(entryArray.get(0), keyAndValueType[0]);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,105,"Object v = context.deserialize(entryArray.get(1), keyAndValueType[1]);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,106,"result.put(k, v);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,108,"checkSize(array, array.size(), result, result.size());"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,109,} else {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,110,JsonObject object = json.getAsJsonObject();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,111,"for (Map.Entry<String, JsonElement> entry : object.entrySet()) {"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,112,"Object k = context.deserialize(new JsonPrimitive(entry.getKey()), keyAndValueType[0]);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,113,"Object v = context.deserialize(entry.getValue(), keyAndValueType[1]);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,114,"result.put(k, v);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,116,"checkSize(object, object.entrySet().size(), result, result.size());"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,118,return result;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,121,"public JsonElement serialize(Map<?, ?> src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,122,Type[] keyAndValueType = typeToTypeArguments(typeOfSrc);
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,123,boolean serializeAsArray = false;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,124,List<JsonElement> keysAndValues = new ArrayList<JsonElement>();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,125,"for (Map.Entry<?, ?> entry : src.entrySet()) {"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,126,"JsonElement key = context.serialize(entry.getKey(), keyAndValueType[0]);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,127,serializeAsArray |= key.isJsonObject() || key.isJsonArray();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,128,keysAndValues.add(key);
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,129,"keysAndValues.add(context.serialize(entry.getValue(), keyAndValueType[1]));"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,132,if (serializeAsArray) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,133,JsonArray result = new JsonArray();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,134,for (int i = 0; i < keysAndValues.size(); i+=2) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,135,JsonArray entryArray = new JsonArray();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,136,entryArray.add(keysAndValues.get(i));
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,137,entryArray.add(keysAndValues.get(i + 1));
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,138,result.add(entryArray);
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,140,return result;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,141,} else {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,142,JsonObject result = new JsonObject();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,143,for (int i = 0; i < keysAndValues.size(); i+=2) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,144,"result.add(keysAndValues.get(i).getAsString(), keysAndValues.get(i + 1));"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,146,"checkSize(src, src.size(), result, result.entrySet().size());"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,147,return result;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,151,private Type[] typeToTypeArguments(Type typeOfT) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,152,if (typeOfT instanceof ParameterizedType) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,153,Type[] typeArguments = ((ParameterizedType) typeOfT).getActualTypeArguments();
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,154,if (typeArguments.length != 2) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,155,"throw new IllegalArgumentException(""MapAsArrayTypeAdapter cannot handle "" + typeOfT);"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,157,return typeArguments;
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,159,"return new Type[] { Object.class, Object.class };"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,162,"private void checkSize(Object input, int inputSize, Object output, int outputSize) {"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,163,if (inputSize != outputSize) {
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,164,"throw new JsonSyntaxException(""Input size "" + inputSize + "" != output size "" + outputSize"
True,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,gson/src/main/java/com/google/gson/MapAsArrayTypeAdapter.java,165,"+ "" for input "" + input + "" and output "" + output);"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,2,* Copyright (C) 2010 Google Inc.
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,19,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,21,import com.google.gson.JsonSyntaxException;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,22,import com.google.gson.MapAsArrayTypeAdapter;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,23,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,24,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,25,import java.util.LinkedHashMap;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,26,import java.util.Map;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,27,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,29,public class MapAsArrayTypeAdapterTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,31,public void testSerializeComplexMapWithTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,32,"Type type = new TypeToken<Map<Point, String>>() {}.getType();"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,33,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,34,".registerTypeAdapter(Map.class, new MapAsArrayTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,35,.create();
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,37,"Map<Point, String> original = new LinkedHashMap<Point, String>();"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,38,"original.put(new Point(5, 5), ""a"");"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,39,"original.put(new Point(8, 8), ""b"");"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,40,"String json = gson.toJson(original, type);"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,41,"assertEquals(""[[{\""x\"":5,\""y\"":5},\""a\""],[{\""x\"":8,\""y\"":8},\""b\""]]"", json);"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,42,"assertEquals(original, gson.<Map<Point, String>>fromJson(json, type));"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,44,// test that registering a type adapter for one map doesn't interfere with others
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,45,"Map<String, Boolean> otherMap = new LinkedHashMap<String, Boolean>();"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,46,"otherMap.put(""t"", true);"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,47,"otherMap.put(""f"", false);"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,48,"assertEquals(""{\""t\"":true,\""f\"":false}"","
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,49,"gson.toJson(otherMap, Map.class));"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,50,"assertEquals(""{\""t\"":true,\""f\"":false}"","
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,51,"gson.toJson(otherMap, new TypeToken<Map<String, Boolean>>() {}.getType()));"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,52,"assertEquals(otherMap, gson.<Object>fromJson(""{\""t\"":true,\""f\"":false}"","
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,53,"new TypeToken<Map<String, Boolean>>() {}.getType()));"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,56,public void testTwoTypesCollapseToOneSerialize() {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,57,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,58,".registerTypeAdapter(Map.class, new MapAsArrayTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,59,.create();
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,61,"Map<Number, String> original = new LinkedHashMap<Number, String>();"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,62,"original.put(new Double(1.0), ""a"");"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,63,"original.put(new Float(1.0), ""b"");"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,64,try {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,65,"gson.toJson(original, new TypeToken<Map<Number, String>>() {}.getType());"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,66,fail();
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,67,} catch (JsonSyntaxException expected) {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,71,public void testTwoTypesCollapseToOneDeserialize() {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,72,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,73,".registerTypeAdapter(Map.class, new MapAsArrayTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,74,.create();
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,76,"String s = ""[[\""1.00\"",\""a\""],[\""1.0\"",\""b\""]]"";"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,77,try {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,78,"gson.fromJson(s, new TypeToken<Map<Double, String>>() {}.getType());"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,79,fail();
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,80,} catch (JsonSyntaxException expected) {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,84,static class Point {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,85,int x;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,86,int y;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,87,"Point(int x, int y) {"
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,88,this.x = x;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,89,this.y = y;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,91,Point() {}
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,92,@Override public boolean equals(Object o) {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,93,return o instanceof Point && ((Point) o).x == x && ((Point) o).y == y;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,95,@Override public int hashCode() {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,96,return x * 37 + y;
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,98,@Override public String toString() {
True,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java,99,"return ""("" + x + "","" + y + "")"";"
