is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,61,public void start(Object node) {
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,64,public void end(Object node) {
True,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,31,private final MemoryRefStack<Object> ancestors;
True,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,38,this.ancestors = new MemoryRefStack<Object>();
False,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,46,"ew JsonSerializationVisitor(factory, serializeNulls, serializers, this);"
True,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,gson/src/main/java/com/google/gson/JsonSerializationContextDefault.java,48,"new JsonSerializationVisitor(factory, serializeNulls, serializers, this, ancestors);"
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,35,private final MemoryRefStack<Object> ancestors;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,41,sonSerializationContext context) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,40,"JsonSerializationContext context, MemoryRefStack<Object> ancestors) {"
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,45,this.ancestors = ancestors;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,52,public void start(Object node) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,53,if (node == null) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,54,return;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,56,if (ancestors.contains(node)) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,57,"throw new IllegalStateException(""Circular reference found: "" + node);"
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,59,ancestors.push(node);
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,62,public void end(Object node) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,63,if (node != null) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,64,ancestors.pop();
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,123,"ew JsonSerializationVisitor(factory, serializeNulls, serializers, context);"
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,139,"new JsonSerializationVisitor(factory, serializeNulls, serializers, context, ancestors);"
True,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,53,public boolean isEmpty() {
True,gson/src/main/java/com/google/gson/MemoryRefStack.java,gson/src/main/java/com/google/gson/MemoryRefStack.java,54,return stack.isEmpty();
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,32,public void start(Object node);
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,33,public void end(Object node);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,72,rivate final MemoryRefStack<Object> ancestors;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,82,"bjectNavigator(Object obj, Type objType, ExclusionStrategy exclusionStrategy,"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,83,emoryRefStack<Object> ancestors) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,84,"ObjectNavigator(Object obj, Type objType, ExclusionStrategy exclusionStrategy) {"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,85,reconditions.checkNotNull(ancestors);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,90,his.ancestors = ancestors;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,109,f (ancestors.contains(objectToVisit)) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,110,"hrow new IllegalStateException(""Circular reference found: "" + objectToVisit);"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,112,ncestors.push(objectToVisit);
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,107,visitor.start(obj);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,132,ncestors.pop();
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,126,visitor.end(obj);
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,31,rivate final MemoryRefStack<Object> stack;
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,46,his.stack = new MemoryRefStack<Object>();
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,61,"eturn new ObjectNavigator(srcObject, type, strategy, stack);"
True,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,59,"return new ObjectNavigator(srcObject, type, strategy);"
