is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,67,oid key(String key) {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,67,void key(String key) throws IOException {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,68,breakLineIfThisToNextExceedsLimit(key.length() + 2);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,73,oid value(String value) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,74,etLine().append(value);
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,74,void value(String value) throws IOException {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,75,breakLineIfThisToNextExceedsLimit(value.length() + 2);
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,76,getLine().append(value);
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,88,+level;
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,92,++level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,99,+level;
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,103,++level;
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,110,f (getLine().length() > printMargin - rightMargin) {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,111,inishLine();
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,112,breakLineIfThisToNextExceedsLimit(0);
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,115,private void breakLineIfThisToNextExceedsLimit(int nextLength) throws IOException {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,116,if (getLine().length() + nextLength > printMargin - rightMargin) {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,117,finishLine();
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,225,ublic void endObject(JsonObject object) {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,231,public void endObject(JsonObject object) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,229,ublic void visitPrimitive(JsonPrimitive primitive) {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,235,public void visitPrimitive(JsonPrimitive primitive) throws IOException {
False,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,233,ublic void visitNull() {
True,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,gson/src/main/java/com/google/gson/JsonPrintFormatter.java,239,public void visitNull() throws IOException {
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,105,rivate static class ClassWithNullWrappedPrimitive {
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,106,rivate Long value;
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,123,tatic class ClassWithMembers {
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,124,tring str;
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,125,nt[] array;
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,126,ollection<String> col;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,128,public void testPrintPrintingObjectWithNulls() throws Exception {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,129,gsonBuilder = new GsonBuilder();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,130,Gson gson = gsonBuilder.setPrettyPrinting().create();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,131,String result = gson.toJson(new ClassWithMembers());
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,132,"assertEquals(""{}\n"", result);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,134,gson = gsonBuilder.serializeNulls().create();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,135,result = gson.toJson(new ClassWithMembers());
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,136,"assertTrue(result.contains(""\""str\"":null""));"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,139,public void testPrintPrintingArraysWithNulls() throws Exception {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,140,gsonBuilder = new GsonBuilder();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,141,Gson gson = gsonBuilder.setPrettyPrinting().create();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,142,"String result = gson.toJson(new String[] { ""1"", null, ""3"" });"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,143,"assertEquals(""[\""1\"",null,\""3\""]\n"", result);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,145,gson = gsonBuilder.serializeNulls().create();
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,146,"result = gson.toJson(new String[] { ""1"", null, ""3"" });"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,147,"assertEquals(""[\""1\"",null,\""3\""]\n"", result);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,150,private static class ClassWithNullWrappedPrimitive {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,151,private Long value;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,154,private static class ClassWithMembers {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,155,String str;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,156,int[] array;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,157,Collection<String> col;
False,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,38,rivate static int PRINT_MARGIN = 100;
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,38,private static int PRINT_MARGIN = 80;
False,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,77,"nt[][] ints = new int[][] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 }, { 9, 0 }, { 10 } };"
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,77,"int[][] ints = new int[][] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 },"
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,78,"{ 9, 0 }, { 10 } };"
False,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,83,"ist<Integer[]> list = Arrays.asList(new Integer[][] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 },"
False,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,84," 9, 0 }, { 10 } });"
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,84,"List<Integer[]> list = Arrays.asList(new Integer[][] { { 1, 2 }, { 3, 4 },"
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,85,"{ 5, 6 }, { 7, 8 }, { 9, 0 }, { 10 } });"
False,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,90,"nt[][][] ints = new int[][][] { {  { 1 }, { 2 } } };"
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,91,"int[][][] ints = new int[][][] { { { 1 }, { 2 } } };"
False,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,109,ssertTrue(position < PRINT_MARGIN + RIGHT_MARGIN);
True,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java,110,assertTrue(position <= PRINT_MARGIN - RIGHT_MARGIN + 1);
