is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,251,.factory(TypeAdapters.JSON_ELEMENT_FACTORY)
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,19,mport com.google.gson.JsonArray;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,23,mport com.google.gson.JsonObject;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,25,mport com.google.gson.JsonPrimitive;
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,24,import com.google.gson.internal.bind.TypeAdapters;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,33,mport java.util.Map;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,48,eturn parseRecursive(reader);
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,44,return TypeAdapters.JSON_ELEMENT.read(reader);
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,67,rivate static JsonElement parseRecursive(JsonReader reader) throws IOException {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,68,witch (reader.peek()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,69,ase STRING:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,70,eturn new JsonPrimitive(reader.nextString());
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,71,ase NUMBER:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,72,tring number = reader.nextString();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,73,eturn new JsonPrimitive(new LazilyParsedNumber(number));
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,74,ase BOOLEAN:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,75,eturn new JsonPrimitive(reader.nextBoolean());
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,76,ase NULL:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,77,eader.nextNull();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,78,eturn JsonNull.INSTANCE;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,79,ase BEGIN_ARRAY:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,80,sonArray array = new JsonArray();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,81,eader.beginArray();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,82,hile (reader.hasNext()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,83,rray.add(parseRecursive(reader));
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,85,eader.endArray();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,86,eturn array;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,87,ase BEGIN_OBJECT:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,88,sonObject object = new JsonObject();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,89,eader.beginObject();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,90,hile (reader.hasNext()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,91,"bject.add(reader.nextName(), parseRecursive(reader));"
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,93,eader.endObject();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,94,eturn object;
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,95,ase END_DOCUMENT:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,96,ase NAME:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,97,ase END_OBJECT:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,98,ase END_ARRAY:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,99,efault:
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,100,hrow new IllegalArgumentException();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,107,"ublic static void write(JsonElement element, JsonWriter writer)"
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,108,hrows IOException {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,109,f (element == null || element.isJsonNull()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,110,riter.nullValue();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,111, else if (element.isJsonPrimitive()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,112,sonPrimitive primitive = element.getAsJsonPrimitive();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,113,f (primitive.isNumber()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,114,riter.value(primitive.getAsNumber());
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,115, else if (primitive.isBoolean()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,116,riter.value(primitive.getAsBoolean());
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,117, else {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,118,riter.value(primitive.getAsString());
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,121, else if (element.isJsonArray()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,122,riter.beginArray();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,123,or (JsonElement e : element.getAsJsonArray()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,124,"rite(e, writer);"
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,126,riter.endArray();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,128, else if (element.isJsonObject()) {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,129,riter.beginObject();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,130,"or (Map.Entry<String, JsonElement> e : element.getAsJsonObject().entrySet()) {"
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,131,sonElement value = e.getValue();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,132,riter.name(e.getKey());
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,133,"rite(value, writer);"
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,135,riter.endObject();
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,137, else {
False,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,138,"hrow new IllegalArgumentException(""Couldn't write "" + element.getClass());"
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,66,"public static void write(JsonElement element, JsonWriter writer) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,67,"TypeAdapters.JSON_ELEMENT.write(writer, element);"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,19,import com.google.gson.JsonArray;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,20,import com.google.gson.JsonElement;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,22,import com.google.gson.JsonNull;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,23,import com.google.gson.JsonObject;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,24,import com.google.gson.JsonPrimitive;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,42,import java.util.Map;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,535,public static final TypeAdapter<JsonElement> JSON_ELEMENT = new TypeAdapter<JsonElement>() {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,536,@Override public JsonElement read(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,537,switch (reader.peek()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,538,case STRING:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,539,return new JsonPrimitive(reader.nextString());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,540,case NUMBER:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,541,String number = reader.nextString();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,542,return new JsonPrimitive(new LazilyParsedNumber(number));
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,543,case BOOLEAN:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,544,return new JsonPrimitive(reader.nextBoolean());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,545,case NULL:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,546,reader.nextNull();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,547,return JsonNull.INSTANCE;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,548,case BEGIN_ARRAY:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,549,JsonArray array = new JsonArray();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,550,reader.beginArray();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,551,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,552,array.add(read(reader));
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,554,reader.endArray();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,555,return array;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,556,case BEGIN_OBJECT:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,557,JsonObject object = new JsonObject();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,558,reader.beginObject();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,559,while (reader.hasNext()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,560,"object.add(reader.nextName(), read(reader));"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,562,reader.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,563,return object;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,564,case END_DOCUMENT:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,565,case NAME:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,566,case END_OBJECT:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,567,case END_ARRAY:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,568,default:
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,569,throw new IllegalArgumentException();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,573,"@Override public void write(JsonWriter writer, JsonElement value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,574,if (value == null || value.isJsonNull()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,575,writer.nullValue();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,576,} else if (value.isJsonPrimitive()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,577,JsonPrimitive primitive = value.getAsJsonPrimitive();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,578,if (primitive.isNumber()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,579,writer.value(primitive.getAsNumber());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,580,} else if (primitive.isBoolean()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,581,writer.value(primitive.getAsBoolean());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,582,} else {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,583,writer.value(primitive.getAsString());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,586,} else if (value.isJsonArray()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,587,writer.beginArray();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,588,for (JsonElement e : value.getAsJsonArray()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,589,"write(writer, e);"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,591,writer.endArray();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,593,} else if (value.isJsonObject()) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,594,writer.beginObject();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,595,"for (Map.Entry<String, JsonElement> e : value.getAsJsonObject().entrySet()) {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,596,writer.name(e.getKey());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,597,"write(writer, e.getValue());"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,599,writer.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,601,} else {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,602,"throw new IllegalArgumentException(""Couldn't write "" + value.getClass());"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,607,public static final TypeAdapter.Factory JSON_ELEMENT_FACTORY
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,608,"= newFactory(JsonElement.class, JSON_ELEMENT);"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,20,import com.google.gson.JsonArray;
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,24,import com.google.gson.JsonNull;
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,25,import com.google.gson.JsonObject;
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,27,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,466,public void testJsonPrimitiveSerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,467,"assertEquals(""5"", gson.toJson(new JsonPrimitive(5), JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,468,"assertEquals(""true"", gson.toJson(new JsonPrimitive(true), JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,469,"assertEquals(""\""foo\"""", gson.toJson(new JsonPrimitive(""foo""), JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,470,"assertEquals(""\""a\"""", gson.toJson(new JsonPrimitive('a'), JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,473,public void testJsonPrimitiveDeserialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,474,"assertEquals(new JsonPrimitive(5), gson.fromJson(""5"", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,475,"assertEquals(new JsonPrimitive(true), gson.fromJson(""true"", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,476,"assertEquals(new JsonPrimitive(""foo""), gson.fromJson(""\""foo\"""", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,477,"assertEquals(new JsonPrimitive('a'), gson.fromJson(""\""a\"""", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,480,public void testJsonNullSerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,481,"assertEquals(""null"", gson.toJson(JsonNull.INSTANCE, JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,484,public void testNullJsonElementSerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,485,"assertEquals(""null"", gson.toJson(null, JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,488,public void testJsonArraySerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,489,JsonArray array = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,490,array.add(new JsonPrimitive(1));
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,491,array.add(new JsonPrimitive(2));
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,492,array.add(new JsonPrimitive(3));
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,493,"assertEquals(""[1,2,3]"", gson.toJson(array, JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,496,public void testJsonArrayDeerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,497,JsonArray array = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,498,array.add(new JsonPrimitive(1));
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,499,array.add(new JsonPrimitive(2));
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,500,array.add(new JsonPrimitive(3));
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,501,"assertEquals(array, gson.fromJson(""[1,2,3]"", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,504,public void testJsonObjectSerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,505,JsonObject object = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,506,"object.add(""foo"", new JsonPrimitive(1));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,507,"object.add(""bar"", new JsonPrimitive(2));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,508,"assertEquals(""{\""foo\"":1,\""bar\"":2}"", gson.toJson(object, JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,511,public void testJsonObjectDeerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,512,JsonObject object = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,513,"object.add(""foo"", new JsonPrimitive(1));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,514,"object.add(""bar"", new JsonPrimitive(2));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,515,"assertEquals(object, gson.fromJson(""{\""foo\"":1,\""bar\"":2}"", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,518,public void testJsonNullDeerialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,519,"assertEquals(JsonNull.INSTANCE, gson.fromJson(""null"", JsonElement.class));"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,522,public void testNullJsonElementDeserialization() {
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,523,"assertEquals(JsonNull.INSTANCE, gson.fromJson(""null"", JsonElement.class));"
