is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,mport com.google.gson.internal.Pair;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,import com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,25,mport java.util.Collections;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,38,rivate static final String MAX_CACHE_PROPERTY_NAME =
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,39,"com.google.gson.annotation_cache_size_hint"";"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,41,"rivate static final LruCache<Pair<Class<?>, String>, Collection<Annotation>> ANNOTATION_CACHE"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,42," new LruCache<Pair<Class<?>,String>, Collection<Annotation>>(getMaxCacheSize());"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,44,rivate final Class<?> declaringClazz;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,46,rivate final Class<?> declaredType;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,47,rivate final boolean isSynthetic;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,48,rivate final int modifiers;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,49,rivate final String name;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,51,/ Fields used for lazy initialization
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,52,rivate Type genericType;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,53,rivate Collection<Annotation> annotations;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,61,his.declaringClazz = f.getDeclaringClass();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,62,his.name = f.getName();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,63,his.declaredType = f.getType();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,64,his.isSynthetic = f.isSynthetic();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,65,his.modifiers = f.getModifiers();
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,45,$Gson$Preconditions.checkNotNull(f);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,69,rivate static int getMaxCacheSize() {
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,70,inal int defaultMaxCacheSize = 2000;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,71,ry {
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,72,tring propertyValue = System.getProperty(
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,73,"AX_CACHE_PROPERTY_NAME, String.valueOf(defaultMaxCacheSize));"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,74,eturn Integer.parseInt(propertyValue);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,75, catch (NumberFormatException e) {
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,76,eturn defaultMaxCacheSize;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,84,eturn declaringClazz;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,53,return field.getDeclaringClass();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,91,eturn name;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,60,return field.getName();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,111,f (genericType == null) {
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,112,enericType = field.getGenericType();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,114,eturn genericType;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,80,return field.getGenericType();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,134,eturn declaredType;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,100,return field.getType();
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,145,"eturn getAnnotationFromArray(getAnnotations(), annotation);"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,111,return field.getAnnotation(annotation);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,155,f (annotations == null) {
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,156,"air<Class<?>, String> key = new Pair<Class<?>, String>(declaringClazz, name);"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,157,ollection<Annotation> cachedValue = ANNOTATION_CACHE.get(key);
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,158,f (cachedValue == null) {
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,159,achedValue = Collections.unmodifiableCollection(
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,160,rrays.asList(field.getAnnotations()));
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,161,"NNOTATION_CACHE.put(key, cachedValue);"
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,163,nnotations = cachedValue;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,165,eturn annotations;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,121,return Arrays.asList(field.getAnnotations());
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,179,eturn (modifiers & modifier) != 0;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,135,return (field.getModifiers() & modifier) != 0;
False,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,199,eturn isSynthetic;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,155,return field.isSynthetic();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,20,import com.google.gson.internal.Excluder;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,28,mport com.google.gson.internal.bind.ExcludedTypeAdapterFactory;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,48,mport java.lang.reflect.Modifier;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,106,rivate static final ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY = new GsonExclusionStrategy(
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,107,"sonExclusionStrategy.IGNORE_VERSIONS, Modifier.TRANSIENT | Modifier.STATIC,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,108,"rue, true, true, false, false);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,191,"his(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_EXCLUSION_STRATEGY, FieldNamingPolicy.IDENTITY,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,186,"this(Excluder.DEFAULT, FieldNamingPolicy.IDENTITY,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,197,"son(final ExclusionStrategy deserializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,198,"inal ExclusionStrategy serializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,199,"inal FieldNamingStrategy fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,192,"Gson(final Excluder excluder, final FieldNamingStrategy fieldNamingPolicy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,216,"onstructorConstructor, fieldNamingPolicy, serializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,217,eserializationExclusionStrategy);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,209,"constructorConstructor, fieldNamingPolicy, excluder);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,232,actories.add(new ExcludedTypeAdapterFactory(
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,233,"erializationExclusionStrategy, deserializationExclusionStrategy));"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,224,factories.add(excluder);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,20,import com.google.gson.internal.Excluder;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,24,mport java.lang.reflect.Modifier;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,66,rivate ExclusionStrategy serializeExclusionStrategy;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,67,rivate ExclusionStrategy deserializeExclusionStrategy;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,68,rivate int modifiers = Modifier.TRANSIENT | Modifier.STATIC;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,69,rivate double ignoreVersionsAfter = GsonExclusionStrategy.IGNORE_VERSIONS;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,70,rivate boolean serializeInnerClasses = true;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,71,rivate boolean excludeFieldsWithoutExposeAnnotation = false;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,66,private Excluder excluder = Excluder.DEFAULT;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,145,his.ignoreVersionsAfter = ignoreVersionsAfter;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,140,excluder = excluder.withVersion(ignoreVersionsAfter);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,161,his.modifiers = 0;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,162,or (int modifier : modifiers) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,163,his.modifiers |= modifier;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,156,excluder = excluder.withModifiers(modifiers);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,189,xcludeFieldsWithoutExposeAnnotation = true;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,181,excluder = excluder.excludeFieldsWithoutExposeAnnotation();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,293,erializeInnerClasses = false;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,285,excluder = excluder.disableInnerClassSerialization();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,348,ddSerializationExclusionStrategy(strategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,349,ddDeserializationExclusionStrategy(strategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,340,"excluder = excluder.withExclusionStrategy(strategy, true, true);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,367,"erializeExclusionStrategy = combine(serializeExclusionStrategy, strategy);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,358,"excluder = excluder.withExclusionStrategy(strategy, true, false);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,384,"eserializeExclusionStrategy = combine(deserializeExclusionStrategy, strategy);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,375,"excluder = excluder.withExclusionStrategy(strategy, false, true);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,604," Unions two exclusion strategies. If the first is null, this returns the"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,605, second.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,607,"rivate static ExclusionStrategy combine(final ExclusionStrategy a, final ExclusionStrategy b) {"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,608,f (b == null) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,609,hrow new IllegalArgumentException();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,611,f (a == null) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,612,eturn b;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,614,eturn new ExclusionStrategy() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,615,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,616,eturn a.shouldSkipField(f) || b.shouldSkipField(f);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,618,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,619,eturn a.shouldSkipClass(clazz) || b.shouldSkipClass(clazz);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,633,"xclusionStrategy deserializeExclusionStrategy = combine(this.deserializeExclusionStrategy,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,634,"ew GsonExclusionStrategy(ignoreVersionsAfter, modifiers, true,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,635,"rue, serializeInnerClasses, false, excludeFieldsWithoutExposeAnnotation));"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,636,"xclusionStrategy serializeExclusionStrategy = combine(this.serializeExclusionStrategy,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,637,"ew GsonExclusionStrategy(ignoreVersionsAfter, modifiers, true, true,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,638,"erializeInnerClasses, excludeFieldsWithoutExposeAnnotation, false));"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,640,"eturn new Gson(deserializeExclusionStrategy, serializeExclusionStrategy, fieldNamingPolicy,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,641,"nstanceCreators.copyOf().makeUnmodifiable(), serializeNulls,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,642,"erializers.copyOf().makeUnmodifiable(), deserializers.copyOf().makeUnmodifiable(),"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,643,"omplexMapKeySerialization, generateNonExecutableJson, escapeHtmlChars, prettyPrinting,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,603,"return new Gson(excluder, fieldNamingPolicy, instanceCreators.copyOf().makeUnmodifiable(),"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,604,"serializeNulls, serializers.copyOf().makeUnmodifiable(),"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,605,"deserializers.copyOf().makeUnmodifiable(), complexMapKeySerialization,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,606,"generateNonExecutableJson, escapeHtmlChars, prettyPrinting,"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,19,mport com.google.gson.annotations.Expose;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,20,mport com.google.gson.annotations.Since;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,21,mport com.google.gson.annotations.Until;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,22,mport java.lang.reflect.Modifier;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,25, A configurable exclusion strategy. This strategy supports version attributes
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,26," {@link Since} and {@link Until}, modifiers, synthetic fields, anonymous and"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,27," local classes, inner classes, and fields with the {@link Expose} annotation."
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,29, @author Joel Leitch
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,30, @author Jesse Wilson
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,32,inal class GsonExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,33,tatic final double IGNORE_VERSIONS = -1D;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,34,rivate final double version;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,35,rivate final int modifiers;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,36,rivate final boolean excludeSyntheticFields;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,37,rivate final boolean excludeAnonymousAndLocal;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,38,rivate final boolean serializeInnerClasses;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,39,rivate final boolean requireExposeOnSerialize;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,40,rivate final boolean requireExposeOnDeserialize;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,42,"sonExclusionStrategy(double version, int modifiers, boolean excludeSyntheticFields,"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,43,"oolean excludeAnonymousAndLocal, boolean serializeInnerClasses,"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,44,"oolean requireExposeOnSerialize, boolean requireExposeOnDeserialize) {"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,45,his.version = version;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,46,his.modifiers = modifiers;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,47,his.excludeSyntheticFields = excludeSyntheticFields;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,48,his.excludeAnonymousAndLocal = excludeAnonymousAndLocal;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,49,his.serializeInnerClasses = serializeInnerClasses;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,50,his.requireExposeOnSerialize = requireExposeOnSerialize;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,51,his.requireExposeOnDeserialize = requireExposeOnDeserialize;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,54,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,55,f (f.hasModifier(modifiers)) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,56,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,58,f (version != GsonExclusionStrategy.IGNORE_VERSIONS
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,59,"& !isValidVersion(f.getAnnotation(Since.class), f.getAnnotation(Until.class))) {"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,60,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,62,f (excludeSyntheticFields && f.isSynthetic()) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,63,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,65,f (requireExposeOnSerialize || requireExposeOnDeserialize) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,66,xpose annotation = f.getAnnotation(Expose.class);
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,67,f (annotation == null
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,68,| requireExposeOnSerialize && !annotation.serialize()
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,69,| requireExposeOnDeserialize && !annotation.deserialize()) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,70,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,73,f (!serializeInnerClasses && isInnerClass(f.getDeclaredClass())) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,74,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,76,f (excludeAnonymousAndLocal && isAnonymousOrLocal(f.getDeclaredClass())) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,77,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,79,eturn false;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,82,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,83,f (version != GsonExclusionStrategy.IGNORE_VERSIONS
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,84,"& !isValidVersion(clazz.getAnnotation(Since.class), clazz.getAnnotation(Until.class))) {"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,85,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,87,f (!serializeInnerClasses && isInnerClass(clazz)) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,88,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,90,f (excludeAnonymousAndLocal && isAnonymousOrLocal(clazz)) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,91,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,93,eturn false;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,96,rivate boolean isAnonymousOrLocal(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,97,eturn !Enum.class.isAssignableFrom(clazz)
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,98,& (clazz.isAnonymousClass() || clazz.isLocalClass());
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,101,rivate boolean isInnerClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,102,eturn clazz.isMemberClass() && !isStatic(clazz);
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,105,rivate boolean isStatic(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,106,eturn (clazz.getModifiers() & Modifier.STATIC) != 0;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,109,"rivate boolean isValidVersion(Since since, Until until) {"
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,110,eturn isValidSince(since) && isValidUntil(until);
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,113,rivate boolean isValidSince(Since annotation) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,114,f (annotation != null) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,115,ouble annotationVersion = annotation.value();
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,116,f (annotationVersion > version) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,117,eturn false;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,120,eturn true;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,123,rivate boolean isValidUntil(Until annotation) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,124,f (annotation != null) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,125,ouble annotationVersion = annotation.value();
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,126,f (annotationVersion <= version) {
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,127,eturn false;
False,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,130,eturn true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,17,package com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,19,import com.google.gson.ExclusionStrategy;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,20,import com.google.gson.FieldAttributes;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,21,import com.google.gson.Gson;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,22,import com.google.gson.TypeAdapter;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,23,import com.google.gson.annotations.Expose;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,24,import com.google.gson.annotations.Since;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,25,import com.google.gson.annotations.Until;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,26,import com.google.gson.reflect.TypeToken;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,27,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,28,import com.google.gson.stream.JsonWriter;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,29,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,30,import java.lang.reflect.Field;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,31,import java.lang.reflect.Modifier;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,32,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,33,import java.util.Collections;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,34,import java.util.List;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,37,"* This class selects which fields and types to omit. It is configurable,"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,38,"* supporting version attributes {@link Since} and {@link Until}, modifiers,"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,39,"* synthetic fields, anonymous and local classes, inner classes, and fields with"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,40,* the {@link Expose} annotation.
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,42,* <p>This class is a type adapter factory; types that are excluded will be
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,43,* adapted to null. It may delegate to another type adapter if only one
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,44,* direction is excluded.
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,46,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,47,* @author Jesse Wilson
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,49,"public final class Excluder implements TypeAdapter.Factory, Cloneable {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,50,private static final double IGNORE_VERSIONS = -1.0d;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,51,public static final Excluder DEFAULT = new Excluder();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,53,private double version = IGNORE_VERSIONS;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,54,private int modifiers = Modifier.TRANSIENT | Modifier.STATIC;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,55,private boolean serializeInnerClasses = true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,56,private boolean requireExpose;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,57,private List<ExclusionStrategy> serializationStrategies = Collections.emptyList();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,58,private List<ExclusionStrategy> deserializationStrategies = Collections.emptyList();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,60,@Override protected Excluder clone() {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,61,try {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,62,return (Excluder) super.clone();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,63,} catch (CloneNotSupportedException e) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,64,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,68,public Excluder withVersion(double ignoreVersionsAfter) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,69,Excluder result = clone();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,70,result.version = ignoreVersionsAfter;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,71,return result;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,74,public Excluder withModifiers(int... modifiers) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,75,Excluder result = clone();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,76,result.modifiers = 0;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,77,for (int modifier : modifiers) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,78,result.modifiers |= modifier;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,80,return result;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,83,public Excluder disableInnerClassSerialization() {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,84,Excluder result = clone();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,85,result.serializeInnerClasses = false;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,86,return result;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,89,public Excluder excludeFieldsWithoutExposeAnnotation() {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,90,Excluder result = clone();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,91,result.requireExpose = true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,92,return result;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,95,"public Excluder withExclusionStrategy(ExclusionStrategy exclusionStrategy,"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,96,"boolean serialization, boolean deserialization) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,97,Excluder result = clone();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,98,if (serialization) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,99,result.serializationStrategies = new ArrayList<ExclusionStrategy>(serializationStrategies);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,100,result.serializationStrategies.add(exclusionStrategy);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,102,if (deserialization) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,103,result.deserializationStrategies
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,104,= new ArrayList<ExclusionStrategy>(deserializationStrategies);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,105,result.deserializationStrategies.add(exclusionStrategy);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,107,return result;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,110,"public <T> TypeAdapter<T> create(final Gson context, final TypeToken<T> type) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,111,Class<?> rawType = type.getRawType();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,112,"final boolean skipSerialize = excludeClass(rawType, true);"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,113,"final boolean skipDeserialize = excludeClass(rawType, false);"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,115,if (!skipSerialize && !skipDeserialize) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,116,return null;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,119,return new TypeAdapter<T>() {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,120,"/** The delegate is lazily created because it may not be needed, and creating it may fail. */"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,121,private TypeAdapter<T> delegate;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,123,@Override public T read(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,124,if (skipDeserialize) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,125,reader.skipValue();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,126,return null;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,128,return delegate().read(reader);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,131,"@Override public void write(JsonWriter writer, T value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,132,if (skipSerialize) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,133,writer.nullValue();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,134,return;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,136,"delegate().write(writer, value);"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,139,private TypeAdapter<T> delegate() {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,140,TypeAdapter<T> d = delegate;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,141,return d != null
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,142,? d
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,143,": (delegate = context.getNextAdapter(Excluder.this, type));"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,148,"public boolean excludeField(Field field, boolean serialize) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,149,if ((modifiers & field.getModifiers()) != 0) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,150,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,153,if (version != Excluder.IGNORE_VERSIONS
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,154,"&& !isValidVersion(field.getAnnotation(Since.class), field.getAnnotation(Until.class))) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,155,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,158,if (field.isSynthetic()) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,159,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,162,if (requireExpose) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,163,Expose annotation = field.getAnnotation(Expose.class);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,164,if (annotation == null || (serialize ? !annotation.serialize() : !annotation.deserialize())) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,165,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,169,if (!serializeInnerClasses && isInnerClass(field.getType())) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,170,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,173,if (isAnonymousOrLocal(field.getType())) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,174,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,177,List<ExclusionStrategy> list = serialize ? serializationStrategies : deserializationStrategies;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,178,if (!list.isEmpty()) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,179,FieldAttributes fieldAttributes = new FieldAttributes(field);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,180,for (ExclusionStrategy exclusionStrategy : list) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,181,if (exclusionStrategy.shouldSkipField(fieldAttributes)) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,182,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,187,return false;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,190,"public boolean excludeClass(Class<?> clazz, boolean serialize) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,191,if (version != Excluder.IGNORE_VERSIONS
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,192,"&& !isValidVersion(clazz.getAnnotation(Since.class), clazz.getAnnotation(Until.class))) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,193,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,196,if (!serializeInnerClasses && isInnerClass(clazz)) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,197,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,200,if (isAnonymousOrLocal(clazz)) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,201,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,204,List<ExclusionStrategy> list = serialize ? serializationStrategies : deserializationStrategies;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,205,for (ExclusionStrategy exclusionStrategy : list) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,206,if (exclusionStrategy.shouldSkipClass(clazz)) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,207,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,211,return false;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,214,private boolean isAnonymousOrLocal(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,215,return !Enum.class.isAssignableFrom(clazz)
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,216,&& (clazz.isAnonymousClass() || clazz.isLocalClass());
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,219,private boolean isInnerClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,220,return clazz.isMemberClass() && !isStatic(clazz);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,223,private boolean isStatic(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,224,return (clazz.getModifiers() & Modifier.STATIC) != 0;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,227,"private boolean isValidVersion(Since since, Until until) {"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,228,return isValidSince(since) && isValidUntil(until);
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,231,private boolean isValidSince(Since annotation) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,232,if (annotation != null) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,233,double annotationVersion = annotation.value();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,234,if (annotationVersion > version) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,235,return false;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,238,return true;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,241,private boolean isValidUntil(Until annotation) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,242,if (annotation != null) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,243,double annotationVersion = annotation.value();
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,244,if (annotationVersion <= version) {
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,245,return false;
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,248,return true;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,17,ackage com.google.gson.internal.bind;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,19,mport com.google.gson.ExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,20,mport com.google.gson.Gson;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,21,mport com.google.gson.TypeAdapter;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,22,mport com.google.gson.reflect.TypeToken;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,23,mport com.google.gson.stream.JsonReader;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,24,mport com.google.gson.stream.JsonWriter;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,25,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,28, This type adapter skips values using an exclusion strategy. It may delegate
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,29, to another type adapter if only one direction is excluded.
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,31,ublic final class ExcludedTypeAdapterFactory implements TypeAdapter.Factory {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,32,rivate final ExclusionStrategy serializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,33,rivate final ExclusionStrategy deserializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,35,"ublic ExcludedTypeAdapterFactory(ExclusionStrategy serializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,36,xclusionStrategy deserializationExclusionStrategy) {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,37,his.serializationExclusionStrategy = serializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,38,his.deserializationExclusionStrategy = deserializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,41,"ublic <T> TypeAdapter<T> create(final Gson context, final TypeToken<T> type) {"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,42,lass<?> rawType = type.getRawType();
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,43,inal boolean skipSerialize = serializationExclusionStrategy.shouldSkipClass(rawType);
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,44,inal boolean skipDeserialize = deserializationExclusionStrategy.shouldSkipClass(rawType);
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,46,f (!skipSerialize && !skipDeserialize) {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,47,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,50,eturn new TypeAdapter<T>() {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,51,"** The delegate is lazily created because it may not be needed, and creating it may fail. */"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,52,rivate TypeAdapter<T> delegate;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,54,Override public T read(JsonReader reader) throws IOException {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,55,f (skipDeserialize) {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,56,eader.skipValue();
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,57,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,59,eturn delegate().read(reader);
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,62,"Override public void write(JsonWriter writer, T value) throws IOException {"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,63,f (skipSerialize) {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,64,riter.nullValue();
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,65,eturn;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,67,"elegate().write(writer, value);"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,70,rivate TypeAdapter<T> delegate() {
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,71,ypeAdapter<T> d = delegate;
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,72,eturn d != null
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,73, d
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,74," (delegate = context.getNextAdapter(ExcludedTypeAdapterFactory.this, type));"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,19,mport com.google.gson.ExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,20,mport com.google.gson.FieldAttributes;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,26,import com.google.gson.internal.Excluder;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,47,rivate final ExclusionStrategy serializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,48,rivate final ExclusionStrategy deserializationExclusionStrategy;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,46,private final Excluder excluder;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,51,"ieldNamingStrategy fieldNamingPolicy, ExclusionStrategy serializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,52,xclusionStrategy deserializationExclusionStrategy) {
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,49,"FieldNamingStrategy fieldNamingPolicy, Excluder excluder) {"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,55,his.serializationExclusionStrategy = serializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,56,his.deserializationExclusionStrategy = deserializationExclusionStrategy;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,52,this.excluder = excluder;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,59,ublic boolean serializeField(Field f) {
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,60,eturn !serializationExclusionStrategy.shouldSkipClass(f.getType())
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,61,& !serializationExclusionStrategy.shouldSkipField(new FieldAttributes(f));
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,64,rivate boolean deserializeField(Field f) {
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,65,eturn !deserializationExclusionStrategy.shouldSkipClass(f.getType())
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,66,& !deserializationExclusionStrategy.shouldSkipField(new FieldAttributes(f));
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,55,"public boolean excludeField(Field f, boolean serialize) {"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,56,"return !excluder.excludeClass(f.getType(), serialize) && !excluder.excludeField(f, serialize);"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,122,oolean serialize = serializeField(field);
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,123,oolean deserialize = deserializeField(field);
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,112,"boolean serialize = excludeField(field, true);"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,113,"boolean deserialize = excludeField(field, false);"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,21,import com.google.gson.internal.Excluder;
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,31,rivate ExclusionStrategy serializationStrategy = new GsonExclusionStrategy(
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,32,"sonExclusionStrategy.IGNORE_VERSIONS, 0, true, true, true, true, false);"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,33,rivate ExclusionStrategy deserializationStrategy = new GsonExclusionStrategy(
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,34,"sonExclusionStrategy.IGNORE_VERSIONS, 0, true, true, true, false, true);"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,32,private Excluder excluder = Excluder.DEFAULT.excludeFieldsWithoutExposeAnnotation();
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,37,ssertFalse(deserializationStrategy.shouldSkipClass(MockObject.class));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,38,ssertFalse(serializationStrategy.shouldSkipClass(MockObject.class));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,35,"assertFalse(excluder.excludeClass(MockObject.class, true));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,36,"assertFalse(excluder.excludeClass(MockObject.class, false));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,42,"ieldAttributes f = createFieldAttributes(""hiddenField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,43,ssertTrue(deserializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,44,ssertTrue(serializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,40,"Field f = createFieldAttributes(""hiddenField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,41,"assertTrue(excluder.excludeField(f, true));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,42,"assertTrue(excluder.excludeField(f, false));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,48,"ieldAttributes f = createFieldAttributes(""explicitlyHiddenField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,49,ssertTrue(deserializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,50,ssertTrue(serializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,46,"Field f = createFieldAttributes(""explicitlyHiddenField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,47,"assertTrue(excluder.excludeField(f, true));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,48,"assertTrue(excluder.excludeField(f, false));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,54,"ieldAttributes f = createFieldAttributes(""exposedField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,55,ssertFalse(deserializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,56,ssertFalse(serializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,52,"Field f = createFieldAttributes(""exposedField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,53,"assertFalse(excluder.excludeField(f, true));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,54,"assertFalse(excluder.excludeField(f, false));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,60,"ieldAttributes f = createFieldAttributes(""explicitlyExposedField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,61,ssertFalse(deserializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,62,ssertFalse(serializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,58,"Field f = createFieldAttributes(""explicitlyExposedField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,59,"assertFalse(excluder.excludeField(f, true));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,60,"assertFalse(excluder.excludeField(f, false));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,66,"ieldAttributes f = createFieldAttributes(""explicitlyDifferentModeField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,67,ssertTrue(deserializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,68,ssertFalse(serializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,64,"Field f = createFieldAttributes(""explicitlyDifferentModeField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,65,"assertFalse(excluder.excludeField(f, true));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,66,"assertTrue(excluder.excludeField(f, false));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,71,rivate static FieldAttributes createFieldAttributes(String fieldName) throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,72,ield f = MockObject.class.getField(fieldName);
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,73,eturn new FieldAttributes(f);
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,69,private static Field createFieldAttributes(String fieldName) throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,70,return MockObject.class.getField(fieldName);
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,19,mport com.google.gson.common.TestTypes.ClassWithNoFields;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,20,mport java.lang.reflect.Modifier;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,21,mport java.util.Collections;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,22,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,25, Functional tests for Gson that depend on some internal package-protected elements of
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,26, com.google.gson package and hence must be placed in the same package. We should make every
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,27, attempt to migrate tests out of this class.
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,29, @author Inderjeet Singh
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,30, @author Joel Leitch
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,32,ublic class FunctionWithInternalDependenciesTest extends TestCase {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,34,"SuppressWarnings(""unchecked"")"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,35,ublic void testAnonymousLocalClassesSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,36,xclusionStrategy exclusionStrategy = new GsonExclusionStrategy(
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,37,"sonExclusionStrategy.IGNORE_VERSIONS, Modifier.TRANSIENT | Modifier.STATIC,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,"rue, false, true, false, false);"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,39,"son gson = new Gson(exclusionStrategy, exclusionStrategy, FieldNamingPolicy.IDENTITY,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,40,"son.EMPTY_MAP, false, Gson.EMPTY_MAP, Gson.EMPTY_MAP, false,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,41,"son.DEFAULT_JSON_NON_EXECUTABLE,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,42,"rue, false, false, LongSerializationPolicy.DEFAULT,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,43,ollections.<TypeAdapter.Factory>emptyList());
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,44,"ssertEquals(""{}"", gson.toJson(new ClassWithNoFields() {"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,45,/ empty anonymous class
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,19,import com.google.gson.internal.Excluder;
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,30,rivate ExclusionStrategy strategy = new GsonExclusionStrategy(
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,31,"sonExclusionStrategy.IGNORE_VERSIONS, 0, true, false, false, false, false);"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,31,private Excluder excluder = Excluder.DEFAULT.disableInnerClassSerialization();
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,35,ssertTrue(strategy.shouldSkipClass(clazz));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,35,"assertTrue(excluder.excludeClass(clazz, true));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,40,ssertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,40,"assertTrue(excluder.excludeField(f, true));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,45,ssertFalse(strategy.shouldSkipClass(clazz));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,45,"assertFalse(excluder.excludeClass(clazz, true));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,50,ssertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,50,"assertFalse(excluder.excludeField(f, true));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,20,mport java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,20,import com.google.gson.internal.Excluder;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,24, Unit tests for the {@link GsonExclusionStrategy} class.
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,24,* Unit tests for the {@link Excluder} class.
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,32,lass<MockObject> clazz = MockObject.class;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,33,"ield f = clazz.getField(""someField"");"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,34,"sonExclusionStrategy strategy = new GsonExclusionStrategy(VERSION, 0,"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,35,"rue, true, true, false, false);"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,36,ssertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,38,ieldAttributes fieldAttributes = new FieldAttributes(f);
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,39,ssertFalse(strategy.shouldSkipField(fieldAttributes));
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,32,Excluder excluder = Excluder.DEFAULT.withVersion(VERSION);
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,33,"assertFalse(excluder.excludeClass(MockObject.class, true));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,34,"assertFalse(excluder.excludeField(MockObject.class.getField(""someField""), true));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,43,lass<MockObject> clazz = MockObject.class;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,44,"ield f = clazz.getField(""someField"");"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,45,"sonExclusionStrategy strategy = new GsonExclusionStrategy(VERSION + 1, 0,"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,"rue, true, true, false, false);"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,47,ssertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,49,ieldAttributes fieldAttributes = new FieldAttributes(f);
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,50,ssertFalse(strategy.shouldSkipField(fieldAttributes));
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,38,Excluder excluder = Excluder.DEFAULT.withVersion(VERSION + 1);
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,39,"assertFalse(excluder.excludeClass(MockObject.class, true));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,40,"assertFalse(excluder.excludeField(MockObject.class.getField(""someField""), true));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,54,lass<MockObject> clazz = MockObject.class;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,55,"ield f = clazz.getField(""someField"");"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,56,"sonExclusionStrategy strategy = new GsonExclusionStrategy(VERSION - 1, 0,"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,57,"rue, true, true, false, false);"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,58,ssertTrue(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,60,ieldAttributes fieldAttributes = new FieldAttributes(f);
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,61,ssertTrue(strategy.shouldSkipField(fieldAttributes));
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,44,Excluder excluder = Excluder.DEFAULT.withVersion(VERSION - 1);
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,45,"assertTrue(excluder.excludeClass(MockObject.class, true));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,"assertTrue(excluder.excludeField(MockObject.class.getField(""someField""), true));"
