is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,19,mport java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,19,import java.io.IOException;
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,29,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,30,import com.google.gson.stream.JsonToken;
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,31,import com.google.gson.stream.JsonWriter;
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,37,"inal class DefaultDateTypeAdapter implements JsonSerializer<Date>, JsonDeserializer<Date> {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,40,final class DefaultDateTypeAdapter extends TypeAdapter<Date> {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,39,/ TODO: migrate to streaming adapter
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,44,private final Class<? extends Date> dateType;
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,46,efaultDateTypeAdapter() {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,47,"his(DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.US),"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,48,DefaultDateTypeAdapter(Class<? extends Date> dateType) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,49,"this(dateType,"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,50,"DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.US),"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,51,efaultDateTypeAdapter(String datePattern) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,52,"his(new SimpleDateFormat(datePattern, Locale.US), new SimpleDateFormat(datePattern));"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,54,"DefaultDateTypeAdapter(Class<? extends Date> dateType, String datePattern) {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,55,"this(dateType, new SimpleDateFormat(datePattern, Locale.US), new SimpleDateFormat(datePattern));"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,55,efaultDateTypeAdapter(int style) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,56,"his(DateFormat.getDateInstance(style, Locale.US), DateFormat.getDateInstance(style));"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,58,"DefaultDateTypeAdapter(Class<? extends Date> dateType, int style) {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,59,"this(dateType, DateFormat.getDateInstance(style, Locale.US), DateFormat.getDateInstance(style));"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,60,"his(DateFormat.getDateTimeInstance(dateStyle, timeStyle, Locale.US),"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,63,"this(Date.class,"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,64,"DateFormat.getDateTimeInstance(dateStyle, timeStyle, Locale.US),"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,64,"efaultDateTypeAdapter(DateFormat enUsFormat, DateFormat localFormat) {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,68,"public DefaultDateTypeAdapter(Class<? extends Date> dateType, int dateStyle, int timeStyle) {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,69,"this(dateType,"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,70,"DateFormat.getDateTimeInstance(dateStyle, timeStyle, Locale.US),"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,71,"DateFormat.getDateTimeInstance(dateStyle, timeStyle));"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,74,"DefaultDateTypeAdapter(final Class<? extends Date> dateType, DateFormat enUsFormat, DateFormat localFormat) {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,75,if ( dateType != Date.class && dateType != java.sql.Date.class && dateType != Timestamp.class ) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,76,"throw new IllegalArgumentException(""Date type must be one of "" + Date.class + "", "" + Timestamp.class + "", or "" + java.sql.Date.class + "" but was "" + dateType);"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,78,this.dateType = dateType;
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,72,"ublic JsonElement serialize(Date src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,86,"public void write(JsonWriter out, Date value) throws IOException {"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,74,tring dateFormatAsString = enUsFormat.format(src);
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,75,eturn new JsonPrimitive(dateFormatAsString);
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,88,String dateFormatAsString = enUsFormat.format(value);
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,89,out.value(dateFormatAsString);
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,80,"ublic Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,81,hrows JsonParseException {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,82,f (!(json instanceof JsonPrimitive)) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,94,public Date read(JsonReader in) throws IOException {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,95,if (in.peek() != JsonToken.STRING) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,85,ate date = deserializeToDate(json);
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,86,f (typeOfT == Date.class) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,98,Date date = deserializeToDate(in.nextString());
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,99,if (dateType == Date.class) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,88, else if (typeOfT == Timestamp.class) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,101,} else if (dateType == Timestamp.class) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,90, else if (typeOfT == java.sql.Date.class) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,103,} else if (dateType == java.sql.Date.class) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,93,"hrow new IllegalArgumentException(getClass() + "" cannot deserialize to "" + typeOfT);"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,106,// This must never happen: dateType is guarded in the primary constructor
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,107,throw new AssertionError();
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,97,rivate Date deserializeToDate(JsonElement json) {
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,111,private Date deserializeToDate(String s) {
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,100,eturn localFormat.parse(json.getAsString());
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,114,return localFormat.parse(s);
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,103,eturn enUsFormat.parse(json.getAsString());
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,117,return enUsFormat.parse(s);
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,106,"eturn ISO8601Utils.parse(json.getAsString(), new ParsePosition(0));"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,120,"return ISO8601Utils.parse(s, new ParsePosition(0));"
False,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,108,"hrow new JsonSyntaxException(json.getAsString(), e);"
True,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java,122,"throw new JsonSyntaxException(s, e);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,575,"@SuppressWarnings(""unchecked"")"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,579,TypeAdapter<Timestamp> timestampTypeAdapter;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,580,TypeAdapter<java.sql.Date> javaSqlDateTypeAdapter;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,579,ateTypeAdapter = new DefaultDateTypeAdapter(datePattern);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,582,"dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, datePattern);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,583,"timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, datePattern);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,584,"javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, datePattern);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,581,"ateTypeAdapter = new DefaultDateTypeAdapter(dateStyle, timeStyle);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,586,"dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle, timeStyle);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,587,"timestampTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(Timestamp.class, dateStyle, timeStyle);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,588,"javaSqlDateTypeAdapter = (TypeAdapter) new DefaultDateTypeAdapter(java.sql.Date.class, dateStyle, timeStyle);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,586,"actories.add(TreeTypeAdapter.newFactory(TypeToken.get(Date.class), dateTypeAdapter));"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,587,"actories.add(TreeTypeAdapter.newFactory(TypeToken.get(Timestamp.class), dateTypeAdapter));"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,588,"actories.add(TreeTypeAdapter.newFactory(TypeToken.get(java.sql.Date.class), dateTypeAdapter));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,593,"factories.add(TypeAdapters.newFactory(Date.class, dateTypeAdapter));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,594,"factories.add(TypeAdapters.newFactory(Timestamp.class, timestampTypeAdapter));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,595,"factories.add(TypeAdapters.newFactory(java.sql.Date.class, javaSqlDateTypeAdapter));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,19,import java.io.IOException;
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,47,"ssertFormatted(""Jan 1, 1970 12:00:00 AM"", new DefaultDateTypeAdapter());"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,48,"ssertFormatted(""1/1/70"", new DefaultDateTypeAdapter(DateFormat.SHORT));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,49,"ssertFormatted(""Jan 1, 1970"", new DefaultDateTypeAdapter(DateFormat.MEDIUM));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,50,"ssertFormatted(""January 1, 1970"", new DefaultDateTypeAdapter(DateFormat.LONG));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,48,"assertFormatted(""Jan 1, 1970 12:00:00 AM"", new DefaultDateTypeAdapter(Date.class));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,49,"assertFormatted(""1/1/70"", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,50,"assertFormatted(""Jan 1, 1970"", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,51,"assertFormatted(""January 1, 1970"", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,65,ublic void testParsingDatesFormattedWithSystemLocale() {
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,66,public void testParsingDatesFormattedWithSystemLocale() throws Exception {
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,71,"ssertParsed(""1 janv. 1970 00:00:00"", new DefaultDateTypeAdapter());"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,72,"ssertParsed(""01/01/70"", new DefaultDateTypeAdapter(DateFormat.SHORT));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,73,"ssertParsed(""1 janv. 1970"", new DefaultDateTypeAdapter(DateFormat.MEDIUM));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,74,"ssertParsed(""1 janvier 1970"", new DefaultDateTypeAdapter(DateFormat.LONG));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,72,"assertParsed(""1 janv. 1970 00:00:00"", new DefaultDateTypeAdapter(Date.class));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,73,"assertParsed(""01/01/70"", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,74,"assertParsed(""1 janv. 1970"", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,75,"assertParsed(""1 janvier 1970"", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,89,ublic void testParsingDatesFormattedWithUsLocale() {
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,90,public void testParsingDatesFormattedWithUsLocale() throws Exception {
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,95,"ssertParsed(""Jan 1, 1970 0:00:00 AM"", new DefaultDateTypeAdapter());"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,96,"ssertParsed(""1/1/70"", new DefaultDateTypeAdapter(DateFormat.SHORT));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,97,"ssertParsed(""Jan 1, 1970"", new DefaultDateTypeAdapter(DateFormat.MEDIUM));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,98,"ssertParsed(""January 1, 1970"", new DefaultDateTypeAdapter(DateFormat.LONG));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,96,"assertParsed(""Jan 1, 1970 0:00:00 AM"", new DefaultDateTypeAdapter(Date.class));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,97,"assertParsed(""1/1/70"", new DefaultDateTypeAdapter(Date.class, DateFormat.SHORT));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,98,"assertParsed(""Jan 1, 1970"", new DefaultDateTypeAdapter(Date.class, DateFormat.MEDIUM));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,99,"assertParsed(""January 1, 1970"", new DefaultDateTypeAdapter(Date.class, DateFormat.LONG));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,113,ublic void testFormatUsesDefaultTimezone() {
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,114,public void testFormatUsesDefaultTimezone() throws Exception {
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,119,"ssertFormatted(""Dec 31, 1969 4:00:00 PM"", new DefaultDateTypeAdapter());"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,120,"ssertParsed(""Dec 31, 1969 4:00:00 PM"", new DefaultDateTypeAdapter());"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,120,"assertFormatted(""Dec 31, 1969 4:00:00 PM"", new DefaultDateTypeAdapter(Date.class));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,121,"assertParsed(""Dec 31, 1969 4:00:00 PM"", new DefaultDateTypeAdapter(Date.class));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,128,efaultDateTypeAdapter adapter = new DefaultDateTypeAdapter();
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,129,DefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter(Date.class);
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,138,efaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(dateStyle);
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,139,"DefaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, dateStyle);"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,142,"tring dateString = dateTypeAdapter.serialize(currentDate, Date.class, null).getAsString();"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,143,"ssertEquals(formatter.format(currentDate), dateString);"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,143,String dateString = dateTypeAdapter.toJson(currentDate);
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,144,"assertEquals(toLiteral(formatter.format(currentDate)), dateString);"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,148,efaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(pattern);
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,149,"DefaultDateTypeAdapter dateTypeAdapter = new DefaultDateTypeAdapter(Date.class, pattern);"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,152,"tring dateString = dateTypeAdapter.serialize(currentDate, Date.class, null).getAsString();"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,153,"ssertEquals(formatter.format(currentDate), dateString);"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,153,String dateString = dateTypeAdapter.toJson(currentDate);
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,154,"assertEquals(toLiteral(formatter.format(currentDate)), dateString);"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,158,"ew DefaultDateTypeAdapter(""I am a bad Date pattern...."");"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,159,"new DefaultDateTypeAdapter(Date.class, ""I am a bad Date pattern...."");"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,164,"ssertEquals(formatted, adapter.serialize(new Date(0), Date.class, null).getAsString());"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,165,"assertEquals(toLiteral(formatted), adapter.toJson(new Date(0)));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,167,"rivate void assertParsed(String date, DefaultDateTypeAdapter  adapter) {"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,168,"ssertEquals(date, new Date(0), adapter.deserialize(new JsonPrimitive(date), Date.class, null));"
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,169,"ssertEquals(""ISO 8601"", new Date(0), adapter.deserialize("
False,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,170,"ew JsonPrimitive(""1970-01-01T00:00:00Z""), Date.class, null));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,168,"private void assertParsed(String date, DefaultDateTypeAdapter adapter) throws IOException {"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,169,"assertEquals(date, new Date(0), adapter.fromJson(toLiteral(date)));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,170,"assertEquals(""ISO 8601"", new Date(0), adapter.fromJson(toLiteral(""1970-01-01T00:00:00Z"")));"
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,173,private static String toLiteral(String s) {
True,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java,174,"return '""' + s + '""';"
