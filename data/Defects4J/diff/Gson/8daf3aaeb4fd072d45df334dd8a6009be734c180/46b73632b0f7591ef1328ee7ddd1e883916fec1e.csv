is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,233, The offset of the first character in the buffer.
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,235,rivate int bufferStartLine = 1;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,236,rivate int bufferStartColumn = 1;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,232,private int lineNumber = 0;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,233,private int lineStart = 0;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,952,or (; p < l; p++) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,953,nt c = buffer[p];
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,949,while (p < l) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,950,int c = buffer[p++];
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,956,os = p + 1;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,953,pos = p;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,958,"eturn new String(buffer, start, p - start);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,955,"return new String(buffer, start, p - start - 1);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,960,"uilder.append(buffer, start, p - start);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,957,"builder.append(buffer, start, p - start - 1);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,965,os = p + 1;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,962,pos = p;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,969,"uilder.append(buffer, start, p - start);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,966,"builder.append(buffer, start, p - start - 1);"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,974,--; // Prevent double-increment.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,972,} else if (c == '\n') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,973,lineNumber++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,974,lineStart = p;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1071,} else if (c == '\n') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1072,lineNumber++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1073,lineStart = p;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1225,"/ Before clobbering the old characters, update where buffer starts"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1226,/ Using locals here saves ~2%.
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1227,nt line = bufferStartLine;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1228,nt column = bufferStartColumn;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1229,"or (int i = 0, p = pos; i < p; i++) {"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1230,f (buffer[i] == '\n') {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1231,ine++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1232,olumn = 1;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1233, else {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1234,olumn++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1237,ufferStartLine = line;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1238,ufferStartColumn = column;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1227,lineStart -= pos;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1253,f (bufferStartLine == 1 && bufferStartColumn == 1 && limit > 0 && buffer[0] == '\ufeff') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1241,if (lineNumber == 0 && lineStart == 0 && limit > 0 && buffer[0] == '\ufeff') {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1255,ufferStartColumn--;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1243,lineStart++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1267,nt result = bufferStartLine;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1268,or (int i = 0; i < pos; i++) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1269,f (buffer[i] == '\n') {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1270,esult++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1273,eturn result;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1255,return lineNumber + 1;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1277,nt result = bufferStartColumn;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1278,or (int i = 0; i < pos; i++) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1279,f (buffer[i] == '\n') {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1280,esult = 1;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1281, else {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1282,esult++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1285,eturn result;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1259,return pos - lineStart + 1;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1317,f (c == ' ' || c == '\n' || c == '\r' || c == '\t') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1291,if (c == '\n') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1292,lineNumber++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1293,lineStart = p;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1294,continue;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1295,} else if (c == ' ' || c == '\r' || c == '\t') {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1394,f (c == '\r' || c == '\n') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1372,if (c == '\n') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1373,lineNumber++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1374,lineStart = pos;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1375,break;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1376,} else if (c == '\r') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1383,* @param toFind a string to search for. Must not contain a newline.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1388,if (buffer[pos] == '\n') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1389,lineNumber++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1390,lineStart = pos + 1;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1391,continue;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1461,case '\n':
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1462,lineNumber++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1463,lineStart = pos;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1464,// fall-through
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,22,import java.io.StringReader;
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1213,"estFailWithPosition(""Expected value at line 6 column 3"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1214,"[\n\n\n\n\n0,}]"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1214,"testFailWithPosition(""Expected value at line 6 column 5"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1215,"""[\n\n\n\n\n\""a\"",}]"");"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1219,"estFailWithPosition(""Expected value at line 6 column 3"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1220,"[\n\n"" + spaces + ""\n\n\n0,}]"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1220,"testFailWithPosition(""Expected value at line 6 column 5"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1221,"""[\n\n"" + spaces + ""\n\n\n\""a\"",}]"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1224,public void testFailWithPositionOverSlashSlashEndOfLineComment() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1225,"testFailWithPosition(""Expected value at line 5 column 6"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1226,"""\n// foo\n\n//bar\r\n[\""a\"",}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1229,public void testFailWithPositionOverHashEndOfLineComment() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1230,"testFailWithPosition(""Expected value at line 5 column 6"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1231,"""\n# foo\n\n#bar\r\n[\""a\"",}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1234,public void testFailWithPositionOverCStyleComment() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1235,"testFailWithPosition(""Expected value at line 6 column 12"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1236,"""\n\n/* foo\n*\n*\r\nbar */[\""a\"",}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1239,public void testFailWithPositionOverQuotedString() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1240,"testFailWithPosition(""Expected value at line 5 column 3"", ""[\""foo\nbar\r\nbaz\n\"",\n  }"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1243,public void testFailWithPositionOverUnquotedString() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1244,"testFailWithPosition(""Expected value at line 5 column 2"", ""[\n\nabcd\n\n,}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1247,public void testFailWithEscapedNewlineCharacter() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1248,"testFailWithPosition(""Expected value at line 5 column 3"", ""[\n\n\""\\\n\n\"",}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1251,public void testFailWithPositionIsOffsetByBom() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1252,"testFailWithPosition(""Expected value at line 1 column 6"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1253,"""\ufeff[\""a\"",}]"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1256,"private void testFailWithPosition(String message, String json) throws IOException {"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1257,// Validate that it works reading the string normally.
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1258,JsonReader reader1 = new JsonReader(reader(json));
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1259,reader1.setLenient(true);
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1260,reader1.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1261,reader1.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1262,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1263,reader1.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1264,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1265,} catch (IOException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1266,"assertEquals(message, expected.getMessage());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1269,// Also validate that it works when skipping.
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1270,JsonReader reader2 = new JsonReader(reader(json));
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1271,reader2.setLenient(true);
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1272,reader2.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1273,reader2.skipValue();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1274,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1275,reader2.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1276,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1277,} catch (IOException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1278,"assertEquals(message, expected.getMessage());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1241,ublic void testFailWithPositionIsOffsetByBom() throws IOException {
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1242,"estFailWithPosition(""Expected value at line 1 column 4"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1243,"\ufeff[0,}]"");"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1246,"rivate void testFailWithPosition(String message, String json) throws IOException {"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1247,sonReader reader = new JsonReader(reader(json));
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1248,eader.beginArray();
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1249,eader.nextInt();
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1250,ry {
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1251,eader.peek();
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1252,ail();
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1253, catch (IOException expected) {
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1254,"ssertEquals(message, expected.getMessage());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1607,if (true) return new StringReader(s);
