is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/internal/alpha/Intercept.java,extras/src/main/java/com/google/gson/interceptors/Intercept.java,17,ackage com.google.gson.internal.alpha;
True,gson/src/main/java/com/google/gson/internal/alpha/Intercept.java,extras/src/main/java/com/google/gson/interceptors/Intercept.java,17,package com.google.gson.interceptors;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,1,package com.google.gson.interceptors;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,3,import com.google.gson.Gson;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,4,import com.google.gson.TypeAdapter;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,5,import com.google.gson.TypeAdapterFactory;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,6,import com.google.gson.reflect.TypeToken;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,7,import com.google.gson.stream.JsonReader;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,8,import com.google.gson.stream.JsonWriter;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,9,import java.io.IOException;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,12,* A type adapter factory that implements {@code @Intercept}.
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,14,public final class InterceptorFactory implements TypeAdapterFactory {
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,15,"public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,16,Intercept intercept = type.getRawType().getAnnotation(Intercept.class);
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,17,if (intercept == null) {
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,18,return null;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,21,"TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,22,"return new InterceptorAdapter<T>(delegate, intercept);"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,25,static class InterceptorAdapter<T> extends TypeAdapter<T> {
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,26,private final TypeAdapter<T> delegate;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,27,private final JsonPostDeserializer<T> postDeserializer;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,29,"@SuppressWarnings(""unchecked"") // ?"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,30,"public InterceptorAdapter(TypeAdapter<T> delegate, Intercept intercept) {"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,31,try {
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,32,this.delegate = delegate;
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,33,this.postDeserializer = intercept.postDeserialize().newInstance();
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,34,} catch (Exception e) {
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,35,throw new RuntimeException(e);
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,39,"@Override public void write(JsonWriter out, T value) throws IOException {"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,40,"delegate.write(out, value);"
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,43,@Override public T read(JsonReader in) throws IOException {
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,44,T result = delegate.read(in);
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,45,postDeserializer.postDeserialize(result);
True,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java,46,return result;
False,gson/src/main/java/com/google/gson/internal/alpha/JsonPostDeserializer.java,extras/src/main/java/com/google/gson/interceptors/JsonPostDeserializer.java,16,ackage com.google.gson.internal.alpha;
True,gson/src/main/java/com/google/gson/internal/alpha/JsonPostDeserializer.java,extras/src/main/java/com/google/gson/interceptors/JsonPostDeserializer.java,16,package com.google.gson.interceptors;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,16,ackage com.google.gson.functional;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,18,mport java.io.IOException;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,19,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,20,mport java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,21,mport java.util.List;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,22,mport java.util.Map;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,23,mport java.util.Map.Entry;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,25,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,16,package com.google.gson.interceptors;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,32,mport com.google.gson.internal.alpha.Intercept;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,33,mport com.google.gson.internal.alpha.JsonPostDeserializer;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,26,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,27,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,28,import java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,29,import java.util.List;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,30,import java.util.Map;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,31,import java.util.Map.Entry;
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,32,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,50,his.gson = new GsonBuilder().enableComplexMapKeySerialization().create();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,46,this.gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,47,.registerTypeAdapterFactory(new InterceptorFactory())
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,48,.enableComplexMapKeySerialization()
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,49,.create();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,97,"registerTypeAdapter(User.class, new TypeAdapter<User>() {"
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,98,"Override public void write(JsonWriter out, User value) throws IOException {"
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,99,hrow new UnsupportedOperationException();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,101,Override public User read(JsonReader in) throws IOException {
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,102,n.beginObject();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,103,n.nextName();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,104,tring name = in.nextString();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,105,n.nextName();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,106,tring password = in.nextString();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,107,n.endObject();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,108,"eturn new User(name, password);"
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,110,create();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,96,".registerTypeAdapter(User.class, new TypeAdapter<User>() {"
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,97,"@Override public void write(JsonWriter out, User value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,98,throw new UnsupportedOperationException();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,101,@Override public User read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,102,in.beginObject();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,103,in.nextName();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,104,String name = in.nextString();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,105,in.nextName();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,106,String password = in.nextString();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,107,in.endObject();
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,108,"return new User(name, password);"
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,111,.registerTypeAdapterFactory(new InterceptorFactory())
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,112,.create();
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,141,rivate static final class UserValidator implements JsonPostDeserializer<User> {
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,143,public static final class UserValidator implements JsonPostDeserializer<User> {
False,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,161,rivate static final class AddressValidator implements JsonPostDeserializer<Address> {
True,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java,163,public static final class AddressValidator implements JsonPostDeserializer<Address> {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,19,mport java.io.EOFException;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,20,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,21,mport java.io.Reader;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,22,mport java.io.StringReader;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,23,mport java.io.StringWriter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,24,mport java.io.Writer;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,25,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,26,mport java.math.BigDecimal;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,27,mport java.math.BigInteger;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,28,mport java.util.ArrayList;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,29,mport java.util.Collections;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,30,mport java.util.HashMap;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,31,mport java.util.List;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,32,mport java.util.Map;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,36,mport com.google.gson.internal.ObjectConstructor;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,39,mport com.google.gson.internal.alpha.Intercept;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,40,mport com.google.gson.internal.alpha.JsonPostDeserializer;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,39,import java.io.EOFException;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,40,import java.io.IOException;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,41,import java.io.Reader;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,42,import java.io.StringReader;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,43,import java.io.StringWriter;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,44,import java.io.Writer;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,45,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,46,import java.math.BigDecimal;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,47,import java.math.BigInteger;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,48,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,49,import java.util.Collections;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,50,import java.util.HashMap;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,51,import java.util.List;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,52,import java.util.Map;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,801,"nvokeInterceptorIfNeeded(object, (Class<T>) typeToken.getRawType());"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,894,"SuppressWarnings(""unchecked"")"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,895,"rivate <T> void invokeInterceptorIfNeeded(T object, Type type) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,896,ypeToken<T> typeToken = (TypeToken<T>) TypeToken.get(type);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,897,lass<T> clazz = (Class<T>) typeToken.getRawType();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,898,"nvokeInterceptorIfNeeded(object, clazz);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,901,"SuppressWarnings({ ""unchecked"", ""rawtypes"" })"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,902,"rivate <T> void invokeInterceptorIfNeeded(T object, Class<T> clazz) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,903,ntercept interceptor = clazz.getAnnotation(Intercept.class);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,904,f (interceptor == null) return;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,905,/ TODO: We don't need to construct an instance of postDeserializer every time. we can
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,906,/ create it once and cache it.
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,907,lass<? extends JsonPostDeserializer> postDeserializerClass = interceptor.postDeserialize();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,908,bjectConstructor<? extends JsonPostDeserializer> objectConstructor =
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,909,onstructorConstructor.get(TypeToken.get(postDeserializerClass));
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,910,sonPostDeserializer<T> postDeserializer = objectConstructor.construct();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,911,ostDeserializer.postDeserialize(object);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,925, Not part of the Gson API. Do not use.
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,927,ublic static final class $Internal$Access {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,928,"ublic static <T> void invokeInterceptor(Gson gson, T instance, Type type) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,929,"son.invokeInterceptorIfNeeded(instance, type);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,931,"ublic static <T> void invokeInterceptor(Gson gson, T instance, Class<T> clazz) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,932,"son.invokeInterceptorIfNeeded(instance, clazz);"
False,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,2, This package provides experimental Gson features that are very likely to change from
False,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,3, release to release. Backwards compatibility will almost certainly be broken in a future
False,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,4, release by either changing the package name (when the feature moves to main Gson) or when
False,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,5, we decide that the feature isn't worth adding.
False,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,7," @author Inderjeet Singh, Joel Leitch, Jesse Wilson"
False,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,gson/src/main/java/com/google/gson/internal/alpha/package-info.java,9,ackage com.google.gson.internal.alpha;
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,75,"son.$Internal$Access.invokeInterceptor(context, instance, componentType);"
False,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java,86,"son.$Internal$Access.invokeInterceptor(context, instance, elementType);"
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,19,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,20,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,21,mport java.util.ArrayList;
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,22,mport java.util.List;
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,23,mport java.util.Map;
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,34,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,35,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,36,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,37,import java.util.List;
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,38,import java.util.Map;
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,181,"son.$Internal$Access.invokeInterceptor(context, key, keyType);"
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,184,"son.$Internal$Access.invokeInterceptor(context, value, valueType);"
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,197,"son.$Internal$Access.invokeInterceptor(context, key, keyType);"
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,199,"son.$Internal$Access.invokeInterceptor(context, value, valueType);"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,94,"son.$Internal$Access.invokeInterceptor(context, fieldValue, fieldType.getRawType());"
