is_addition,old_file_path,new_file_path,line_num,content
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,19,mport com.google.gson.JsonDeserializationContext;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,20,mport com.google.gson.JsonDeserializer;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,25,mport com.google.gson.JsonSerializationContext;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,26,mport com.google.gson.JsonSerializer;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,27,mport java.lang.reflect.Type;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,23,import com.google.gson.internal.Streams;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,24,import com.google.gson.internal.bind.MiniGson;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,25,import com.google.gson.internal.bind.TypeAdapter;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,26,import com.google.gson.reflect.TypeToken;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,27,import com.google.gson.stream.JsonReader;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,28,import com.google.gson.stream.JsonWriter;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,29,import java.io.IOException;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,94, name to the {@link #create} factory method. If you don't supply an explicit
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,95," type field name, {@code ""type""} will be used. <pre>   {@code"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,96,* name to the {@link #of} factory method. If you don't supply an explicit type
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,97,"* field name, {@code ""type""} will be used. <pre>   {@code"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,97,"       = RuntimeTypeAdapter.create(Shape.class, ""type"");"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,99,"*       = RuntimeTypeAdapter.of(Shape.class, ""type"");"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,114,   RuntimeTypeAdapter<Shape> shapeAdapter = RuntimeTypeAdapter.create(Shape.class)
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,116,*   RuntimeTypeAdapter<Shape> shapeAdapter = RuntimeTypeAdapterFactory.of(Shape.class)
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,120,"ublic final class RuntimeTypeAdapter<T> implements JsonSerializer<T>, JsonDeserializer<T> {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,122,public final class RuntimeTypeAdapterFactory<T> implements TypeAdapter.Factory {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,126,"rivate RuntimeTypeAdapter(Class<?> baseType, String typeFieldName) {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,128,"private RuntimeTypeAdapterFactory(Class<?> baseType, String typeFieldName) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,135," Creates a new runtime type adapter for {@code c} using {@code ""type""} as"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,136, the type field name.
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,137,* Creates a new runtime type adapter using for {@code baseType} using {@code
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,138,* typeFieldName} as the type field name. Type field names are case sensitive.
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,138,ublic static <T> RuntimeTypeAdapter<T> create(Class<T> c) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,139,"eturn create(c, ""type"");"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,140,"public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType, String typeFieldName) {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,141,"return new RuntimeTypeAdapterFactory<T>(baseType, typeFieldName);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,143, Creates a new runtime type adapter using for {@code c} using {@code
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,144, typeFieldName} as the type field name. Type field names are case sensitive.
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,145,"* Creates a new runtime type adapter for {@code baseType} using {@code ""type""} as"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,146,* the type field name.
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,146,"ublic static <T> RuntimeTypeAdapter<T> create(Class<T> c, String typeFieldName) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,147,"eturn new RuntimeTypeAdapter<T>(c, typeFieldName);"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,148,public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,149,"return new RuntimeTypeAdapterFactory<T>(baseType, ""type"");"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,157,"ublic RuntimeTypeAdapter<T> registerSubtype(Class<? extends T> type, String label) {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,159,"public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type, String label) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,176,ublic RuntimeTypeAdapter<T> registerSubtype(Class<? extends T> type) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,178,public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,180,"ublic JsonElement serialize(T src, Type typeOfSrc, JsonSerializationContext context) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,181,lass<?> srcType = src.getClass();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,182,tring label = subtypeToLabel.get(srcType);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,183,f (label == null) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,184,"hrow new JsonParseException(""cannot serialize "" + srcType.getName()"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,185," ""; did you forget to register a subtype?"");"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,187,"sonElement serialized = context.serializeDefault(src, srcType);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,188,inal JsonObject jsonObject = serialized.getAsJsonObject();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,189,f (jsonObject.has(typeFieldName)) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,190,"hrow new JsonParseException(""cannot serialize "" + srcType.getName()"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,191," "" because it already defines a field named "" + typeFieldName);"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,182,"@Override public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> type) {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,183,if (type.getRawType() != baseType) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,184,return null;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,193,sonObject clone = new JsonObject();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,194,"lone.add(typeFieldName, new JsonPrimitive(label));"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,195,"or (Map.Entry<String, JsonElement> e : jsonObject.entrySet()) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,196,"lone.add(e.getKey(), e.getValue());"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,198,eturn clone;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,201,"ublic T deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,202,hrows JsonParseException {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,203,sonElement labelJsonElement = json.getAsJsonObject().remove(typeFieldName);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,204,f (labelJsonElement == null) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,205,"hrow new JsonParseException(""cannot deserialize "" + typeOfT"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,206," "" because it does not define a field named "" + typeFieldName);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,208,tring label = labelJsonElement.getAsString();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,209,lass<?> subtype = labelToSubtype.get(label);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,210,f (subtype == null) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,211,"hrow new JsonParseException(""cannot deserialize "" + baseType + "" subtype named """
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,212," label + ""; did you forget to register a subtype?"");"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,187,"final Map<String, TypeAdapter<?>> labelToDelegate"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,188,"= new LinkedHashMap<String, TypeAdapter<?>>();"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,189,"final Map<Class<?>, TypeAdapter<?>> subtypeToDelegate"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,190,"= new LinkedHashMap<Class<?>, TypeAdapter<?>>();"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,191,"for (Map.Entry<String, Class<?>> entry : labelToSubtype.entrySet()) {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,192,"TypeAdapter<?> delegate = context.getNextAdapter(this, TypeToken.get(entry.getValue()));"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,193,"labelToDelegate.put(entry.getKey(), delegate);"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,194,"subtypeToDelegate.put(entry.getValue(), delegate);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,214,"SuppressWarnings(""unchecked"") // registration requires that subtype extends T"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,215," result = (T) context.deserializeDefault(json, subtype);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,216,eturn result;
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,197,return new TypeAdapter<T>() {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,198,@Override public T read(JsonReader reader) throws IOException {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,199,JsonElement jsonElement = Streams.parse(reader);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,200,JsonElement labelJsonElement = jsonElement.getAsJsonObject().remove(typeFieldName);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,201,if (labelJsonElement == null) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,202,"throw new JsonParseException(""cannot deserialize "" + baseType"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,203,"+ "" because it does not define a field named "" + typeFieldName);"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,205,String label = labelJsonElement.getAsString();
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,206,"@SuppressWarnings(""unchecked"") // registration requires that subtype extends T"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,207,TypeAdapter<T> delegate = (TypeAdapter<T>) labelToDelegate.get(label);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,208,if (delegate == null) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,209,"throw new JsonParseException(""cannot deserialize "" + baseType + "" subtype named """
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,210,"+ label + ""; did you forget to register a subtype?"");"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,212,return delegate.fromJsonElement(jsonElement);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,215,"@Override public void write(JsonWriter writer, T value) throws IOException {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,216,Class<?> srcType = value.getClass();
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,217,String label = subtypeToLabel.get(srcType);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,218,"@SuppressWarnings(""unchecked"") // registration requires that subtype extends T"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,219,TypeAdapter<T> delegate = (TypeAdapter<T>) subtypeToDelegate.get(srcType);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,220,if (delegate == null) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,221,"throw new JsonParseException(""cannot serialize "" + srcType.getName()"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,222,"+ ""; did you forget to register a subtype?"");"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,224,JsonObject jsonObject = delegate.toJsonElement(value).getAsJsonObject();
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,225,if (jsonObject.has(typeFieldName)) {
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,226,"throw new JsonParseException(""cannot serialize "" + srcType.getName()"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,227,"+ "" because it already defines a field named "" + typeFieldName);"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,229,JsonObject clone = new JsonObject();
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,230,"clone.add(typeFieldName, new JsonPrimitive(label));"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,231,"for (Map.Entry<String, JsonElement> e : jsonObject.entrySet()) {"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,232,"clone.add(e.getKey(), e.getValue());"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapter.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,234,"Streams.write(clone, true, writer);"
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,24,ublic final class RuntimeTypeAdapterTest extends TestCase {
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,24,public final class RuntimeTypeAdapterFactoryTest extends TestCase {
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,27,untimeTypeAdapter<BillingInstrument> rta = RuntimeTypeAdapter.create(BillingInstrument.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,27,RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,28,BillingInstrument.class)
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,43,untimeTypeAdapter<BillingInstrument> rta = RuntimeTypeAdapter.create(BillingInstrument.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,44,RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,45,BillingInstrument.class)
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,59,untimeTypeAdapter.create(null);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,61,RuntimeTypeAdapterFactory.of(null);
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,67,"untimeTypeAdapter.create(BillingInstrument.class, null);"
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,69,"RuntimeTypeAdapterFactory.of(BillingInstrument.class, null);"
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,74,untimeTypeAdapter<BillingInstrument> rta = RuntimeTypeAdapter.create(BillingInstrument.class);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,76,RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,77,BillingInstrument.class);
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,83,untimeTypeAdapter<BillingInstrument> rta = RuntimeTypeAdapter.create(BillingInstrument.class);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,86,RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,87,BillingInstrument.class);
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,92,untimeTypeAdapter<BillingInstrument> rta = RuntimeTypeAdapter.create(BillingInstrument.class);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,96,RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,97,BillingInstrument.class);
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,102,untimeTypeAdapter<BillingInstrument> rta = RuntimeTypeAdapter.create(BillingInstrument.class);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,107,RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,108,BillingInstrument.class);
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,112,bject billingAdapter = RuntimeTypeAdapter.create(BillingInstrument.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,118,Object billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,125,bject billingAdapter = RuntimeTypeAdapter.create(BillingInstrument.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,131,Object billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,138,bject billingAdapter = RuntimeTypeAdapter.create(BillingInstrument.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,144,Object billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
False,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,151,"bject billingAdapter = RuntimeTypeAdapter.create(BillingInstrument.class, ""cvv"")"
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,157,"Object billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class, ""cvv"")"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,53,import java.util.Collections;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,177,"alse, false, LongSerializationPolicy.DEFAULT);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,178,"false, false, LongSerializationPolicy.DEFAULT,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,179,Collections.<TypeAdapter.Factory>emptyList());
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,188,ongSerializationPolicy longSerializationPolicy) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,190,"LongSerializationPolicy longSerializationPolicy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,191,List<TypeAdapter.Factory> typeAdapterFactories) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,250,factory(ObjectTypeAdapter.FACTORY)
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,251,"factory(new GsonToMiniGsonTypeAdapterFactory(serializers, deserializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,252,"ew JsonDeserializationContext(this), new JsonSerializationContext(this), serializeNulls"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,253,.factory(ObjectTypeAdapter.FACTORY);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,255,for (TypeAdapter.Factory factory : typeAdapterFactories) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,256,builder.factory(factory);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,259,"builder.factory(new GsonToMiniGsonTypeAdapterFactory(serializers, deserializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,260,"new JsonDeserializationContext(this), new JsonSerializationContext(this), serializeNulls))"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,19,import com.google.gson.DefaultTypeAdapters.DefaultDateTypeAdapter;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,20,import com.google.gson.internal.$Gson$Preconditions;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,21,import com.google.gson.internal.ParameterizedTypeHandlerMap;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,22,import com.google.gson.internal.Primitives;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,23,import com.google.gson.internal.bind.TypeAdapter;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,27,import java.util.ArrayList;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,29,mport com.google.gson.DefaultTypeAdapters.DefaultDateTypeAdapter;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,30,mport com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,31,mport com.google.gson.internal.ParameterizedTypeHandlerMap;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,32,mport com.google.gson.internal.Primitives;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,92,private final List<TypeAdapter.Factory> typeAdapterFactories
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,93,= new ArrayList<TypeAdapter.Factory>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,497,| typeAdapter instanceof JsonDeserializer<?> || typeAdapter instanceof InstanceCreator<?>);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,500,|| typeAdapter instanceof JsonDeserializer<?>
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,501,|| typeAdapter instanceof InstanceCreator<?>
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,502,|| typeAdapter instanceof TypeAdapter.Factory);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,516,if (typeAdapter instanceof TypeAdapter.Factory) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,517,typeAdapterFactories.add((TypeAdapter.Factory) typeAdapter);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,690,"erializeSpecialFloatingPointValues, longSerializationPolicy);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,698,"serializeSpecialFloatingPointValues, longSerializationPolicy, typeAdapterFactories);"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,20,import com.google.gson.internal.bind.TypeAdapter;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,22,import java.util.Collections;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,43,"rue, false, false, LongSerializationPolicy.DEFAULT);"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,45,"true, false, false, LongSerializationPolicy.DEFAULT,"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,46,Collections.<TypeAdapter.Factory>emptyList());
