is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,19,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,21,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,22,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,23,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,24,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,25,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,26,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,27,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,28,import com.google.gson.TypeAdapter;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,29,import com.google.gson.stream.JsonReader;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,30,import com.google.gson.stream.JsonWriter;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,31,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,32,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,33,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,35,public final class TypeAdapterPrecedenceTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,36,private static final JsonSerializer<Foo> FOO_SERIALIZER = new JsonSerializer<Foo>() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,37,"public JsonElement serialize(Foo src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,38,"return new JsonPrimitive(src.name + "" (via FOO_SERIALIZER)"");"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,42,private static final JsonDeserializer<Foo> FOO_DESERIALIZER = new JsonDeserializer<Foo>() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,43,"public Foo deserialize(JsonElement json, Type typeOfT,"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,44,JsonDeserializationContext context) throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,45,"return new Foo(json.getAsString() + "" (via FOO_DESERIALIZER)"");"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,49,private static final TypeAdapter<Foo> FOO_TYPE_ADAPTER = new TypeAdapter<Foo>() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,50,@Override public Foo read(JsonReader reader) throws IOException {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,51,"return new Foo(reader.nextString() + "" (via FOO_TYPE_ADAPTER)"");"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,53,"@Override public void write(JsonWriter writer, Foo value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,54,"writer.value(value.name + "" (via FOO_TYPE_ADAPTER)"");"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,58,public void testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,59,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,60,".registerTypeAdapter(Foo.class, FOO_SERIALIZER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,61,".typeAdapter(Foo.class, FOO_TYPE_ADAPTER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,62,.create();
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,63,"assertEquals(""\""foo (via FOO_SERIALIZER)\"""", gson.toJson(new Foo(""foo"")));"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,66,public void testSerializeStreamingTypeAdapterFollowedByNonstreamingTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,67,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,68,".typeAdapter(Foo.class, FOO_TYPE_ADAPTER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,69,".registerTypeAdapter(Foo.class, FOO_SERIALIZER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,70,.create();
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,71,"assertEquals(""\""foo (via FOO_TYPE_ADAPTER)\"""", gson.toJson(new Foo(""foo"")));"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,74,public void testDeserializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,75,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,76,".registerTypeAdapter(Foo.class, FOO_DESERIALIZER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,77,".typeAdapter(Foo.class, FOO_TYPE_ADAPTER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,78,.create();
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,79,"assertEquals(""foo (via FOO_DESERIALIZER)"", gson.fromJson(""foo"", Foo.class).name);"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,82,public void testDeserializeStreamingTypeAdapterFollowedByNonstreamingTypeAdapter() {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,83,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,84,".typeAdapter(Foo.class, FOO_TYPE_ADAPTER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,85,".registerTypeAdapter(Foo.class, FOO_DESERIALIZER)"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,86,.create();
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,87,"assertEquals(""foo (via FOO_TYPE_ADAPTER)"", gson.fromJson(""foo"", Foo.class).name);"
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,90,private static class Foo {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,91,private final String name;
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,92,private Foo(String name) {
True,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java,93,this.name = name;
