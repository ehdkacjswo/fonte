is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,127,/ See if the fieldValue has better type information than the specified typeOfF
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,130,f (fieldValue != null && typeOfF instanceof Class) {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,131,lass<?> classOfF = (Class<?>) typeOfF;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,132,lass<?> actualClassOfF = fieldValue.getClass();
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,133,f (classOfF.isAssignableFrom(actualClassOfF)) {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,134,ypeOfF = actualClassOfF;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,129,if (fieldValue != null && typeOfF == Object.class) {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,130,typeOfF = fieldValue.getClass();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,162,"@SuppressWarnings(""unchecked"")"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,163,public void testRawCollectionSerialization() {
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,164,BagOfPrimitives bag1 = new BagOfPrimitives();
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,165,"Collection target = Arrays.asList(bag1, bag1);"
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,166,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/CollectionTest.java,gson/src/test/java/com/google/gson/functional/CollectionTest.java,167,assertTrue(json.contains(bag1.getExpectedJson()));
