is_addition,old_file_path,new_file_path,line_num,content
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,2," Copyright (C) 2012 Square, Inc."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,5, you may not use this file except in compliance with the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,6, You may obtain a copy of the License at
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,13, See the License for the specific language governing permissions and
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,14, limitations under the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,17,ackage com.google.gson.codegen;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,19,mport javax.lang.model.element.Element;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,20,mport javax.lang.model.element.ElementKind;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,21,mport javax.lang.model.element.PackageElement;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,22,mport javax.lang.model.element.TypeElement;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,24,ublic class CodeGen {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,25,rivate CodeGen() {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,28,ublic static PackageElement getPackage(Element type) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,29,hile (type.getKind() != ElementKind.PACKAGE) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,30,ype = type.getEnclosingElement();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,32,eturn (PackageElement) type;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,36, Returns a fully qualified class name to complement {@code type}.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,38,"ublic static String adapterName(TypeElement typeElement, String suffix) {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,39,tringBuilder builder = new StringBuilder();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,40,"awTypeToString(builder, typeElement, '$');"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,41,uilder.append(suffix);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,42,eturn builder.toString();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,45,"tatic void rawTypeToString(StringBuilder result, TypeElement type, char innerClassSeparator) {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,46,tring packageName = getPackage(type).getQualifiedName().toString();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,47,tring qualifiedName = type.getQualifiedName().toString();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,48,esult.append(packageName);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,49,esult.append('.');
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,50,esult.append(
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/CodeGen.java,51,"ualifiedName.substring(packageName.length() + 1).replace('.', innerClassSeparator));"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,2, Copyright (C) 2012 Google Inc.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,5, you may not use this file except in compliance with the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,6, You may obtain a copy of the License at
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,13, See the License for the specific language governing permissions and
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,14, limitations under the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,17,ackage com.google.gson.codegen;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,19,ublic @interface GeneratedTypeAdapter {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java,20,lass<?>[] value() default {};
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,2, Copyright (C) 2012 Google Inc.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,5, you may not use this file except in compliance with the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,6, You may obtain a copy of the License at
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,13, See the License for the specific language governing permissions and
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,14, limitations under the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,17,ackage com.google.gson.codegen;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,19,mport java.io.IOException;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,20,mport java.util.Set;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,21,mport javax.annotation.processing.AbstractProcessor;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,22,mport javax.annotation.processing.RoundEnvironment;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,23,mport javax.annotation.processing.SupportedAnnotationTypes;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,24,mport javax.annotation.processing.SupportedSourceVersion;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,25,mport javax.lang.model.SourceVersion;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,26,mport javax.lang.model.element.Element;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,27,mport javax.lang.model.element.TypeElement;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,28,mport javax.tools.Diagnostic;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,29,mport javax.tools.JavaFileObject;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,31,mport static java.lang.reflect.Modifier.FINAL;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,33,"SupportedAnnotationTypes(""com.google.gson.codegen.GeneratedTypeAdapter"")"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,34,SupportedSourceVersion(SourceVersion.RELEASE_6)
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,35,ublic final class GeneratedTypeAdapterProcessor extends AbstractProcessor {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,36,"Override public boolean process(Set<? extends TypeElement> types, RoundEnvironment env) {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,37,ry {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,38,or (Element element : env.getElementsAnnotatedWith(GeneratedTypeAdapter.class)) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,39,riteAdapter((TypeElement) element);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,41, catch (IOException e) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,42,"rocessingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, e.getMessage());"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,44,eturn true;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,47,rivate void writeAdapter(TypeElement type) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,48,"tring typeAdapterName = CodeGen.adapterName(type, ""$TypeAdapter"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,49,avaFileObject sourceFile = processingEnv.getFiler()
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,50,"createSourceFile(typeAdapterName, type);"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,52,avaWriter writer = new JavaWriter(sourceFile.openWriter());
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,53,riter.addPackage(CodeGen.getPackage(type).getQualifiedName().toString());
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,54,"riter.beginType(typeAdapterName, ""class"", FINAL, null);"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,55,riter.endType();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java,56,riter.close();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,2," Copyright (C) 2012 Square, Inc."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,5, you may not use this file except in compliance with the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,6, You may obtain a copy of the License at
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,13, See the License for the specific language governing permissions and
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,14, limitations under the License.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,17,ackage com.google.gson.codegen;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,19,mport java.io.IOException;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,20,mport java.io.Writer;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,21,mport java.lang.annotation.Annotation;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,22,mport java.lang.reflect.Modifier;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,23,mport java.util.ArrayList;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,24,mport java.util.HashMap;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,25,mport java.util.List;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,26,mport java.util.Map;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,27,mport java.util.regex.Matcher;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,28,mport java.util.regex.Pattern;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,31, Emits Java source files.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,33,ublic final class JavaWriter {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,34,"rivate static final Pattern TYPE_PATTERN = Pattern.compile(""(?:[\\w$]+\\.)*([\\w$]+)"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,35,"rivate static final String INDENT = ""  "";"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,37,** Map fully qualified type names to their short names. */
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,38,"rivate final Map<String, String> importedTypes = new HashMap<String, String>();"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,40,rivate String packagePrefix;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,41,rivate final List<Scope> scopes = new ArrayList<Scope>();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,42,rivate final Writer out;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,45, @param out the stream to which Java source will be written. This should be
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,46,     a buffered stream.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,48,ublic JavaWriter(Writer out) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,49,his.out = out;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,53, Emit a package declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,55,ublic void addPackage(String packageName) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,56,f (this.packagePrefix != null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,57,hrow new IllegalStateException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,59,"ut.write(""package "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,60,ut.write(packageName);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,61,"ut.write("";\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,62,"his.packagePrefix = packageName + ""."";"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,66, Equivalent to {@code addImport(type.getName())}.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,68,ublic void addImport(Class<?> type) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,69,ddImport(type.getName());
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,73," Emit an import for {@code type}. For the duration of the file, all"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,74, references to this class will be automatically shortened.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,76,ublic void addImport(String type) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,77,atcher matcher = TYPE_PATTERN.matcher(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,78,f (!matcher.matches()) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,79,hrow new IllegalArgumentException(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,81,"f (importedTypes.put(type, matcher.group(1)) != null) {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,82,hrow new IllegalArgumentException(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,84,"ut.write(""import "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,85,ut.write(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,86,"ut.write("";\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,90, Emits a name like {@code java.lang.String} or {@code
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,91," java.util.List<java.lang.String>}, shorting it with imports if"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,92, possible.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,94,rivate void type(String type) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,95,f (this.packagePrefix == null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,96,hrow new IllegalStateException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,99,atcher m = TYPE_PATTERN.matcher(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,100,nt pos = 0;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,101,hile (true) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,102,oolean found = m.find(pos);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,104,"/ copy non-matching characters like ""<"""
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,105,nt typeStart = found ? m.start() : type.length();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,106,"ut.write(type, pos, typeStart - pos);"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,108,f (!found) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,109,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,112,"/ copy a single class name, shortening it if possible"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,113,tring name = m.group(0);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,114,tring imported;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,115,f ((imported = importedTypes.get(name)) != null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,116,ut.write(imported);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,117, else if (name.startsWith(packagePrefix)
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,118,"& name.indexOf('.', packagePrefix.length()) == -1) {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,119,ut.write(name.substring(packagePrefix.length()));
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,120," else if (name.startsWith(""java.lang."")) {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,121,"ut.write(name.substring(""java.lang."".length()));"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,122, else {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,123,ut.write(name);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,125,os = m.end();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,130, Emits a type declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,132," @param kind such as ""class"", ""interface"" or ""enum""."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,134,"ublic void beginType(String type, String kind, int modifiers) throws IOException {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,135,"eginType(type, kind, modifiers, null);"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,139, Emits a type declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,141," @param kind such as ""class"", ""interface"" or ""enum""."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,142," @param extendsType the class to extend, or null for no extends clause."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,144,"ublic void beginType(String type, String kind, int modifiers,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,145,"tring extendsType, String... implementsTypes) throws IOException {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,146,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,147,odifiers(modifiers);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,148,ut.write(kind);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,149,"ut.write("" "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,150,ype(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,151,f (extendsType != null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,152,"ut.write(""\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,153,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,154,"ut.write(""    extends "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,155,ype(extendsType);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,157,f (implementsTypes.length > 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,158,"ut.write(""\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,159,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,160,"ut.write(""    implements "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,161,or (int i = 0; i < implementsTypes.length; i++) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,162,f (i != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,163,"ut.write("", "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,165,ype(implementsTypes[i]);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,168,"ut.write("" {\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,169,ushScope(Scope.TYPE_DECLARATION);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,173, Completes the current type declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,175,ublic void endType() throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,176,f (popScope() != Scope.TYPE_DECLARATION) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,177,hrow new IllegalStateException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,179,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,180,"ut.write(""}\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,184, Emits a field declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,186,"ublic void field(String type, String name, int modifiers) throws IOException {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,187,"ield(type, name, modifiers, null);"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,190,"ublic void field(String type, String name, int modifiers, String initialValue)"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,191,hrows IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,192,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,193,odifiers(modifiers);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,194,ype(type);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,195,"ut.write("" "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,196,ut.write(name);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,198,f (initialValue != null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,199,"ut.write("" = "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,200,ut.write(initialValue);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,202,"ut.write("";\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,206, Emit a method declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,208," @param returnType the method's return type, or null for constructors."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,209, @param parameters alternating parameter types and names.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,210," @param name the method name, or the fully qualified class name for"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,211,     constructors.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,213,"ublic void beginMethod(String returnType, String name, int modifiers, String... parameters)"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,214,hrows IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,215,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,216,odifiers(modifiers);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,217,f (returnType != null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,218,ype(returnType);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,219,"ut.write("" "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,220,ut.write(name);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,221, else {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,222,ype(name);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,224,"ut.write(""("");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,225,or (int p = 0; p < parameters.length; ) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,226,f (p != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,227,"ut.write("", "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,229,ype(parameters[p++]);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,230,"ut.write("" "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,231,ype(parameters[p++]);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,233,"ut.write("")"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,234,f ((modifiers & Modifier.ABSTRACT) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,235,"ut.write("";\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,236,ushScope(Scope.ABSTRACT_METHOD);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,237, else {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,238,"ut.write("" {\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,239,ushScope(Scope.NON_ABSTRACT_METHOD);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,244, Annotates the next element with {@code annotation}. The annotation has no
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,245, attributes.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,247,ublic void annotation(String annotation) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,248,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,249,"ut.write(""@"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,250,ype(annotation);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,251,"ut.write(""\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,255, Equivalent to {@code annotation(annotationType.getName())}.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,257,ublic void annotation(Class<? extends Annotation> annotationType) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,258,nnotation(annotationType.getName());
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,262," @param pattern a code pattern like ""int i = %s"". Shouldn't contain a"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,263, trailing semicolon or newline character.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,265,"ublic void statement(String pattern, Object... args) throws IOException {"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,266,heckInMethod();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,267,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,268,"ut.write(String.format(pattern, args));"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,269,"ut.write("";\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,273," @param controlFlow the control flow construct and its code, such as"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,274,"     ""if (foo == 5)"". Shouldn't contain braces or newline characters."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,276,ublic void beginControlFlow(String controlFlow) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,277,heckInMethod();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,278,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,279,ut.write(controlFlow);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,280,"ut.write("" {\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,281,ushScope(Scope.CONTROL_FLOW);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,285," @param controlFlow the control flow construct and its code, such as"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,286,"     ""else if (foo == 10)"". Shouldn't contain braces or newline characters."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,288,ublic void nextControlFlow(String controlFlow) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,289,f (popScope() != Scope.CONTROL_FLOW) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,290,hrow new IllegalArgumentException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,293,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,294,ushScope(Scope.CONTROL_FLOW);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,295,"ut.write(""} "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,296,ut.write(controlFlow);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,297,"ut.write("" {\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,300,ublic void endControlFlow() throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,301,ndControlFlow(null);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,305," @param controlFlow the optional control flow construct and its code, such"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,306,"     as ""while(foo == 20)"". Only used for ""do/while"" control flows."
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,308,ublic void endControlFlow(String controlFlow) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,309,f (popScope() != Scope.CONTROL_FLOW) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,310,hrow new IllegalArgumentException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,313,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,314,f (controlFlow != null) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,315,"ut.write(""} "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,316,ut.write(controlFlow);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,317,"ut.write("";\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,318, else {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,319,"ut.write(""}\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,324, Completes the current method declaration.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,326,ublic void endMethod() throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,327,cope popped = popScope();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,328,f (popped == Scope.NON_ABSTRACT_METHOD) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,329,ndent();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,330,"ut.write(""}\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,331, else if (popped != Scope.ABSTRACT_METHOD) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,332,hrow new IllegalStateException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,337," Returns the string literal representing {@code data}, including wrapping"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,338, quotes.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,340,ublic static String stringLiteral(String data) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,341,tringBuilder result = new StringBuilder();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,342,"esult.append('""');"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,343,or (int i = 0; i < data.length(); i++) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,344,har c = data.charAt(i);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,345,witch (c) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,346,"ase '""':"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,347,"esult.append(""\\\"""");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,348,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,349,ase '\\':
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,350,"esult.append(""\\\\"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,351,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,352,ase '\t':
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,353,"esult.append(""\\\t"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,354,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,355,ase '\b':
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,356,"esult.append(""\\\b"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,357,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,358,ase '\n':
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,359,"esult.append(""\\\n"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,360,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,361,ase '\r':
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,362,"esult.append(""\\\r"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,363,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,364,ase '\f':
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,365,"esult.append(""\\\f"");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,366,reak;
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,367,efault:
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,368,esult.append(c);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,371,"esult.append('""');"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,372,eturn result.toString();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,375,ublic void close() throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,376,ut.close();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,380, Emit modifier names.
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,382,rivate void modifiers(int modifiers) throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,383,f ((modifiers & Modifier.PUBLIC) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,384,"ut.write(""public "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,386,f ((modifiers & Modifier.PRIVATE) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,387,"ut.write(""private "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,389,f ((modifiers & Modifier.PROTECTED) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,390,"ut.write(""protected "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,392,f ((modifiers & Modifier.STATIC) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,393,"ut.write(""static "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,395,f ((modifiers & Modifier.FINAL) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,396,"ut.write(""final "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,398,f ((modifiers & Modifier.ABSTRACT) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,399,"ut.write(""abstract "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,401,f ((modifiers & Modifier.SYNCHRONIZED) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,402,"ut.write(""synchronized "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,404,f ((modifiers & Modifier.TRANSIENT) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,405,"ut.write(""transient "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,407,f ((modifiers & Modifier.VOLATILE) != 0) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,408,"ut.write(""volatile "");"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,412,rivate void indent() throws IOException {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,413,or (int i = 0; i < scopes.size(); i++) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,414,ut.write(INDENT);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,418,rivate void checkInMethod() {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,419,cope scope = peekScope();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,420,f (scope != Scope.NON_ABSTRACT_METHOD && scope != Scope.CONTROL_FLOW) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,421,hrow new IllegalArgumentException();
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,425,rivate void pushScope(Scope pushed) {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,426,copes.add(pushed);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,429,rivate Scope peekScope() {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,430,eturn scopes.get(scopes.size() - 1);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,433,rivate Scope popScope() {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,434,eturn scopes.remove(scopes.size() - 1);
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,437,rivate enum Scope {
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,438,"YPE_DECLARATION,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,439,"BSTRACT_METHOD,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,440,"ON_ABSTRACT_METHOD,"
False,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,gson/gson-codegen/src/main/java/com/google/gson/codegen/JavaWriter.java,441,"ONTROL_FLOW,"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,2, Copyright (C) 2012 Gson Authors.
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,5, you may not use this file except in compliance with the License.
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,6, You may obtain a copy of the License at
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,13, See the License for the specific language governing permissions and
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,14, limitations under the License.
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,16,ackage com.google.gson.codegen.functional;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,18,mport junit.framework.TestCase;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,20,ublic class CodeGenFunctionalTest extends TestCase {
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,22,ublic void testGeneratedJson() {
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,23,"rder order = new Order(""toy"", 10);"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,24,/ TODO: figure out how to access the generated type adapter
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,2, Copyright (C) 2012 Gson Authors.
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,5, you may not use this file except in compliance with the License.
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,6, You may obtain a copy of the License at
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,13, See the License for the specific language governing permissions and
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,14, limitations under the License.
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,16,ackage com.google.gson.codegen.functional;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,18,mport com.google.gson.codegen.GeneratedTypeAdapter;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,20,GeneratedTypeAdapter
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,21,inal class Order {
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,22,rivate final String itemName;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,23,rivate final int price;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,25,"ublic Order(String itemName, int price) {"
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,26,his.itemName = itemName;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,27,his.price = price;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,30,ublic String getItemName() {
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,31,eturn itemName;
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,34,ublic int getAmount() {
False,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/Order.java,35,eturn price;
