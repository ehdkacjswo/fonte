is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,19,mport java.util.Arrays;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,20,mport java.util.Collections;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,21,mport java.util.HashSet;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,22,mport java.util.Set;
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,37,rivate static final String[] JS_KEYWORDS = {
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,38,"break"", ""case"", ""catch"", ""class"", ""comment"", ""const"", ""continue"", ""debugger"", ""default"", ""delete"", ""do"","
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,39,"else"", ""enum"", ""export"", ""extends"", ""finally"", ""for"", ""function"", ""if"", ""import"", ""in"", ""label"", ""new"","
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,40,"return"", ""super"", ""switch"", ""this"", ""throw"", ""try"", ""typeof"", ""var"", ""void"", ""while"", ""with"""
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,46,rivate static final Set<String> KEYWORDS = Collections.unmodifiableSet(
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,47,ew HashSet<String>(Arrays.asList(JS_KEYWORDS)));
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,59,reconditions.checkArgument(!KEYWORDS.contains(fieldName));
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,84,ublic void testKeywordAsFieldName() throws Exception {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,85,ry {
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,86,"alidator.validate(""break"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,87,"ail(""Json field name can not be a reserved word"");"
False,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,88, catch (IllegalArgumentException expected) { }
True,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,84,public void testJavaAndJsKeywordAsFieldName() throws Exception {
True,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,85,"String fieldName = ""break"";"
True,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,86,"assertEquals(fieldName, validator.validate(fieldName));"
