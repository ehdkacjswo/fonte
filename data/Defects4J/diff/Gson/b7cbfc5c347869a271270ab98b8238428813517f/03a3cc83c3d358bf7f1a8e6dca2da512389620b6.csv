is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,318,"JsonElement jsonElement = toJsonTree(src, typeOfSrc);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,319,"toJson(jsonElement, writer);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,323,* Converts a tree of {@link JsonElement}s into its equivalent JSON representation.
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,325,* @param jsonElement root of the tree of {@link JsonElement}s
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,326,* @return JSON String representation of the tree
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,327,* @since 1.4
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,329,public String toJson(JsonElement jsonElement) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,330,StringWriter writer = new StringWriter();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,331,"toJson(jsonElement, writer);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,332,return writer.toString();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,336,* Writes out the equivalent JSON for the tree of {@link JsonElement}s.
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,338,* @param jsonElement root of the tree of {@link JsonElement}s
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,339,* @param writer Writer to which the Json representation needs to be written
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,340,* @since 1.4
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,342,"public void toJson(JsonElement jsonElement, Appendable writer) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,322,"sonElement jsonElement = toJsonTree(src, typeOfSrc);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,347,if (jsonElement == null && serializeNulls) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,348,writeOutNullString(writer);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,324, catch (IOException ioe) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,325,hrow new RuntimeException(ioe);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,351,} catch (IOException e) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,352,throw new RuntimeException(e);
False,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,16, Functional tests for {@link Gson#toJsonTree(Object) and
False,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,17," {@link Gson#toJsonTree(Object, java.lang.reflect.Type)"
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,16,* Functional tests for {@link Gson#toJsonTree(Object)} and
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,17,"* {@link Gson#toJsonTree(Object, java.lang.reflect.Type)}"
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,57,public void testJsonTreeToString() {
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,58,"SubTypeOfBagOfPrimitives bag = new SubTypeOfBagOfPrimitives(10L, 5, false, ""foo"", 1.4F);"
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,59,String json1 = gson.toJson(bag);
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,60,"JsonElement jsonElement = gson.toJsonTree(bag, SubTypeOfBagOfPrimitives.class);"
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,61,String json2 = gson.toJson(jsonElement);
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,62,"assertEquals(json1, json2);"
