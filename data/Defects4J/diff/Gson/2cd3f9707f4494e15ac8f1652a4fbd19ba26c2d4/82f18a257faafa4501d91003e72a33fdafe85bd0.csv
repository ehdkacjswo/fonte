is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,155,"lassWithMembers target = gson.fromJson(""{array:[1,2,3]}"", ClassWithMembers.class);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,155,ClassWithInitializedMembers target =
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,156,"gson.fromJson(""{array:[1,2,3]}"", ClassWithInitializedMembers.class);"
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,157,ssertNull(target.str);
False,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,158,ssertNull(target.col);
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,158,"assertEquals(ClassWithInitializedMembers.MY_STRING_DEFAULT, target.str1);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,159,assertNull(target.str2);
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,160,"assertEquals(ClassWithInitializedMembers.MY_INT_DEFAULT, target.int1);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,161,"assertEquals(0, target.int2); // test the default value of a primitive int field per JVM spec"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,162,"assertEquals(ClassWithInitializedMembers.MY_BOOLEAN_DEFAULT, target.bool1);"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,163,assertFalse(target.bool2); // test the default value of a primitive boolean field per JVM spec
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,166,public static class ClassWithInitializedMembers  {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,167,// Using a mix of no-args constructor and field initializers
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,168,"// Also, some fields are intialized and some are not (so initialized per JVM spec)"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,169,"public static final String MY_STRING_DEFAULT = ""string"";"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,170,private static final int MY_INT_DEFAULT = 2;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,171,private static final boolean MY_BOOLEAN_DEFAULT = true;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,172,int[] array;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,173,"String str1, str2;"
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,174,int int1 = MY_INT_DEFAULT;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,175,int int2;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,176,boolean bool1 = MY_BOOLEAN_DEFAULT;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,177,boolean bool2;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,178,public ClassWithInitializedMembers() {
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,179,str1 = MY_STRING_DEFAULT;
True,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java,187,"@SuppressWarnings(""unused"")"
