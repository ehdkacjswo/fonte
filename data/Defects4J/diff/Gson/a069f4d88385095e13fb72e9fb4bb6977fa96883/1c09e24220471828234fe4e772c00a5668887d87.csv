is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,19,import java.lang.reflect.ParameterizedType;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,20,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,21,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,22,import java.util.Arrays;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,23,import java.util.List;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,25,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,27,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,28,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,29,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,30,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,31,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,32,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,33,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,34,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,35,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,36,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,39,* Collection of functional tests for DOM tree based type adapters.
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,41,public class TreeTypeAdaptersTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,42,"private static final Id<Student> STUDENT1_ID = new Id<Student>(""5"", Student.class);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,43,"private static final Id<Student> STUDENT2_ID = new Id<Student>(""6"", Student.class);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,44,"private static final Student STUDENT1 = new Student(STUDENT1_ID, ""first"");"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,45,"private static final Student STUDENT2 = new Student(STUDENT2_ID, ""second"");"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,46,private static final Type TYPE_COURSE_HISTORY =
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,47,new TypeToken<Course<HistoryCourse>>(){}.getType();
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,48,private static final Id<Course<HistoryCourse>> COURSE_ID =
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,49,"new Id<Course<HistoryCourse>>(""10"", TYPE_COURSE_HISTORY);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,51,private Gson gson;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,52,private Course<HistoryCourse> course;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,54,@Override
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,55,protected void setUp() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,56,gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,57,".registerTypeAdapter(Id.class, new IdTreeTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,58,.create();
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,59,"course = new Course<HistoryCourse>(COURSE_ID, 4,"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,60,"new Assignment<HistoryCourse>(null, null), createList(STUDENT1, STUDENT2));"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,63,public void testSerializeId() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,64,"String json = gson.toJson(course, TYPE_COURSE_HISTORY);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,65,assertTrue(json.contains(String.valueOf(COURSE_ID.getValue())));
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,66,assertTrue(json.contains(String.valueOf(STUDENT1_ID.getValue())));
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,67,assertTrue(json.contains(String.valueOf(STUDENT2_ID.getValue())));
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,70,public void testDeserializeId() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,71,"String json = ""{courseId:1,students:[{id:1,name:'first'},{id:6,name:'second'}],"""
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,72,"+ ""numAssignments:4,assignment:{}}"";"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,73,"Course<HistoryCourse> target = gson.fromJson(json, TYPE_COURSE_HISTORY);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,74,"assertEquals(""1"", target.getStudents().get(0).id.getValue());"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,75,"assertEquals(""6"", target.getStudents().get(1).id.getValue());"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,76,"assertEquals(""1"", target.getId().getValue());"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,79,private static final class Id<R> {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,80,final String value;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,81,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,82,final Type typeOfId;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,84,"private Id(String value, Type typeOfId) {"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,85,this.value = value;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,86,this.typeOfId = typeOfId;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,88,public String getValue() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,89,return value;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,93,"private static final class IdTreeTypeAdapter implements JsonSerializer<Id<?>>,"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,94,JsonDeserializer<Id<?>> {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,96,"@SuppressWarnings(""rawtypes"")"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,97,"public Id<?> deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,98,throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,99,if (!(typeOfT instanceof ParameterizedType)) {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,100,"throw new JsonParseException(""Id of unknown type: "" + typeOfT);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,102,ParameterizedType parameterizedType = (ParameterizedType) typeOfT;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,103,"// Since Id takes only one TypeVariable, the actual type corresponding to the first"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,104,// TypeVariable is the Type we are looking for
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,105,Type typeOfId = parameterizedType.getActualTypeArguments()[0];
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,106,"return new Id(json.getAsString(), typeOfId);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,109,"public JsonElement serialize(Id<?> src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,110,return new JsonPrimitive(src.getValue());
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,114,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,115,private static class Student {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,116,Id<Student> id;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,117,String name;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,119,private Student() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,120,"this(null, null);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,122,"public Student(Id<Student> id, String name) {"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,123,this.id = id;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,124,this.name = name;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,128,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,129,private static class Course<T> {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,130,final List<Student> students;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,131,private final Id<Course<T>> courseId;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,132,private final int numAssignments;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,133,private final Assignment<T> assignment;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,135,private Course() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,136,"this(null, 0, null, new ArrayList<Student>());"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,139,"public Course(Id<Course<T>> courseId, int numAssignments,"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,140,"Assignment<T> assignment, List<Student> players) {"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,141,this.courseId = courseId;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,142,this.numAssignments = numAssignments;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,143,this.assignment = assignment;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,144,this.students = players;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,146,public Id<Course<T>> getId() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,147,return courseId;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,149,List<Student> getStudents() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,150,return students;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,154,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,155,private static class Assignment<T> {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,156,private final Id<Assignment<T>> id;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,157,private final T data;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,159,private Assignment() {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,160,"this(null, null);"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,162,"public Assignment(Id<Assignment<T>> id, T data) {"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,163,this.id = id;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,164,this.data = data;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,168,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,169,private static class HistoryCourse {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,170,int numClasses;
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,173,private static <T> List<T> createList(T ...items) {
True,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java,174,return Arrays.asList(items);
