is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,19,import com.google.gson.internal.JsonReaderInternalAccess;
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,20,import com.google.gson.internal.bind.JsonTreeReader;
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,191,/** The only non-execute prefix this parser permits */
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,192,"private static final char[] NON_EXECUTE_PREFIX = "")]}'\n"".toCharArray();"
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,503,if (lenient) {
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,504,consumeNonExecutePrefix();
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1424,* Consumes the non-execute prefix if it exists.
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1426,private void consumeNonExecutePrefix() throws IOException {
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1427,// fast forward through the leading whitespace
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1428,nextNonWhitespace(true);
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1429,pos--;
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1431,if (pos + NON_EXECUTE_PREFIX.length > limit && !fillBuffer(NON_EXECUTE_PREFIX.length)) {
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1432,return;
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1435,for (int i = 0; i < NON_EXECUTE_PREFIX.length; i++) {
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1436,if (buffer[pos + i] != NON_EXECUTE_PREFIX[i]) {
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1437,return; // not a security token!
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1441,// we consumed a security token!
True,gson/src/main/java/com/google/gson/stream/JsonReader2.java,gson/src/main/java/com/google/gson/stream/JsonReader2.java,1442,pos += NON_EXECUTE_PREFIX.length;
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,19,mport com.google.gson.JsonSyntaxException;
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,20,mport com.google.gson.reflect.TypeToken;
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,24,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,26,mport java.util.Map;
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,29,ublic final class JsonReaderTest extends TestCase {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,25,import static com.google.gson.stream.JsonToken.BEGIN_ARRAY;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,26,import static com.google.gson.stream.JsonToken.BEGIN_OBJECT;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,27,import static com.google.gson.stream.JsonToken.BOOLEAN;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,28,import static com.google.gson.stream.JsonToken.END_ARRAY;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,29,import static com.google.gson.stream.JsonToken.END_OBJECT;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,30,import static com.google.gson.stream.JsonToken.NAME;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,31,import static com.google.gson.stream.JsonToken.NULL;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,32,import static com.google.gson.stream.JsonToken.NUMBER;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,33,import static com.google.gson.stream.JsonToken.STRING;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,35,public final class JsonReaderTest extends TestCase {
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,401,"ssertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,406,"assertEquals(STRING, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,415,"ssertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,420,"assertEquals(STRING, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,428,"ssertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,433,"assertEquals(NUMBER, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,440,"ssertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,445,"assertEquals(NUMBER, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,453,"ssertEquals(JsonToken.NUMBER, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,458,"assertEquals(NUMBER, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,466,"ssertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,471,"assertEquals(STRING, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1319,"ssertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1324,"assertEquals(STRING, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1326,"ssertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1331,"assertEquals(STRING, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1333,"ssertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1338,"assertEquals(STRING, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1339,"ssertEquals(JsonToken.BEGIN_OBJECT, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1344,"assertEquals(BEGIN_OBJECT, reader.peek());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1341,"ssertEquals(JsonToken.NAME, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1346,"assertEquals(NAME, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1386,public void testMalformedDocuments() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1387,"assertDocument(""{]"", BEGIN_OBJECT, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1388,"assertDocument(""{,"", BEGIN_OBJECT, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1389,"assertDocument(""{{"", BEGIN_OBJECT, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1390,"assertDocument(""{["", BEGIN_OBJECT, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1391,"assertDocument(""{:"", BEGIN_OBJECT, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1392,"assertDocument(""{\""name\"","", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1393,"assertDocument(""{\""name\"","", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1394,"assertDocument(""{\""name\"":}"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1395,"assertDocument(""{\""name\""::"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1396,"assertDocument(""{\""name\"":,"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1397,"assertDocument(""{\""name\""=}"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1398,"assertDocument(""{\""name\""=>}"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1399,"assertDocument(""{\""name\""=>\""string\"":"", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1400,"assertDocument(""{\""name\""=>\""string\""="", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1401,"assertDocument(""{\""name\""=>\""string\""=>"", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1402,"assertDocument(""{\""name\""=>\""string\"","", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1403,"assertDocument(""{\""name\""=>\""string\"",\""name\"""", BEGIN_OBJECT, NAME, STRING, NAME);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1404,"assertDocument(""[}"", BEGIN_ARRAY, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1405,"assertDocument(""[,]"", BEGIN_ARRAY, NULL, NULL, END_ARRAY);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1406,"assertDocument(""{"", BEGIN_OBJECT, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1407,"assertDocument(""{\""name\"""", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1408,"assertDocument(""{\""name\"","", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1409,"assertDocument(""{'name'"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1410,"assertDocument(""{'name',"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1411,"assertDocument(""{name"", BEGIN_OBJECT, NAME, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1412,"assertDocument(""["", BEGIN_ARRAY, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1413,"assertDocument(""[string"", BEGIN_ARRAY, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1414,"assertDocument(""[\""string\"""", BEGIN_ARRAY, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1415,"assertDocument(""['string'"", BEGIN_ARRAY, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1416,"assertDocument(""[123"", BEGIN_ARRAY, NUMBER, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1417,"assertDocument(""[123,"", BEGIN_ARRAY, NUMBER, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1418,"assertDocument(""{\""name\"":123"", BEGIN_OBJECT, NAME, NUMBER, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1419,"assertDocument(""{\""name\"":123,"", BEGIN_OBJECT, NAME, NUMBER, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1420,"assertDocument(""{\""name\"":\""string\"""", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1421,"assertDocument(""{\""name\"":\""string\"","", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1422,"assertDocument(""{\""name\"":'string'"", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1423,"assertDocument(""{\""name\"":'string',"", BEGIN_OBJECT, NAME, STRING, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1424,"assertDocument(""{\""name\"":false"", BEGIN_OBJECT, NAME, BOOLEAN, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1425,"assertDocument(""{\""name\"":false,,"", BEGIN_OBJECT, NAME, BOOLEAN, IOException.class);"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1429,* This test behave slightly differently in Gson 2.2 and earlier. It fails
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1430,* during peek rather than during nextString().
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1432,public void testUnterminatedStringFailure() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1433,"JsonReader reader = new JsonReader(new StringReader(""[\""string""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1434,reader.setLenient(true);
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1435,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1436,"assertEquals(JsonToken.STRING, reader.peek());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1437,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1438,reader.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1439,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1440,} catch (MalformedJsonException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1444,"private void assertDocument(String document, Object... expectations) throws IOException {"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1445,JsonReader reader = new JsonReader(new StringReader(document));
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1446,reader.setLenient(true);
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1447,for (Object expectation : expectations) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1448,if (expectation == BEGIN_OBJECT) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1449,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1450,} else if (expectation == BEGIN_ARRAY) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1451,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1452,} else if (expectation == END_OBJECT) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1453,reader.endObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1454,} else if (expectation == END_ARRAY) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1455,reader.endArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1456,} else if (expectation == NAME) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1457,"assertEquals(""name"", reader.nextName());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1458,} else if (expectation == BOOLEAN) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1459,"assertEquals(false, reader.nextBoolean());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1460,} else if (expectation == STRING) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1461,"assertEquals(""string"", reader.nextString());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1462,} else if (expectation == NUMBER) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1463,"assertEquals(123, reader.nextInt());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1464,} else if (expectation == NULL) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1465,reader.nextNull();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1466,} else if (expectation == IOException.class) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1467,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1468,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1469,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1470,} catch (IOException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1472,} else {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1473,throw new AssertionError();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1478,// TODO: test character-by-character reads
