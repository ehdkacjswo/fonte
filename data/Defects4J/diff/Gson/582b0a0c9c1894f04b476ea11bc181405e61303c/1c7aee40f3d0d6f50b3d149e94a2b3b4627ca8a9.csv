is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,18,import java.io.IOException;
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,19,import java.io.Reader;
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,20,import java.io.StringReader;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,22,mport java.io.EOFException;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,23,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,24,mport java.io.Reader;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,25,mport java.io.StringReader;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,89, catch (JsonParseException e) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,90,f (e.getCause() instanceof EOFException) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,91,eturn JsonNull.INSTANCE;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,93,hrow e;
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,53,// We could possibly throw JsonSyntaxException since the stream prematurely ended.
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,54,"// However, it seems safe to throw JsonIOException since the source is an IOException."
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,55,// Another reason is to maintain backward compatibility.
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,41,public void testParseInvalidJson() {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,42,try {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,43,"parser.parse(""[[]"");"
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,44,fail();
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,45,} catch (JsonParseException expected) { }
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,53,public void testParseInvalidJson() {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,54,try {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,55,"gson.fromJson(""[[]"", Object[].class);"
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,56,fail();
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,57,} catch (JsonSyntaxException expected) { }
