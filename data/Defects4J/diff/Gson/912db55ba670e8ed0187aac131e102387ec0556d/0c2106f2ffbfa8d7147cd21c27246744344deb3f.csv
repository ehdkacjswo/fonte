is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,29,private JsonStreamParser parser;
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,31,@Override
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,32,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,33,super.setUp();
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,34,"parser = new JsonStreamParser(""'one' 'two'"");"
False,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,31,"sonStreamParser parser = new JsonStreamParser(""'one' 'two'"");"
False,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,39,"terator<JsonElement> parser = new JsonStreamParser(""'one' 'two'"");"
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,52,public void testNoSideEffectForHasNext() throws Exception {
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,53,assertTrue(parser.hasNext());
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,54,assertTrue(parser.hasNext());
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,55,assertTrue(parser.hasNext());
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,56,"assertEquals(""one"", parser.next().getAsString());"
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,58,assertTrue(parser.hasNext());
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,59,assertTrue(parser.hasNext());
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,60,"assertEquals(""two"", parser.next().getAsString());"
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,62,assertFalse(parser.hasNext());
True,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,63,assertFalse(parser.hasNext());
False,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,gson/src/test/java/com/google/gson/JsonStreamParserTest.java,48,"terator<JsonElement> parser = new JsonStreamParser(""'one' 'two'"");"
