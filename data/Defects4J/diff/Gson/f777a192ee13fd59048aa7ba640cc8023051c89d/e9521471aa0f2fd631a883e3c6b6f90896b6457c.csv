is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,119,gnoreVersionsAfter = VersionConstants.IGNORE_VERSIONS;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,119,ignoreVersionsAfter = VersionExclusionStrategy.IGNORE_VERSIONS;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,653,f (ignoreVersionsAfter != VersionConstants.IGNORE_VERSIONS) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,653,if (ignoreVersionsAfter != VersionExclusionStrategy.IGNORE_VERSIONS) {
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,55,OWER;
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,55,LOWER
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,20, Class contain all constants for versioning support.
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,22, @author Joel Leitch
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,24,inal class VersionConstants {
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,25,/ Prevent instantiation
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,26,rivate VersionConstants() { }
False,gson/src/main/java/com/google/gson/VersionConstants.java,gson/src/main/java/com/google/gson/VersionConstants.java,28,tatic final double IGNORE_VERSIONS = -1D;
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,30,static final double IGNORE_VERSIONS = -1D;
False,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,46,ublic static void checkState(boolean condition) {
False,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,47,f (!condition) {
False,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,48,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,273, Returns true if this type is an array.
False,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,275,ublic static boolean isArray(Type type) {
False,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,276,eturn type instanceof GenericArrayType
False,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,277,| (type instanceof Class && ((Class<?>) type).isArray());
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,48,/ create() doesn't define a type parameter
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,49,ypeAdapter<T> result = new ArrayTypeAdapter(
True,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,48,return new ArrayTypeAdapter(
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,51,eturn result;
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,87,riter.nullValue(); // TODO: better policy here?
True,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,85,writer.nullValue();
False,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,93,"inal E value = (E) Array.get(array, i);"
True,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java,91,"E value = (E) Array.get(array, i);"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,52," The delegate is lazily created because it may not be needed, and"
False,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,53, creating it may fail.
True,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ExcludedTypeAdapterFactory.java,51,"/** The delegate is lazily created because it may not be needed, and creating it may fail. */"
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,198,riter.nullValue(); // TODO: better policy here?
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,198,writer.nullValue();
False,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,93,riter.nullValue(); // TODO: better policy here?
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,93,writer.nullValue();
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,16,ackage com.google.gson.internal.bind;
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,18,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,19,mport java.lang.reflect.TypeVariable;
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,21,inal class Reflection {
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,23, Finds a compatible runtime type if it is more specific
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,25,"ublic static Type getRuntimeTypeIfMoreSpecific(Type type, Object value) {"
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,26,f (value != null
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,27,& (type == Object.class || type instanceof TypeVariable<?> || type instanceof Class<?>)) {
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,28,ype = value.getClass();
False,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,gson/src/main/java/com/google/gson/internal/bind/Reflection.java,30,eturn type;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,17,ackage com.google.gson.internal.bind;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,19,mport com.google.gson.Gson;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,20,mport com.google.gson.TypeAdapter;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,21,mport com.google.gson.internal.$Gson$Types;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,22,mport com.google.gson.internal.ConstructorConstructor;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,23,mport com.google.gson.internal.ObjectConstructor;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,24,mport com.google.gson.reflect.TypeToken;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,25,mport com.google.gson.stream.JsonReader;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,26,mport com.google.gson.stream.JsonToken;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,27,mport com.google.gson.stream.JsonWriter;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,28,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,29,mport java.lang.reflect.ParameterizedType;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,30,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,31,mport java.util.Map;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,34, Adapt a map whose keys are strings.
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,36,ublic final class StringToValueMapTypeAdapterFactory implements TypeAdapter.Factory {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,37,rivate final ConstructorConstructor constructorConstructor;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,39,ublic StringToValueMapTypeAdapterFactory(ConstructorConstructor constructorConstructor) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,40,his.constructorConstructor = constructorConstructor;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,43,"ublic <T> TypeAdapter<T> create(Gson context, TypeToken<T> typeToken) {"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,44,ype type = typeToken.getType();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,45,f (!(type instanceof ParameterizedType)) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,46,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,49,lass<? super T> rawType = typeToken.getRawType();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,50,f (!Map.class.isAssignableFrom(rawType)) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,51,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,54,"ype[] keyAndValueTypes = $Gson$Types.getMapKeyAndValueTypes(type, rawType);"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,55,f (keyAndValueTypes[0] != String.class) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,56,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,58,ypeAdapter<?> valueAdapter = context.getAdapter(TypeToken.get(keyAndValueTypes[1]));
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,60,bjectConstructor<?> constructor = constructorConstructor.getConstructor(typeToken);
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,62,"SuppressWarnings({""unchecked"", ""rawtypes""})"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,63,/ we don't define a type parameter for the key or value types
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,64,"ypeAdapter<T> result = new Adapter(valueAdapter, constructor);"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,65,eturn result;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,68,"rivate final class Adapter<V> extends TypeAdapter<Map<String, V>> {"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,69,rivate final TypeAdapter<V> valueTypeAdapter;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,70,"rivate final ObjectConstructor<? extends Map<String, V>> constructor;"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,72,"ublic Adapter(TypeAdapter<V> valueTypeAdapter,"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,73,"bjectConstructor<? extends Map<String, V>> constructor) {"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,74,his.valueTypeAdapter = valueTypeAdapter;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,75,his.constructor = constructor;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,78,"ublic Map<String, V> read(JsonReader reader) throws IOException {"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,79,f (reader.peek() == JsonToken.NULL) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,80,eader.nextNull();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,81,eturn null;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,84,"ap<String, V> map = constructor.construct();"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,85,eader.beginObject();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,86,hile (reader.hasNext()) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,87,tring key = reader.nextName();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,88, value = valueTypeAdapter.read(reader);
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,89,"ap.put(key, value);"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,91,eader.endObject();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,92,eturn map;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,95,"ublic void write(JsonWriter writer, Map<String, V> map) throws IOException {"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,96,f (map == null) {
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,97,riter.nullValue(); // TODO: better policy here?
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,98,eturn;
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,101,riter.beginObject();
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,102,"or (Map.Entry<String, V> entry : map.entrySet()) {"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,103,riter.name(entry.getKey());
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,104,"alueTypeAdapter.write(writer, entry.getValue());"
False,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/StringToValueMapTypeAdapterFactory.java,106,riter.endObject();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,25,import java.lang.reflect.TypeVariable;
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,53,"ype runtimeType = Reflection.getRuntimeTypeIfMoreSpecific(type, value);"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,53,"Type runtimeType = getRuntimeTypeIfMoreSpecific(type, value);"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,72,* Finds a compatible runtime type if it is more specific
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,74,"private Type getRuntimeTypeIfMoreSpecific(Type type, Object value) {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,75,if (value != null
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,76,&& (type == Object.class || type instanceof TypeVariable<?> || type instanceof Class<?>)) {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,77,type = value.getClass();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java,79,return type;
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,242,ublic static final TypeAdapter.Factory LONG_FACTORY
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,243," newFactory(long.class, Long.class, LONG);"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,260,ublic static final TypeAdapter.Factory FLOAT_FACTORY
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,261," newFactory(float.class, Float.class, FLOAT);"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,278,ublic static final TypeAdapter.Factory DOUBLE_FACTORY
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,279," newFactory(double.class, Double.class, DOUBLE);"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,666,"eturn (T) Enum.valueOf((Class<T>) classOfT, reader.nextString());"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,657,"return Enum.valueOf(classOfT, reader.nextString());"
