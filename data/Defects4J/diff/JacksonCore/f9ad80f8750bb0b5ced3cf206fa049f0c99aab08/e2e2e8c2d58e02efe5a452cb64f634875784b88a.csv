is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,134,* Feature that determines whether {@link JsonGenerator} will explicitly
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,135,* check that no duplicate JSON Object field names are written.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,136,"* If enabled, generator will check all names within context and report"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,137,"* duplicates by throwing a {@link JsonGenerationException}; if disabled,"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,138,* no such checking will be done. Assumption in latter case is
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,139,* that caller takes care of not trying to write duplicate names.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,140,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,141,* Note that enabling this feature will incur performance overhead
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,142,* due to having to store and check additional information.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,144,* @since 2.3
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,146,"STRICT_DUPLICATE_DETECTION(false),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,176,* @since 2.3
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,178,public boolean enabledIn(int flags) { return (flags & _mask) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,180,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,181,* Note that enabling this feature will incur performance overhead
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,182,* due to having to store and check additional information: this typically
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,183,* adds 20-30% to execution time for basic parsing.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,195,private final int _mask;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,213,_mask = (1 << ordinal());
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,216,ublic boolean enabledIn(int flags) { return (flags & getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,222,public boolean enabledIn(int flags) { return (flags & _mask) != 0; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,12,import com.fasterxml.jackson.core.json.DupDetector;
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,77,writeContext = JsonWriteContext.createRootContext();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,78,DupDetector dups = Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features)
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,79,? DupDetector.rootDetector(this) : null;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,80,_writeContext = JsonWriteContext.createRootContext(dups);
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,79,cfgNumbersAsStrings = isEnabled(Feature.WRITE_NUMBERS_AS_STRINGS);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,82,_cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(features);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,10,import com.fasterxml.jackson.core.json.DupDetector;
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,289,sonReadContext readCtxt = JsonReadContext.createRootContext();
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,290,f (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features)) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,291,eadCtxt.trackDups(this);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,290,DupDetector dups = Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features)
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,291,? DupDetector.rootDetector(this) : null;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,292,JsonReadContext readCtxt = JsonReadContext.createRootContext(dups);
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,5,mport com.fasterxml.jackson.core.JsonLocation;
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,6,mport com.fasterxml.jackson.core.JsonParseException;
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,7,mport com.fasterxml.jackson.core.JsonParser;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,5,import com.fasterxml.jackson.core.*;
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,25," We need to store a back-reference here, unfortunately."
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,23,"* We need to store a back-reference here to parser/generator, unfortunately."
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,27,rotected final JsonParser _parser;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,25,protected final Object _source;
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,38,rivate DupDetector(JsonParser parser) {
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,39,parser = parser;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,36,private DupDetector(Object src) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,37,_source = src;
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,42,ublic static DupDetector rootDetector(JsonParser jp) {
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,43,eturn new DupDetector(jp);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,40,public static DupDetector rootDetector(JsonParser p) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,41,return new DupDetector(p);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,44,public static DupDetector rootDetector(JsonGenerator g) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,45,return new DupDetector(g);
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,47,eturn new DupDetector(_parser);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,49,return new DupDetector(_source);
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,57,eturn _parser.getCurrentLocation();
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,59,// ugly but:
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,60,if (_source instanceof JsonParser) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,61,return ((JsonParser)_source).getCurrentLocation();
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,63,// do generators have a way to provide Location? Apparently not...
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,64,return null;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,17,* Parent context for this context; null for root context.
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,21,// // // Optional duplicate detection
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,23,protected final DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,25,/ // // Optional duplicate detection
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,27,rotected DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,46,"ublic JsonReadContext(JsonReadContext parent, int type, int lineNr, int colNr)"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,49,"public JsonReadContext(JsonReadContext parent, DupDetector dups,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,50,"int type, int lineNr, int colNr)"
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,49,type = type;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,54,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,55,_type = type;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,74,"ublic static JsonReadContext createRootContext(int lineNr, int colNr)"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,81,"@Deprecated // since 2.3, use variant that takes dup detector"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,82,"public static JsonReadContext createRootContext(int lineNr, int colNr) {"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,83,"return createRootContext(lineNr, colNr, null);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,86,"public static JsonReadContext createRootContext(int lineNr, int colNr,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,87,DupDetector dups)
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,76,"eturn new JsonReadContext(null, TYPE_ROOT, lineNr, colNr);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,89,"return new JsonReadContext(null, dups, TYPE_ROOT, lineNr, colNr);"
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,79,ublic static JsonReadContext createRootContext()
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,81,"eturn new JsonReadContext(null, TYPE_ROOT, 1, 0);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,92,"@Deprecated // since 2.3, use variant that takes dup detector"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,93,public static JsonReadContext createRootContext() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,94,return createRootContext(null);
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,97,public static JsonReadContext createRootContext(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,98,"return new JsonReadContext(null, dups, TYPE_ROOT, 1, 0);"
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,88,"child = ctxt = new JsonReadContext(this, TYPE_ARRAY, lineNr, colNr);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,105,"_child = ctxt = new JsonReadContext(this,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,106,"(_dups == null) ? null : _dups.child(),"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,107,"TYPE_ARRAY, lineNr, colNr);"
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,92,f (_dups != null) {
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,93,/ must pass a placeholder to indicate that tracking is on; not used
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,94,txt._dups = _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,103,"child = ctxt = new JsonReadContext(this, TYPE_OBJECT, lineNr, colNr);"
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,104,f (_dups != null) {
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,105,txt._dups = _dups.child();
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,118,"_child = ctxt = new JsonReadContext(this,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,119,"(_dups == null) ? null : _dups.child(),"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,120,"TYPE_OBJECT, lineNr, colNr);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,27,// // // Optional duplicate detection
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,29,protected final DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,55,"rotected JsonWriteContext(int type, JsonWriteContext parent)"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,59,"protected JsonWriteContext(int type, JsonWriteContext parent,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,60,DupDetector dups)
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,65,_dups = dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,63,/ // // Factory methods
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,65,ublic static JsonWriteContext createRootContext()
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,67,"eturn new JsonWriteContext(TYPE_ROOT, null);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,74,if (_dups != null) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,75,_dups.reset();
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,80,// // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,83,* @deprecated Since 2.3; use method that takes argument
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,85,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,86,public static JsonWriteContext createRootContext() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,87,return createRootContext(null);
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,90,public static JsonWriteContext createRootContext(DupDetector dd) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,91,"return new JsonWriteContext(TYPE_ROOT, null, dd);"
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,82,"child = ctxt = new JsonWriteContext(TYPE_ARRAY, this);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,98,"_child = ctxt = new JsonWriteContext(TYPE_ARRAY, this,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,99,(_dups == null) ? null : _dups.child());
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,92,"child = ctxt = new JsonWriteContext(TYPE_OBJECT, this);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,109,"_child = ctxt = new JsonWriteContext(TYPE_OBJECT, this,"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,110,(_dups == null) ? null : _dups.child());
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,113,ublic final int writeFieldName(String name)
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,131,public final int writeFieldName(String name) throws JsonProcessingException
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,115,gotName = true;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,133,_gotName = true;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,135,if (_dups != null) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,136,"_checkDup(_dups, name);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,141,"private void _checkDup(DupDetector dd, String name) throws JsonProcessingException"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,143,if (dd.isDup(name)) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,144,"throw new JsonGenerationException(""Duplicate field '""+name+""'"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,1,package com.fasterxml.jackson.core.json;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,3,import java.io.*;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,5,import com.fasterxml.jackson.core.*;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,7,public class TestGeneratorDupHandling
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,8,extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,public void testSimpleDups() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,12,_testSimpleDups(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,_testSimpleDups(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,16,protected void _testSimpleDups(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,19,assertFalse(f.isEnabled(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,21,"// First: fine, when not checking"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"_writeSimple0(_generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,23,"_writeSimple1(_generator(f, useStream), ""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,25,// but not when checking
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,f.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,27,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,28,"_writeSimple0( _generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,29,"fail(""Should have gotten exception"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,30,} catch (JsonGenerationException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,31,"verifyException(e, ""duplicate field 'a'"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,34,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,"_writeSimple1( _generator(f, useStream), ""x"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,36,"fail(""Should have gotten exception"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,37,} catch (JsonGenerationException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,38,"verifyException(e, ""duplicate field 'x'"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,42,"protected JsonGenerator _generator(JsonFactory f, boolean useStream) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,44,return useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,45,f.createGenerator(new ByteArrayOutputStream())
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,46,: f.createGenerator(new StringWriter());
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,49,"protected void _writeSimple0(JsonGenerator g, String name) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,51,g.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,52,"g.writeNumberField(name, 1);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,53,"g.writeNumberField(name, 2);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,54,g.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,55,g.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,58,"protected void _writeSimple1(JsonGenerator g, String name) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,60,g.writeStartArray();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,61,g.writeNumber(3);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,62,g.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,63,"g.writeNumberField(""foo"", 1);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,64,"g.writeNumberField(""bar"", 1);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,65,"g.writeNumberField(name, 1);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,66,"g.writeNumberField(""bar2"", 1);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,67,"g.writeNumberField(name, 2);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,68,g.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,69,g.writeEndArray();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,70,g.close();
