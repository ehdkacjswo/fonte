is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,6,mport com.fasterxml.jackson.core.type.JavaType;
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,6,import com.fasterxml.jackson.core.type.ResolvedType;
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,58,"ublic abstract <T> T readValue(JsonParser jp, JavaType valueType)"
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,58,"public abstract <T> T readValue(JsonParser jp, ResolvedType valueType)"
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,75, @since 1.9
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,84, @since 1.9
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,93, @since 1.9
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,95,"ublic abstract <T> Iterator<T> readValues(JsonParser jp, JavaType valueType)"
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,89,"public abstract <T> Iterator<T> readValues(JsonParser jp, ResolvedType valueType)"
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,128, @since 1.2
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,136, @since 1.2
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,145, @since 1.3
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,154, @since 1.3
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,1,ackage com.fasterxml.jackson.core.type;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,3,mport java.lang.reflect.Modifier;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,6, Base class for type token classes used both to contain information
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,7, and as keys for deserializers.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,8,<p>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,9, Instances can (only) be constructed by
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,10, <code>com.fasterxml.jackson.databind.TypeFactory</code>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,11," (included in ""jackson-databind"")"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,13,ublic abstract class JavaType
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,16, This is the nominal type-erased Class that would be close to the
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,17," type represented (but not exactly type, due to type erasure: type"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,18, instance may have more information on this).
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,19," May be an interface or abstract class, so instantiation"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,20, may not be possible.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,22,rotected final Class<?> _class;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,24,rotected final int _hashCode;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,27, Optional handler (codec) that can be attached to indicate
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,28," what to use for handling (serializing, deserializing) values of"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,29, this specific type.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,30,<p>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,31, Note: untyped (i.e. caller has to cast) because it is used for
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,32," different kinds of handlers, with unrelated types."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,33,<p>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,34, TODO: make final and possibly promote to sub-classes
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,36,rotected /*final*/ Object _valueHandler;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,39, Optional handler that can be attached to indicate how to handle
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,40, additional type metadata associated with this type.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,41,<p>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,42, Note: untyped (i.e. caller has to cast) because it is used for
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,43," different kinds of handlers, with unrelated types."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,44,<p>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,45, TODO: make final and possibly promote to sub-classes
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,47,rotected /*final*/ Object _typeHandler;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,51,* Life-cycle
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,56," @param raw ""Raw"" (type-erased) class for this type"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,57," @param additionalHash Additional hash code to use, in addition"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,58,   to hash code of the class name
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,60,"rotected JavaType(Class<?> raw, int additionalHash)"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,62,class = raw;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,63,hashCode = raw.getName().hashCode() + additionalHash;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,64,valueHandler = null;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,65,typeHandler = null;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,69," ""Copy method"" that will construct a new instance that is identical to"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,70," this instance, except that it will have specified type handler assigned."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,72, @return Newly created type instance
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,74,ublic abstract JavaType withTypeHandler(Object h);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,77," ""Copy method"" that will construct a new instance that is identical to"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,78," this instance, except that its content type will have specified"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,79, type handler assigned.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,81, @return Newly created type instance
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,83,ublic abstract JavaType withContentTypeHandler(Object h);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,86," ""Copy method"" that will construct a new instance that is identical to"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,87," this instance, except that it will have specified value handler assigned."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,89, @return Newly created type instance
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,91,ublic abstract JavaType withValueHandler(Object h);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,94," ""Copy method"" that will construct a new instance that is identical to"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,95," this instance, except that it will have specified content value handler assigned."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,97, @return Newly created type instance
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,99,ublic abstract JavaType withContentValueHandler(Object h);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,103,* Type coercion fluent factory methods
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,108," Method that can be called to do a ""narrowing"" conversions; that is,"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,109, to return a type with a raw class that is assignable to the raw
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,110," class of this type. If this is not possible, an"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,111, {@link IllegalArgumentException} is thrown.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,112," If class is same as the current raw class, instance itself is"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,113, returned.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,115,ublic JavaType narrowBy(Class<?> subclass)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,117,"/ First: if same raw class, just return this instance"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,118,f (subclass == _class) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,119,eturn this;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,121,"/ Otherwise, ensure compatibility"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,122,"assertSubclass(subclass, _class);"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,123,avaType result = _narrow(subclass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,125,/ TODO: these checks should NOT actually be needed; above should suffice:
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,126,f (_valueHandler != result.getValueHandler()) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,127,esult = result.withValueHandler(_valueHandler);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,129,f (_typeHandler != result.getTypeHandler()) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,130,esult = result.withTypeHandler(_typeHandler);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,132,eturn result;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,136," More efficient version of {@link #narrowBy}, called by"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,137, internal framework in cases where compatibility checks
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,138, are to be skipped.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,140,ublic JavaType forcedNarrowBy(Class<?> subclass)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,142,f (subclass == _class) { // can still optimize for simple case
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,143,eturn this;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,145,avaType result = _narrow(subclass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,146,/ TODO: these checks should NOT actually be needed; above should suffice:
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,147,f (_valueHandler != result.getValueHandler()) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,148,esult = result.withValueHandler(_valueHandler);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,150,f (_typeHandler != result.getTypeHandler()) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,151,esult = result.withTypeHandler(_typeHandler);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,153,eturn result;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,157," Method that can be called to do a ""widening"" conversions; that is,"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,158, to return a type with a raw class that could be assigned from this
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,159, type.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,160," If such conversion is not possible, an"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,161, {@link IllegalArgumentException} is thrown.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,162," If class is same as the current raw class, instance itself is"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,163, returned.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,165,ublic JavaType widenBy(Class<?> superclass)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,167,"/ First: if same raw class, just return this instance"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,168,f (superclass == _class) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,169,eturn this;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,171,"/ Otherwise, ensure compatibility"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,172,"assertSubclass(_class, superclass);"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,173,eturn _widen(superclass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,176,rotected abstract JavaType _narrow(Class<?> subclass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,179,<p>
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,180," Default implementation is just to call {@link #_narrow}, since"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,181, underlying type construction is usually identical
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,183,rotected JavaType _widen(Class<?> superclass) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,184,eturn _narrow(superclass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,187,ublic abstract JavaType narrowContentsBy(Class<?> contentClass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,189,ublic abstract JavaType widenContentsBy(Class<?> contentClass);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,193,"* Public API, simple accessors"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,197,ublic final Class<?> getRawClass() { return _class; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,200, Method that can be used to check whether this type has
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,201," specified Class as its type erasure. Put another way, returns"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,202, true if instantiation of this Type is given (type-erased) Class.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,204,ublic final boolean hasRawClass(Class<?> clz) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,205,eturn _class == clz;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,208,ublic boolean isAbstract() {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,209,eturn Modifier.isAbstract(_class.getModifiers());
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,213, Convenience method for checking whether underlying Java type
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,214, is a concrete class or not: abstract classes and interfaces
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,215, are not.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,217,ublic boolean isConcrete() {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,218,nt mod = _class.getModifiers();
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,219,f ((mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,220,eturn true;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,222,"* 19-Feb-2010, tatus: Holy mackarel; primitive types"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,223,    have 'abstract' flag set...
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,225,f (_class.isPrimitive()) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,226,eturn true;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,228,eturn false;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,231,ublic boolean isThrowable() {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,232,eturn Throwable.class.isAssignableFrom(_class);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,235,ublic boolean isArrayType() { return false; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,237,ublic final boolean isEnumType() { return _class.isEnum(); }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,239,ublic final boolean isInterface() { return _class.isInterface(); }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,241,ublic final boolean isPrimitive() { return _class.isPrimitive(); }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,243,ublic final boolean isFinal() { return Modifier.isFinal(_class.getModifiers()); }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,246, @return True if type represented is a container type; this includes
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,247,"    array, Map and Collection types."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,249,ublic abstract boolean isContainerType();
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,252," @return True if type is either true {@link java.util.Collection} type,"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,253,"    or something similar (meaning it has at least one type parameter,"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,254,    which describes type of contents)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,256,ublic boolean isCollectionLikeType() { return false; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,259," @return True if type is either true {@link java.util.Map} type,"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,260,    or something similar (meaning it has at least two type parameter;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,261,"    first one describing key type, second value type)"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,263,ublic boolean isMapLikeType() { return false; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,267,"* Public API, type parameter access"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,272, Method that can be used to find out if the type directly declares generic
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,273, parameters (for its direct super-class and/or super-interfaces).
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,275,ublic boolean hasGenericTypes()
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,277,eturn containedTypeCount() > 0;
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,281," Method for accessing key type for this type, assuming type"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,282, has such a concept (only Map types do)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,284,ublic JavaType getKeyType() { return null; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,287," Method for accessing content type of this type, if type has"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,288," such a thing: simple types do not, structured types do"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,289," (like arrays, Collections and Maps)"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,291,ublic JavaType getContentType() { return null; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,294, Method for checking how many contained types this type
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,295," has. Contained types are usually generic types, so that"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,296, generic Maps have 2 contained types.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,298,ublic int containedTypeCount() { return 0; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,301," Method for accessing definitions of contained (""child"")"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,302, types.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,304, @param index Index of contained type to return
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,306," @return Contained type at index, or null if no such type"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,307,    exists (no exception thrown)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,309,ublic JavaType containedType(int index) { return null; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,312, Method for accessing name of type variable in indicated
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,313," position. If no name is bound, will use placeholders (derived"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,314, from 0-based index); if no type variable or argument exists
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,315," with given index, null is returned."
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,317, @param index Index of contained type to return
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,319," @return Contained type at index, or null if no such type"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,320,    exists (no exception thrown)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,322,ublic String containedTypeName(int index) { return null; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,326,"* Semi-public API, accessing handlers"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,331," Method for accessing value handler associated with this type, if any"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,333,"SuppressWarnings(""unchecked"")"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,334,ublic <T> T getValueHandler() { return (T) _valueHandler; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,337," Method for accessing type handler associated with this type, if any"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,339,"SuppressWarnings(""unchecked"")"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,340,ublic <T> T getTypeHandler() { return (T) _typeHandler; }
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,344,* Support for producing signatures (1.6+)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,349, Method that can be used to serialize type into form from which
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,350, it can be fully deserialized from at a later point (using
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,351, <code>TypeFactory</code> from mapper package).
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,352, For simple types this is same as calling
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,353," {@link Class#getName}, but for structured types it may additionally"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,354, contain type information about contents.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,356,ublic abstract String toCanonical();
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,359, Method for accessing signature that contains generic
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,360," type information, in form compatible with JVM 1.5"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,361," as per JLS. It is a superset of {@link #getErasedSignature},"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,362, in that generic information can be automatically removed
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,363, if necessary (just remove outermost
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,364, angle brackets along with content inside)
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,366,ublic String getGenericSignature() {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,367,tringBuilder sb = new StringBuilder(40);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,368,etGenericSignature(sb);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,369,eturn sb.toString();
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,374, @param sb StringBuilder to append signature to
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,376, @return StringBuilder that was passed in; returned to allow
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,377, call chaining
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,379,ublic abstract StringBuilder getGenericSignature(StringBuilder sb);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,382, Method for accessing signature without generic
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,383," type information, in form compatible with all versions"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,384," of JVM, and specifically used for type descriptions"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,385, when generating byte code.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,387,ublic String getErasedSignature() {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,388,tringBuilder sb = new StringBuilder(40);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,389,etErasedSignature(sb);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,390,eturn sb.toString();
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,394, Method for accessing signature without generic
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,395," type information, in form compatible with all versions"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,396," of JVM, and specifically used for type descriptions"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,397, when generating byte code.
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,399, @param sb StringBuilder to append signature to
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,401, @return StringBuilder that was passed in; returned to allow
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,402, call chaining
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,404,ublic abstract StringBuilder getErasedSignature(StringBuilder sb);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,408,* Helper methods
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,412,"rotected void _assertSubclass(Class<?> subclass, Class<?> superClass)"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,414,f (!_class.isAssignableFrom(subclass)) {
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,415,"hrow new IllegalArgumentException(""Class ""+subclass.getName()+"" is not assignable to ""+_class.getName());"
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,421,* Standard methods; let's make them abstract to force override
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,425,Override
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,426,ublic abstract String toString();
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,428,Override
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,429,ublic abstract boolean equals(Object o);
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,431,Override
False,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,src/main/java/com/fasterxml/jackson/core/type/JavaType.java,432,ublic final int hashCode() { return _hashCode; }
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,1,package com.fasterxml.jackson.core.type;
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,4,* Type abstraction that represents Java type that has been resolved
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,5,"* (i.e. has all generic information, if any, resolved to concrete"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,6,* types).
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,7,"* Note that this is an intermediate type, and all concrete instances"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,8,"* MUST be of type <code>JavaType</code> from ""databind"" bundle -- this"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,9,* abstraction is only needed so that types can be passed through
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,10,* {@link com.fasterxml.jackson.core.JsonParser#readValueAs} methods.
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,12,* @since 2.0
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,14,public abstract class ResolvedType
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,18,"/* Public API, simple property accessors"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,23,* Accessor for type-erased {@link Class} of resolved type.
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,25,public abstract Class<?> getRawClass();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,27,public abstract boolean hasRawClass(Class<?> clz);
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,29,public abstract boolean isAbstract();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,31,public abstract boolean isConcrete();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,33,public abstract boolean isThrowable();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,35,public abstract boolean isArrayType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,37,public abstract boolean isEnumType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,39,public abstract boolean isInterface();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,41,public abstract boolean isPrimitive();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,43,public abstract boolean isFinal();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,45,public abstract boolean isContainerType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,47,public abstract boolean isCollectionLikeType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,49,public abstract boolean isMapLikeType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,53,"/* Public API, type parameter access"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,58,* Method that can be used to find out if the type directly declares generic
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,59,* parameters (for its direct super-class and/or super-interfaces).
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,61,public abstract boolean hasGenericTypes();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,64,"* Method for accessing key type for this type, assuming type"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,65,* has such a concept (only Map types do)
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,67,public abstract ResolvedType getKeyType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,70,"* Method for accessing content type of this type, if type has"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,71,"* such a thing: simple types do not, structured types do"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,72,"* (like arrays, Collections and Maps)"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,74,public abstract ResolvedType getContentType();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,77,* Method for checking how many contained types this type
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,78,"* has. Contained types are usually generic types, so that"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,79,* generic Maps have 2 contained types.
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,81,public abstract int containedTypeCount();
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,84,"* Method for accessing definitions of contained (""child"")"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,85,* types.
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,87,* @param index Index of contained type to return
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,89,"* @return Contained type at index, or null if no such type"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,90,*    exists (no exception thrown)
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,92,public abstract ResolvedType containedType(int index);
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,95,* Method for accessing name of type variable in indicated
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,96,"* position. If no name is bound, will use placeholders (derived"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,97,* from 0-based index); if no type variable or argument exists
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,98,"* with given index, null is returned."
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,100,* @param index Index of contained type to return
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,102,"* @return Contained type at index, or null if no such type"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,103,*    exists (no exception thrown)
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,105,public abstract String containedTypeName(int index);
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,109,"/* Public API, other"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,114,* Method that can be used to serialize type into form from which
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,115,* it can be fully deserialized from at a later point (using
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,116,* <code>TypeFactory</code> from mapper package).
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,117,* For simple types this is same as calling
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,118,"* {@link Class#getName}, but for structured types it may additionally"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,119,* contain type information about contents.
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,121,public abstract String toCanonical();
False,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,7," This class is used to pass full generics type information, and"
False,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,8, avoid problems with type erasure (that basically removes most
False,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,9, usable type references from runtime Class objects).
False,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,10, It is based on ideas from
True,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,7,* This generic abstract class is used for obtaining full generics type information
True,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,8,* by sub-classing; it must be converted to {@link ResolvedType} implementation
True,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,9,"* (implemented by <code>JavaType</code> from ""databind"" bundle) to be used."
True,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,10,* Class is based on ideas from
False,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,24, which can be passed to methods that accept TypeReference.
True,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,24,"* which can be passed to methods that accept TypeReference, or resolved"
True,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,src/main/java/com/fasterxml/jackson/core/type/TypeReference.java,25,* using <code>TypeFactory</code> to obtain {@link ResolvedType}.
