is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,809,ublic abstract void writeTree(JsonNode rootNode)
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,809,public abstract void writeTree(TreeNode rootNode)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,1,ackage com.fasterxml.jackson.core;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,3,mport java.io.IOException;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,4,mport java.math.BigDecimal;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,5,mport java.math.BigInteger;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,6,mport java.util.*;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,9," Base class for all JSON nodes, which form the basis of JSON"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,10, Tree Model that Jackson implements.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,11, One way to think of these nodes is to consider them
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,12, similar to DOM nodes in XML DOM trees.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,13,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,14," As a general design rule, most accessors (""getters"") are included"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,15," in this base class, to allow for traversing structure without"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,16," type casts. Most mutators, however, need to be accessed through"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,17, specific sub-classes (such as <code>ObjectNode</code>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,18, and <code>ArrayNode</code>).
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,19, This seems sensible because proper type
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,20, information is generally available when building or modifying
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,21," trees, but less often when reading a tree (newly built from"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,22, parsed JSON content).
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,23,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,24, Actual concrete sub-classes can be found from package
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,25," <code>com.fasterxml.jackson.databind.node</code>, which is in 'mapper' jar"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,26," (whereas this class is in 'core' jar, since it is declared as"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,27, nominal type for operations in {@link ObjectCodec})
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,29,ublic abstract class JsonNode
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,30,mplements Iterable<JsonNode>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,32,rotected final static List<JsonNode> NO_NODES = Collections.emptyList();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,33,rotected final static List<String> NO_STRINGS = Collections.emptyList();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,37,"* Construction, related"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,41,rotected JsonNode() { }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,44, Method that can be called to get a node that is guaranteed
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,45, not to allow changing of this node through mutators on
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,46, this node or any of its children.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,47, This means it can either make a copy of this node (and all
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,48," mutable children and grand children nodes), or node itself"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,49, if it is immutable.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,50,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,51, Note: return type is guaranteed to have same type as the
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,52, node method is called on; which is why method is declared
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,53, with local generic type.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,55, @since 2.0
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,57, @return Node that is either a copy of this node (and all non-leaf
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,58,"    children); or, for immutable leaf nodes, node itself."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,60,ublic abstract <T extends JsonNode> T deepCopy();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,64,"* Public API, type introspection"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,68,"/ // First high-level division between values, containers and ""missing"""
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,71, Method that returns true for all value nodes: ones that
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,72," are not containers, and that do not represent ""missing"" nodes"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,73," in the path. Such value nodes represent String, Number, Boolean"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,74, and null values from JSON.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,75,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,76," Note: one and only one of methods {@link #isValueNode},"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,77, {@link #isContainerNode} and {@link #isMissingNode} ever
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,78, returns true for any given node.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,80,ublic boolean isValueNode() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,83, Method that returns true for container nodes: Arrays and Objects.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,84,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,85," Note: one and only one of methods {@link #isValueNode},"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,86, {@link #isContainerNode} and {@link #isMissingNode} ever
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,87, returns true for any given node.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,89,ublic boolean isContainerNode() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,92," Method that returns true for ""virtual"" nodes which represent"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,93, missing entries constructed by path accessor methods when
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,94, there is no actual node matching given criteria.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,95,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,96," Note: one and only one of methods {@link #isValueNode},"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,97, {@link #isContainerNode} and {@link #isMissingNode} ever
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,98, returns true for any given node.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,100,ublic boolean isMissingNode() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,102,/ // Then more specific type introspection
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,103,/ // (along with defaults to be overridden)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,106, @return True if this node represents JSON Array
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,108,ublic boolean isArray() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,111, @return True if this node represents JSON Object
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,113,ublic boolean isObject() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,116, Method that can be used to check if the node is a wrapper
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,117," for a POJO (""Plain Old Java Object"" aka ""bean""."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,118, Returns true only for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,119, instances of <code>POJONode</code>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,121, @return True if this node wraps a POJO
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,123,ublic boolean isPojo() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,126, @return True if this node represents a numeric JSON
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,127,   value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,129,ublic boolean isNumber() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,133, @return True if this node represents an integral (integer)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,134,   numeric JSON value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,136,ublic boolean isIntegralNumber() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,139, @return True if this node represents a non-integral
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,140,   numeric JSON value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,142,ublic boolean isFloatingPointNumber() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,145, Method that can be used to check whether contained value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,146, is a number represented as Java <code>int</code>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,147," Note, however, that even if this method returns false, it"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,148, is possible that conversion would be possible from other numeric
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,149," types -- to check if this is possible, use"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,150, {@link #canConvertToInt()} instead.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,152, @return True if the value contained by this node is stored as Java int
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,154,ublic boolean isInt() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,157, Method that can be used to check whether contained value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,158, is a number represented as Java <code>long</code>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,159," Note, however, that even if this method returns false, it"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,160, is possible that conversion would be possible from other numeric
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,161," types -- to check if this is possible, use"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,162, {@link #canConvertToInt()} instead.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,164, @return True if the value contained by this node is stored as Java <code>long</code>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,166,ublic boolean isLong() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,168,ublic boolean isDouble() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,169,ublic boolean isBigDecimal() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,170,ublic boolean isBigInteger() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,172,ublic boolean isTextual() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,175, Method that can be used to check if this node was created from
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,176," JSON boolean value (literals ""true"" and ""false"")."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,178,ublic boolean isBoolean() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,181, Method that can be used to check if this node was created from
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,182, JSON literal null value.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,184,ublic boolean isNull() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,187, Method that can be used to check if this node represents
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,188, binary data (Base64 encoded). Although this will be externally
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,189," written as JSON String value, {@link #isTextual} will"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,190, return false if this method returns true.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,192, @return True if this node represents base64 encoded binary data
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,194,ublic boolean isBinary() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,197, Method that can be used for efficient type detection
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,198, when using stream abstraction for traversing nodes.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,199, Will return the first {@link JsonToken} that equivalent
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,200, stream event would produce (for most nodes there is just
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,201, one token but for structured/container types multiple)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,203,ublic abstract JsonToken asToken();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,206," If this node is a numeric type (as per {@link #isNumber}),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,207, returns native type that node uses to store the numeric value;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,208, otherwise returns null.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,210," @return Type of number contained, if any; or null if node does not"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,211,  contain numeric value.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,213,ublic abstract JsonParser.NumberType numberType();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,216, Method that can be used to check whether this node is a numeric
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,217, node ({@link #isNumber} would return true) AND its value fits
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,218," within Java's 32-bit signed integer type, <code>int</code>."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,219, Note that floating-point numbers are convertible if the integral
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,220, part fits without overflow (as per standard Java coercion rules)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,222, @since 2.0
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,224,ublic boolean canConvertToInt() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,227, Method that can be used to check whether this node is a numeric
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,228, node ({@link #isNumber} would return true) AND its value fits
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,229," within Java's 64-bit signed integer type, <code>long</code>."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,230, Note that floating-point numbers are convertible if the integral
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,231, part fits without overflow (as per standard Java coercion rules)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,233, @since 2.0
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,235,ublic boolean canConvertToLong() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,239,"* Public API, straight value access"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,244, Method to use for accessing String values.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,245, Does <b>NOT</b> do any conversions for non-String value nodes;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,246, for non-String values (ones for which {@link #isTextual} returns
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,247, false) null will be returned.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,248," For String values, null is never returned (but empty Strings may be)"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,250," @return Textual value this node contains, iff it is a textual"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,251,   JSON node (comes from JSON String value entry)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,253,ublic String textValue() { return null; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,256, Method to use for accessing binary content of binary nodes (nodes
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,257, for which {@link #isBinary} returns true); or for Text Nodes
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,258," (ones for which {@link #getTextValue} returns non-null value),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,259, to read decoded base64 data.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,260," For other types of nodes, returns null."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,262," @return Binary data this node contains, iff it is a binary"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,263,   node; null otherwise
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,265,ublic byte[] binaryValue() throws IOException
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,267,eturn null;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,271, Method to use for accessing JSON boolean values (value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,272, literals 'true' and 'false').
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,273," For other types, always returns false."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,275," @return Textual value this node contains, iff it is a textual"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,276,   json node (comes from JSON String value entry)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,278,ublic boolean booleanValue() { return false; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,281," Returns numeric value for this node, <b>if and only if</b>"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,282, this node is numeric ({@link #isNumber} returns true); otherwise
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,283, returns null
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,285," @return Number value this node contains, if any (null for non-number"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,286,   nodes).
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,288,ublic Number numberValue() { return null; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,291," Returns integer value for this node, <b>if and only if</b>"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,292, this node is numeric ({@link #isNumber} returns true). For other
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,293, types returns 0.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,294," For floating-point numbers, value is truncated using default"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,295," Java coercion, similar to how cast from double to int operates."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,297," @return Integer value this node contains, if any; 0 for non-number"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,298,   nodes.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,300,ublic int intValue() { return 0; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,302,ublic long longValue() { return 0L; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,303,ublic double doubleValue() { return 0.0; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,304,ublic BigDecimal decimalValue() { return BigDecimal.ZERO; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,305,ublic BigInteger bigIntegerValue() { return BigInteger.ZERO; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,308, Method for accessing value of the specified element of
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,309," an array node. For other nodes, null is always returned."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,310,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,311," For array nodes, index specifies"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,312, exact location within array and allows for efficient iteration
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,313, over child elements (underlying storage is guaranteed to
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,314," be efficiently indexable, i.e. has random-access to elements)."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,315," If index is less than 0, or equal-or-greater than"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,316," <code>node.size()</code>, null is returned; no exception is"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,317, thrown for any index.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,319," @return Node that represent value of the specified element,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,320,   if this node is an array and has specified element.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,321,   Null otherwise.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,323,ublic JsonNode get(int index) { return null; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,326, Method for accessing value of the specified field of
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,327, an object node. If this node is not an object (or it
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,328," does not have a value for specified field name), or"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,329," if there is no field with such name, null is returned."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,331," @return Node that represent value of the specified field,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,332,   if this node is an object and has value for the specified
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,333,   field. Null otherwise.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,335,ublic JsonNode get(String fieldName) { return null; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,339,"* Public API, value access with conversion(s)/coercion(s)"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,344, Method that will return valid String representation of
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,345," the container value, if the node is a value node"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,346," (method {@link #isValueNode} returns true), otherwise"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,347, empty String.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,349,ublic abstract String asText();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,352, Method that will try to convert value of this node to a Java <b>int</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,353, Numbers are coerced using default Java rules; booleans convert to 0 (false)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,354," and 1 (true), and Strings are parsed using default Java language integer"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,355, parsing rules.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,356,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,357, If representation can not be converted to an int (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,358," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,359, default value of <b>0</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,361,ublic int asInt() {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,362,eturn asInt(0);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,366, Method that will try to convert value of this node to a Java <b>int</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,367, Numbers are coerced using default Java rules; booleans convert to 0 (false)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,368," and 1 (true), and Strings are parsed using default Java language integer"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,369, parsing rules.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,370,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,371, If representation can not be converted to an int (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,372," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,373, specified <b>defaultValue</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,375,ublic int asInt(int defaultValue) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,376,eturn defaultValue;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,380, Method that will try to convert value of this node to a Java <b>long</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,381, Numbers are coerced using default Java rules; booleans convert to 0 (false)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,382," and 1 (true), and Strings are parsed using default Java language integer"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,383, parsing rules.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,384,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,385, If representation can not be converted to an long (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,386," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,387, default value of <b>0</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,389,ublic long asLong() {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,390,eturn asLong(0L);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,394, Method that will try to convert value of this node to a Java <b>long</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,395, Numbers are coerced using default Java rules; booleans convert to 0 (false)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,396," and 1 (true), and Strings are parsed using default Java language integer"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,397, parsing rules.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,398,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,399, If representation can not be converted to an long (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,400," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,401, specified <b>defaultValue</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,403,ublic long asLong(long defaultValue) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,404,eturn defaultValue;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,408, Method that will try to convert value of this node to a Java <b>double</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,409, Numbers are coerced using default Java rules; booleans convert to 0.0 (false)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,410," and 1.0 (true), and Strings are parsed using default Java language integer"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,411, parsing rules.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,412,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,413, If representation can not be converted to an int (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,414," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,415, default value of <b>0.0</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,417,ublic double asDouble() {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,418,eturn asDouble(0.0);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,422, Method that will try to convert value of this node to a Java <b>double</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,423, Numbers are coerced using default Java rules; booleans convert to 0.0 (false)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,424," and 1.0 (true), and Strings are parsed using default Java language integer"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,425, parsing rules.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,426,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,427, If representation can not be converted to an int (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,428," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,429, specified <b>defaultValue</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,431,ublic double asDouble(double defaultValue) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,432,eturn defaultValue;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,436, Method that will try to convert value of this node to a Java <b>boolean</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,437," JSON booleans map naturally; integer numbers other than 0 map to true, and"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,438, 0 maps to false
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,439, and Strings 'true' and 'false' map to corresponding values.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,440,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,441, If representation can not be converted to a boolean value (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,442," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,443, default value of <b>false</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,445,ublic boolean asBoolean() {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,446,eturn asBoolean(false);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,450, Method that will try to convert value of this node to a Java <b>boolean</b>.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,451," JSON booleans map naturally; integer numbers other than 0 map to true, and"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,452, 0 maps to false
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,453, and Strings 'true' and 'false' map to corresponding values.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,454,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,455, If representation can not be converted to a boolean value (including structured types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,456," like Objects and Arrays),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,457, specified <b>defaultValue</b> will be returned; no exceptions are thrown.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,459,ublic boolean asBoolean(boolean defaultValue) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,460,eturn defaultValue;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,465,"* Public API, value find / existence check methods"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,470, Method that allows checking whether this node is JSON Object node
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,471, and contains value for specified property. If this is the case
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,472," (including properties with explicit null values), returns true;"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,473, otherwise returns false.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,474,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,475, This method is equivalent to:
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,476,<pre>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,477,   node.get(fieldName) != null
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,478,</pre>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,479," (since return value of get() is node, not value node contains)"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,481, @param fieldName Name of element to check
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,483," @return True if this node is a JSON Object node, and has a property"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,484,"   entry with specified name (with any value, including null value)"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,486,ublic boolean has(String fieldName) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,487,eturn get(fieldName) != null;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,491, Method that allows checking whether this node is JSON Array node
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,492, and contains a value for specified index
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,493, If this is the case
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,494," (including case of specified indexing having null as value), returns true;"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,495, otherwise returns false.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,496,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,497, Note: array element indexes are 0-based.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,498,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,499, This method is equivalent to:
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,500,<pre>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,501,   node.get(index) != null
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,502,</pre>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,504, @param index Index to check
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,506," @return True if this node is a JSON Object node, and has a property"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,507,"   entry with specified name (with any value, including null value)"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,509,ublic boolean has(int index) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,510,eturn get(index) != null;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,514, Method for finding a JSON Object field with specified name in this
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,515," node or its child nodes, and returning value it has."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,516," If no matching field is found in this node or its descendants, returns null."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,518, @param fieldName Name of field to look for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,520," @return Value of first matching node found, if any; null if none"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,522,ublic abstract JsonNode findValue(String fieldName);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,525," Method for finding JSON Object fields with specified name, and returning"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,526," found ones as a List. Note that sub-tree search ends if a field is found,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,527, so possible children of result nodes are <b>not</b> included.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,528," If no matching fields are found in this node or its descendants, returns"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,529, an empty List.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,531, @param fieldName Name of field to look for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,533,ublic final List<JsonNode> findValues(String fieldName)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,535,"ist<JsonNode> result = findValues(fieldName, null);"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,536,f (result == null) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,537,eturn Collections.emptyList();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,539,eturn result;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,543," Similar to {@link #findValues}, but will additionally convert"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,544," values into Strings, calling {@link #asText}."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,546,ublic final List<String> findValuesAsText(String fieldName)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,548,"ist<String> result = findValuesAsText(fieldName, null);"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,549,f (result == null) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,550,eturn Collections.emptyList();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,552,eturn result;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,556," Method similar to {@link #findValue}, but that will return a"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,557," ""missing node"" instead of null if no field is found. Missing node"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,558, is a specific kind of node for which {@link #isMissingNode}
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,559, returns true; and all value access methods return empty or
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,560, missing value.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,562, @param fieldName Name of field to look for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,564," @return Value of first matching node found; or if not found, a"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,565,"    ""missing node"" (non-null instance that has no value)"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,567,ublic abstract JsonNode findPath(String fieldName);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,570," Method for finding a JSON Object that contains specified field,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,571, within this node or its descendants.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,572," If no matching field is found in this node or its descendants, returns null."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,574, @param fieldName Name of field to look for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,576," @return Value of first matching node found, if any; null if none"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,578,ublic abstract JsonNode findParent(String fieldName);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,581," Method for finding a JSON Object that contains specified field,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,582, within this node or its descendants.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,583," If no matching field is found in this node or its descendants, returns null."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,585, @param fieldName Name of field to look for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,587," @return Value of first matching node found, if any; null if none"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,589,ublic final List<JsonNode> findParents(String fieldName)
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,591,"ist<JsonNode> result = findParents(fieldName, null);"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,592,f (result == null) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,593,eturn Collections.emptyList();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,595,eturn result;
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,598,"ublic abstract List<JsonNode> findValues(String fieldName, List<JsonNode> foundSoFar);"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,599,"ublic abstract List<String> findValuesAsText(String fieldName, List<String> foundSoFar);"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,600,"ublic abstract List<JsonNode> findParents(String fieldName, List<JsonNode> foundSoFar);"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,604,"* Public API, container access"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,609, Method that returns number of child nodes this node contains:
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,610," for Array nodes, number of child elements, for Object nodes,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,611," number of fields, and for all other nodes 0."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,613, @return For non-container nodes returns 0; for arrays number of
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,614,"   contained elements, and for objects number of fields."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,616,ublic int size() { return 0; }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,619, Same as calling {@link #getElements}; implemented so that
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,620," convenience ""for-each"" loop can be used for looping over elements"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,621, of JSON Array constructs.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,623,Override
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,624,ublic final Iterator<JsonNode> iterator() { return elements(); }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,627," Method for accessing all value nodes of this Node, iff"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,628," this node is a JSON Array or Object node. In case of Object node,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,629," field names (keys) are not included, only values."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,630," For other types of nodes, returns empty iterator."
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,632,ublic Iterator<JsonNode> elements() { return NO_NODES.iterator(); }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,635," Method for accessing names of all fields for this Node, iff"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,636, this node is a JSON Object node.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,638,ublic Iterator<String> fieldNames() { return NO_STRINGS.iterator(); }
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,641, @return Iterator that can be used to traverse all key/value pairs for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,642,   object nodes; empty iterator (no contents) for other types
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,644,"ublic Iterator<Map.Entry<String, JsonNode>> fields() {"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,645,"ollection<Map.Entry<String, JsonNode>> coll = Collections.emptyList();"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,646,eturn coll.iterator();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,651,"* Public API, path handling"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,656," This method is similar to {@link #get(String)}, except"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,657, that instead of returning null if no such value exists (due
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,658," to this node not being an object, or object not having value"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,659," for the specified field),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,660," a ""missing node"" (node that returns true for"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,661, {@link #isMissingNode}) will be returned. This allows for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,662, convenient and safe chained access via path calls.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,664,ublic abstract JsonNode path(String fieldName);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,667," This method is similar to {@link #get(int)}, except"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,668, that instead of returning null if no such element exists (due
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,669," to index being out of range, or this node not being an array),"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,670," a ""missing node"" (node that returns true for"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,671, {@link #isMissingNode}) will be returned. This allows for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,672, convenient and safe chained access via path calls.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,674,ublic abstract JsonNode path(int index);
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,677," Method that can be called on object nodes, to access a property"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,678," that has object value; or if no such property exists, to create and"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,679, return such object node.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,680," If node method is called on is not Object node,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,681," or if property exists and has value that is not object node,"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,682, {@link UnsupportedOperationException} is thrown
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,684,ublic JsonNode with(String propertyName) {
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,685,"hrow new UnsupportedOperationException(""JsonNode not of type ObjectNode (but """
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,686,"getClass().getName()+""), can not call with() on it"");"
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,691,* Public API: converting to/from Streaming API
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,696, Method for constructing a {@link JsonParser} instance for
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,697, iterating over contents of the tree that this
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,698, node is root of.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,699, Functionally equivalent to first serializing tree using
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,700, {@link ObjectCodec} and then re-parsing but
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,701, more efficient.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,703,ublic abstract JsonParser traverse();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,707,* Overridden standard methods
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,712,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,713, Note: marked as abstract to ensure all implementation
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,714, classes define it properly.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,716,Override
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,717,ublic abstract String toString();
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,720, Equality for node objects is defined as full (deep) value
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,721, equality. This means that it is possible to compare complete
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,722, JSON trees for equality by comparing equality of root nodes.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,723,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,724, Note: marked as abstract to ensure all implementation
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,725, classes define it properly and not rely on definition
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,726, from {@link java.lang.Object}.
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,728,Override
False,src/main/java/com/fasterxml/jackson/core/JsonNode.java,src/main/java/com/fasterxml/jackson/core/JsonNode.java,729,ublic abstract boolean equals(Object o);
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1223, represented by root {@link JsonNode} of resulting model.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1223,* represented by root {@link TreeNode} of resulting model.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1228,ublic JsonNode readValueAsTree()
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1228,public TreeNode readValueAsTree()
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,52, Method to deserialize JSON content as tree expressed
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,53, using set of {@link JsonNode} instances. Returns
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,54, root of the resulting tree (where root can consist
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,55, of just a single node if the current event is a
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,56," value event, not container)."
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,52,"* Method to deserialize JSON content into a POJO, type specified"
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,53,"* with fully resolved type object (so it can be a generic type,"
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,54,* including containers like {@link java.util.Collection} and
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,55,* {@link java.util.Map}).
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,63, using set of {@link JsonNode} instances. Returns
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,62,* using set of {@link TreeNode} instances. Returns
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,68,ublic abstract JsonNode readTree(JsonParser jp)
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,67,public abstract <T extends TreeNode> T readTree(JsonParser jp)
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,106," Method to serialize given Json Tree, using generator"
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,107, provided.
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,109,"ublic abstract void writeTree(JsonGenerator jgen, JsonNode rootNode)"
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,110,"hrows IOException, JsonProcessingException;"
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,122,ublic abstract JsonNode createObjectNode();
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,114,public abstract TreeNode createObjectNode();
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,128,ublic abstract JsonNode createArrayNode();
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,120,public abstract TreeNode createArrayNode();
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,135,ublic abstract JsonParser treeAsTokens(JsonNode n);
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,127,public abstract JsonParser treeAsTokens(TreeNode n);
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,142,"ublic abstract <T> T treeToValue(JsonNode n, Class<T> valueType)"
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,134,"public abstract <T> T treeToValue(TreeNode n, Class<T> valueType)"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,1,package com.fasterxml.jackson.core;
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,4,"* Marker interface used to denote JSON Tree nodes, as far as"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,5,* the core package knows them (which is very little): mostly
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,6,* needed to allow {@link ObjectCodec} to have some level
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,7,* of interoperability.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,8,* All real functionality is within <code>JsonNode</code>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,9,* base class in <code>mapper</code> package.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,10,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,11,* Note that in Jackson 1.x <code>JsonNode</code> itself
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,12,* was part of core package: Jackson 2.x refactored this
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,13,"* since conceptually Tree Model is part of mapper package,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,14,* and so part visible to <code>core</code> package should
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,15,* be minimized.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,17,public interface TreeNode
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,21,/* Minimal introspection methods
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,26,* Method that can be used for efficient type detection
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,27,* when using stream abstraction for traversing nodes.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,28,* Will return the first {@link JsonToken} that equivalent
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,29,* stream event would produce (for most nodes there is just
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,30,* one token but for structured/container types multiple)
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,32,public abstract JsonToken asToken();
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,35,"* If this node is a numeric type (as per {@link #isNumber}),"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,36,* returns native type that node uses to store the numeric value;
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,37,* otherwise returns null.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,39,"* @return Type of number contained, if any; or null if node does not"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,40,*  contain numeric value.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,42,public abstract JsonParser.NumberType numberType();
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,46,/* Public API: converting to/from Streaming API
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,51,* Method for constructing a {@link JsonParser} instance for
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,52,* iterating over contents of the tree that this node is root of.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,53,* Functionally equivalent to first serializing tree using
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,54,* {@link ObjectCodec} and then re-parsing but
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,55,* more efficient.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,57,public abstract JsonParser traverse();
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,254,ublic void writeTree(JsonNode rootNode)
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,254,public void writeTree(TreeNode rootNode)
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,264,"objectCodec.writeTree(this, rootNode);"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,264,"_objectCodec.writeValue(this, rootNode);"
False,src/main/java/com/fasterxml/jackson/core/package-info.java,src/main/java/com/fasterxml/jackson/core/package-info.java,14,<li>{@link com.fasterxml.jackson.core.JsonNode} is included
True,src/main/java/com/fasterxml/jackson/core/package-info.java,src/main/java/com/fasterxml/jackson/core/package-info.java,14,*<li>{@link com.fasterxml.jackson.core.TreeNode} is included
False,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,262,"ublic void writeTree(JsonNode rootNode) throws IOException, JsonProcessingException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,262,"public void writeTree(TreeNode rootNode) throws IOException, JsonProcessingException {"
