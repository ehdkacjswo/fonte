is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,268, Method that can be used to get access to object that is used
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,269, as target for generated output; this is usually either
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,270," {@link OutputStream} or {@link Writer}, depending on what"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,271, generator was constructed with.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,272, Note that returned value may be null in some cases; including
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,273, case where implementation does not want to exposed raw
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,274, source to caller.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,275," In cases where output has been decorated, object returned here"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,276, is the decorated version; this allows some level of interaction
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,277, between users of generator and decorator object.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,278,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,279, In general use of this accessor should be considered as
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,280," ""last effort"", i.e. only used if no other mechanism is applicable."
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,282,ublic Object getOutputTarget() {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,283,eturn null;
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,287," Helper method, usually equivalent to:"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,288,<code>
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,289,   getOutputContext().getCurrentValue();
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,290,</code>
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,292, @since 2.5
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,294,ublic Object getCurrentValue() {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,295,sonStreamContext ctxt = getOutputContext();
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,296,eturn (ctxt == null) ? null : ctxt.getCurrentValue();
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,300," Helper method, usually equivalent to:"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,301,<code>
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,302,   getOutputContext().setCurrentValue(v);
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,303,</code>
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,305, @since 2.5
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,307,ublic void setCurrentValue(Object v) {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,308,sonStreamContext ctxt = getOutputContext();
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,309,f (ctxt != null) {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,310,txt.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,471,"/* Public API, output state access"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,476,* Method that can be used to get access to object that is used
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,477,* as target for generated output; this is usually either
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,478,"* {@link OutputStream} or {@link Writer}, depending on what"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,479,* generator was constructed with.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,480,* Note that returned value may be null in some cases; including
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,481,* case where implementation does not want to exposed raw
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,482,* source to caller.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,483,"* In cases where output has been decorated, object returned here"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,484,* is the decorated version; this allows some level of interaction
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,485,* between users of generator and decorator object.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,486,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,487,* In general use of this accessor should be considered as
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,488,"* ""last effort"", i.e. only used if no other mechanism is applicable."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,490,public Object getOutputTarget() {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,491,return null;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,495,* Method for verifying amount of content that is buffered by generator
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,496,"* but not yet flushed to the underlying target (stream, writer),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,497,"* in units (byte, char) that the generator implementation uses for buffering;"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,498,* or -1 if this information is not available.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,499,"* Unit used is often the same as the unit of underlying target (that is,"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,500,"* `byte` for {@link java.io.OutputStream}, `char` for {@link java.io.Writer}),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,501,* but may differ if buffering is done before encoding.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,502,* Default JSON-backed implementations do use matching units.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,503,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,504,* Note: non-JSON implementations will be retrofitted for 2.6 and beyond;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,505,* please report if you see -1 (missing override)
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,507,"* @return Amount of content buffered in internal units, if amount known and"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,508,*    accessible; -1 if not accessible.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,510,* @since 2.6
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,512,public int getOutputBuffered() {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,513,return -1;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,517,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,518,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,519,*   getOutputContext().getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,520,*</code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,522,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,524,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,525,JsonStreamContext ctxt = getOutputContext();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,526,return (ctxt == null) ? null : ctxt.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,530,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,531,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,532,*   getOutputContext().setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,533,*</code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,535,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,537,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,538,JsonStreamContext ctxt = getOutputContext();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,539,if (ctxt != null) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,540,ctxt.setCurrentValue(v);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,148,outputMaxContiguous = _outputEnd >> 3;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,148,_outputMaxContiguous = (_outputEnd >> 3);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,165,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,166,public int getOutputBuffered() {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,167,"// Assuming tail is always valid, set to 0 on close"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,168,return _outputTail;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1030,f (_outputBuffer != null
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1036,if ((_outputBuffer != null)
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1050,_outputTail = 0; // just to ensure we don't think there's anything buffered
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,91,@Override
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,92,public int getOutputBuffered() {
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,93,// Assuming tail and head are kept but... trust and verify:
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,94,int len = _outputTail - _outputHead;
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,95,"return Math.max(0, len);"
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,843,ublic void close()
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,844,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,850,public void close() throws IOException
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,872,_outputHead = 0;
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,873,_outputTail = 0;
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,80,@Override public int getOutputBuffered() { return delegate.getOutputBuffered(); }
