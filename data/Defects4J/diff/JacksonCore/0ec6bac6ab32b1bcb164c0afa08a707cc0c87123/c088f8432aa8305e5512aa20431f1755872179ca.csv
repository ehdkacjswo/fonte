is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,15,ublic void testSimpleInt()
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,16,hrows Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,15,public void testSimpleBoolean() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,17,"JsonParser jp = createParserUsingReader(""[ true ]"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,18,"assertToken(JsonToken.START_ARRAY, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,19,"assertToken(JsonToken.VALUE_TRUE, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,20,"assertEquals(true, jp.getBooleanValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,21,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,24,public void testSimpleInt() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,38,jp.close();
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,32,ublic void testIntRange()
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,33,hrows Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,41,public void testIntRange() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,55,ublic void testInvalidIntAccess()
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,56,hrows Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,58,"sonParser jp = createParserUsingReader(""[ \""abc\"" ]"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,59,"ssertToken(JsonToken.START_ARRAY, jp.nextToken());"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,60,"ssertToken(JsonToken.VALUE_STRING, jp.nextToken());"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,61,ry {
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,62,p.getIntValue();
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,63,"ail(""Expected error trying to call getIntValue on non-numeric value"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,64, catch (JsonParseException e) {
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,65,"erifyException(e, ""can not use numeric value accessors"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,150,// for [Issue#78]
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,151,public void testBigNumbers() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,153,StringBuilder sb = new StringBuilder();
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,154,for (int i = 0; i < 520; ++i) { // input buffer is 512 bytes by default
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,155,sb.append('1');
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,157,final String NUMBER_STR = sb.toString();
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,158,BigInteger biggie = new BigInteger(NUMBER_STR);
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,160,for (int i = 0; i < 2; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,161,JsonParser jp;
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,162,if (i == 0) {
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,163,jp = createParserUsingReader(NUMBER_STR);
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,164,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,165,"jp = this.createParserUsingStream(NUMBER_STR, ""UTF-8"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,167,"assertToken(JsonToken.VALUE_NUMBER_INT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,168,"assertEquals(JsonParser.NumberType.BIG_INTEGER, jp.getNumberType());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,169,"assertEquals(NUMBER_STR, jp.getText());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,170,"assertEquals(biggie, jp.getBigIntegerValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,171,jp.close();
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,349,* New tests for 1.3 features
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,368,/* Tests for invalid access
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,353,ublic void testSimpleBoolean()
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,354,hrows Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,356,"sonParser jp = createParserUsingReader(""[ true ]"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,357,"ssertToken(JsonToken.START_ARRAY, jp.nextToken());"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,358,"ssertToken(JsonToken.VALUE_TRUE, jp.nextToken());"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,359,"ssertEquals(true, jp.getBooleanValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,386,public void testInvalidIntAccess() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,388,"JsonParser jp = createParserUsingReader(""[ \""abc\"" ]"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,389,"assertToken(JsonToken.START_ARRAY, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,390,"assertToken(JsonToken.VALUE_STRING, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,391,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,392,jp.getIntValue();
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,393,"fail(""Expected error trying to call getIntValue on non-numeric value"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,394,} catch (JsonParseException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,395,"verifyException(e, ""can not use numeric value accessors"");"
