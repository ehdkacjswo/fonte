is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,29,rotected final static int DERIVED_FEATURES_MASK = Feature.WRITE_NUMBERS_AS_STRINGS.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,29,protected final static int DERIVED_FEATURES_MASK =
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,30,Feature.WRITE_NUMBERS_AS_STRINGS.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,146,"// why not switch? Requires addition of a generated class, alas"
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,88,* Flag that is set if quoting is not to be added around
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,89,* JSON Object property names.
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,91,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,93,protected boolean _cfgUnqNames;
False,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,97,f (isEnabled(Feature.ESCAPE_NON_ASCII)) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,105,if (Feature.ESCAPE_NON_ASCII.enabledIn(features)) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,109,_cfgUnqNames = !Feature.QUOTE_FIELD_NAMES.enabledIn(features);
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,118,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,119,public JsonGenerator enable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,120,super.enable(f);
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,121,if (f == Feature.QUOTE_FIELD_NAMES) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,122,_cfgUnqNames = false;
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,124,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,127,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,128,public JsonGenerator disable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,129,super.disable(f);
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,130,if (f == Feature.QUOTE_FIELD_NAMES) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,131,_cfgUnqNames = true;
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,133,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,136,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,137,"protected void _checkStdFeatureChanges(int newFeatureFlags, int changedFeatures) {"
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,138,"super._checkStdFeatureChanges(newFeatureFlags, changedFeatures);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java,139,_cfgUnqNames = !Feature.QUOTE_FIELD_NAMES.enabledIn(newFeatureFlags);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,96,* Quick flags
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,101, Flag that is set if quoting is not to be added around
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,102, JSON Object property names.
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,104,rotected boolean _cfgUnqNames;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,133,cfgUnqNames = !Feature.QUOTE_FIELD_NAMES.enabledIn(features);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,151,cfgUnqNames = !Feature.QUOTE_FIELD_NAMES.enabledIn(features);
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,139,f (!isEnabled(Feature.QUOTE_FIELD_NAMES)) {
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,139,if (_cfgUnqNames) {
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,169,f (!isEnabled(Feature.QUOTE_FIELD_NAMES)) {
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,169,if (_cfgUnqNames) {
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,273,f (isEnabled(Feature.QUOTE_FIELD_NAMES)) { // standard
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,273,"if (_cfgUnqNames) {// non-standard, omit quotes"
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,274,_writeString(name);
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,275,} else {
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,283," else { // non-standard, omit quotes"
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,284,writeString(name);
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,297,f (isEnabled(Feature.QUOTE_FIELD_NAMES)) { // standard
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,297,"if (_cfgUnqNames) {// non-standard, omit quotes"
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,298,"writeRaw(quoted, 0, quoted.length);"
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,299,} else {
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,307," else { // non-standard, omit quotes"
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,308,"riteRaw(quoted, 0, quoted.length);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,16,private final JsonFactory JSON_F = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,18,sonFactory jf = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,19,sonGenerator jg = jf.createGenerator(new StringWriter());
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,20,JsonGenerator jg = JSON_F.createGenerator(new StringWriter());
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,38,ublic void testNonNumericQuoting()
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,39,hrows IOException
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,39,public void testNonNumericQuoting() throws IOException
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,129,// for [core#246]
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,130,public void testFieldNameQuotingEnabled() throws IOException
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,132,"// // First, test with default factory, with quoting enabled by default"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,134,"// First, default, with quotes"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,135,"_testFieldNameQuotingEnabled(JSON_F, true, true, ""{\""foo\"":1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,136,"_testFieldNameQuotingEnabled(JSON_F, false, true, ""{\""foo\"":1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,138,// then without quotes
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,139,"_testFieldNameQuotingEnabled(JSON_F, true, false, ""{foo:1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,140,"_testFieldNameQuotingEnabled(JSON_F, false, false, ""{foo:1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,142,// // Then with alternatively configured factory
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,144,JsonFactory JF2 = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,145,JF2.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,147,"_testFieldNameQuotingEnabled(JF2, true, true, ""{\""foo\"":1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,148,"_testFieldNameQuotingEnabled(JF2, false, true, ""{\""foo\"":1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,150,// then without quotes
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,151,"_testFieldNameQuotingEnabled(JF2, true, false, ""{foo:1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,152,"_testFieldNameQuotingEnabled(JF2, false, false, ""{foo:1}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,155,"private void _testFieldNameQuotingEnabled(JsonFactory jf, boolean useBytes,"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,156,"boolean useQuotes, String exp) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,158,ByteArrayOutputStream bytes = useBytes ? new ByteArrayOutputStream() : null;
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,159,StringWriter sw = useBytes ? null : new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,160,JsonGenerator gen = useBytes ? jf.createGenerator(bytes) : jf.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,161,if (useQuotes) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,162,gen.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,163,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,164,gen.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,167,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,168,"gen.writeFieldName(""foo"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,169,gen.writeNumber(1);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,170,gen.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,171,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,173,"String json = useBytes ? bytes.toString(""UTF-8"") : sw.toString();"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,174,"assertEquals(exp, json);"
