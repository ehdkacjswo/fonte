is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,149,"// 23-Nov-2015, tatu: for [core#223], if and when it gets implemented"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,151,* Feature that specifies handling of UTF-8 content that contains
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,152,"* characters beyond BMP (Basic Multilingual Plane), which are"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,153,* represented in UCS-2 (Java internal character encoding) as two
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,154,"* ""surrogate"" characters. If feature is enabled, these surrogate"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,155,"* pairs are separately escaped using backslash escapes; if disabled,"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,156,"* native output (4-byte UTF-8 sequence, or, with char-backed output"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,157,"* targets, writing of surrogates as is which is typically converted"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,158,* by {@link java.io.Writer} into 4-byte UTF-8 sequence eventually)
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,159,* is used.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,160,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,161,* Note that the original JSON specification suggests use of escaping;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,162,* but that this is not correct from standard UTF-8 handling perspective.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,163,"* Because of two competing goals, this feature was added to allow either"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,164,"* behavior to be used, but defaulting to UTF-8 specification compliant"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,165,* mode.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,166,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,167,* Feature is disabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,169,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,171,"//        ESCAPE_UTF8_SURROGATES(false),"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,750,ublic void writeNumber(short s)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,751,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,750,public void writeNumber(short s) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,775,ublic void writeNumber(int i)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,776,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,774,public void writeNumber(int i) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,801,ublic void writeNumber(long l)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,802,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,799,public void writeNumber(long l) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,827,ublic void writeNumber(BigInteger value)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,828,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,824,public void writeNumber(BigInteger value) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,842,ublic void writeNumber(double d)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,843,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,838,public void writeNumber(double d) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,846,/ [JACKSON-139]
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,848,& isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,842,&& Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features)))) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,858,ublic void writeNumber(float f)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,859,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,852,public void writeNumber(float f) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,864,& isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,857,&& Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features)))) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,874,ublic void writeNumber(BigDecimal value)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,875,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,867,public void writeNumber(BigDecimal value) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,882,tring raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,874,String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,875,? value.toPlainString() : value.toString();
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,884, else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,877,} else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,892,ublic void writeNumber(String encodedValue)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,893,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,885,public void writeNumber(String encodedValue) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,917,ublic void writeBoolean(boolean state)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,918,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,909,public void writeBoolean(boolean state) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,931,ublic void writeNull()
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,932,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,922,public void writeNull() throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1921,"rotected final void _outputSurrogates(int surr1, int surr2)"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1922,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1911,"protected final void _outputSurrogates(int surr1, int surr2) throws IOException"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1948,buf[outputPtr++] = BYTE_BACKSLASH;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1949,buf[outputPtr++] = BYTE_u;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1951,buf[outputPtr++] = HEX_CHARS[(ch >> 12) & 0xF];
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1952,buf[outputPtr++] = HEX_CHARS[(ch >> 8) & 0xF];
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1953,buf[outputPtr++] = HEX_CHARS[(ch >> 4) & 0xF];
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1954,buf[outputPtr++] = HEX_CHARS[ch & 0xF];
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1937,"// 23-Nov-2015, tatu: As per [core#223], may or may not want escapes;"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1938,"//   it would be added here... but as things are, we do not have proper"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1939,//   access yet...
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1940,//            if (Feature.ESCAPE_UTF8_SURROGATES.enabledIn(_features)) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1941,bbuf[outputPtr++] = BYTE_BACKSLASH;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1942,bbuf[outputPtr++] = BYTE_u;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1944,bbuf[outputPtr++] = HEX_CHARS[(ch >> 12) & 0xF];
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1945,bbuf[outputPtr++] = HEX_CHARS[(ch >> 8) & 0xF];
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1946,bbuf[outputPtr++] = HEX_CHARS[(ch >> 4) & 0xF];
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1947,bbuf[outputPtr++] = HEX_CHARS[ch & 0xF];
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1948,//            } else { ... }
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1977,"rivate int _writeGenericEscape(int charToEscape, int outputPtr)"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1978,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1971,"private int _writeGenericEscape(int charToEscape, int outputPtr) throws IOException"
False,src/test/java/com/fasterxml/jackson/failing/LocationInArrayTest.java,src/test/java/com/fasterxml/jackson/core/json/LocationInArrayTest.java,1,ackage com.fasterxml.jackson.failing;
True,src/test/java/com/fasterxml/jackson/failing/LocationInArrayTest.java,src/test/java/com/fasterxml/jackson/core/json/LocationInArrayTest.java,1,package com.fasterxml.jackson.core.json;
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,40,/ for [Issue#115]
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,40,// for [core#115]
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,1,package com.fasterxml.jackson.failing;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,3,import java.io.ByteArrayOutputStream;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,4,import java.io.StringWriter;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,5,import java.io.Writer;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,7,import com.fasterxml.jackson.core.BaseTest;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,8,import com.fasterxml.jackson.core.JsonFactory;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,9,import com.fasterxml.jackson.core.JsonGenerator;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,10,import com.fasterxml.jackson.core.JsonParser;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,11,import com.fasterxml.jackson.core.JsonToken;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,13,public class Surrogate223Test extends BaseTest
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,15,private final JsonFactory JSON_F = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,17,// for [core#223]
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,18,public void testSurrogatesByteBacked() throws Exception
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,20,ByteArrayOutputStream out;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,21,JsonGenerator g;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,22,final String toQuote = new String(Character.toChars(0x1F602));
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,23,"assertEquals(2, toQuote.length()); // just sanity check"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,25,// default should be disabled:
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,26,//        assertFalse(JSON_F.isEnabled(JsonGenerator.Feature.ESCAPE_UTF8_SURROGATES));
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,28,out = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,29,g = JSON_F.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,30,g.writeStartArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,31,g.writeString(toQuote);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,32,g.writeEndArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,33,g.close();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,34,"assertEquals(2 + 2 + 4, out.size()); // brackets, quotes, 4-byte encoding"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,36,// Also parse back to ensure correctness
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,37,JsonParser p = JSON_F.createParser(out.toByteArray());
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,38,"assertToken(JsonToken.START_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,39,"assertToken(JsonToken.VALUE_STRING, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,40,"assertToken(JsonToken.END_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,41,p.close();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,43,// but may revert back to original behavior
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,44,out = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,45,g = JSON_F.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,46,//        g.enable(JsonGenerator.Feature.ESCAPE_UTF8_SURROGATES);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,47,g.writeStartArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,48,g.writeString(toQuote);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,49,g.writeEndArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,50,g.close();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,51,"assertEquals(2 + 2 + 12, out.size()); // brackets, quotes, 2 x 6 byte JSON escape"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,54,// for [core#223]
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,55,public void testSurrogatesCharBacked() throws Exception
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,57,Writer out;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,58,JsonGenerator g;
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,59,final String toQuote = new String(Character.toChars(0x1F602));
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,60,"assertEquals(2, toQuote.length()); // just sanity check"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,62,// default should be disabled:
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,63,//        assertFalse(JSON_F.isEnabled(JsonGenerator.Feature.ESCAPE_UTF8_SURROGATES));
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,65,out = new StringWriter();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,66,g = JSON_F.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,67,g.writeStartArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,68,g.writeString(toQuote);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,69,g.writeEndArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,70,g.close();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,71,"assertEquals(2 + 2 + 2, out.toString().length()); // brackets, quotes, 2 chars as is"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,73,// Also parse back to ensure correctness
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,74,JsonParser p = JSON_F.createParser(out.toString());
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,75,"assertToken(JsonToken.START_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,76,"assertToken(JsonToken.VALUE_STRING, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,77,"assertToken(JsonToken.END_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,78,p.close();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,80,// but may revert back to original behavior
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,81,out = new StringWriter();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,82,g = JSON_F.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,83,//        g.enable(JsonGenerator.Feature.ESCAPE_UTF8_SURROGATES);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,84,g.writeStartArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,85,g.writeString(toQuote);
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,86,g.writeEndArray();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,87,g.close();
True,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,src/test/java/com/fasterxml/jackson/failing/Surrogate223Test.java,88,"assertEquals(2 + 2 + 12, out.toString().length()); // brackets, quotes, 2 x 6 byte JSON escape"
