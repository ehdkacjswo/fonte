is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,50,ublic class JsonFactory implements Versioned
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,50,public class JsonFactory
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,51,"implements Versioned,"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,52,"java.io.Serializable // since 2.1 (for Android, mostly)"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,55,* Computed for Jackson 2.1.0 release
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,57,private static final long serialVersionUID = -5207101305402257257L;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,164,rotected CharsToNameCanonicalizer _rootCharSymbols = CharsToNameCanonicalizer.createRoot();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,171,protected final transient CharsToNameCanonicalizer _rootCharSymbols = CharsToNameCanonicalizer.createRoot();
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,173,rotected BytesToNameCanonicalizer _rootByteSymbols = BytesToNameCanonicalizer.createRoot();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,180,protected final transient BytesToNameCanonicalizer _rootByteSymbols = BytesToNameCanonicalizer.createRoot();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,291,/* Serializable overrides
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,296,* Method that we need to override to actually make restoration go
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,297,* through constructors etc.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,298,* Also: must be overridden by sub-classes as well.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,300,protected Object readResolve() {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,301,return new JsonFactory(_objectCodec);
True,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,11,implements java.io.Serializable // since 2.1
True,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,13,private static final long serialVersionUID = 1L;
True,src/main/java/com/fasterxml/jackson/core/io/InputDecorator.java,src/main/java/com/fasterxml/jackson/core/io/InputDecorator.java,12,implements java.io.Serializable // since 2.1
True,src/main/java/com/fasterxml/jackson/core/io/InputDecorator.java,src/main/java/com/fasterxml/jackson/core/io/InputDecorator.java,14,private static final long serialVersionUID = 1L;
True,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,12,implements java.io.Serializable // since 2.1
True,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,14,private static final long serialVersionUID = 1L;
False,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,3,mport java.io.IOException;
False,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,4,mport java.io.OutputStream;
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,3,import java.io.*;
False,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,18,ublic class SerializedString implements SerializableString
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,17,public class SerializedString
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,18,"implements SerializableString, java.io.Serializable"
False,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,38,ublic SerializedString(String v) { _value = v; }
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,38,public SerializedString(String v) {
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,39,if (v == null) {
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,40,"throw new IllegalStateException(""Null String illegal for SerializedString"");"
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,42,_value = v;
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,47,/* Serializable overrides
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,52,"* Ugly hack, to work through the requirement that _value is indeed final,"
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,53,* and that JDK serialization won't call ctor(s).
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,55,* @since 2.1
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,57,protected transient String _jdkSerializeValue;
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,59,private void readObject(ObjectInputStream in) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,60,_jdkSerializeValue = in.readUTF();
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,63,private void writeObject(ObjectOutputStream out) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,64,out.writeUTF(_value);
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,67,protected Object readResolve() {
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,68,return new SerializedString(_jdkSerializeValue);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,1,package com.fasterxml.jackson.core;
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,3,import java.io.*;
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,5,import com.fasterxml.jackson.test.BaseTest;
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,8,* Unit tests for [Issue#31] (https://github.com/FasterXML/jackson-core/issues/31)
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,10,public class TestSerializability extends BaseTest
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,12,public void testJsonFactorySerializable() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,14,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,15,"String origJson = ""{\""simple\"":[1,true,{}]}"";"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,16,"assertEquals(origJson, _copyJson(f, origJson, false));"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,18,"// Ok: freeze dry factory, thaw, and try to use again:"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,19,byte[] frozen = jdkSerialize(f);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,20,JsonFactory f2 = jdkDeserialize(frozen);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,21,assertNotNull(f2);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,22,"assertEquals(origJson, _copyJson(f2, origJson, false));"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,24,"// Let's also try byte-based variant, for fun..."
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,25,"assertEquals(origJson, _copyJson(f2, origJson, true));"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,30,/* Helper methods
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,34,protected byte[] jdkSerialize(Object o) throws IOException
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,36,ByteArrayOutputStream bytes = new ByteArrayOutputStream(1000);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,37,ObjectOutputStream obOut = new ObjectOutputStream(bytes);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,38,obOut.writeObject(o);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,39,obOut.close();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,40,return bytes.toByteArray();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,43,"@SuppressWarnings(""unchecked"")"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,44,protected <T> T jdkDeserialize(byte[] raw) throws IOException
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,46,ObjectInputStream objIn = new ObjectInputStream(new ByteArrayInputStream(raw));
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,47,try {
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,48,return (T) objIn.readObject();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,49,} catch (ClassNotFoundException e) {
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,50,"fail(""Missing class: ""+e.getMessage());"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,51,return null;
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,52,} finally {
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,53,objIn.close();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,57,"protected String _copyJson(JsonFactory f, String json, boolean useBytes) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,59,if (useBytes) {
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,60,ByteArrayOutputStream bytes = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,61,JsonGenerator jg = f.createGenerator(bytes);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,62,"_copyJson(f, json, jg);"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,63,"return bytes.toString(""UTF-8"");"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,65,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,66,JsonGenerator jg = f.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,67,"_copyJson(f, json, jg);"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,68,return sw.toString();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,71,"protected void _copyJson(JsonFactory f, String json, JsonGenerator jg) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,73,JsonParser jp = f.createParser(json);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,74,while (jp.nextToken() != null) {
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,75,jg.copyCurrentEvent(jp);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,77,jp.close();
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,78,jg.close();
