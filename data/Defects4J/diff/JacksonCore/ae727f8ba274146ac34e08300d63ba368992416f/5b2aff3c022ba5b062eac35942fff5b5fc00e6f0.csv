is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,249,* Minimal generic state
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,254," Last token retrieved via {@link #nextToken}, if any."
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,255," Null before the first call to <code>nextToken()</code>,"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,256, as well as if token has been explicitly cleared
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,257, (by call to {@link #clearCurrentToken})
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,259,rotected JsonToken _currToken;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,262," Last cleared token, if any: that is, value that was in"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,263, effect when {@link #clearCurrentToken} was called.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,265,rotected JsonToken _lastClearedToken;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,501,ublic JsonToken nextValue()
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,502,"hrows IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,504,* Implementation should be as trivial as follows; only
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,505, needs to change if we are to skip other tokens (for
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,506," example, if comments were exposed as tokens)"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,508,sonToken t = nextToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,509,f (t == JsonToken.FIELD_NAME) {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,510, = nextToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,512,eturn t;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,481,public abstract JsonToken nextValue()
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,482,"throws IOException, JsonParseException;"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,655,ublic JsonToken getCurrentToken() {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,656,eturn _currToken;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,624,public abstract JsonToken getCurrentToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,670,ublic boolean hasCurrentToken() {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,671,eturn _currToken != null;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,637,public abstract boolean hasCurrentToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,687,ublic void clearCurrentToken() {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,688,f (_currToken != null) {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,689,lastClearedToken = _currToken;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,690,currToken = null;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,651,public abstract void clearCurrentToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,736,ublic JsonToken getLastClearedToken() {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,737,eturn _lastClearedToken;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,695,public abstract JsonToken getLastClearedToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,843,ublic boolean hasTextCharacters() {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,844,eturn false;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,800,public abstract boolean hasTextCharacters();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1022,f (_currToken == JsonToken.VALUE_TRUE) return true;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1023,f (_currToken == JsonToken.VALUE_FALSE) return false;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1024,"hrow new JsonParseException(""Current token (""+_currToken+"") not of boolean type"", getCurrentLocation());"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,977,JsonToken t = getCurrentToken();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,978,if (t == JsonToken.VALUE_TRUE) return true;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,979,if (t == JsonToken.VALUE_FALSE) return false;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,980,"throw new JsonParseException(""Current token (""+t+"") not of boolean type"", getCurrentLocation());"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1036,ublic Object getEmbeddedObject()
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1037,"hrows IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1039,/ By default we will always return null
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1040,eturn null;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,992,public abstract Object getEmbeddedObject()
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,993,"throws IOException, JsonParseException;"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,54,/* Minimal generally useful state
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,59,"* Last token retrieved via {@link #nextToken}, if any."
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,60,"* Null before the first call to <code>nextToken()</code>,"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,61,* as well as if token has been explicitly cleared
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,62,* (by call to {@link #clearCurrentToken})
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,64,protected JsonToken _currToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,67,"* Last cleared token, if any: that is, value that was in"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,68,* effect when {@link #clearCurrentToken} was called.
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,70,protected JsonToken _lastClearedToken;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,90,/public final JsonToken nextValue()
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,110,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,111,public JsonToken getCurrentToken() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,112,return _currToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,115,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,116,public boolean hasCurrentToken() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,117,return _currToken != null;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,120,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,121,public void clearCurrentToken() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,122,if (_currToken != null) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,123,_lastClearedToken = _currToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,124,_currToken = null;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,128,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,129,public JsonToken getLastClearedToken() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,130,return _lastClearedToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,133,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,134,public JsonToken nextValue()
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,135,"throws IOException, JsonParseException"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,137,/* Implementation should be as trivial as follows; only
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,138,* needs to change if we are to skip other tokens (for
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,139,"* example, if comments were exposed as tokens)"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,141,JsonToken t = nextToken();
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,142,if (t == JsonToken.FIELD_NAME) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,143,t = nextToken();
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,145,return t;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,318,@Override
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,319,"public Object getEmbeddedObject() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,320,return null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,394,// No embedded objects with base impl...
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,395,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,396,"public Object getEmbeddedObject() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,397,return null;
False,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,16, @since 1.4
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,148,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,149,public boolean hasTextCharacters() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,150,return delegate.hasTextCharacters();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,179,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,180,"public boolean getBooleanValue() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,181,return delegate.getBooleanValue();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,231,"/* Public API, access to token values, other"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,235,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,236,"public Object getEmbeddedObject() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,237,return delegate.getEmbeddedObject();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,255,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,256,"public JsonToken nextValue() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,257,return delegate.nextValue();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,4,import java.util.Properties;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,102,* Will attempt to load the maven version for the given groupId and
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,103,* artifactId.  Maven puts a pom.properties file in
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,104,"* META-INF/maven/groupId/artifactId, containing the groupId,"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,105,* artifactId and version of the library.
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,107,* @param classLoader the ClassLoader to load the pom.properties file from
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,108,* @param groupId the groupId of the library
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,109,* @param artifactId the artifactId of the library
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,110,* @return The version
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,112,"public static Version mavenVersionFor(ClassLoader classLoader, String groupId, String artifactId) {"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,113,"InputStream pomPoperties = classLoader.getResourceAsStream(""META-INF/maven/"" + groupId.replaceAll(""\\."", ""/"")"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,114,"+ ""/"" + artifactId + ""/pom.properties"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,115,if (pomPoperties != null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,116,try {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,117,Properties props = new Properties();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,118,props.load(pomPoperties);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,119,"String versionStr = props.getProperty(""version"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,120,"String pomPropertiesArtifactId = props.getProperty(""artifactId"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,121,"String pomPropertiesGroupId = props.getProperty(""groupId"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,122,"return parseVersion(versionStr, pomPropertiesGroupId, pomPropertiesArtifactId);"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,123,} catch (IOException e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,124,// Ignore
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,125,} finally {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,126,try {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,127,pomPoperties.close();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,128,} catch (IOException e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,129,// Ignore
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,133,return Version.unknownVersion();
False,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,4,mport com.fasterxml.jackson.core.util.VersionUtil;
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,20,public void testMavenVersionParsing() {
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,21,"assertEquals(new Version(1, 2, 3, ""SNAPSHOT"", ""foo.bar"", ""foo-bar""),"
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,22,"VersionUtil.mavenVersionFor(TestVersionUtil.class.getClassLoader(), ""foo.bar"", ""foo-bar""));"
