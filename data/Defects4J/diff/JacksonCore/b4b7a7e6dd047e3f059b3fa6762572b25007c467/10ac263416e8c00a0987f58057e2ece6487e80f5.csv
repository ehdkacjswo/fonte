is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,211,f (_nextSegment == null || !_matchingPropertyName.equals(name)) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,212,eturn null;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,211,if ((_nextSegment != null) && _matchingPropertyName.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,212,return _nextSegment;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,214,eturn _nextSegment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,214,return null;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,228,* @since 2.6
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,230,public JsonPointer matchElement(int index) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,231,if ((index != _matchingElementIndex) || (index < 0)) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,232,return null;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,234,return _nextSegment;
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,314,/* Helper read/write methods
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,318,"protected void writeJsonDoc(JsonFactory f, String doc, Writer w) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,320,"writeJsonDoc(f, doc, f.createGenerator(w));"
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,323,"protected void writeJsonDoc(JsonFactory f, String doc, JsonGenerator g) throws IOException"
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,325,JsonParser p = f.createParser(doc);
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,327,while (p.nextToken() != null) {
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,328,g.copyCurrentStructure(p);
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,330,p.close();
True,src/test/java/com/fasterxml/jackson/core/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,331,g.close();
False,src/test/java/com/fasterxml/jackson/core/filter/BasicFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,8,ublic class BasicFilteringTest extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/filter/BasicFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,9,"* Low-level tests for explicit, hand-written tests for generator-side"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,10,* filtering.
True,src/test/java/com/fasterxml/jackson/core/filter/BasicFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,12,public class BasicGeneratorFilteringTest extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,1,package com.fasterxml.jackson.core.filter;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,3,import com.fasterxml.jackson.core.JsonPointer;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,6,* Helper class that implements simple single-match filter based
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,7,* on a {@link JsonPointer} instance.
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,9,class JsonPointerBasedFilter extends TokenFilter
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,11,protected final JsonPointer _pathToMatch;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,13,protected final boolean _includeParent;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,15,"public JsonPointerBasedFilter(String ptrExpr, boolean inclParent) {"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,16,"this(JsonPointer.compile(ptrExpr), inclParent);"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,19,"public JsonPointerBasedFilter(JsonPointer match, boolean inclParent) {"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,20,_pathToMatch = match;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,21,_includeParent = inclParent;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,24,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,25,public TokenFilter includeElement(int index) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,26,JsonPointer next = _pathToMatch.matchElement(index);
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,27,if (next == null) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,28,return null;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,30,if (next.matches()) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,31,return TokenFilter.INCLUDE_ALL;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,33,"return new JsonPointerBasedFilter(next, _includeParent);"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,36,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,37,public TokenFilter includeProperty(String name) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,38,JsonPointer next = _pathToMatch.matchProperty(name);
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,39,if (next == null) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,40,return null;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,42,if (next.matches()) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,43,if (_includeParent) {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,44,return TokenFilter.INCLUDE_ALL;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,46,"// Minor complication, for non-path-including case"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,47,return IncludeAny.instance;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,49,"return new JsonPointerBasedFilter(next, _includeParent);"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,52,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,53,public TokenFilter filterStartArray() {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,54,return this;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,57,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,58,public TokenFilter filterStartObject() {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,59,return this;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,62,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,63,protected boolean _includeScalar() {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,64,"// should only occur for root-level scalars, path ""/"""
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,65,return _pathToMatch.matches();
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,69,"* Helper class needed to include value of an Object property, without"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,70,* including surrounding Object. Used when path is not to be included.
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,72,static class IncludeAny extends TokenFilter {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,73,public final static IncludeAny instance = new IncludeAny();
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,75,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,76,public TokenFilter filterStartArray() {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,77,return TokenFilter.INCLUDE_ALL;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,80,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,81,public TokenFilter filterStartObject() {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,82,return TokenFilter.INCLUDE_ALL;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,85,@Override
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,86,protected boolean _includeScalar() {
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,87,return true;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,1,package com.fasterxml.jackson.core.filter;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,3,import java.io.*;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,5,import com.fasterxml.jackson.core.*;
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,7,"@SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,8,public class JsonPointerGeneratorFilteringTest extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,10,private final JsonFactory JSON_F = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,12,"final String SIMPLE_INPUT = aposToQuotes(""{'a':1,'b':[1,2,3],'c':{'d':{'a':true}},'d':null}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,14,public void testSimplePropertyWithPath() throws Exception
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,16,"_assert(SIMPLE_INPUT, ""/c"", true, ""{'c':{'d':{'a':true}}}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,17,"_assert(SIMPLE_INPUT, ""/c/d"", true, ""{'c':{'d':{'a':true}}}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,18,"_assert(SIMPLE_INPUT, ""/c/d/a"", true, ""{'c':{'d':{'a':true}}}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,20,"_assert(SIMPLE_INPUT, ""/c/d/a"", true, ""{'c':{'d':{'a':true}}}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,22,"_assert(SIMPLE_INPUT, ""/a"", true, ""{'a':1}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,23,"_assert(SIMPLE_INPUT, ""/d"", true, ""{'d':null}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,25,// and then non-match
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,26,"_assert(SIMPLE_INPUT, ""/x"", true, """");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,29,public void testSimplePropertyWithoutPath() throws Exception
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,31,"_assert(SIMPLE_INPUT, ""/c"", false, ""{'d':{'a':true}}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,32,"_assert(SIMPLE_INPUT, ""/c/d"", false, ""{'a':true}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,33,"_assert(SIMPLE_INPUT, ""/c/d/a"", false, ""true"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,35,"_assert(SIMPLE_INPUT, ""/a"", false, ""1"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,36,"_assert(SIMPLE_INPUT, ""/d"", false, ""null"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,38,// and then non-match
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,39,"_assert(SIMPLE_INPUT, ""/x"", false, """");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,42,public void testArrayElementWithPath() throws Exception
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,44,"_assert(SIMPLE_INPUT, ""/b"", true, ""{'b':[1,2,3]}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,45,"_assert(SIMPLE_INPUT, ""/b/1"", true, ""{'b':[2]}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,46,"_assert(SIMPLE_INPUT, ""/b/2"", true, ""{'b':[3]}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,48,// and then non-match
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,49,"_assert(SIMPLE_INPUT, ""/b/8"", true, """");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,52,public void testArrayElementWithoutPath() throws Exception
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,54,"_assert(SIMPLE_INPUT, ""/b"", false, ""[1,2,3]"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,55,"_assert(SIMPLE_INPUT, ""/b/1"", false, ""2"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,56,"_assert(SIMPLE_INPUT, ""/b/2"", false, ""3"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,58,"_assert(SIMPLE_INPUT, ""/b/8"", false, """");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,60,// and then non-match
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,61,"_assert(SIMPLE_INPUT, ""/x"", false, """");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,64,"private void _assert(String input, String pathExpr, boolean includeParent, String exp)"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,65,throws Exception
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,67,StringWriter w = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,68,JsonGenerator g0 = JSON_F.createGenerator(w);
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,69,"FilteringGeneratorDelegate g = new FilteringGeneratorDelegate(g0,"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,70,"new JsonPointerBasedFilter(pathExpr, includeParent),"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,71,"includeParent, false);"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,72,"writeJsonDoc(JSON_F, input, g);"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,74,"assertEquals(aposToQuotes(exp), w.toString());"
