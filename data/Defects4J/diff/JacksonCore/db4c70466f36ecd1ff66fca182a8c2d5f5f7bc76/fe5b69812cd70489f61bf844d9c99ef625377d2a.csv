is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,2,ackage com.fasterxml.jackson.core.io;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,4,mport java.io.*;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,7, Simple basic class for optimized readers in this package; implements
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,8," ""cookie-cutter"" methods that are used by all actual implementations."
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,10,bstract class BaseReader extends Reader
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,13, JSON actually limits available Unicode range in the high end
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,14, to the same as xml (to basically limit UTF-8 max byte sequence
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,15, length to 4)
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,17,inal protected static int LAST_VALID_UNICODE_CHAR = 0x10FFFF;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,19,inal protected static char NULL_CHAR = (char) 0;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,20,inal protected static char NULL_BYTE = (byte) 0;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,22,inal protected IOContext _context;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,24,rotected InputStream _in;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,26,rotected byte[] _buffer;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,28,rotected int _ptr;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,29,rotected int _length;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,33,* Life-cycle
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,37,"rotected BaseReader(IOContext context,"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,38,"nputStream in, byte[] buf, int ptr, int len)"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,40,context = context;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,41,in = in;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,42,buffer = buf;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,43,ptr = ptr;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,44,length = len;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,49,* Reader API
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,53,Override
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,54,ublic void close() throws IOException
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,56,nputStream in = _in;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,58,f (in != null) {
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,59,in = null;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,60,reeBuffers();
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,61,n.close();
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,65,rotected char[] _tmpBuf = null;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,68," Although this method is implemented by the base class, AND it should"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,69," never be called by main code, let's still implement it bit more"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,70, efficiently just in case
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,72,Override
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,73,ublic int read() throws IOException
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,75,f (_tmpBuf == null) {
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,76,tmpBuf = new char[1];
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,78,"f (read(_tmpBuf, 0, 1) < 1) {"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,79,eturn -1;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,81,eturn _tmpBuf[0];
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,86,* Internal/package methods:
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,91, This method should be called along with (or instead of) normal
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,92," close. After calling this method, no further reads should be tried."
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,93, Method will try to recycle read buffers (if any).
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,95,ublic final void freeBuffers()
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,97,yte[] buf = _buffer;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,98,f (buf != null) {
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,99,buffer = null;
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,100,context.releaseReadIOBuffer(buf);
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,104,"rotected void reportBounds(char[] cbuf, int start, int len)"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,105,hrows IOException
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,107,"hrow new ArrayIndexOutOfBoundsException(""read(buf,""+start+"",""+len+""), cbuf[""+cbuf.length+""]"");"
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,110,rotected void reportStrangeStream()
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,111,hrows IOException
False,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,src/main/java/com/fasterxml/jackson/core/io/BaseReader.java,113,"hrow new IOException(""Strange I/O stream, returned 0 bytes on read"");"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,28,rivate final static int INT_BACKSLASH = '\\';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,29,rivate final static int INT_U = 'u';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,30,rivate final static int INT_0 = '0';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,28,//    private final static int INT_BACKSLASH = '\\';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,29,//    private final static int INT_U = 'u';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,30,//    private final static int INT_0 = '0';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,63,ublic JsonStringEncoder()
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,63,public JsonStringEncoder() {
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,75,ublic static JsonStringEncoder getInstance()
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,74,public static JsonStringEncoder getInstance() {
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,346,"rivate int _appendNumericEscape(int value, char[] quoteBuffer)"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,344,"private int _appendNumericEscape(int value, char[] quoteBuffer) {"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,355,"rivate int _appendNamedEscape(int escCode, char[] quoteBuffer)"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,352,"private int _appendNamedEscape(int escCode, char[] quoteBuffer) {"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,364,yteBuilder.append(INT_BACKSLASH);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,360,byteBuilder.append('\\');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,366,yteBuilder.append(INT_U);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,362,byteBuilder.append('u');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,373,yteBuilder.append(INT_0);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,374,yteBuilder.append(INT_0);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,369,byteBuilder.append('0');
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,370,byteBuilder.append('0');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,384,"rotected static int _convertSurrogate(int firstPart, int secondPart)"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,380,"protected static int _convertSurrogate(int firstPart, int secondPart) {"
False,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,10,ublic class UTF32Reader extends BaseReader
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,10,public class UTF32Reader extends Reader
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,13,* JSON actually limits available Unicode range in the high end
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,14,* to the same as xml (to basically limit UTF-8 max byte sequence
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,15,* length to 4)
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,17,final protected static int LAST_VALID_UNICODE_CHAR = 0x10FFFF;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,19,final protected static char NC = (char) 0;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,21,final protected IOContext _context;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,23,protected InputStream _in;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,25,protected byte[] _buffer;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,27,protected int _ptr;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,28,protected int _length;
False,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,19,rotected char _surrogate = NULL_CHAR;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,37,protected char _surrogate = NC;
False,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,40,"uper(ctxt, in, buf, ptr, len);"
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,58,_context = ctxt;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,59,_in = in;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,60,_buffer = buf;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,61,_ptr = ptr;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,62,_length = len;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,73,@Override
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,74,public void close() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,75,InputStream in = _in;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,77,if (in != null) {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,78,_in = null;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,79,freeBuffers();
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,80,in.close();
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,84,protected char[] _tmpBuf = null;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,87,"* Although this method is implemented by the base class, AND it should"
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,88,"* never be called by main code, let's still implement it bit more"
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,89,* efficiently just in case
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,91,@Override
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,92,public int read() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,93,if (_tmpBuf == null) {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,94,_tmpBuf = new char[1];
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,96,"if (read(_tmpBuf, 0, 1) < 1) {"
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,97,return -1;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,99,return _tmpBuf[0];
False,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,65,f (_surrogate != NULL_CHAR) {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,116,if (_surrogate != NC) {
False,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,67,surrogate = NULL_CHAR;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,118,_surrogate = NC;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,251,* This method should be called along with (or instead of) normal
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,252,"* close. After calling this method, no further reads should be tried."
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,253,* Method will try to recycle read buffers (if any).
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,255,private void freeBuffers() {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,256,byte[] buf = _buffer;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,257,if (buf != null) {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,258,_buffer = null;
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,259,_context.releaseReadIOBuffer(buf);
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,263,"private void reportBounds(char[] cbuf, int start, int len) throws IOException {"
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,264,"throw new ArrayIndexOutOfBoundsException(""read(buf,""+start+"",""+len+""), cbuf[""+cbuf.length+""]"");"
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,267,private void reportStrangeStream() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java,268,"throw new IOException(""Strange I/O stream, returned 0 bytes on read"");"
