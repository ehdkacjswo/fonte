is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,7,import com.fasterxml.jackson.core.io.SerializedString;
False,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,110,"sonGenerator gen = new FilteringGeneratorDelegate(JSON_F.createGenerator(w),"
False,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,111,"ew NameMatchFilter(""value""),"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,111,JsonGenerator origGen = JSON_F.createGenerator(w);
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,112,"NameMatchFilter filter = new NameMatchFilter(""value"");"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,113,"FilteringGeneratorDelegate gen = new FilteringGeneratorDelegate(origGen,"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,114,"filter,"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,119,// Hmmh. Should we get access to eventual target?
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,120,"assertSame(w, gen.getOutputTarget());"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,121,assertNotNull(gen.getFilterContext());
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,122,"assertSame(filter, gen.getFilter());"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,128,"assertEquals(1, gen.getMatchCount());"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,131,"// Alternative take, using slightly different calls for FIELD_NAME, START_ARRAY"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,132,public void testSingleMatchFilteringWithPathAlternate() throws Exception
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,134,StringWriter w = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,135,"FilteringGeneratorDelegate gen = new FilteringGeneratorDelegate(JSON_F.createGenerator(w),"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,136,"new NameMatchFilter(""value""),"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,137,"true, // includePath"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,138,false // multipleMatches
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,140,"//final String JSON = ""{'a':123,'array':[1,2],'ob':{'value0':2,'value':3,'value2':'foo'},'b':true}"";"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,142,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,143,"gen.writeFieldName(new SerializedString(""a""));"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,144,gen.writeNumber(123);
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,146,"gen.writeFieldName(""array"");"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,147,gen.writeStartArray(2);
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,148,"gen.writeNumber(""1"");"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,149,gen.writeNumber(2);
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,150,gen.writeEndArray();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,152,"gen.writeFieldName(new SerializedString(""ob""));"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,153,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,154,"gen.writeNumberField(""value0"", 2);"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,155,"gen.writeFieldName(new SerializedString(""value""));"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,156,gen.writeNumber(3); // just to vary generation method
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,157,"gen.writeStringField(""value2"", ""foo"");"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,159,gen.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,161,"gen.writeBooleanField(""b"", true);"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,163,gen.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,164,gen.close();
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,166,"assertEquals(aposToQuotes(""{'ob':{'value':3}}""), w.toString());"
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,1,package com.fasterxml.jackson.core.io;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,3,import com.fasterxml.jackson.core.io.SegmentedStringWriter;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,4,import com.fasterxml.jackson.core.util.BufferRecycler;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,6,public class SegmentedStringWriterTest
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,7,extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,9,public void testSimple() throws Exception
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,11,BufferRecycler br = new BufferRecycler();
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,12,SegmentedStringWriter w = new SegmentedStringWriter(br);
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,14,StringBuilder exp = new StringBuilder();
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,16,for (int i = 0; exp.length() < 100; ++i) {
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,17,String nr = String.valueOf(i);
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,18,exp.append(' ').append(nr);
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,19,w.append(' ');
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,20,switch (i % 4) {
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,21,case 0:
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,22,w.append(nr);
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,23,break;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,24,case 1:
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,26,"String str = ""  ""+nr;"
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,27,"w.append(str, 2, str.length());"
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,29,break;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,30,case 2:
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,31,w.write(nr.toCharArray());
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,32,break;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,33,default:
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,35,"char[] ch = ("" ""+nr+"" "").toCharArray();"
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,36,"w.write(ch, 1, nr.length());"
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,38,break;
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,41,"// flush, close are nops but trigger just for fun"
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,42,w.flush();
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,43,w.close();
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,45,String act = w.getAndClear();
True,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,src/test/java/com/fasterxml/jackson/core/io/SegmentedStringWriterTest.java,46,"assertEquals(exp.toString(), act);"
False,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,9,ublic class TestUTF8Writer
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,9,public class UTF8WriterTest
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,28,w.flush();
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,43,public void testSimpleAscii() throws Exception
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,45,BufferRecycler rec = new BufferRecycler();
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,46,"IOContext ctxt = new IOContext(rec, null, false);"
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,47,ByteArrayOutputStream out = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,48,"UTF8Writer w = new UTF8Writer(ctxt, out);"
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,50,"String str = ""abcdefghijklmnopqrst\u00A0"";"
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,51,char[] ch = str.toCharArray();
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,53,"w.write(ch, 0, ch.length);"
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,54,w.close();
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,56,byte[] data = out.toByteArray();
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,57,// one 2-byte encoded char
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,58,"assertEquals(ch.length+1, data.length);"
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,59,"String act = out.toString(""UTF-8"");"
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/UTF8WriterTest.java,60,"assertEquals(str, act);"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,11,ublic class TestJsonGenerator
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,11,public class GeneratorBasicTest
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,230,public void testGetOutputTarget() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,232,OutputStream out = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,233,JsonGenerator gen = JSON_F.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,234,"assertSame(out, gen.getOutputTarget());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,235,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,237,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,238,gen = JSON_F.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,239,"assertSame(sw, gen.getOutputTarget());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,240,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,243,// for [core#195]
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,244,public void testGetOutputBufferd() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,246,OutputStream out = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,247,JsonGenerator gen = JSON_F.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,248,_testOutputBuffered(gen);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,249,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,251,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,252,gen = JSON_F.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,253,_testOutputBuffered(gen);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,254,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,257,private void _testOutputBuffered(JsonGenerator gen) throws IOException
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,259,gen.writeStartArray(); // 1 byte
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,260,gen.writeNumber(1234); // 4 bytes
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,261,"assertEquals(5, gen.getOutputBuffered());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,262,gen.flush();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,263,"assertEquals(0, gen.getOutputBuffered());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,264,gen.writeEndArray();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,265,"assertEquals(1, gen.getOutputBuffered());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,266,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/GeneratorBasicTest.java,267,"assertEquals(0, gen.getOutputBuffered());"
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,3,mport java.io.ByteArrayOutputStream;
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,3,import java.io.*;
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,9,ublic class TestUtf8Generator
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,10,xtends BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,9,public class TestUtf8Generator extends BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,11,private final JsonFactory JSON_F = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,28,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,29,sonParser p = f.createParser(bytes.toByteArray());
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,29,JsonParser p = JSON_F.createParser(bytes.toByteArray());
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,44,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,46,sonGenerator jgen = f.createGenerator(out);
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,45,JsonGenerator jgen = JSON_F.createGenerator(out);
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,54,sonParser jp = f.createParser(JSON);
True,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,53,JsonParser jp = JSON_F.createParser(JSON);
