is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1223,* Method that will try to convert value of current token to a
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1224,* {@link java.lang.String}.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1225,* JSON Strings map naturally; scalar values get converted to
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1226,* their textual representation.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1227,* If representation can not be converted to a String value (including structured types
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1228,"* like Objects and Arrays and null token), default value of"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1229,* <b>null</b> will be returned; no exceptions are thrown.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1231,* @since 2.1
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1233,"public String getValueAsString() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1234,return getValueAsString(null);
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1238,* Method that will try to convert value of current token to a
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1239,* {@link java.lang.String}.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1240,* JSON Strings map naturally; scalar values get converted to
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1241,* their textual representation.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1242,* If representation can not be converted to a String value (including structured types
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1243,"* like Objects and Arrays and null token), specified default value"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1244,* will be returned; no exceptions are thrown.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1246,* @since 2.1
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1248,public abstract String getValueAsString(String defaultValue)
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1249,"throws IOException, JsonParseException;"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,367,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,368,"public String getValueAsString(String defaultValue) throws IOException, JsonParseException"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,370,if (_currToken != JsonToken.VALUE_STRING) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,371,if (_currToken == null || _currToken == JsonToken.VALUE_NULL || !_currToken.isScalarValue()) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,372,return defaultValue;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,375,return getText();
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,217,// // // Let's override default impls for improved performance
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,219,// @since 2.1
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,220,@Override
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,221,"public String getValueAsString() throws IOException, JsonParseException"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,223,if (_currToken == JsonToken.VALUE_STRING) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,224,if (_tokenIncomplete) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,225,_tokenIncomplete = false;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,226,_finishString(); // only strings can be incomplete
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,228,return _textBuffer.contentsAsString();
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,230,return super.getValueAsString(null);
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,233,// @since 2.1
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,234,@Override
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,235,"public String getValueAsString(String defValue) throws IOException, JsonParseException"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,237,if (_currToken == JsonToken.VALUE_STRING) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,238,if (_tokenIncomplete) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,239,_tokenIncomplete = false;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,240,_finishString(); // only strings can be incomplete
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,242,return _textBuffer.contentsAsString();
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,244,return super.getValueAsString(defValue);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,272,sonToken t = _currToken;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,273,f (t == JsonToken.VALUE_STRING) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,272,if (_currToken == JsonToken.VALUE_STRING) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,280,eturn _getText2(t);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,279,return _getText2(_currToken);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,282,// // // Let's override default impls for improved performance
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,284,// @since 2.1
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,285,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,286,"public String getValueAsString() throws IOException, JsonParseException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,288,if (_currToken == JsonToken.VALUE_STRING) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,289,if (_tokenIncomplete) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,290,_tokenIncomplete = false;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,291,_finishString(); // only strings can be incomplete
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,293,return _textBuffer.contentsAsString();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,295,return super.getValueAsString(null);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,298,// @since 2.1
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,299,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,300,"public String getValueAsString(String defValue) throws IOException, JsonParseException"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,302,if (_currToken == JsonToken.VALUE_STRING) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,303,if (_tokenIncomplete) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,304,_tokenIncomplete = false;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,305,_finishString(); // only strings can be incomplete
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,307,return _textBuffer.contentsAsString();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,309,return super.getValueAsString(defValue);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,253,"/* Public API, access to token information, coercion/conversion"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,257,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,258,"public int getValueAsInt() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,259,return delegate.getValueAsInt();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,262,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,263,"public int getValueAsInt(int defaultValue) throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,264,return delegate.getValueAsInt(defaultValue);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,267,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,268,"public long getValueAsLong() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,269,return delegate.getValueAsLong();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,272,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,273,"public long getValueAsLong(long defaultValue) throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,274,return delegate.getValueAsLong(defaultValue);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,277,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,278,"public double getValueAsDouble() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,279,return delegate.getValueAsDouble();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,282,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,283,"public double getValueAsDouble(double defaultValue) throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,284,return delegate.getValueAsDouble(defaultValue);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,287,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,288,"public boolean getValueAsBoolean() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,289,return delegate.getValueAsBoolean();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,292,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,293,"public boolean getValueAsBoolean(boolean defaultValue) throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,294,return delegate.getValueAsBoolean(defaultValue);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,297,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,298,"public String getValueAsString() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,299,return delegate.getValueAsString();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,302,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,303,"public String getValueAsString(String defaultValue) throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,304,return delegate.getValueAsString(defaultValue);
