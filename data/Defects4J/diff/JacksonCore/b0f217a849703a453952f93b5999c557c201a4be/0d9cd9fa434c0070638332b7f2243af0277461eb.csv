is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,147,* Note that this setting may not necessarily make sense for all
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,148,"* data formats (for example, binary formats typically do not use"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,149,* any escaping mechanisms; and some textual formats do not have
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,150,"* general-purpose escaping); if so, settings is simply ignored."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,151,"* Put another way, effects of this feature are data-format specific."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,152,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,167,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,168,* Feature is disabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,175,* Feature that determines what to do if the underlying data format requires knowledge
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,176,"* of all properties to output, and if no definition is found for a property that"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,177,"* caller tries to write. If enabled, such properties will be quietly ignored;"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,178,"* if disabled, a {@link JsonProcessingException} will be thrown to indicate the"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,179,* problem.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,180,* Typically most textual data formats do NOT require schema information (although
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,181,"* some do, such as CSV), whereas many binary data formats do require definitions"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,182,"* (such as Avro, protobuf), although not all (Smile, CBOR, BSON and MessagePack do not)."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,183,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,184,* Note that support for this feature is implemented by individual data format
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,185,"* module, if (and only if) it makes sense for the format in question. For JSON,"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,186,"* for example, this feature has no effect as properties need not be pre-defined."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,187,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,188,"* Feature is disabled by default, meaning that if the underlying data format"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,189,"* requires knowledge of all properties to output, attempts to write an unknown"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,190,* property will result in a {@link JsonProcessingException}
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,192,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,194,"IGNORE_UNKNOWN(false),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,293,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,294,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,295,*   getOutputContext().getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,296,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,298,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,300,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,301,JsonStreamContext ctxt = getOutputContext();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,302,return (ctxt == null) ? null : ctxt.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,306,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,307,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,308,*   getOutputContext().setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,309,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,311,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,313,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,314,JsonStreamContext ctxt = getOutputContext();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,315,if (ctxt != null) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,316,ctxt.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,622,* @since 2.4
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,866,"* Method similar to {@link #writeRawValue(String)}, but potentially more"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,867,* efficient as it may be able to use pre-encoded content (similar to
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,868,* {@link #writeRaw(SerializableString)}.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,870,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,872,public void writeRawValue(SerializableString raw) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,873,writeRawValue(raw.getValue());
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,130," using backslash qooting mechanism: if not enabled, only characters"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,130,"* using backslash quoting mechanism: if not enabled, only characters"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,224,ublic int getMask() { return (1 << ordinal()); }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,224,public int getMask() { return _mask; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,281,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,282,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,283,*   getParsingContext().getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,284,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,286,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,288,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,289,JsonStreamContext ctxt = getParsingContext();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,290,return (ctxt == null) ? null : ctxt.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,294,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,295,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,296,*   getParsingContext().setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,297,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,299,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,301,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,302,JsonStreamContext ctxt = getParsingContext();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,303,if (ctxt != null) {
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,304,ctxt.setCurrentValue(v);
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,458,ublic boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,486,public boolean isEnabled(Feature f) { return f.enabledIn(_features); }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,470, Bulk set method for (re)settting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,498,* Bulk set method for (re)setting states of all standard {@link Feature}s
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1393, matching leaf node type
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1421,* matching leaf node type. Empty or whitespace documents are null.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1423,"* @return root of the document, or null if empty or whitespace."
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,22,protected final static int NO_SLASH = -1;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,38,* Reference form currently matching segment (if any) to node
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,39,* before leaf.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,41,protected final JsonPointer _headSegment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,65,_headSegment = null;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,65,"rotected JsonPointer(String fullString, String segment, JsonPointer next) {"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,74,"protected JsonPointer(String fullString, String segment, JsonPointer next, JsonPointer head) {"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,77,_headSegment = head;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,98,eturn _parseTail(input);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,108,return _parseTailAndHead(input);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,152,* Method that may be called to see if the pointer would match property
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,153,* (of a JSON Object) with given name.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,155,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,157,public boolean matchesProperty(String name) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,158,return (_nextSegment != null) && _matchingPropertyName.equals(name);
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,148,ublic JsonPointer matchElement (int index) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,149,f ((index != _matchingElementIndex) || (index < 0)) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,150,eturn null;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,152,eturn _nextSegment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,169,* Method that may be called to see if the pointer would match
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,170,* array element (of a JSON Array) with given index.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,172,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,174,public boolean matchesElement(int index) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,175,return (index == _matchingElementIndex) && (index >= 0);
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,157, has been removed and pointer includes rest of segments;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,180,* has been removed and pointer includes rest of segments.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,181,"* For matching state, will return null."
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,188,"* Accessor for getting a ""pointer"", instance from current segment to"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,189,"* segment before segment leaf. For root pointer, will return null."
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,191,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,193,public JsonPointer head() {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,194,return _headSegment;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,207,rotected static JsonPointer _parseTail(String input) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,241,protected static JsonPointer _parseTailAndHead(String input) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,244,int lastSlash = input.lastIndexOf('/');
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,214,"eturn new JsonPointer(input, input.substring(1, i),"
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,215,parseTail(input.substring(i)));
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,250,if(i == NO_SLASH) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,251,"return new JsonPointer(input, input.substring(1, i),"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,252,"_parseTailAndHead(input.substring(i)), EMPTY);"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,253,} else {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,254,"return new JsonPointer(input, input.substring(1, i),"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,255,"_parseTailAndHead(input.substring(i)), compile(input.substring(0, lastSlash)));"
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,220,"eturn _parseQuotedTail(input, i);"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,261,"return _parseQuotedTailAndHead(input, i);"
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,225,"eturn new JsonPointer(input, input.substring(1), EMPTY);"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,266,"return new JsonPointer(input, input.substring(1), EMPTY, EMPTY);"
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,235,"rotected static JsonPointer _parseQuotedTail(String input, int i) {"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,276,"protected static JsonPointer _parseQuotedTailAndHead(String input, int i) {"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,284,int lastSlash = input.lastIndexOf('/');
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,245,"eturn new JsonPointer(input, sb.toString(),"
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,246,parseTail(input.substring(i))); // need to push back slash
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,289,if(i == NO_SLASH) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,290,"return new JsonPointer(input, sb.toString(),"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,291,"_parseTailAndHead(input.substring(i)), EMPTY);"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,292,} else {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,293,"return new JsonPointer(input, sb.toString(),"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,294,"_parseTailAndHead(input.substring(i)), compile(input.substring(0, lastSlash)));"
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,256,"eturn new JsonPointer(input, sb.toString(), EMPTY);"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,305,"return new JsonPointer(input, sb.toString(), EMPTY, EMPTY);"
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,108,* Method for accessing currently active value being used by data-binding
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,109,"* (as the source of streaming data to write, or destination of data being"
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,110,"* read), at this level in hierarchy."
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,111,* The value may not exist or be available due to various limitations (at
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,112,"* least during reading of data, as target value object may not have yet"
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,113,* been constructed).
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,115,"* @return Currently active value, if one has been assigned."
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,117,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,119,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,120,return null;
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,124,* Method to call to pass value to be returned via {@link #getCurrentValue}; typically
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,125,* called indirectly through {@link JsonParser#setCurrentValue}
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,126,* or {@link JsonGenerator#setCurrentValue}).
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,128,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,130,public void setCurrentValue(Object v) { }
False,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,116," value event, not container)."
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,116,"* value event, not container). Empty or whitespace"
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,117,* documents return null.
True,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,src/main/java/com/fasterxml/jackson/core/ObjectCodec.java,119,"* @return next tree from jp, or null if empty."
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,264,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,265,"* NOTE: constructed parser instance will NOT initially point to a token,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,266,"* so before passing it to deserializers, it is typically necessary to"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,267,* advance it to the first available token by calling {@link JsonParser#nextToken()}.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,268,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,269,* Also note that calling this method will <b>NOT</b> pass {@link ObjectCodec}
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,270,"* reference, so data-binding callback methods like {@link JsonParser#readValueAs(Class)}"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,271,* will not work with calling {@link JsonParser#setCodec}).
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,272,* It is often better to call {@link #traverse(ObjectCodec)} to pass the codec explicitly.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,280,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,281,"* NOTE: constructed parser instance will NOT initially point to a token,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,282,"* so before passing it to deserializers, it is typically necessary to"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,283,* advance it to the first available token by calling {@link JsonParser#nextToken()}.
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,18,public final static int SURR1_FIRST = 0xD800;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,19,public final static int SURR1_LAST = 0xDBFF;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,20,public final static int SURR2_FIRST = 0xDC00;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,21,public final static int SURR2_LAST = 0xDFFF;
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,26,/            | Feature.STRICT_DUPLICATE_DETECTION.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,31,| Feature.STRICT_DUPLICATE_DETECTION.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,84,_objectCodec = codec;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,88,_cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(features);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,92,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,94,"protected GeneratorBase(int features, ObjectCodec codec, JsonWriteContext ctxt) {"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,95,super();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,96,_features = features;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,98,_writeContext = ctxt;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,108,@Override
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,109,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,110,return _writeContext.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,113,@Override
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,114,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,115,_writeContext.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,125,@Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,126,@Override public int getFeatureMask() { return _features; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,128,"//public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,110,/ !!! TODO
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,140,if (_writeContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,141,_writeContext = _writeContext.withDupDetector(DupDetector.rootDetector(this));
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,127,/ !!! TODO
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,158,_writeContext = _writeContext.withDupDetector(null);
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,134,"/public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,136,Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,137,Override public int getFeatureMask() { return _features; }
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,153,/ !!! TODO
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,177,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(newMask)) { // enabling
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,178,if (_writeContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,179,_writeContext = _writeContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,181,} else { // disabling
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,182,_writeContext = _writeContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,266,@Override public void writeRawValue(SerializableString text) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,267,"_verifyValueWrite(""write raw value"");"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,268,writeRaw(text);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,368,/* UTF-8 related helper method(s)
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,373,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,375,"protected final int _decodeSurrogate(int surr1, int surr2) throws IOException"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,377,"// First is known to be valid, but how about the other?"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,378,if (surr2 < SURR2_FIRST || surr2 > SURR2_LAST) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,379,"String msg = ""Incomplete surrogate pair: first char 0x""+Integer.toHexString(surr1)+"", second 0x""+Integer.toHexString(surr2);"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,380,_reportError(msg);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,382,int c = 0x10000 + ((surr1 - SURR1_FIRST) << 10) + (surr2 - SURR2_FIRST);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,383,return c;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,295,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,296,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,297,return _parsingContext.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,300,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,301,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,302,_parsingContext.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,307,/* Overrides for Feature handling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,311,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,312,public JsonParser enable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,313,_features |= f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,314,if (f == Feature.STRICT_DUPLICATE_DETECTION) { // enabling dup detection?
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,315,if (_parsingContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,316,_parsingContext = _parsingContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,319,return this;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,322,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,323,public JsonParser disable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,324,_features &= ~f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,325,if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,326,_parsingContext = _parsingContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,328,return this;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,331,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,332,public JsonParser setFeatureMask(int newMask) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,333,int changes = (_features ^ newMask);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,334,if (changes != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,335,_features = newMask;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,336,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(newMask)) { // enabling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,337,if (_parsingContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,338,_parsingContext = _parsingContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,340,} else { // disabling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,341,_parsingContext = _parsingContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,344,return this;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,22,rotected final DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,24,/ // // Location information (minus source reference)
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,22,protected DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,26,rotected int _lineNr;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,27,rotected int _columnNr;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,29,rotected String _currentName;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,44,"* Instance construction, reuse"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,37,/* Location/state information (minus source reference)
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,41,protected String _currentName;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,44,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,46,protected Object _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,48,protected int _lineNr;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,49,protected int _columnNr;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,53,"/* Instance construction, config, reuse"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,73,_currentValue = null;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,75,/ // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,85,public JsonReadContext withDupDetector(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,86,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,87,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,90,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,91,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,92,return _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,95,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,96,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,97,_currentValue = v;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,102,/* Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,171,public DupDetector getDupDetector() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,172,return _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,28,rotected final DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,28,protected DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,42,/* Location/state information (minus source reference)
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,53,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,55,protected Object _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,82,_currentValue = null;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,87,public JsonWriteContext withDupDetector(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,88,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,89,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,92,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,93,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,94,return _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,97,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,98,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,99,_currentValue = v;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,75,/ // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,104,/* Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,141,public DupDetector getDupDetector() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,142,return _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,117,ublic final int writeFieldName(String name) throws JsonProcessingException {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,152,public int writeFieldName(String name) throws JsonProcessingException {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,153,if (_gotName) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,154,return JsonWriteContext.STATUS_EXPECT_VALUE;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,128,ublic final int writeValue() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,166,public int writeValue() {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,27,rotected final static int SURR1_FIRST = 0xD800;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,28,rotected final static int SURR1_LAST = 0xDBFF;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,29,rotected final static int SURR2_FIRST = 0xDC00;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,30,rotected final static int SURR2_LAST = 0xDFFF;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,590,// since 2.5
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,591,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,592,public void writeRawValue(SerializableString text) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,593,"_verifyValueWrite(""write raw value"");"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,594,byte[] raw = text.asUnquotedUTF8();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,595,if (raw.length > 0) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,596,_writeBytes(raw);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1782,"rivate final int _outputMultiByteChar(int ch, int outputPtr)"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1783,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1787,"private final int _outputMultiByteChar(int ch, int outputPtr) throws IOException"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1802,"rotected final int _decodeSurrogate(int surr1, int surr2) throws IOException"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1804,"/ First is known to be valid, but how about the other?"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1805,f (surr2 < SURR2_FIRST || surr2 > SURR2_LAST) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1806,"tring msg = ""Incomplete surrogate pair: first char 0x""+Integer.toHexString(surr1)+"", second 0x""+Integer.toHexString(surr2);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1807,reportError(msg);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1809,nt c = 0x10000 + ((surr1 - SURR1_FIRST) << 10) + (surr2 - SURR2_FIRST);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1810,eturn c;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,169,rotected final boolean loadMore()
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,170,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,169,protected final boolean loadMore() throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,176,"nt count = _inputStream.read(_inputBuffer, 0, _inputBuffer.length);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,175,int space = _inputBuffer.length;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,176,if (space == 0) { // only occurs when we've been closed
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,177,return false;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,180,"int count = _inputStream.read(_inputBuffer, 0, space);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,196,rotected final boolean _loadToHaveAtLeast(int minAvailable)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,197,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,200,protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,260,inputBuffer = null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,263,"/* 21-Nov-2014, tatu: Let's not set it to null; this way should"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,264,*   get slightly more meaningful error messages in case someone
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,265,"*   closes parser indirectly, without realizing."
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,267,_inputBuffer = ByteArrayBuilder.NO_BYTES;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1959,uads[qlen++] = currQuad;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1966,"quads[qlen++] = pad(currQuad, currQuadBytes);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1984,"q1 = pad(q1, lastQuadBytes);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1998,"q2 = pad(q2, lastQuadBytes);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2007,uads[qlen++] = lastQuad;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2016,"quads[qlen++] = pad(lastQuad, lastQuadBytes);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,3243,* Binary access
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,3252,"/* Internal methods, binary access"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,3370,"/* Internal methods, other"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,3375,"* Helper method needed to fix [Issue#148], masking of 0x00 character"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,3377,"private final static int pad(int q, int bytes) {"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,3378,return (bytes == 4) ? q : (q | (-1 << (bytes << 3)));
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,64,* Accessor that can be used to find out type for which parameterization
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,65,"* is applied: this is often NOT same as what {@link #getRawClass} returns,"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,66,* but rather one of it supertype.
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,67,*<p>
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,68,"* For example: for type like {@link java.util.HashMap}, raw type is"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,69,* {@link java.util.HashMap}; but this method would return
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,70,"* {@link java.util.Map}, because relevant type parameters that are"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,71,* resolved (and accessible using {@link #containedType(int)} and
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,72,* {@link #getKeyType()}) are parameter for {@link java.util.Map}
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,73,* (which may or may not be same as type parameters for subtype;
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,74,"* in case of {@link java.util.HashMap} they are, but for further"
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,75,* subtypes they may be different parameters or possibly none at all).
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,77,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,79,public Class<?> getParameterSource() {
True,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,src/main/java/com/fasterxml/jackson/core/type/ResolvedType.java,80,return null;
False,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,26,rivate final static byte[] NO_BYTES = new byte[0];
True,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,26,public final static byte[] NO_BYTES = new byte[0];
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,1,package com.fasterxml.jackson.core.util;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,3,import java.io.IOException;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,5,import com.fasterxml.jackson.core.JsonGenerator;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,8,"* Default linefeed-based indenter, used by {@link DefaultPrettyPrinter} (unless"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,9,* overridden). Uses system-specific linefeeds and 2 spaces for indentation per level.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,11,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,13,public class DefaultIndenter
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,14,extends DefaultPrettyPrinter.NopIndenter
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,16,private static final long serialVersionUID = 1L;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,18,public final static String SYS_LF;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,19,static {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,20,String lf;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,21,try {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,22,"lf = System.getProperty(""line.separator"");"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,23,} catch (Throwable t) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,24,"lf = ""\n""; // fallback when security manager denies access"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,26,SYS_LF = lf;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,29,"public static final DefaultIndenter SYSTEM_LINEFEED_INSTANCE = new DefaultIndenter(""  "", SYS_LF);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,32,"* We expect to rarely get indentation deeper than this number of levels,"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,33,* and try not to pre-generate more indentations than needed.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,35,private final static int INDENT_LEVELS = 16;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,36,private final char[] indents;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,37,private final int charsPerLevel;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,38,private final String eol;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,40,/** Indent with two spaces and the system's default line feed */
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,41,public DefaultIndenter() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,42,"this(""  "", SYS_LF);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,45,/** Create an indenter which uses the <code>indent</code> string to indent one level
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,46,*  and the <code>eol</code> string to separate lines.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,48,"public DefaultIndenter(String indent, String eol)"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,50,charsPerLevel = indent.length();
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,52,indents = new char[indent.length() * INDENT_LEVELS];
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,53,int offset = 0;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,54,for (int i=0; i<INDENT_LEVELS; i++) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,55,"indent.getChars(0, indent.length(), indents, offset);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,56,offset += indent.length();
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,59,this.eol = eol;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,62,public DefaultIndenter withLinefeed(String lf)
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,64,if (lf.equals(eol)) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,65,return this;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,67,"return new DefaultIndenter(getIndent(), lf);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,70,public DefaultIndenter withIndent(String indent)
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,72,if (indent.equals(getIndent())) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,73,return this;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,75,"return new DefaultIndenter(indent, eol);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,78,@Override
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,79,public boolean isInline() { return false; }
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,81,@Override
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,82,"public void writeIndentation(JsonGenerator jg, int level) throws IOException"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,84,jg.writeRaw(eol);
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,85,if (level > 0) { // should we err on negative values (as there's some flaw?)
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,86,level *= charsPerLevel;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,87,while (level > indents.length) { // unlike to happen but just in case
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,88,"jg.writeRaw(indents, 0, indents.length);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,89,level -= indents.length;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,91,"jg.writeRaw(indents, 0, level);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,95,public String getEol() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,96,return eol;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,99,public String getIndent() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,100,"return new String(indents, 0, charsPerLevel);"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,4,mport java.util.Arrays;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,21,rivate static final long serialVersionUID = -5512586643324525213L;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,20,private static final long serialVersionUID = 1;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,39,"oid writeIndentation(JsonGenerator jg, int level)"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,40,"hrows IOException, JsonGenerationException;"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,38,"void writeIndentation(JsonGenerator jg, int level) throws IOException;"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,62,rotected Indenter _objectIndenter = Lf2SpacesIndenter.instance;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,60,protected Indenter _objectIndenter = DefaultIndenter.SYSTEM_LINEFEED_INSTANCE;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,384,"ublic void writeIndentation(JsonGenerator jg, int level)"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,385,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,382,"public void writeIndentation(JsonGenerator jg, int level) throws IOException { }"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,414, Default linefeed-based indenter uses system-specific linefeeds and
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,415, 2 spaces for indentation per level.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,410,* @deprecated Since 2.5 use {@link DefaultIndenter} instead
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,417,ublic static class Lf2SpacesIndenter extends NopIndenter
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,412,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,413,public static class Lf2SpacesIndenter extends DefaultIndenter
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,419,rivate final static String SYS_LF;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,420,tatic {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,421,tring lf = null;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,422,ry {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,423,"f = System.getProperty(""line.separator"");"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,424, catch (Throwable t) { } // access exception?
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,425,"YS_LF = (lf == null) ? ""\n"" : lf;"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,428,inal static int SPACE_COUNT = 64;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,429,inal static char[] SPACES = new char[SPACE_COUNT];
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,430,tatic {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,431,"rrays.fill(SPACES, ' ');"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,415,/** @deprecated Use {@link DefaultIndenter#SYSTEM_LINEFEED_INSTANCE} instead */
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,417,@Deprecated
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,438, Linefeed used; default value is the platform-specific linefeed.
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,440,rotected final String _lf;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,442,ublic Lf2SpacesIndenter() { this(SYS_LF); }
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,445, @since 2.3
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,447,ublic Lf2SpacesIndenter(String lf) {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,448,lf = lf;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,452," ""Mutant factory"" method that will return an instance that uses"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,453, specified String as linefeed.
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,455, @since 2.3
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,457,ublic Lf2SpacesIndenter withLinefeed(String lf)
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,459,f (lf.equals(_lf)) {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,460,eturn this;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,462,eturn new Lf2SpacesIndenter(lf);
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,420,"/** @deprecated Use {@code new DefaultIndenter(""  "", DefaultIndenter.SYS_LF)} instead */"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,421,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,422,public Lf2SpacesIndenter() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,423,"super(""  "", DefaultIndenter.SYS_LF);"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,465,Override
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,466,ublic boolean isInline() { return false; }
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,468,Override
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,469,"ublic void writeIndentation(JsonGenerator jg, int level)"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,470,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,472,g.writeRaw(_lf);
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,473,f (level > 0) { // should we err on negative values (as there's some flaw?)
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,474,evel += level; // 2 spaces per level
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,475,hile (level > SPACE_COUNT) { // should never happen but...
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,476,"g.writeRaw(SPACES, 0, SPACE_COUNT);"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,477,evel -= SPACES.length;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,479,"g.writeRaw(SPACES, 0, level);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,426,"/** @deprecated Use {@code new DefaultIndenter(""  "", lf)} instead */"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,427,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,428,public Lf2SpacesIndenter(String lf) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,429,"super(""  "", lf);"
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,45,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,46,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,47,return delegate.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,50,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,51,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,52,delegate.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,28,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,29,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,30,return delegate.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,33,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,34,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,35,delegate.setCurrentValue(v);
False,src/test/java/com/fasterxml/jackson/test/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,1,ackage com.fasterxml.jackson.test;
True,src/test/java/com/fasterxml/jackson/test/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,1,package com.fasterxml.jackson.core;
False,src/test/java/com/fasterxml/jackson/test/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,8,mport com.fasterxml.jackson.core.*;
False,src/test/java/com/fasterxml/jackson/test/BaseTest.java,src/test/java/com/fasterxml/jackson/core/BaseTest.java,10,/import static org.junit.Assert.*;
False,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,3,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,12,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,3,mport com.fasterxml.jackson.test.BaseTest;
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,14,"assertEquals(""/Image/15"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,22,"assertEquals(""/15"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,31,"assertEquals("""", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,55,"assertEquals(""/w~1out/til~0de"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,63,"assertEquals(""/til~0de"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,72,"assertEquals("""", ptr.head().toString());"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,11,ublic class TestVersions extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,11,public class TestVersions extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Codec.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Codec.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Codec.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Codec.java,8,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Generation.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Generation.java,8,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,10,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,10,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,100,"SuppressWarnings(""resource"")"
False,src/test/java/com/fasterxml/jackson/core/base64/TestJsonParserBinary.java,src/test/java/com/fasterxml/jackson/core/base64/TestJsonParserBinary.java,13,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/base64/TestJsonParserBinary.java,src/test/java/com/fasterxml/jackson/core/base64/TestJsonParserBinary.java,13,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/format/TestJsonFormatDetection.java,src/test/java/com/fasterxml/jackson/core/format/TestJsonFormatDetection.java,10,ublic class TestJsonFormatDetection extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/format/TestJsonFormatDetection.java,src/test/java/com/fasterxml/jackson/core/format/TestJsonFormatDetection.java,10,public class TestJsonFormatDetection extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,4,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,4,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java,src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java,7,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java,src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java,7,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/io/TestJDKSerializable.java,src/test/java/com/fasterxml/jackson/core/io/TestJDKSerializable.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestJDKSerializable.java,src/test/java/com/fasterxml/jackson/core/io/TestJDKSerializable.java,8,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/io/TestJsonStringEncoder.java,src/test/java/com/fasterxml/jackson/core/io/TestJsonStringEncoder.java,12,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestJsonStringEncoder.java,src/test/java/com/fasterxml/jackson/core/io/TestJsonStringEncoder.java,12,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/io/TestMergedStream.java,src/test/java/com/fasterxml/jackson/core/io/TestMergedStream.java,11,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestMergedStream.java,src/test/java/com/fasterxml/jackson/core/io/TestMergedStream.java,11,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,10,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,src/test/java/com/fasterxml/jackson/core/io/TestUTF8Writer.java,10,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestCharEscaping.java,src/test/java/com/fasterxml/jackson/core/json/TestCharEscaping.java,13,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestCharEscaping.java,src/test/java/com/fasterxml/jackson/core/json/TestCharEscaping.java,13,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,12,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,12,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestCustomEscaping.java,src/test/java/com/fasterxml/jackson/core/json/TestCustomEscaping.java,9,ublic class TestCustomEscaping extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestCustomEscaping.java,src/test/java/com/fasterxml/jackson/core/json/TestCustomEscaping.java,9,public class TestCustomEscaping extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestDecorators.java,src/test/java/com/fasterxml/jackson/core/json/TestDecorators.java,17,ublic class TestDecorators extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestDecorators.java,src/test/java/com/fasterxml/jackson/core/json/TestDecorators.java,17,public class TestDecorators extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,8,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,12,testSimpleDups(false);
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,testSimpleDups(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,public void testSimpleDupsEagerlyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,11,"_testSimpleDups(true, false, new JsonFactory());"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,16,rotected void _testSimpleDups(boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,sonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,public void testSimpleDupsEagerlyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,14,"_testSimpleDups(false, false, new JsonFactory());"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,17,// Testing ability to enable checking after construction of
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,"// generator, not just via JsonFactory"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,19,public void testSimpleDupsLazilyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,20,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"_testSimpleDups(true, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,25,public void testSimpleDupsLazilyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,27,"_testSimpleDups(false, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,30,"@SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,31,"protected void _testSimpleDups(boolean useStream, boolean lazySetting, JsonFactory f)"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,32,throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"writeSimple0(_generator(f, useStream), ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,23,"writeSimple1(_generator(f, useStream), ""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,if (!lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,36,"_writeSimple0(_generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,37,"_writeSimple1(_generator(f, useStream), ""b"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,41,JsonGenerator g1;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,43,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,44,"g1 = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,45,g1.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,46,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,47,f.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,48,"g1 = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,28,"writeSimple0( _generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,51,"_writeSimple0(g1, ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,57,JsonGenerator g2;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,58,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,59,"g2 = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,60,g2.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,61,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,62,"g2 = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,"writeSimple1( _generator(f, useStream), ""x"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,65,"_writeSimple1(g2, ""x"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorWithSerializedString.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorWithSerializedString.java,9,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorWithSerializedString.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorWithSerializedString.java,9,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,8,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,12,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,12,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,16,"SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,229,// [core#167]: no error for writing field name twice
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,230,public void testDupFieldNameWrites() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,232,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,233,"_testDupFieldNameWrites(f, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,234,"_testDupFieldNameWrites(f, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,237,"private void _testDupFieldNameWrites(JsonFactory f, boolean useReader) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,239,JsonGenerator gen;
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,240,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,241,if (useReader) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,242,"gen = f.createGenerator(new OutputStreamWriter(bout, ""UTF-8""));"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,243,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,244,"gen = f.createGenerator(bout, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,246,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,247,"gen.writeFieldName(""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,249,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,250,"gen.writeFieldName(""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,251,gen.flush();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,252,"String json = bout.toString(""UTF-8"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,253,"fail(""Should not have let two consequtive field name writes succeed: output = ""+json);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,254,} catch (JsonProcessingException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,255,"verifyException(e, ""can not write a field name, expecting a value"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,257,gen.close();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,14,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGeneratorFeatures.java,14,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,14,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,14,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,6,ublic class TestLocation extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,6,public class TestLocation extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,14,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,14,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,14,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,14,extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,433,"// force use of new factory, just in case (might still recycle same buffers tho?)"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,442," FACTORY.createParser(doc.getBytes(""UTF-8""))"
False,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,443, FACTORY.createParser(doc);
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,443,"? f.createParser(doc.getBytes(""UTF-8""))"
True,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,src/test/java/com/fasterxml/jackson/core/json/TestNumericValues.java,444,: f.createParser(doc);
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,6,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,6,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,10,or (String doc : new String[] {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,private final String[] DUP_DOCS = new String[] {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"oc = doc.replace(""'"", ""\"""");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,19,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,20,ssertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,17,for (int i = 0; i < DUP_DOCS.length; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"DUP_DOCS[i] = DUP_DOCS[i].replace(""'"", ""\"""");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,22,public void testSimpleDupsDisabled() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,// first: verify no problems if detection NOT enabled
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,assertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,27,for (String doc : DUP_DOCS) {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,"testSimpleDupsFail(doc, f, false, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,"testSimpleDupsFail(doc, f, true, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,30,"rivate void _testSimpleDupsOk(final String doc, JsonFactory f, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,33,public void testSimpleDupsBytes() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,35,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,36,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,37,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,38,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,39,"// First, with static setting"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,40,"_testSimpleDupsFail(doc, dupF, true, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,// and then dynamic
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,43,"_testSimpleDupsFail(doc, nonDupF, true, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,47,public void testSimpleDupsChars() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,49,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,50,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,51,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,52,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,53,"_testSimpleDupsFail(doc, dupF, false, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,54,"_testSimpleDupsFail(doc, nonDupF, false, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,58,"private void _testSimpleDupsOk(final String doc, JsonFactory f,"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,59,boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,"oolean useStream, String name) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,71,"boolean useStream, String name, boolean lazily) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,75,if (lazily) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,76,jp.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
False,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,10,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,10,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,6,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,6,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,10,ublic class TestParserOverrides extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,10,public class TestParserOverrides extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,1,ackage com.fasterxml.jackson.core.failing;
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,3,mport java.io.IOException;
True,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,1,package com.fasterxml.jackson.core.json;
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,6,mport com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,7,mport com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,9,"SuppressWarnings(""serial"")"
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,10,ublic class TestJsonParserSymbols
False,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,11,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,5,public class TestParserSymbols
True,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,6,extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,8,// For [Issue#148]
True,src/test/java/com/fasterxml/jackson/core/failing/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestParserSymbols.java,13,// For [Issue#148]
False,src/test/java/com/fasterxml/jackson/core/json/TestRootValues.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValues.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValues.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValues.java,8,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestUnicode.java,src/test/java/com/fasterxml/jackson/core/json/TestUnicode.java,7,ublic class TestUnicode extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestUnicode.java,src/test/java/com/fasterxml/jackson/core/json/TestUnicode.java,7,public class TestUnicode extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Generator.java,8,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Parser.java,src/test/java/com/fasterxml/jackson/core/json/TestUtf8Parser.java,6,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,6,"SuppressWarnings(""resource"")"
False,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,8,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,7,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,6,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestArrayParsing.java,src/test/java/com/fasterxml/jackson/core/main/TestArrayParsing.java,10,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestArrayParsing.java,src/test/java/com/fasterxml/jackson/core/main/TestArrayParsing.java,10,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorArray.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorArray.java,12,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorArray.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorArray.java,12,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorClosing.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorClosing.java,5,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorCopy.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorCopy.java,5,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,14,"SuppressWarnings(""resource"")"
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,16,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,15,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorObject.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorObject.java,4,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestNumberParsing.java,src/test/java/com/fasterxml/jackson/core/main/TestNumberParsing.java,13,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestNumberParsing.java,src/test/java/com/fasterxml/jackson/core/main/TestNumberParsing.java,13,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/main/TestParserClosing.java,src/test/java/com/fasterxml/jackson/core/main/TestParserClosing.java,6,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,10,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,10,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/main/TestParserLinefeeds.java,src/test/java/com/fasterxml/jackson/core/main/TestParserLinefeeds.java,5,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestParserWithObjects.java,src/test/java/com/fasterxml/jackson/core/main/TestParserWithObjects.java,12,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestParserWithObjects.java,src/test/java/com/fasterxml/jackson/core/main/TestParserWithObjects.java,12,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/main/TestPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/main/TestPrettyPrinter.java,15,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/main/TestPrettyPrinter.java,15,extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,9,import com.fasterxml.jackson.core.io.SerializedString;
False,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,11, @since 1.7
False,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,13,ublic class TestRawStringWriting extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,11,public class TestRawStringWriting extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,81,public void testWriteRawWithSerializable() throws Exception
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,83,JsonFactory jf = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,85,"_testWithRaw(jf, true);"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,86,"_testWithRaw(jf, false);"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,89,"private void _testWithRaw(JsonFactory f, boolean useBytes) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,91,JsonGenerator jgen;
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,92,ByteArrayOutputStream bytes = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,93,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,95,if (useBytes) {
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,96,"jgen = f.createGenerator(bytes, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,97,} else {
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,98,jgen = f.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,101,jgen.writeStartArray();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,102,"jgen.writeRawValue(new SerializedString(""\""foo\""""));"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,103,"jgen.writeRawValue(new SerializedString(""12""));"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,104,"jgen.writeRaw(new SerializedString("", false""));"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,105,jgen.writeEndArray();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,106,jgen.close();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,108,JsonParser p = useBytes
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,109,? f.createParser(bytes.toByteArray())
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,110,: f.createParser(sw.toString());
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,112,"assertToken(JsonToken.START_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,113,"assertToken(JsonToken.VALUE_STRING, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,114,"assertEquals(""foo"", p.getText());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,115,"assertToken(JsonToken.VALUE_NUMBER_INT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,116,"assertEquals(12, p.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,117,"assertToken(JsonToken.VALUE_FALSE, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,118,"assertToken(JsonToken.END_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,119,p.close();
False,src/test/java/com/fasterxml/jackson/core/main/TestScopeMatching.java,src/test/java/com/fasterxml/jackson/core/main/TestScopeMatching.java,5,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,7,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/sym/TestByteBasedSymbols.java,src/test/java/com/fasterxml/jackson/core/sym/TestByteBasedSymbols.java,15,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/sym/TestByteBasedSymbols.java,src/test/java/com/fasterxml/jackson/core/sym/TestByteBasedSymbols.java,15,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,7,mport com.fasterxml.jackson.test.BaseTest;
False,src/test/java/com/fasterxml/jackson/core/sym/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/sym/TestJsonParserSymbols.java,15,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/sym/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/sym/TestJsonParserSymbols.java,15,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,8,ublic class TestSymbolTables extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,8,public class TestSymbolTables extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/util/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/util/TestCharTypes.java,6,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/util/TestCharTypes.java,6,extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,1,package com.fasterxml.jackson.core.util;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,3,import static org.junit.Assert.*;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,5,import java.io.IOException;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,6,import java.io.StringWriter;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,8,import org.junit.Test;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,10,import com.fasterxml.jackson.core.JsonFactory;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,11,import com.fasterxml.jackson.core.JsonGenerator;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,12,import com.fasterxml.jackson.core.PrettyPrinter;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,14,public class TestDefaultPrettyPrinter
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,16,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,17,public void testSystemLinefeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,19,PrettyPrinter pp = new DefaultPrettyPrinter();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,20,"String LF = System.getProperty(""line.separator"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,21,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,22,"""{"" + LF +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,23,"""  \""name\"" : \""John Doe\"","" + LF +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,24,"""  \""age\"" : 3.14"" + LF +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,25,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,28,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,29,public void testWithLineFeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,31,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,32,".withObjectIndenter(new DefaultIndenter().withLinefeed(""\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,33,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,34,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,35,"""  \""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,36,"""  \""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,37,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,40,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,41,public void testWithIndent() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,43,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,44,".withObjectIndenter(new DefaultIndenter().withIndent("" ""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,45,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,46,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,47,""" \""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,48,""" \""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,49,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,52,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,53,public void testUnixLinefeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,55,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,56,".withObjectIndenter(new DefaultIndenter(""  "", ""\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,57,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,58,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,59,"""  \""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,60,"""  \""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,61,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,64,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,65,public void testWindowsLinefeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,67,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,68,".withObjectIndenter(new DefaultIndenter(""  "", ""\r\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,69,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,70,"""{\r\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,71,"""  \""name\"" : \""John Doe\"",\r\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,72,"""  \""age\"" : 3.14\r\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,73,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,76,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,77,public void testTabIndent() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,79,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,80,".withObjectIndenter(new DefaultIndenter(""\t"", ""\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,81,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,82,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,83,"""\t\""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,84,"""\t\""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,85,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,88,private String _printTestData(PrettyPrinter pp) throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,90,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,91,JsonGenerator gen = new JsonFactory().createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,92,gen.setPrettyPrinter(pp);
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,93,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,94,"gen.writeFieldName(""name"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,95,"gen.writeString(""John Doe"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,96,"gen.writeFieldName(""age"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,97,gen.writeNumber(3.14);
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,98,gen.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,99,gen.close();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,100,return sw.toString();
False,src/test/java/com/fasterxml/jackson/core/util/TestDelegates.java,src/test/java/com/fasterxml/jackson/core/util/TestDelegates.java,7,ublic class TestDelegates extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestDelegates.java,src/test/java/com/fasterxml/jackson/core/util/TestDelegates.java,7,public class TestDelegates extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/util/TestNumberPrinting.java,src/test/java/com/fasterxml/jackson/core/util/TestNumberPrinting.java,12,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestNumberPrinting.java,src/test/java/com/fasterxml/jackson/core/util/TestNumberPrinting.java,12,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/util/TestSerializedString.java,src/test/java/com/fasterxml/jackson/core/util/TestSerializedString.java,15,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestSerializedString.java,src/test/java/com/fasterxml/jackson/core/util/TestSerializedString.java,15,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java,src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java,7,xtends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java,src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java,7,extends com.fasterxml.jackson.core.BaseTest
False,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,7,ublic class TestVersionUtil extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,7,public class TestVersionUtil extends com.fasterxml.jackson.core.BaseTest
