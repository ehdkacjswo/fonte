is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,9,* Utility class - not for instantiation
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,11,private CharTypes() {}
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,104,/ start with 8-bit JS names
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,109,// start with 8-bit JS names
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,128, Lookup table used for determining which output characters in
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,133,* Lookup table used for determining which output characters in
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,210,assert escCode == CharacterEscapes.ESCAPE_STANDARD :
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,211,"""Unexpected/unsupported ESCAPE_XXX sentinel value"";"
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,212,// The only negative value sOutputEscapes128 returns
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,213,"// is CharacterEscapes.ESCAPE_STANDARD, which mean"
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,214,// appendQuotes should encode using the Unicode encoding;
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,215,// not sure if this is the right way to encode for
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,216,// CharacterEscapes.ESCAPE_CUSTOM or other (future)
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,217,// CharacterEscapes.ESCAPE_XXX values.
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,209,nt value = -(escCode + 1);
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,223,int value = c;  // widening
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,1,package com.fasterxml.jackson.core.io;
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,3,import static junit.framework.Assert.assertEquals;
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,5,public class TestCharTypes
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,6,extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,8,public void testAppendQuoted0_31 ()
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,10,"final String[] inputs =    { ""\u0000"",  ""\u001F"",  ""abcd"", ""\u0001ABCD\u0002"",   ""WX\u000F\u0010YZ""   };"
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,11,"final String[] expecteds = { ""\\u0000"", ""\\u001F"", ""abcd"", ""\\u0001ABCD\\u0002"", ""WX\\u000F\\u0010YZ"" };"
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,12,assert inputs.length == expecteds.length;
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,14,for (int i = 0; i < inputs.length; i++) {
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,15,final String input = inputs[i];
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,16,final String expected = expecteds[i];
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,18,final StringBuilder sb = new StringBuilder();
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,19,"CharTypes.appendQuoted(sb, input);"
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,20,final String actual = sb.toString();
True,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,src/test/java/com/fasterxml/jackson/core/io/TestCharTypes.java,22,"assertEquals(expected, actual);"
