is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,217,mask = (1 << ordinal());
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,217,_mask = (1 << ordinal());
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,343, Bulk set method for (re)settting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,342,* Bulk set method for (re)setting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,346,* @param values Bitmask that defines which {@link Feature}s are enabled
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,347,*    and which disabled
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,349,ublic abstract JsonGenerator setFeatureMask(int mask);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,351,public abstract JsonGenerator setFeatureMask(int values);
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,224,ublic int getMask() { return (1 << ordinal()); }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,224,public int getMask() { return _mask; }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,458,ublic boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,458,public boolean isEnabled(Feature f) { return f.enabledIn(_features); }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,470, Bulk set method for (re)settting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,470,* Bulk set method for (re)setting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,24,* Set of feature masks related to features that need updates of other
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,25,* local configuration or state.
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,27,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,29,protected final static int DERIVED_FEATURES_MASK = Feature.WRITE_NUMBERS_AS_STRINGS.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,30,| Feature.ESCAPE_NON_ASCII.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,31,| Feature.STRICT_DUPLICATE_DETECTION.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,115,@Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,116,@Override public int getFeatureMask() { return _features; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,118,"//public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,105,features |= f.getMask();
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,106,f (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,107,cfgNumbersAsStrings = true;
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,108, else if (f == Feature.ESCAPE_NON_ASCII) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,109,etHighestNonEscapedChar(127);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,122,final int mask = f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,123,_features |= mask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,124,if ((mask & DERIVED_FEATURES_MASK) != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,125,if (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,126,_cfgNumbersAsStrings = true;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,127,} else if (f == Feature.ESCAPE_NON_ASCII) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,128,setHighestNonEscapedChar(127);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,129,} else if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,130,if (_writeContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,131,_writeContext = _writeContext.withDupDetector(DupDetector.rootDetector(this));
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,116,features &= ~f.getMask();
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,117,f (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,118,cfgNumbersAsStrings = false;
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,119, else if (f == Feature.ESCAPE_NON_ASCII) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,120,etHighestNonEscapedChar(0);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,140,final int mask = f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,141,_features &= ~mask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,142,if ((mask & DERIVED_FEATURES_MASK) != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,143,if (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,144,_cfgNumbersAsStrings = false;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,145,} else if (f == Feature.ESCAPE_NON_ASCII) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,146,setHighestNonEscapedChar(0);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,147,} else if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,148,_writeContext = _writeContext.withDupDetector(null);
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,125,"/public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,127,Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,128,Override public int getFeatureMask() { return _features; }
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,130,Override public JsonGenerator setFeatureMask(int mask) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,131,features = mask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,154,@Override public JsonGenerator setFeatureMask(int newMask) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,155,int changed = newMask ^ _features;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,156,_features = newMask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,157,if ((changed & DERIVED_FEATURES_MASK) != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,158,_cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(newMask);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,159,if (Feature.ESCAPE_NON_ASCII.enabledIn(changed)) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,160,if (Feature.ESCAPE_NON_ASCII.enabledIn(newMask)) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,161,setHighestNonEscapedChar(127);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,162,} else {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,163,setHighestNonEscapedChar(0);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,166,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(changed)) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,167,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(newMask)) { // enabling
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,168,if (_writeContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,169,_writeContext = _writeContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,171,} else { // disabling
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,172,_writeContext = _writeContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,8,import com.fasterxml.jackson.core.JsonParser.Feature;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,298,/* Overrides for Feature handling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,302,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,303,public JsonParser enable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,304,_features |= f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,305,if (f == Feature.STRICT_DUPLICATE_DETECTION) { // enabling dup detection?
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,306,if (_parsingContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,307,_parsingContext = _parsingContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,310,return this;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,313,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,314,public JsonParser disable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,315,_features &= ~f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,316,if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,317,_parsingContext = _parsingContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,319,return this;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,322,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,323,public JsonParser setFeatureMask(int newMask) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,324,int changes = (_features ^ newMask);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,325,if (changes != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,326,_features = newMask;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,327,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(newMask)) { // enabling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,328,if (_parsingContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,329,_parsingContext = _parsingContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,331,} else { // disabling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,332,_parsingContext = _parsingContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,335,return this;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,22,rotected final DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,22,protected DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,75,/ // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,75,public JsonReadContext withDupDetector(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,76,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,77,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,82,/* Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,151,public DupDetector getDupDetector() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,152,return _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,28,rotected final DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,28,protected DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,75,public JsonWriteContext withDupDetector(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,76,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,77,return this;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,75,/ // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,82,/* Factory methods
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,83,"ublic static JsonWriteContext createRootContext(DupDetector dd) { return new JsonWriteContext(TYPE_ROOT, null, dd); }"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,92,public static JsonWriteContext createRootContext(DupDetector dd) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,93,"return new JsonWriteContext(TYPE_ROOT, null, dd);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,119,public DupDetector getDupDetector() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,120,return _dups;
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,12,testSimpleDups(false);
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,testSimpleDups(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,public void testSimpleDupsEagerlyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,11,"_testSimpleDups(true, false, new JsonFactory());"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,16,rotected void _testSimpleDups(boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,sonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,public void testSimpleDupsEagerlyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,14,"_testSimpleDups(false, false, new JsonFactory());"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,17,// Testing ability to enable checking after construction of
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,"// generator, not just via JsonFactory"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,19,public void testSimpleDupsLazilyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,20,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"_testSimpleDups(true, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,25,public void testSimpleDupsLazilyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,27,"_testSimpleDups(false, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,30,"@SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,31,"protected void _testSimpleDups(boolean useStream, boolean lazySetting, JsonFactory f)"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,32,throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"writeSimple0(_generator(f, useStream), ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,23,"writeSimple1(_generator(f, useStream), ""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,if (!lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,36,"_writeSimple0(_generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,37,"_writeSimple1(_generator(f, useStream), ""b"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,41,JsonGenerator g1;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,43,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,44,"g1 = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,45,g1.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,46,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,47,f.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,48,"g1 = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,28,"writeSimple0( _generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,51,"_writeSimple0(g1, ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,57,JsonGenerator g2;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,58,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,59,"g2 = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,60,g2.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,61,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,62,"g2 = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,"writeSimple1( _generator(f, useStream), ""x"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,65,"_writeSimple1(g2, ""x"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,10,or (String doc : new String[] {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,private final String[] DUP_DOCS = new String[] {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"oc = doc.replace(""'"", ""\"""");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,19,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,20,ssertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,17,for (int i = 0; i < DUP_DOCS.length; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"DUP_DOCS[i] = DUP_DOCS[i].replace(""'"", ""\"""");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,22,public void testSimpleDupsDisabled() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,// first: verify no problems if detection NOT enabled
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,assertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,27,for (String doc : DUP_DOCS) {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,"testSimpleDupsFail(doc, f, false, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,"testSimpleDupsFail(doc, f, true, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,30,"rivate void _testSimpleDupsOk(final String doc, JsonFactory f, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,33,public void testSimpleDupsBytes() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,35,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,36,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,37,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,38,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,39,"// First, with static setting"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,40,"_testSimpleDupsFail(doc, dupF, true, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,// and then dynamic
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,43,"_testSimpleDupsFail(doc, nonDupF, true, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,47,public void testSimpleDupsChars() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,49,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,50,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,51,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,52,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,53,"_testSimpleDupsFail(doc, dupF, false, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,54,"_testSimpleDupsFail(doc, nonDupF, false, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,58,"private void _testSimpleDupsOk(final String doc, JsonFactory f,"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,59,boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,"oolean useStream, String name) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,71,"boolean useStream, String name, boolean lazily) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,75,if (lazily) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,76,jp.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
