is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,10, tree traversal (see {@link TreeNode#at}) and filtering of streaming JSON content
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,11, (see {@link JsonParser#filter}).
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,10,* tree traversal (see {@link TreeNode#at}).
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,11,* It may be used in future for filtering of streaming JSON content
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,12,* as well (not implemented yet for 2.3).
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,125,_currInputRowStart = start;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,126,"// If we have offset, need to omit that from byte offset, so:"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,127,_currInputProcessed = -start;
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,54,// for [Issue#111]
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,55,public void testOffsetWithInputOffset() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,57,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,58,JsonLocation loc;
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,59,JsonParser p;
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,60,"// 3 spaces before, 2 after, just for padding"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,61,"byte[] b = ""   { }  "".getBytes(""UTF-8"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,63,// and then peel them off
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,64,"p = f.createParser(b, 3, b.length-5);"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,65,"assertToken(JsonToken.START_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,67,loc = p.getTokenLocation();
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,68,"assertEquals(0L, loc.getByteOffset());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,69,"assertEquals(-1L, loc.getCharOffset());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,70,"assertEquals(1, loc.getLineNr());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,71,"assertEquals(1, loc.getColumnNr());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,73,loc = p.getCurrentLocation();
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,74,"assertEquals(1L, loc.getByteOffset());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,75,"assertEquals(-1L, loc.getCharOffset());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,76,"assertEquals(1, loc.getLineNr());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,77,"assertEquals(2, loc.getColumnNr());"
True,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,src/test/java/com/fasterxml/jackson/core/json/TestLocation.java,79,p.close();
