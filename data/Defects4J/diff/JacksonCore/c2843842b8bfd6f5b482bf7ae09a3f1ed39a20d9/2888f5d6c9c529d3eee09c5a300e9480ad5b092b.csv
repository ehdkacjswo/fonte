is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,147,* Note that this setting may not necessarily make sense for all
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,148,"* data formats (for example, binary formats typically do not use"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,149,* any escaping mechanisms; and some textual formats do not have
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,150,"* general-purpose escaping); if so, settings is simply ignored."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,151,"* Put another way, effects of this feature are data-format specific."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,152,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,167,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,168,* Feature is disabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,167,rivate final boolean _defaultState;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,175,* Feature that determines what to do if the underlying data format requires knowledge
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,176,"* of all properties to output, and if no definition is found for a property that"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,177,"* caller tries to write. If enabled, such properties will be quietly ignored;"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,178,"* if disabled, a {@link JsonProcessingException} will be thrown to indicate the"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,179,* problem.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,180,* Typically most textual data formats do NOT require schema information (although
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,181,"* some do, such as CSV), whereas many binary data formats do require definitions"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,182,"* (such as Avro, protobuf), although not all (Smile, CBOR, BSON and MessagePack do not)."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,183,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,184,* Note that support for this feature is implemented by individual data format
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,185,"* module, if (and only if) it makes sense for the format in question. For JSON,"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,186,"* for example, this feature has no effect as properties need not be pre-defined."
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,187,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,188,"* Feature is disabled by default, meaning that if the underlying data format"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,189,"* requires knowledge of all properties to output, attempts to write an unknown"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,190,* property will result in a {@link JsonProcessingException}
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,192,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,194,"IGNORE_UNKNOWN(false),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,197,private final boolean _defaultState;
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,187,mask = (1 << ordinal());
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,217,_mask = (1 << ordinal());
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,293,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,294,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,295,*   getOutputContext().getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,296,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,298,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,300,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,301,JsonStreamContext ctxt = getOutputContext();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,302,return (ctxt == null) ? null : ctxt.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,306,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,307,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,308,*   getOutputContext().setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,309,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,311,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,313,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,314,JsonStreamContext ctxt = getOutputContext();
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,315,if (ctxt != null) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,316,ctxt.setCurrentValue(v);
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,313, Bulk set method for (re)settting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,370,* Bulk set method for (re)setting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,374,* @param values Bitmask that defines which {@link Feature}s are enabled
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,375,*    and which disabled
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,319,ublic abstract JsonGenerator setFeatureMask(int mask);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,379,public abstract JsonGenerator setFeatureMask(int values);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,866,"* Method similar to {@link #writeRawValue(String)}, but potentially more"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,867,* efficient as it may be able to use pre-encoded content (similar to
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,868,* {@link #writeRaw(SerializableString)}.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,870,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,872,public void writeRawValue(SerializableString raw) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,873,writeRawValue(raw.getValue());
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,224,ublic int getMask() { return (1 << ordinal()); }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,224,public int getMask() { return _mask; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,281,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,282,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,283,*   getParsingContext().getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,284,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,286,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,288,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,289,JsonStreamContext ctxt = getParsingContext();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,290,return (ctxt == null) ? null : ctxt.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,294,"* Helper method, usually equivalent to:"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,295,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,296,*   getParsingContext().setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,297,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,299,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,301,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,302,JsonStreamContext ctxt = getParsingContext();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,303,if (ctxt != null) {
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,304,ctxt.setCurrentValue(v);
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,458,ublic boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,486,public boolean isEnabled(Feature f) { return f.enabledIn(_features); }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,470, Bulk set method for (re)settting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,498,* Bulk set method for (re)setting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,563,* Method that fetches next token (as if calling {@link #nextToken}) and
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,564,"* verifies whether it is {@link JsonToken#FIELD_NAME}; if it is,"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,565,"* returns same as {@link #getCurrentName()}, otherwise null."
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,567,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,569,"public String nextFieldName() throws IOException, JsonParseException {"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,570,return (nextToken() == JsonToken.FIELD_NAME)
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,571,? getCurrentName() : null;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,714,* Method that is functionally equivalent to:
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,715,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,716,*  return getCurrentTokenId() == id
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,717,*<code>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,718,* but may be more efficiently implemented.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,719,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,720,* Note that no traversal or conversion is performed; so in some
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,721,* cases calling method like {@link #isExpectedStartArrayToken()}
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,722,* is necessary instead.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,724,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,726,public abstract boolean hasTokenId(int id);
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,712, as well; this is usually done to emulate arrays.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,767,* as well; this is usually done to emulate arrays in cases underlying
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,768,"* format is ambiguous (XML, for example, has no format-level difference"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,769,* between Objects and Arrays; it just has elements).
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,784,"* Similar to {@link #isExpectedStartArrayToken()}, but checks whether stream"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,785,* currently points to {@link JsonToken#START_OBJECT}.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,787,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,789,public boolean isExpectedStartObjectToken() { return getCurrentToken() == JsonToken.START_OBJECT; }
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,24, node or position.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,24,"* node or position (that is, returns true for"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,25,* {@link #matches()}).
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,30, segment (if any); null if this pointer refers to a matching
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,31,* segment (if any); null if this pointer refers to the matching
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,37,* Reference from currently matching segment (if any) to node
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,38,* before leaf.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,39,* Lazily constructed if/as needed.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,40,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,41,* NOTE: we'll use `volatile` here assuming that this is unlikely to
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,42,* become a performance bottleneck. If it becomes one we can probably
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,43,* just drop it and things still should work (despite warnings as per JMM
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,44,* regarding visibility (and lack thereof) of unguarded changes).
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,46,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,48,protected volatile JsonPointer _head;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,85,"// but could be an index, if parsable"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,90,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,92,"protected JsonPointer(String fullString, String segment, int matchIndex, JsonPointer next) {"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,93,_asString = fullString;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,94,_nextSegment = next;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,95,_matchingPropertyName = segment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,96,_matchingElementIndex = matchIndex;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,141,ublic JsonPointer matchProperty(String name) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,142,f (_nextSegment == null || !_matchingPropertyName.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,168,* Returns the leaf of current JSON Pointer expression.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,169,* Leaf is the last non-null segment of current JSON Pointer.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,171,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,173,public JsonPointer last() {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,174,JsonPointer current = this;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,175,if (current == EMPTY) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,145,eturn _nextSegment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,178,JsonPointer next;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,179,while ((next = current._nextSegment) != JsonPointer.EMPTY) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,180,current = next;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,182,return current;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,148,ublic JsonPointer matchElement (int index) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,149,f ((index != _matchingElementIndex) || (index < 0)) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,185,public JsonPointer append(JsonPointer tail) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,186,if (this == EMPTY) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,187,return tail;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,189,if (tail == EMPTY) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,190,return this;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,192,String currentJsonPointer = _asString;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,193,"if (currentJsonPointer.endsWith(""/"")) {"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,194,//removes final slash
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,195,"currentJsonPointer = currentJsonPointer.substring(0, currentJsonPointer.length()-1);"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,197,return compile(currentJsonPointer + tail._asString);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,201,* Method that may be called to see if the pointer would match property
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,202,* (of a JSON Object) with given name.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,204,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,206,public boolean matchesProperty(String name) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,207,return (_nextSegment != null) && _matchingPropertyName.equals(name);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,210,public JsonPointer matchProperty(String name) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,211,if (_nextSegment == null || !_matchingPropertyName.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,218,* Method that may be called to see if the pointer would match
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,219,* array element (of a JSON Array) with given index.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,221,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,223,public boolean matchesElement(int index) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,224,return (index == _matchingElementIndex) && (index >= 0);
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,157, has been removed and pointer includes rest of segments;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,229,* has been removed and pointer includes rest of segments.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,230,"* For matching state, will return null."
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,237,* Accessor for getting a pointer instance that is identical to this
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,238,* instance except that the last segment has been dropped.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,239,"* For example, for JSON Point ""/root/branch/leaf"", this method would"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,240,"* return pointer ""/root/branch"" (compared to {@link #tail()} that"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,241,"* would return ""/branch/leaf"")."
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,242,* For leaf
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,244,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,246,public JsonPointer head() {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,247,JsonPointer h = _head;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,248,if (h == null) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,249,if (this != EMPTY) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,250,h = _constructHead();
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,252,_head = h;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,254,return h;
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,187,/ [Issue#133]: beware of super long indexes; assume we never
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,281,// [core#133]: beware of super long indexes; assume we never
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,192,or (int i = 0; i < len; ++i) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,193,har c = str.charAt(i++);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,286,// [core#176]: no leading zeroes allowed
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,287,char c = str.charAt(0);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,288,if (c <= '0') {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,289,return (len == 1 && c == '0') ? 0 : -1;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,291,if (c > '9') {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,292,return -1;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,294,for (int i = 1; i < len; ++i) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,295,c = str.charAt(i);
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,246,parseTail(input.substring(i))); // need to push back slash
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,348,_parseTail(input.substring(i)));
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,361,protected JsonPointer _constructHead()
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,363,// ok; find out who we are to drop
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,364,JsonPointer last = last();
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,365,if (last == this) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,366,return EMPTY;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,368,"// and from that, length of suffix to drop"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,369,int suffixLength = last._asString.length();
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,370,JsonPointer next = _nextSegment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,371,"return new JsonPointer(_asString.substring(0, _asString.length() - suffixLength), _matchingPropertyName,"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,372,"_matchingElementIndex, next._constructHead(suffixLength, last));"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,375,"protected JsonPointer _constructHead(int suffixLength, JsonPointer last)"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,377,if (this == last) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,378,return EMPTY;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,380,JsonPointer next = _nextSegment;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,381,String str = _asString;
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,382,"return new JsonPointer(str.substring(0, str.length() - suffixLength), _matchingPropertyName,"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,383,"_matchingElementIndex, next._constructHead(suffixLength, last));"
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,108,* Method for accessing currently active value being used by data-binding
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,109,"* (as the source of streaming data to write, or destination of data being"
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,110,"* read), at this level in hierarchy."
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,111,* The value may not exist or be available due to various limitations (at
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,112,"* least during reading of data, as target value object may not have yet"
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,113,* been constructed).
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,115,"* @return Currently active value, if one has been assigned."
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,117,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,119,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,120,return null;
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,124,* Method to call to pass value to be returned via {@link #getCurrentValue}; typically
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,125,* called indirectly through {@link JsonParser#setCurrentValue}
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,126,* or {@link JsonGenerator#setCurrentValue}).
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,128,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,src/main/java/com/fasterxml/jackson/core/JsonStreamContext.java,130,public void setCurrentValue(Object v) { }
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,264,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,265,"* NOTE: constructed parser instance will NOT initially point to a token,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,266,"* so before passing it to deserializers, it is typically necessary to"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,267,* advance it to the first available token by calling {@link JsonParser#nextToken()}.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,268,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,269,* Also note that calling this method will <b>NOT</b> pass {@link ObjectCodec}
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,270,"* reference, so data-binding callback methods like {@link JsonParser#readValueAs(Class)}"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,271,* will not work with calling {@link JsonParser#setCodec}).
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,272,* It is often better to call {@link #traverse(ObjectCodec)} to pass the codec explicitly.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,280,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,281,"* NOTE: constructed parser instance will NOT initially point to a token,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,282,"* so before passing it to deserializers, it is typically necessary to"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,283,* advance it to the first available token by calling {@link JsonParser#nextToken()}.
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,18,public final static int SURR1_FIRST = 0xD800;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,19,public final static int SURR1_LAST = 0xDBFF;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,20,public final static int SURR2_FIRST = 0xDC00;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,21,public final static int SURR2_LAST = 0xDFFF;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,24,* Set of feature masks related to features that need updates of other
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,25,* local configuration or state.
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,27,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,29,protected final static int DERIVED_FEATURES_MASK = Feature.WRITE_NUMBERS_AS_STRINGS.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,30,| Feature.ESCAPE_NON_ASCII.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,31,| Feature.STRICT_DUPLICATE_DETECTION.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,108,@Override
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,109,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,110,return _writeContext.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,113,@Override
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,114,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,115,_writeContext.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,125,@Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,126,@Override public int getFeatureMask() { return _features; }
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,128,"//public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,100,features |= f.getMask();
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,101,f (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,102,cfgNumbersAsStrings = true;
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,103, else if (f == Feature.ESCAPE_NON_ASCII) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,104,etHighestNonEscapedChar(127);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,132,final int mask = f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,133,_features |= mask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,134,if ((mask & DERIVED_FEATURES_MASK) != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,135,if (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,136,_cfgNumbersAsStrings = true;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,137,} else if (f == Feature.ESCAPE_NON_ASCII) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,138,setHighestNonEscapedChar(127);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,139,} else if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,140,if (_writeContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,141,_writeContext = _writeContext.withDupDetector(DupDetector.rootDetector(this));
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,111,features &= ~f.getMask();
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,112,f (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,113,cfgNumbersAsStrings = false;
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,114, else if (f == Feature.ESCAPE_NON_ASCII) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,115,etHighestNonEscapedChar(0);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,150,final int mask = f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,151,_features &= ~mask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,152,if ((mask & DERIVED_FEATURES_MASK) != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,153,if (f == Feature.WRITE_NUMBERS_AS_STRINGS) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,154,_cfgNumbersAsStrings = false;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,155,} else if (f == Feature.ESCAPE_NON_ASCII) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,156,setHighestNonEscapedChar(0);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,157,} else if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,158,_writeContext = _writeContext.withDupDetector(null);
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,120,"/public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,122,Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,123,Override public int getFeatureMask() { return _features; }
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,125,Override public JsonGenerator setFeatureMask(int mask) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,126,features = mask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,164,@Override public JsonGenerator setFeatureMask(int newMask) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,165,int changed = newMask ^ _features;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,166,_features = newMask;
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,167,if ((changed & DERIVED_FEATURES_MASK) != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,168,_cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(newMask);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,169,if (Feature.ESCAPE_NON_ASCII.enabledIn(changed)) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,170,if (Feature.ESCAPE_NON_ASCII.enabledIn(newMask)) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,171,setHighestNonEscapedChar(127);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,172,} else {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,173,setHighestNonEscapedChar(0);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,176,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(changed)) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,177,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(newMask)) { // enabling
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,178,if (_writeContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,179,_writeContext = _writeContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,181,} else { // disabling
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,182,_writeContext = _writeContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,266,@Override public void writeRawValue(SerializableString text) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,267,"_verifyValueWrite(""write raw value"");"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,268,writeRaw(text);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,368,/* UTF-8 related helper method(s)
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,373,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,375,"protected final int _decodeSurrogate(int surr1, int surr2) throws IOException"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,377,"// First is known to be valid, but how about the other?"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,378,if (surr2 < SURR2_FIRST || surr2 > SURR2_LAST) {
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,379,"String msg = ""Incomplete surrogate pair: first char 0x""+Integer.toHexString(surr1)+"", second 0x""+Integer.toHexString(surr2);"
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,380,_reportError(msg);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,382,int c = 0x10000 + ((surr1 - SURR1_FIRST) << 10) + (surr2 - SURR2_FIRST);
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,383,return c;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,295,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,296,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,297,return _parsingContext.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,300,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,301,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,302,_parsingContext.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,307,/* Overrides for Feature handling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,311,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,312,public JsonParser enable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,313,_features |= f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,314,if (f == Feature.STRICT_DUPLICATE_DETECTION) { // enabling dup detection?
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,315,if (_parsingContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,316,_parsingContext = _parsingContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,319,return this;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,322,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,323,public JsonParser disable(Feature f) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,324,_features &= ~f.getMask();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,325,if (f == Feature.STRICT_DUPLICATE_DETECTION) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,326,_parsingContext = _parsingContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,328,return this;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,331,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,332,public JsonParser setFeatureMask(int newMask) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,333,int changes = (_features ^ newMask);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,334,if (changes != 0) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,335,_features = newMask;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,336,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(newMask)) { // enabling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,337,if (_parsingContext.getDupDetector() == null) { // but only if disabled currently
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,338,_parsingContext = _parsingContext.withDupDetector(DupDetector.rootDetector(this));
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,340,} else { // disabling
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,341,_parsingContext = _parsingContext.withDupDetector(null);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,344,return this;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,97,"Override public abstract JsonToken nextToken() throws IOException, JsonParseException;"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,97,@Override public abstract JsonToken nextToken() throws IOException;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,106,@Override public boolean hasTokenId(int id) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,107,final JsonToken t = _currToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,108,if (t == null) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,109,return (JsonTokenId.ID_NO_TOKEN == id);
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,111,return t.id() == id;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,114,@Override public boolean isExpectedStartArrayToken() { return _currToken == JsonToken.START_ARRAY; }
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,115,@Override public boolean isExpectedStartObjectToken() { return _currToken == JsonToken.START_OBJECT; }
False,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,28,   This can be compared to how {@link String#intern} works; lazily and
True,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,src/main/java/com/fasterxml/jackson/core/io/SerializedString.java,28,*   This can be compared to how {@link String#hashCode} works; lazily and
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,22,rotected final DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,24,/ // // Location information (minus source reference)
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,22,protected DupDetector _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,26,rotected int _lineNr;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,27,rotected int _columnNr;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,29,rotected String _currentName;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,44,"* Instance construction, reuse"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,37,/* Location/state information (minus source reference)
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,41,protected String _currentName;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,44,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,46,protected Object _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,48,protected int _lineNr;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,49,protected int _columnNr;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,53,"/* Instance construction, config, reuse"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,73,_currentValue = null;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,75,/ // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,85,public JsonReadContext withDupDetector(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,86,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,87,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,90,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,91,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,92,return _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,95,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,96,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,97,_currentValue = v;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,102,/* Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,171,public DupDetector getDupDetector() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,172,return _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,28,rotected final DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,28,protected DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,42,/* Location/state information (minus source reference)
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,53,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,55,protected Object _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,82,_currentValue = null;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,87,public JsonWriteContext withDupDetector(DupDetector dups) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,88,_dups = dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,89,return this;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,92,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,93,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,94,return _currentValue;
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,97,@Override
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,98,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,99,_currentValue = v;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,75,/ // // Factory methods
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,104,/* Factory methods
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,83,"ublic static JsonWriteContext createRootContext(DupDetector dd) { return new JsonWriteContext(TYPE_ROOT, null, dd); }"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,114,public static JsonWriteContext createRootContext(DupDetector dd) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,115,"return new JsonWriteContext(TYPE_ROOT, null, dd);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,141,public DupDetector getDupDetector() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,142,return _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,115,ublic final int writeFieldName(String name) throws JsonProcessingException {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,152,public int writeFieldName(String name) throws JsonProcessingException {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,153,if (_gotName) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,154,return JsonWriteContext.STATUS_EXPECT_VALUE;
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,126,ublic final int writeValue() {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,166,public int writeValue() {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,27,rotected final static int SURR1_FIRST = 0xD800;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,28,rotected final static int SURR1_LAST = 0xDBFF;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,29,rotected final static int SURR2_FIRST = 0xDC00;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,30,rotected final static int SURR2_LAST = 0xDFFF;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,590,// since 2.5
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,591,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,592,public void writeRawValue(SerializableString text) throws IOException {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,593,"_verifyValueWrite(""write raw value"");"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,594,byte[] raw = text.asUnquotedUTF8();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,595,if (raw.length > 0) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,596,_writeBytes(raw);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1782,"rivate final int _outputMultiByteChar(int ch, int outputPtr)"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1783,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1787,"private final int _outputMultiByteChar(int ch, int outputPtr) throws IOException"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1802,"rotected final int _decodeSurrogate(int surr1, int surr2) throws IOException"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1804,"/ First is known to be valid, but how about the other?"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1805,f (surr2 < SURR2_FIRST || surr2 > SURR2_LAST) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1806,"tring msg = ""Incomplete surrogate pair: first char 0x""+Integer.toHexString(surr1)+"", second 0x""+Integer.toHexString(surr2);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1807,reportError(msg);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1809,nt c = 0x10000 + ((surr1 - SURR1_FIRST) << 10) + (surr2 - SURR2_FIRST);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1810,eturn c;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,169,rotected final boolean loadMore()
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,170,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,169,protected final boolean loadMore() throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,176,"nt count = _inputStream.read(_inputBuffer, 0, _inputBuffer.length);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,175,int space = _inputBuffer.length;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,176,if (space == 0) { // only occurs when we've been closed
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,177,return false;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,180,"int count = _inputStream.read(_inputBuffer, 0, space);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,196,rotected final boolean _loadToHaveAtLeast(int minAvailable)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,197,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,200,protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,260,inputBuffer = null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,263,"/* 21-Nov-2014, tatu: Let's not set it to null; this way should"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,264,*   get slightly more meaningful error messages in case someone
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,265,"*   closes parser indirectly, without realizing."
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,267,_inputBuffer = ByteArrayBuilder.NO_BYTES;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,912,@Override
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,913,public String nextFieldName() throws IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,915,// // // Note: this is almost a verbatim copy of nextToken()
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,917,_numTypesValid = NR_UNKNOWN;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,918,if (_currToken == JsonToken.FIELD_NAME) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,919,_nextAfterName();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,920,return null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,922,if (_tokenIncomplete) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,923,_skipString();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,925,int i = _skipWSOrEnd();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,926,if (i < 0) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,927,close();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,928,_currToken = null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,929,return null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,931,_tokenInputTotal = _currInputProcessed + _inputPtr - 1;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,932,_tokenInputRow = _currInputRow;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,933,_tokenInputCol = _inputPtr - _currInputRowStart - 1;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,935,_binaryValue = null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,937,if (i == INT_RBRACKET) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,938,if (!_parsingContext.inArray()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,939,"_reportMismatchedEndMarker(i, '}');"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,941,_parsingContext = _parsingContext.getParent();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,942,_currToken = JsonToken.END_ARRAY;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,943,return null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,945,if (i == INT_RCURLY) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,946,if (!_parsingContext.inObject()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,947,"_reportMismatchedEndMarker(i, ']');"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,949,_parsingContext = _parsingContext.getParent();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,950,_currToken = JsonToken.END_OBJECT;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,951,return null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,954,// Nope: do we then expect a comma?
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,955,if (_parsingContext.expectComma()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,956,if (i != INT_COMMA) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,957,"_reportUnexpectedChar(i, ""was expecting comma to separate ""+_parsingContext.getTypeDesc()+"" entries"");"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,959,i = _skipWS();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,962,if (!_parsingContext.inObject()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,963,_nextTokenNotInObject(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,964,return null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,967,Name n = _parseName(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,968,final String nameStr = n.getName();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,969,_parsingContext.setCurrentName(nameStr);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,970,_currToken = JsonToken.FIELD_NAME;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,972,i = _skipColon();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,973,if (i == INT_QUOTE) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,974,_tokenIncomplete = true;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,975,_nextToken = JsonToken.VALUE_STRING;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,976,return nameStr;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,978,JsonToken t;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,979,switch (i) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,980,case '-':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,981,t = _parseNegNumber();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,982,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,984,/* Should we have separate handling for plus? Although
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,985,"* it is not allowed per se, it may be erroneously used,"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,986,* and could be indicate by a more specific error message.
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,988,case '0':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,989,case '1':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,990,case '2':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,991,case '3':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,992,case '4':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,993,case '5':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,994,case '6':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,995,case '7':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,996,case '8':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,997,case '9':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,998,t = _parsePosNumber(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,999,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1000,case 'f':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1001,"_matchToken(""false"", 1);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1002,t = JsonToken.VALUE_FALSE;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1003,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1004,case 'n':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1005,"_matchToken(""null"", 1);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1006,t = JsonToken.VALUE_NULL;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1007,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1008,case 't':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1009,"_matchToken(""true"", 1);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1010,t = JsonToken.VALUE_TRUE;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1011,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1012,case '[':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1013,t = JsonToken.START_ARRAY;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1014,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1015,case '{':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1016,t = JsonToken.START_OBJECT;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1017,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1019,default:
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1020,t = _handleUnexpectedValue(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1022,_nextToken = t;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1023,return nameStr;
False,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1196,rotected final Name name;
False,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1197,rotected final Bucket next;
False,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1198,rivate final int hash;
False,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1199,rivate final int length;
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1196,public final Name name;
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1197,public final Bucket next;
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1198,public final int hash;
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,1199,public final int length;
False,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,762,rivate final String symbol;
False,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,763,rivate final Bucket next;
False,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,764,rivate final int length;
True,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,762,public final String symbol;
True,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,763,public final Bucket next;
True,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,764,public final int length;
False,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,26,rivate final static byte[] NO_BYTES = new byte[0];
True,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,26,public final static byte[] NO_BYTES = new byte[0];
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,1,package com.fasterxml.jackson.core.util;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,3,import java.io.IOException;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,5,import com.fasterxml.jackson.core.JsonGenerator;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,8,"* Default linefeed-based indenter, used by {@link DefaultPrettyPrinter} (unless"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,9,* overridden). Uses system-specific linefeeds and 2 spaces for indentation per level.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,11,* @since 2.5
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,13,public class DefaultIndenter
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,14,extends DefaultPrettyPrinter.NopIndenter
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,16,private static final long serialVersionUID = 1L;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,18,public final static String SYS_LF;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,19,static {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,20,String lf;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,21,try {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,22,"lf = System.getProperty(""line.separator"");"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,23,} catch (Throwable t) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,24,"lf = ""\n""; // fallback when security manager denies access"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,26,SYS_LF = lf;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,29,"public static final DefaultIndenter SYSTEM_LINEFEED_INSTANCE = new DefaultIndenter(""  "", SYS_LF);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,32,"* We expect to rarely get indentation deeper than this number of levels,"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,33,* and try not to pre-generate more indentations than needed.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,35,private final static int INDENT_LEVELS = 16;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,36,private final char[] indents;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,37,private final int charsPerLevel;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,38,private final String eol;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,40,/** Indent with two spaces and the system's default line feed */
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,41,public DefaultIndenter() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,42,"this(""  "", SYS_LF);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,45,/** Create an indenter which uses the <code>indent</code> string to indent one level
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,46,*  and the <code>eol</code> string to separate lines.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,48,"public DefaultIndenter(String indent, String eol)"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,50,charsPerLevel = indent.length();
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,52,indents = new char[indent.length() * INDENT_LEVELS];
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,53,int offset = 0;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,54,for (int i=0; i<INDENT_LEVELS; i++) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,55,"indent.getChars(0, indent.length(), indents, offset);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,56,offset += indent.length();
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,59,this.eol = eol;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,62,public DefaultIndenter withLinefeed(String lf)
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,64,if (lf.equals(eol)) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,65,return this;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,67,"return new DefaultIndenter(getIndent(), lf);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,70,public DefaultIndenter withIndent(String indent)
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,72,if (indent.equals(getIndent())) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,73,return this;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,75,"return new DefaultIndenter(indent, eol);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,78,@Override
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,79,public boolean isInline() { return false; }
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,81,@Override
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,82,"public void writeIndentation(JsonGenerator jg, int level) throws IOException"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,84,jg.writeRaw(eol);
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,85,if (level > 0) { // should we err on negative values (as there's some flaw?)
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,86,level *= charsPerLevel;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,87,while (level > indents.length) { // unlike to happen but just in case
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,88,"jg.writeRaw(indents, 0, indents.length);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,89,level -= indents.length;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,91,"jg.writeRaw(indents, 0, level);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,95,public String getEol() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,96,return eol;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,99,public String getIndent() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultIndenter.java,100,"return new String(indents, 0, charsPerLevel);"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,4,mport java.util.Arrays;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,21,rivate static final long serialVersionUID = -5512586643324525213L;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,20,private static final long serialVersionUID = 1;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,39,"oid writeIndentation(JsonGenerator jg, int level)"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,40,"hrows IOException, JsonGenerationException;"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,38,"void writeIndentation(JsonGenerator jg, int level) throws IOException;"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,62,rotected Indenter _objectIndenter = Lf2SpacesIndenter.instance;
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,60,protected Indenter _objectIndenter = DefaultIndenter.SYSTEM_LINEFEED_INSTANCE;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,384,"ublic void writeIndentation(JsonGenerator jg, int level)"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,385,"hrows IOException, JsonGenerationException"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,382,"public void writeIndentation(JsonGenerator jg, int level) throws IOException { }"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,414, Default linefeed-based indenter uses system-specific linefeeds and
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,415, 2 spaces for indentation per level.
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,410,* @deprecated Since 2.5 use {@link DefaultIndenter} instead
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,417,ublic static class Lf2SpacesIndenter extends NopIndenter
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,412,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,413,public static class Lf2SpacesIndenter extends DefaultIndenter
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,419,rivate final static String SYS_LF;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,420,tatic {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,421,tring lf = null;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,422,ry {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,423,"f = System.getProperty(""line.separator"");"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,424, catch (Throwable t) { } // access exception?
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,425,"YS_LF = (lf == null) ? ""\n"" : lf;"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,428,inal static int SPACE_COUNT = 64;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,429,inal static char[] SPACES = new char[SPACE_COUNT];
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,430,tatic {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,431,"rrays.fill(SPACES, ' ');"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,415,/** @deprecated Use {@link DefaultIndenter#SYSTEM_LINEFEED_INSTANCE} instead */
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,417,@Deprecated
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,438, Linefeed used; default value is the platform-specific linefeed.
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,440,rotected final String _lf;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,442,ublic Lf2SpacesIndenter() { this(SYS_LF); }
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,445, @since 2.3
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,447,ublic Lf2SpacesIndenter(String lf) {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,448,lf = lf;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,452," ""Mutant factory"" method that will return an instance that uses"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,453, specified String as linefeed.
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,455, @since 2.3
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,457,ublic Lf2SpacesIndenter withLinefeed(String lf)
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,459,f (lf.equals(_lf)) {
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,460,eturn this;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,462,eturn new Lf2SpacesIndenter(lf);
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,420,"/** @deprecated Use {@code new DefaultIndenter(""  "", DefaultIndenter.SYS_LF)} instead */"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,421,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,422,public Lf2SpacesIndenter() {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,423,"super(""  "", DefaultIndenter.SYS_LF);"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,465,Override
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,466,ublic boolean isInline() { return false; }
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,468,Override
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,469,"ublic void writeIndentation(JsonGenerator jg, int level)"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,470,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,472,g.writeRaw(_lf);
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,473,f (level > 0) { // should we err on negative values (as there's some flaw?)
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,474,evel += level; // 2 spaces per level
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,475,hile (level > SPACE_COUNT) { // should never happen but...
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,476,"g.writeRaw(SPACES, 0, SPACE_COUNT);"
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,477,evel -= SPACES.length;
False,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,479,"g.writeRaw(SPACES, 0, level);"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,426,"/** @deprecated Use {@code new DefaultIndenter(""  "", lf)} instead */"
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,427,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,428,public Lf2SpacesIndenter(String lf) {
True,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,src/main/java/com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java,429,"super(""  "", lf);"
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,45,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,46,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,47,return delegate.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,50,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,51,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonGeneratorDelegate.java,52,delegate.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,28,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,29,public Object getCurrentValue() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,30,return delegate.getCurrentValue();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,33,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,34,public void setCurrentValue(Object v) {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,35,delegate.setCurrentValue(v);
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,100,@Override public boolean hasTokenId(int id) { return delegate.hasTokenId(id); }
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,106,@Override public boolean isExpectedStartObjectToken() { return delegate.isExpectedStartObjectToken(); }
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,14,"assertEquals(""/Image/15"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,23,"assertEquals(""/15"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,25,"assertEquals("""", ptr.head().head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,26,assertNull(ptr.head().head().head());
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,34,"assertEquals("""", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,35,"assertSame(JsonPointer.EMPTY, ptr.head());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,41,assertNull(ptr.head());
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,46,public void testSimplePathLonger() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,48,"final String INPUT = ""/a/b/c/d/e/f/0"";"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,49,JsonPointer ptr = JsonPointer.compile(INPUT);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,50,assertFalse(ptr.matches());
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,51,"assertEquals(-1, ptr.getMatchingIndex());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,52,"assertEquals(""a"", ptr.getMatchingProperty());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,53,"assertEquals(""/a/b/c/d/e/f"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,54,"assertEquals(""/b/c/d/e/f/0"", ptr.tail().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,55,"assertEquals(""/0"", ptr.last().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,56,"assertEquals(INPUT, ptr.toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,59,public void testWonkyNumber173() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,61,"JsonPointer ptr = JsonPointer.compile(""/1e0"");"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,62,assertFalse(ptr.matches());
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,65,// [core#176]: do not allow leading zeroes
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,66,public void testIZeroIndex() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,68,"JsonPointer ptr = JsonPointer.compile(""/0"");"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,69,"assertEquals(0, ptr.getMatchingIndex());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,70,"ptr = JsonPointer.compile(""/00"");"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,71,"assertEquals(-1, ptr.getMatchingIndex());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,74,public void testLast()
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,76,"final String INPUT = ""/Image/15/name"";"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,78,JsonPointer ptr = JsonPointer.compile(INPUT);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,79,JsonPointer leaf = ptr.last();
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,81,"assertEquals(""name"", leaf.getMatchingProperty());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,84,public void testEmpty()
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,86,"// note: this is acceptable, to match property in '{"""":3}', for example"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,87,"// and NOT same as what empty point, """", is."
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,88,"JsonPointer ptr = JsonPointer.compile(""/"");"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,89,assertNotNull(ptr);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,90,"assertNotSame(JsonPointer.EMPTY, ptr);"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,91,"assertEquals(""/"", ptr.toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,94,public void testAppend()
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,96,"final String INPUT = ""/Image/15/name"";"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,97,"final String APPEND = ""/extension"";"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,99,JsonPointer ptr = JsonPointer.compile(INPUT);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,100,JsonPointer apd = JsonPointer.compile(APPEND);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,102,JsonPointer appended = ptr.append(apd);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,104,"assertEquals(""extension"", appended.last().getMatchingProperty());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,107,public void testAppendWithFinalSlash()
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,109,"final String INPUT = ""/Image/15/name/"";"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,110,"final String APPEND = ""/extension"";"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,112,JsonPointer ptr = JsonPointer.compile(INPUT);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,113,JsonPointer apd = JsonPointer.compile(APPEND);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,115,JsonPointer appended = ptr.append(apd);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,117,"assertEquals(""extension"", appended.last().getMatchingProperty());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,128,"assertEquals(""/w~1out/til~0de"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,136,"assertEquals(""/til~0de"", ptr.head().toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,145,"assertEquals("""", ptr.head().toString());"
False,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,src/test/java/com/fasterxml/jackson/core/base64/TestBase64Parsing.java,100,"SuppressWarnings(""resource"")"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,12,testSimpleDups(false);
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,testSimpleDups(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,public void testSimpleDupsEagerlyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,11,"_testSimpleDups(true, false, new JsonFactory());"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,16,rotected void _testSimpleDups(boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,sonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,public void testSimpleDupsEagerlyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,14,"_testSimpleDups(false, false, new JsonFactory());"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,17,// Testing ability to enable checking after construction of
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,"// generator, not just via JsonFactory"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,19,public void testSimpleDupsLazilyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,20,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"_testSimpleDups(true, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,25,public void testSimpleDupsLazilyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,27,"_testSimpleDups(false, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,30,"@SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,31,"protected void _testSimpleDups(boolean useStream, boolean lazySetting, JsonFactory f)"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,32,throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"writeSimple0(_generator(f, useStream), ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,23,"writeSimple1(_generator(f, useStream), ""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,if (!lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,36,"_writeSimple0(_generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,37,"_writeSimple1(_generator(f, useStream), ""b"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,41,JsonGenerator g1;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,43,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,44,"g1 = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,45,g1.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,46,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,47,f.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,48,"g1 = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,28,"writeSimple0( _generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,51,"_writeSimple0(g1, ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,57,JsonGenerator g2;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,58,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,59,"g2 = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,60,g2.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,61,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,62,"g2 = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,"writeSimple1( _generator(f, useStream), ""x"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,65,"_writeSimple1(g2, ""x"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,16,"SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,229,// [core#167]: no error for writing field name twice
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,230,public void testDupFieldNameWrites() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,232,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,233,"_testDupFieldNameWrites(f, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,234,"_testDupFieldNameWrites(f, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,237,"private void _testDupFieldNameWrites(JsonFactory f, boolean useReader) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,239,JsonGenerator gen;
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,240,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,241,if (useReader) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,242,"gen = f.createGenerator(new OutputStreamWriter(bout, ""UTF-8""));"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,243,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,244,"gen = f.createGenerator(bout, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,246,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,247,"gen.writeFieldName(""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,249,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,250,"gen.writeFieldName(""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,251,gen.flush();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,252,"String json = bout.toString(""UTF-8"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,253,"fail(""Should not have let two consequtive field name writes succeed: output = ""+json);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,254,} catch (JsonProcessingException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,255,"verifyException(e, ""can not write a field name, expecting a value"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonGenerator.java,257,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,29,_testIsNextTokenName3(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,30,_testIsNextTokenName3(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,171,private void _testIsNextTokenName3(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,173,"final String DOC = ""{\""name\"":123,\""name2\"":14,\""x\"":\""name\""}"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,174,JsonFactory jf = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,175,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,176,"jf.createParser(new ByteArrayInputStream(DOC.getBytes(""UTF-8"")))"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,177,: jf.createParser(new StringReader(DOC));
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,178,assertNull(jp.nextFieldName());
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,179,"assertToken(JsonToken.START_OBJECT, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,180,"assertEquals(""name"", jp.nextFieldName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,181,"assertToken(JsonToken.FIELD_NAME, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,182,"assertEquals(""name"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,183,"assertEquals(""name"", jp.getText());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,184,assertNull(jp.nextFieldName());
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,185,"assertToken(JsonToken.VALUE_NUMBER_INT, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,186,"assertEquals(123, jp.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,188,"assertEquals(""name2"", jp.nextFieldName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,189,"assertToken(JsonToken.FIELD_NAME, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,190,"assertEquals(""name2"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,191,"assertToken(JsonToken.VALUE_NUMBER_INT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,193,"assertEquals(""x"", jp.nextFieldName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,194,"assertToken(JsonToken.FIELD_NAME, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,195,"assertEquals(""x"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,197,assertNull(jp.nextFieldName());
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,198,"assertToken(JsonToken.VALUE_STRING, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,200,assertNull(jp.nextFieldName());
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,201,"assertToken(JsonToken.END_OBJECT, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,203,assertNull(jp.nextFieldName());
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,204,assertNull(jp.getCurrentToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,src/test/java/com/fasterxml/jackson/core/json/TestNextXxx.java,206,jp.close();
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,10,or (String doc : new String[] {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,private final String[] DUP_DOCS = new String[] {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"oc = doc.replace(""'"", ""\"""");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,19,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,20,ssertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,17,for (int i = 0; i < DUP_DOCS.length; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"DUP_DOCS[i] = DUP_DOCS[i].replace(""'"", ""\"""");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,22,public void testSimpleDupsDisabled() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,// first: verify no problems if detection NOT enabled
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,assertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,27,for (String doc : DUP_DOCS) {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,"testSimpleDupsFail(doc, f, false, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,"testSimpleDupsFail(doc, f, true, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,30,"rivate void _testSimpleDupsOk(final String doc, JsonFactory f, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,33,public void testSimpleDupsBytes() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,35,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,36,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,37,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,38,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,39,"// First, with static setting"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,40,"_testSimpleDupsFail(doc, dupF, true, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,// and then dynamic
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,43,"_testSimpleDupsFail(doc, nonDupF, true, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,47,public void testSimpleDupsChars() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,49,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,50,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,51,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,52,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,53,"_testSimpleDupsFail(doc, dupF, false, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,54,"_testSimpleDupsFail(doc, nonDupF, false, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,58,"private void _testSimpleDupsOk(final String doc, JsonFactory f,"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,59,boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,"oolean useStream, String name) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,71,"boolean useStream, String name, boolean lazily) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,75,if (lazily) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,76,jp.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
False,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,src/test/java/com/fasterxml/jackson/core/json/TestValueConversions.java,6,"SuppressWarnings(""resource"")"
False,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,src/test/java/com/fasterxml/jackson/core/main/TestGeneratorMisc.java,14,"SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,9,import com.fasterxml.jackson.core.io.SerializedString;
False,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,11, @since 1.7
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,81,public void testWriteRawWithSerializable() throws Exception
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,83,JsonFactory jf = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,85,"_testWithRaw(jf, true);"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,86,"_testWithRaw(jf, false);"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,89,"private void _testWithRaw(JsonFactory f, boolean useBytes) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,91,JsonGenerator jgen;
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,92,ByteArrayOutputStream bytes = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,93,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,95,if (useBytes) {
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,96,"jgen = f.createGenerator(bytes, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,97,} else {
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,98,jgen = f.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,101,jgen.writeStartArray();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,102,"jgen.writeRawValue(new SerializedString(""\""foo\""""));"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,103,"jgen.writeRawValue(new SerializedString(""12""));"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,104,"jgen.writeRaw(new SerializedString("", false""));"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,105,jgen.writeEndArray();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,106,jgen.close();
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,108,JsonParser p = useBytes
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,109,? f.createParser(bytes.toByteArray())
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,110,: f.createParser(sw.toString());
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,112,"assertToken(JsonToken.START_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,113,"assertToken(JsonToken.VALUE_STRING, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,114,"assertEquals(""foo"", p.getText());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,115,"assertToken(JsonToken.VALUE_NUMBER_INT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,116,"assertEquals(12, p.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,117,"assertToken(JsonToken.VALUE_FALSE, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,118,"assertToken(JsonToken.END_ARRAY, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,src/test/java/com/fasterxml/jackson/core/main/TestRawStringWriting.java,119,p.close();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,1,package com.fasterxml.jackson.core.util;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,3,import static org.junit.Assert.*;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,5,import java.io.IOException;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,6,import java.io.StringWriter;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,8,import org.junit.Test;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,10,import com.fasterxml.jackson.core.JsonFactory;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,11,import com.fasterxml.jackson.core.JsonGenerator;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,12,import com.fasterxml.jackson.core.PrettyPrinter;
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,14,public class TestDefaultPrettyPrinter
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,16,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,17,public void testSystemLinefeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,19,PrettyPrinter pp = new DefaultPrettyPrinter();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,20,"String LF = System.getProperty(""line.separator"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,21,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,22,"""{"" + LF +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,23,"""  \""name\"" : \""John Doe\"","" + LF +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,24,"""  \""age\"" : 3.14"" + LF +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,25,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,28,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,29,public void testWithLineFeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,31,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,32,".withObjectIndenter(new DefaultIndenter().withLinefeed(""\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,33,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,34,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,35,"""  \""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,36,"""  \""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,37,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,40,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,41,public void testWithIndent() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,43,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,44,".withObjectIndenter(new DefaultIndenter().withIndent("" ""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,45,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,46,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,47,""" \""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,48,""" \""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,49,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,52,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,53,public void testUnixLinefeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,55,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,56,".withObjectIndenter(new DefaultIndenter(""  "", ""\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,57,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,58,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,59,"""  \""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,60,"""  \""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,61,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,64,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,65,public void testWindowsLinefeed() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,67,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,68,".withObjectIndenter(new DefaultIndenter(""  "", ""\r\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,69,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,70,"""{\r\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,71,"""  \""name\"" : \""John Doe\"",\r\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,72,"""  \""age\"" : 3.14\r\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,73,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,76,@Test
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,77,public void testTabIndent() throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,79,PrettyPrinter pp = new DefaultPrettyPrinter()
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,80,".withObjectIndenter(new DefaultIndenter(""\t"", ""\n""));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,81,assertEquals(
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,82,"""{\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,83,"""\t\""name\"" : \""John Doe\"",\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,84,"""\t\""age\"" : 3.14\n"" +"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,85,"""}"", _printTestData(pp));"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,88,private String _printTestData(PrettyPrinter pp) throws IOException
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,90,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,91,JsonGenerator gen = new JsonFactory().createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,92,gen.setPrettyPrinter(pp);
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,93,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,94,"gen.writeFieldName(""name"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,95,"gen.writeString(""John Doe"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,96,"gen.writeFieldName(""age"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,97,gen.writeNumber(3.14);
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,98,gen.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,99,gen.close();
True,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,src/test/java/com/fasterxml/jackson/core/util/TestDefaultPrettyPrinter.java,100,return sw.toString();
