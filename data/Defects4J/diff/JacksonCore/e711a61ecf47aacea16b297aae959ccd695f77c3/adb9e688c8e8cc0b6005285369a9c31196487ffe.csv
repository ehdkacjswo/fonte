is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/com/fasterxml/jackson/core/sym/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolTableMergingTest.java,14,ublic class TestJsonParserSymbols
True,src/test/java/com/fasterxml/jackson/core/sym/TestJsonParserSymbols.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolTableMergingTest.java,14,public class SymbolTableMergingTest
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,1,package com.fasterxml.jackson.core.sym;
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,3,import java.io.IOException;
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,4,import java.util.HashSet;
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,6,import com.fasterxml.jackson.core.*;
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,9,* Tests that use symbol table functionality through parser.
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,11,public class SymbolsViaParserTest
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,12,extends com.fasterxml.jackson.core.BaseTest
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,14,// for [jackson-core#213]
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,15,public void test17CharSymbols() throws Exception
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,17,_test17Chars(false);
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,20,// for [jackson-core#213]
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,21,public void test17ByteSymbols() throws Exception
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,23,_test17Chars(true);
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,26,private void _test17Chars(boolean useBytes) throws IOException
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,28,String doc = _createDoc();
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,29,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,31,JsonParser p;
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,32,if (useBytes) {
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,33,"p = f.createParser(doc.getBytes(""UTF-8""));"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,34,} else {
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,35,p = f.createParser(doc);
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,37,HashSet<String> syms = new HashSet<String>();
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,38,"assertToken(JsonToken.START_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,39,for (int i = 0; i < 50; ++i) {
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,40,"assertToken(JsonToken.FIELD_NAME, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,41,syms.add(p.getCurrentName());
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,42,"assertToken(JsonToken.VALUE_TRUE, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,44,"assertToken(JsonToken.END_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,45,"assertEquals(50, syms.size());"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,46,p.close();
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,49,private String _createDoc() {
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,50,StringBuilder sb = new StringBuilder(1000);
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,51,"sb.append(""{\n"");"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,52,for (int i = 1; i <= 50; ++i) {
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,53,if (i > 1) {
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,54,"sb.append("",\n"");"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,56,"sb.append(""\""lengthmatters"")"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,57,.append(1000 + i)
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,58,".append(""\"": true"");"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,60,"sb.append(""\n}"");"
True,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,src/test/java/com/fasterxml/jackson/core/sym/SymbolsViaParserTest.java,61,return sb.toString();
True,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,11,*<p>
True,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,12,* Note that the problem does not necessarily affect code at or
True,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,13,"* after Jackson 2.6, since hash calculation algorithm has been"
True,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,14,* completely changed. It may still be relevant for character-backed
True,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,src/test/java/com/fasterxml/jackson/core/sym/TestHashCollisionChars.java,15,"* sources, however."
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,10,* Tests that directly modify/access underlying low-level symbol tables
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,11,* (instead of indirectly using them via JsonParser).
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,375,"// to verify [jackson-core#213] -- did not fail, but ruled out low-level bug"
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,377,public void testLongSymbols17Bytes() throws Exception
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,379,ByteQuadsCanonicalizer symbolsB =
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,380,ByteQuadsCanonicalizer.createRoot(3).makeChild(JsonFactory.Feature.collectDefaults());
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,381,CharsToNameCanonicalizer symbolsC = CharsToNameCanonicalizer.createRoot(3);
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,383,for (int i = 1001; i <= 1050; ++i) {
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,384,"String id = ""lengthmatters""+i;"
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,385,"int[] quads = calcQuads(id.getBytes(""UTF-8""));"
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,386,"symbolsB.addName(id, quads, quads.length);"
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,387,char[] idChars = id.toCharArray();
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,388,"symbolsC.findSymbol(idChars, 0, idChars.length, symbolsC.calcHash(id));"
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,390,"assertEquals(50, symbolsB.size());"
True,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,src/test/java/com/fasterxml/jackson/core/sym/TestSymbolTables.java,391,"assertEquals(50, symbolsC.size());"
