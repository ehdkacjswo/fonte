is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,690,CodingConvention conv;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,691,if (flags.third_party) {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,692,conv = CodingConventions.getDefault();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,693,} else if (flags.process_jquery_primitives) {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,694,conv = new JqueryCodingConvention();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,695,} else {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,696,conv = new ClosureCodingConvention();
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,705,setCodingConvention(flags.third_party ?
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,706,odingConventions.getDefault() :
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,707,ew ClosureCodingConvention())
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,714,.setCodingConvention(conv)
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,732,ptions.setCodingConvention(new ClosureCodingConvention());
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,739,if (flags.process_jquery_primitives) {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,740,options.setCodingConvention(new JqueryCodingConvention());
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,741,} else {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,742,options.setCodingConvention(new ClosureCodingConvention());
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,754,f (flags.process_jquery_primitives) {
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,755,ptions.setCodingConvention(new JqueryCodingConvention());
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,208,if (options.jqueryPass) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,209,checks.add(jqueryAliases.makeOneTimePass());
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,244,f (options.jqueryPass) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,245,hecks.add(jqueryAliases.makeOneTimePass());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,19,import java.util.Iterator;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,20,import java.util.List;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,24,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,25,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,28,import com.google.javascript.jscomp.NodeTraversal.ScopedCallback;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,29,import com.google.javascript.jscomp.Scope.Var;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,39,*  - jQuery.expandedEach -> expand into direct assignments
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,46,private final CodingConvention convention;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,40,rivate static final Set<String> JqueryExtendNames = ImmutableSet.of(
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,50,static final DiagnosticType JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR =
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,51,"DiagnosticType.warning(""JSC_JQUERY_UNABLE_TO_EXPAND_INVALID_LIT"","
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,52,"""jQuery.expandedEach call cannot be expanded because the first "" +"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,53,"""argument must be an object literal or an array of strings "" +"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,54,"""literal."");"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,56,static final DiagnosticType JQUERY_UNABLE_TO_EXPAND_INVALID_NAME_ERROR =
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,57,"DiagnosticType.error(""JSC_JQUERY_UNABLE_TO_EXPAND_INVALID_NAME"","
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,58,"""jQuery.expandedEach expansion would result in the invalid "" +"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,59,"""property name \""{0}\""."");"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,61,static final DiagnosticType JQUERY_USELESS_EACH_EXPANSION =
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,62,"DiagnosticType.warning(""JSC_JQUERY_USELESS_EACH_EXPANSION"","
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,63,"""jQuery.expandedEach was not expanded as no valid property "" +"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,64,"""assignments were encountered. Consider using jQuery.each instead."");"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,66,private static final Set<String> JQUERY_EXTEND_NAMES = ImmutableSet.of(
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,69,private static final String JQUERY_EXPANDED_EACH_NAME =
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,70,"""jQuery.expandedEach"";"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,72,private final PeepholeOptimizationsPass peepholePasses;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,76,this.convention = compiler.getCodingConvention();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,78,"// All of the ""early"" peephole optimzations."
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,79,// These passes should make the code easier to analyze.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,80,"// Passes, such as StatementFusion, are omitted for this reason."
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,81,final boolean late = false;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,82,"this.peepholePasses = new PeepholeOptimizationsPass(compiler,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,83,"new PeepholeSubstituteAlternateSyntax(late),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,84,"new PeepholeReplaceKnownMethods(late),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,85,"new PeepholeRemoveDeadCode(),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,86,"new PeepholeFoldConstants(late),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,87,new PeepholeCollectPropertyAssignments());
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,47,"ublic static boolean isJqueryExtendReference(Node n, String qname) {"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,48,f (JqueryExtendNames.contains(qname)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,91,* Check that Node n is a call to one of the jQuery.extend methods that we
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,92,* can expand. Valid calls are single argument calls where the first argument
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,93,* is an object literal or two argument calls where the first argument
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,94,* is a name and the second argument is an object literal.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,96,"public static boolean isJqueryExtendCall(Node n, String qname,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,97,AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,98,if (JQUERY_EXTEND_NAMES.contains(qname)) {
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,56,firstArgument.isName() && secondArgument != null &&
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,57,econdArgument.isObjectLit() && secondArgument.getNext() == null)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,106,(firstArgument.isName() || NodeUtil.isGet(firstArgument) &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,107,"!NodeUtil.mayHaveSideEffects(firstArgument, compiler) &&"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,108,secondArgument != null && secondArgument.isObjectLit() &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,109,secondArgument.getNext() == null)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,116,"public boolean isJqueryExpandedEachCall(Node call, String qName) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,117,Preconditions.checkArgument(call.isCall());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,118,if (call.getFirstChild() != null &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,119,JQUERY_EXPANDED_EACH_NAME.equals(qName)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,120,return true;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,122,return false;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,66,f (compiler.getCodingConvention().isPrototypeAlias(n)) {
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,67,eplaceJqueryPrototypeAlias(n);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,127,if (n.isGetProp() && convention.isPrototypeAlias(n)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,128,maybeReplaceJqueryPrototypeAlias(n);
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,72,"f (isJqueryExtendReference(callTarget, qName)) {"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,73,eplaceJqueryExtendCall(n);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,134,"if (isJqueryExtendCall(callTarget, qName, this.compiler)) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,135,maybeExpandJqueryExtendCall(n);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,137,"} else if (isJqueryExpandedEachCall(n, qName)) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,138,"maybeExpandJqueryEachCall(t, n);"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,82,/ Traverse the tree and collect strings
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,86,rivate void replaceJqueryPrototypeAlias(Node n) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,150,private void maybeReplaceJqueryPrototypeAlias(Node n) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,151,// Check to see if this is the assignment of the original alias.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,152,"// If so, leave it intact."
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,153,if(NodeUtil.isLValue(n)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,154,Node maybeAssign = n.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,155,while (!NodeUtil.isStatement(maybeAssign) && !maybeAssign.isAssign()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,156,maybeAssign = maybeAssign.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,159,if (maybeAssign.isAssign()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,160,maybeAssign = maybeAssign.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,161,if (maybeAssign.isBlock() || maybeAssign.isScript() ||
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,162,NodeUtil.isStatement(maybeAssign)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,163,return;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,94,rivate void replaceJqueryExtendCall(Node n) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,176,* Expand jQuery.extend (and derivative) calls into direct object assignments
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,177,"* Example: jQuery.extend(obj1, {prop1: val1, prop2: val2}) ->"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,178,*   obj1.prop1 = val1;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,179,*   obj1.prop2 = val2;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,181,private void maybeExpandJqueryExtendCall(Node n) {
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,96,ode objectToExtend = callTarget.getNext(); //first argument
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,97,ode extendArg = objectToExtend.getNext(); //second argument
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,183,Node objectToExtend = callTarget.getNext(); // first argument
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,184,Node extendArg = objectToExtend.getNext(); // second argument
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,185,boolean ensureObjectDefined = true;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,100,"/Only one argument was specified, so extend jQuery namespace"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,188,"// Only one argument was specified, so extend jQuery namespace"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,191,ensureObjectDefined = false;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,192,} else if (objectToExtend.isGetProp() &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,193,"(objectToExtend.getLastChild().getString().equals(""prototype"") ||"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,194,convention.isPrototypeAlias(objectToExtend))) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,195,ensureObjectDefined = false;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,105,/Check for an empty object literal
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,106,f (!extendArg.hasChildren())
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,198,// Check for an empty object literal
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,199,if (!extendArg.hasChildren()) {
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,109,"* Since we are expanding jQuery.extend calls into multiple statements,"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,110, encapsulate the new statements in an immediately executed anonymous
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,111, function that returns the extended object.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,203,"// Since we are expanding jQuery.extend calls into multiple statements,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,204,// encapsulate the new statements in a new block.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,207,if (ensureObjectDefined) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,208,"Node assignVal = IR.or(objectToExtend.cloneTree(),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,209,IR.objectlit().srcref(n)).srcref(n);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,210,"Node assign = IR.assign(objectToExtend.cloneTree(), assignVal).srcref(n);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,211,fncBlock.addChildrenToFront(IR.exprResult(assign).srcref(n));
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,132,ode targetVal;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,133,"f (""jQuery.prototype"".equals(objectToExtend.getQualifiedName())) {"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,134,"* When extending the jQuery prototype, return the jQuery namespace."
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,135, No known uses of the return value exist for this case.
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,136, TODO(Chad Killingsworth): Check jQuery plugins
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,138,argetVal = objectToExtend.getFirstChild().cloneTree();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,231,"// Check to see if the return value is used. If not, replace the original"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,232,// call with new block. Otherwise wrap the statements in an
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,233,// immediately-called anonymous function.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,234,if (n.getParent().isExprResult()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,235,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,236,"parent.getParent().replaceChild(parent, fncBlock);"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,140,argetVal = objectToExtend.cloneTree();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,238,Node targetVal;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,239,"if (""jQuery.prototype"".equals(objectToExtend.getQualifiedName())) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,240,"// When extending the jQuery prototype, return the jQuery namespace."
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,241,// This is not commonly used.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,242,targetVal = objectToExtend.removeFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,243,} else {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,244,targetVal = objectToExtend.detachFromParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,246,fncBlock.addChildToBack(IR.returnNode(targetVal).srcref(targetVal));
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,248,"Node fnc = IR.function(IR.name("""").srcref(n),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,249,"IR.paramList().srcref(n),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,250,fncBlock);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,251,"n.replaceChild(callTarget, fnc);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,252,"n.putBooleanProp(Node.FREE_CALL, true);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,254,// remove any other pre-existing call arguments
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,255,while(fnc.getNext() != null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,256,n.removeChildAfter(fnc);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,259,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,263,* Expand a jQuery.expandedEach call
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,265,* Expanded jQuery.expandedEach calls will replace the GETELEM nodes of a
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,266,* property assignment with GETPROP nodes to allow for renaming.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,268,"private void maybeExpandJqueryEachCall(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,269,Node objectToLoopOver = n.getChildAtIndex(1);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,271,if (objectToLoopOver == null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,272,return;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,275,Node callbackFunction = objectToLoopOver.getNext();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,276,if (callbackFunction == null || !callbackFunction.isFunction()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,277,return;
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,142,ncBlock.addChildToBack(IR.returnNode(targetVal).srcref(targetVal));
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,144,"ode fnc = IR.function(IR.name("""").srcref(n),"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,145,"R.paramList().srcref(n),"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,146,ncBlock);
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,147,".replaceChild(callTarget, fnc);"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,148,".putBooleanProp(Node.FREE_CALL, true);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,280,// Run the peephole optimizations on the first argument to handle
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,281,"// cases like (""a "" + ""b"").split("" "")"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,282,"peepholePasses.process(null, n.getChildAtIndex(1));"
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,150,/remove any other pre-existing call arguments
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,151,hile(fnc.getNext() != null) {
False,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,152,.removeChildAfter(fnc);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,284,// Create a reference tree
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,285,Node nClone = n.cloneTree();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,287,objectToLoopOver = nClone.getChildAtIndex(1);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,289,// Check to see if the first argument is something we recognize and can
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,290,// expand.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,291,if (!objectToLoopOver.isObjectLit() &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,292,!(objectToLoopOver.isArrayLit() &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,293,isArrayLitValidForExpansion(objectToLoopOver))) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,294,"t.report(n, JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR, (String)null);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,295,return;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,298,// Find all references to the callback function arguments
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,299,List<Node> keyNodeReferences = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,300,List<Node> valueNodeReferences = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,302,"NodeTraversal.traverse(compiler,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,303,"NodeUtil.getFunctionBody(callbackFunction),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,304,"new FindCallbackArgumentReferences(callbackFunction,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,305,"keyNodeReferences, valueNodeReferences,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,306,objectToLoopOver.isArrayLit()));
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,308,if(keyNodeReferences.size() == 0) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,309,// We didn't do anything useful ...
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,310,"t.report(n, JQUERY_USELESS_EACH_EXPANSION, (String)null);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,311,return;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,314,"Node fncBlock = tryExpandJqueryEachCall(t, nClone, callbackFunction,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,315,"keyNodeReferences, valueNodeReferences);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,317,if (fncBlock != null && fncBlock.hasChildren()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,318,"replaceOriginalJqueryEachCall(n, fncBlock);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,319,} else {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,320,// We didn't do anything useful ...
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,321,"t.report(n, JQUERY_USELESS_EACH_EXPANSION, (String)null);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,325,"private Node tryExpandJqueryEachCall(NodeTraversal t, Node n,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,326,"Node callbackFunction, List<Node> keyNodes, List<Node> valueNodes) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,328,Node callTarget = n.getFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,329,Node objectToLoopOver = callTarget.getNext();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,331,// New block to contain the expanded statements
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,332,Node fncBlock = IR.block().srcref(callTarget);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,334,boolean isValidExpansion = true;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,336,// Expand the jQuery.expandedEach call
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,337,"Node key = objectToLoopOver.getFirstChild(), val = null;"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,338,"for(int i = 0; key != null; key = key.getNext(), i++) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,339,if (key != null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,340,if (objectToLoopOver.isArrayLit()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,341,// Arrays have a value of their index number
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,342,val = IR.number(i).srcref(key);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,343,} else {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,344,val = key.getFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,348,// Keep track of the replaced nodes so we can reset the tree
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,349,List<Node> newKeys = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,350,List<Node> newValues = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,351,List<Node> origGetElems = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,352,List<Node> newGetProps = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,354,// Replace all of the key nodes with the prop name
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,355,for (int j = 0; j < keyNodes.size(); j++) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,356,Node origNode = keyNodes.get(j);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,357,Node ancestor = origNode.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,359,Node newNode = IR.string(key.getString()).srcref(key);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,360,newKeys.add(newNode);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,361,"ancestor.replaceChild(origNode, newNode);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,363,// Walk up the tree to see if the key is used in a GETELEM
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,364,// assignment
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,365,while (ancestor != null && !NodeUtil.isStatement(ancestor) &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,366,!ancestor.isGetElem()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,367,ancestor = ancestor.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,370,// Convert GETELEM nodes to GETPROP nodes so that they can be
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,371,// renamed or removed.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,372,if (ancestor != null && ancestor.isGetElem()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,374,Node propObject = ancestor;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,375,while (propObject.isGetProp() || propObject.isGetElem()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,376,propObject = propObject.getFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,379,Node ancestorClone = ancestor.cloneTree();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,380,// Run the peephole passes to handle cases such as
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,381,// obj['lit' + key] = val;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,382,"peepholePasses.process(null, ancestorClone.getChildAtIndex(1));"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,383,Node prop = ancestorClone.getChildAtIndex(1);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,385,if (prop.isString() &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,386,NodeUtil.isValidPropertyName(prop.getString())) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,387,Node target = ancestorClone.getFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,388,"Node newGetProp = IR.getprop(target.detachFromParent(),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,389,prop.detachFromParent());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,390,newGetProps.add(newGetProp);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,391,origGetElems.add(ancestor);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,392,"ancestor.getParent().replaceChild(ancestor, newGetProp);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,393,} else {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,394,if (prop.isString() &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,395,!NodeUtil.isValidPropertyName(prop.getString())) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,396,"t.report(n,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,397,"JQUERY_UNABLE_TO_EXPAND_INVALID_NAME_ERROR,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,398,prop.getString());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,400,isValidExpansion = false;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,405,if (isValidExpansion) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,406,// Replace all of the value nodes with the prop value
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,407,for (int j = 0; val != null && j < valueNodes.size(); j++) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,408,Node origNode = valueNodes.get(j);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,409,Node newNode = val.cloneTree();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,410,newValues.add(newNode);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,411,"origNode.getParent().replaceChild(origNode, newNode);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,414,// Wrap the new tree in an anonymous function call
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,415,"Node fnc = IR.function(IR.name("""").srcref(key),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,416,"IR.paramList().srcref(key),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,417,callbackFunction.getChildAtIndex(2).cloneTree()).srcref(key);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,418,Node call = IR.call(fnc).srcref(key);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,419,"call.putBooleanProp(Node.FREE_CALL, true);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,420,fncBlock.addChildToBack(IR.exprResult(call).srcref(call));
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,423,// Reset the source tree
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,424,for (int j = 0; j < newGetProps.size(); j++) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,425,"newGetProps.get(j).getParent().replaceChild(newGetProps.get(j),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,426,origGetElems.get(j));
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,428,for (int j = 0; j < newKeys.size(); j++) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,429,"newKeys.get(j).getParent().replaceChild(newKeys.get(j),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,430,keyNodes.get(j));
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,432,for (int j = 0; j < newValues.size(); j++) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,433,"newValues.get(j).getParent().replaceChild(newValues.get(j),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,434,valueNodes.get(j));
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,437,if (!isValidExpansion) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,438,return null;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,441,return fncBlock;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,444,"private void replaceOriginalJqueryEachCall(Node n, Node expandedBlock) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,445,// Check to see if the return value of the original jQuery.expandedEach
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,446,"// call is used. If so, we need to wrap each loop expansion in an anonymous"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,447,// function and return the original objectToLoopOver.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,448,if (n.getParent().isExprResult()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,449,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,450,Node grandparent = parent.getParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,451,Node insertAfter = parent;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,452,while (expandedBlock.hasChildren()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,453,Node child = expandedBlock.getFirstChild().detachFromParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,454,"grandparent.addChildAfter(child, insertAfter);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,455,insertAfter = child;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,457,grandparent.removeChild(parent);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,458,} else {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,459,// Return the original object
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,460,Node callTarget = n.getFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,461,Node objectToLoopOver = callTarget.getNext();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,463,objectToLoopOver.detachFromParent();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,464,Node ret = IR.returnNode(objectToLoopOver).srcref(callTarget);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,465,expandedBlock.addChildToBack(ret);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,467,// Wrap all of the expanded loop calls in a new anonymous function
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,468,"Node fnc = IR.function(IR.name("""").srcref(callTarget),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,469,"IR.paramList().srcref(callTarget),"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,470,expandedBlock);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,471,"n.replaceChild(callTarget, fnc);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,472,"n.putBooleanProp(Node.FREE_CALL, true);"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,474,// remove any other pre-existing call arguments
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,475,while(fnc.getNext() != null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,476,n.removeChildAfter(fnc);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,482,private boolean isArrayLitValidForExpansion(Node n) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,483,Iterator<Node> iter = n.children().iterator();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,484,while (iter.hasNext()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,485,Node child = iter.next();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,486,if (!child.isString()) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,487,return false;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,490,return true;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,494,"* Given a jQuery.expandedEach callback function, traverse it and collect any"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,495,* references to its parameter names.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,497,class FindCallbackArgumentReferences extends AbstractPostOrderCallback
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,498,implements ScopedCallback {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,500,private final String keyName;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,501,private final String valueName;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,502,private Scope startingScope;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,503,private List<Node> keyReferences;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,504,private List<Node> valueReferences;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,506,"FindCallbackArgumentReferences(Node functionRoot, List<Node> keyReferences,"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,507,"List<Node> valueReferences, boolean useArrayMode) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,508,Preconditions.checkState(functionRoot.isFunction());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,510,"String keyString = null, valueString = null;"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,511,Node callbackParams = NodeUtil.getFunctionParameters(functionRoot);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,512,Node param = callbackParams.getFirstChild();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,513,if (param != null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,514,Preconditions.checkState(param.isName());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,515,keyString = param.getString();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,517,param = param.getNext();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,518,if (param != null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,519,Preconditions.checkState(param.isName());
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,520,valueString = param.getString();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,524,this.keyName = keyString;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,525,this.valueName = valueString;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,527,"// For arrays, the keyString is the index number of the element."
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,528,// We're interested in the value of the element instead
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,529,if (useArrayMode) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,530,this.keyReferences = valueReferences;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,531,this.valueReferences = keyReferences;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,532,} else {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,533,this.keyReferences = keyReferences;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,534,this.valueReferences = valueReferences;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,537,this.startingScope = null;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,540,"private boolean isShadowed(String name, Scope scope) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,541,Var nameVar = scope.getVar(name);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,542,return nameVar != null &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,543,nameVar.getScope() != this.startingScope;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,546,@Override
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,547,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,548,"// In the top scope, ""this"" is a reference to ""value"""
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,549,boolean isThis = false;
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,550,if (t.getScope() == this.startingScope) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,551,isThis = n.isThis();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,554,"if (isThis || n.isName() && !isShadowed(n.getString(), t.getScope())) {"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,555,String nodeValue = isThis ? null : n.getString();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,556,if (!isThis && keyName != null && nodeValue.equals(keyName)) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,557,keyReferences.add(n);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,558,} else if (isThis || (valueName != null &&
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,559,nodeValue.equals(valueName))) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,560,valueReferences.add(n);
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,566,"* As we enter each scope, make sure that the scope doesn't define"
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,567,* a local variable with the same name as our original callback method
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,568,* parameter names.
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,570,@Override
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,571,public void enterScope(NodeTraversal t) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,572,if (this.startingScope == null) {
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,573,this.startingScope = t.getScope();
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,577,@Override
True,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,src/com/google/javascript/jscomp/ExpandJqueryAliases.java,578,public void exitScope(NodeTraversal t) { }
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,43,rivate final Set<String> propertyTestFunctions = ImmutableSet.of(
True,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,44,private final static Set<String> propertyTestFunctions = ImmutableSet.of(
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,54,rivate final Set<String> prototypeAliases = ImmutableSet.of(
True,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,55,private final static Set<String> prototypeAliases = ImmutableSet.of(
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,58,ublic boolean isPrototypeAlias(Node n) {
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,59,f (n.isGetProp()) {
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,60,f (n.isName() || n.isGetProp() || n.isGetElem()) {
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,61,eturn !NodeUtil.isLValue(n) &&
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,62,rototypeAliases.contains(n.getQualifiedName());
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,63, else {
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,64,eturn prototypeAliases.contains(n.getQualifiedName());
False,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,67,eturn false;
True,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,59,public boolean isPrototypeAlias(Node getProp) {
True,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,60,Preconditions.checkArgument(getProp.isGetProp());
True,src/com/google/javascript/jscomp/JqueryCodingConvention.java,src/com/google/javascript/jscomp/JqueryCodingConvention.java,61,return prototypeAliases.contains(getProp.getQualifiedName());
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,25,final DiagnosticType NAME_ERROR =
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,26,ExpandJqueryAliases.JQUERY_UNABLE_TO_EXPAND_INVALID_NAME_ERROR;
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,28,final DiagnosticType INVALID_LIT_ERROR =
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,29,ExpandJqueryAliases.JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR;
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,31,final DiagnosticType USELESS_EACH_ERROR =
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,32,ExpandJqueryAliases.JQUERY_USELESS_EACH_EXPANSION;
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,45,ublic void testJqueryExtendAliasExpansion() {
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,54,public void testJqueryExtendExpansion() {
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,48,/test invalid extend call
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,57,// test for extend call that should not be expanded - no arguments
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,51,/test empty extend call
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,60,// test for extend call that should not be expanded - empty argument
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,61,// this statement has no effect in actual code
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,54,"est(""jQuery.extend({a:'test'})"","
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,55,"(function(){jQuery.a='test';return jQuery})()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,64,// test single argument call - should assign to the jQuery namespace
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,65,"test(setupCode + ""jQuery.extend({a:'test'})"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,66,"setupCode + ""{jQuery.a = 'test';}"");"
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,57,/Extend the jQuery prototype
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,68,// test expansion when extending the jQuery prototype
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,60,"etupCode + ""jQuery.fn=jQuery.prototype;(function(){"" +"
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,61,"jQuery.prototype.a='test';jQuery.prototype.b='test2';"" +"
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,62,"return jQuery;})()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,71,"setupCode + ""jQuery.fn=jQuery.prototype;"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,72,"""{jQuery.prototype.a = 'test'; jQuery.prototype.b = 'test2';}"");"
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,64,/Extend obj2
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,74,// Expand the extension of obj2
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,66,"etupCode + ""(function(){"" +"
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,67,"obj2.a='test';obj2.b='test2';return obj2})()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,76,"setupCode + ""{obj2=obj2||{}; obj2.a='test'; obj2.b='test2';}"");"
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,69,/Extend the jQuery namespace - 2 argument call
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,78,// Expand the jQuery namespace - 2 argument call
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,79,// Must ensure that the first argument is defined
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,81,"setupCode + ""{jQuery = jQuery || {}; jQuery.a = 'test';"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,82,"""jQuery.b = 'test2';}"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,84,// Test extend call where first argument includes a method call
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,85,"testSame(setupCode+""obj2.meth=function() { return { a:{} }; };"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,86,"""jQuery.extend(obj2.meth().a, {a: 'test'});"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,89,public void testJqueryExpandedEachExpansion() {
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,90,"String setupCode = ""var jQuery={};"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,91,"""jQuery.expandedEach=function(vals, callback){};"";"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,93,testSame(setupCode);
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,95,// Test expansion with object literal
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,96,"test(setupCode + ""jQuery.expandedEach({'a': 1, 'b': 2, 'c': 8},"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,97,"""function(key, val) { var a = key; jQuery[key] = val; });"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,98,"setupCode + ""(function(){ var a = 'a'; jQuery.a = 1 })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,99,"""(function(){ var a = 'b'; jQuery.b = 2 })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,100,"""(function(){ var a = 'c'; jQuery.c = 8 })();"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,102,// Test expansion with array literal
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,103,"// For array literals, the key parameter will be the element index number"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,104,"// and the value parameter will be the string literal. In this case, the"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,105,// string literal value should become a property name.
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,106,"test(setupCode + ""jQuery.expandedEach(['a', 'b', 'c'],"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,107,"""function(key, val){ jQuery[val] = key; });"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,108,"setupCode + ""(function(){ jQuery.a = 0; })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,109,"""(function(){ jQuery.b = 1; })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,110,"""(function(){ jQuery.c = 2 })();"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,112,// Test expansion with object literal using 'this' keyword
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,113,"test(setupCode + ""jQuery.expandedEach({'a': 1, 'b': 2, 'c': 8},"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,114,"""function(key, val) { var a = key; jQuery[key] = this; });"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,115,"setupCode + ""(function(){ var a = 'a'; jQuery.a = 1 })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,116,"""(function(){ var a = 'b'; jQuery.b = 2 })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,117,"""(function(){ var a = 'c'; jQuery.c = 8 })();"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,119,// Test expansion with array literal using 'this' keyword
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,120,"test(setupCode + ""jQuery.expandedEach(['a', 'b', 'c'],"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,121,"""function(key, val){ jQuery[this] = key; });"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,122,"setupCode + ""(function(){ jQuery.a = 0; })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,123,"""(function(){ jQuery.b = 1; })();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,124,"""(function(){ jQuery.c = 2 })();"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,126,// test nested function using argument name to shadow callback name
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,127,"test(setupCode + ""jQuery.expandedEach(['a'], function(key,val) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,128,"""jQuery[val] = key; (function(key) { jQuery[key] = 1;})('test'); })"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,129,"setupCode + ""(function(){ jQuery.a = 0;"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,130,"""(function(key){ jQuery[key] = 1})('test') })()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,132,// test nested function using var name to shadow callback name
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,133,"test(setupCode + ""jQuery.expandedEach(['a'], function(key,val) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,134,"""jQuery[val] = key; (function(key) { var val = 2;"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,135,"""jQuery[key] = val;})('test');})"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,136,"setupCode + ""(function(){"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,137,"""jQuery.a=0;"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,138,"""(function(key){var val = 2; jQuery[key] = val;})('test')})()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,140,// test nested function using function name to shadow callback name
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,141,"test(setupCode + ""jQuery.expandedEach(['a'], function(key,val) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,142,"""jQuery[val] = key; (function(key1) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,143,"""function key() {}; key();"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,144,"""})('test');})"","
False,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,72,"jQuery.a='test';jQuery.b='test2';return jQuery})()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,146,"""jQuery.a=0;(function(key1) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,147,"""function key() {}; key(); })('test')})()"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,149,// test using return val
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,150,"test(setupCode + ""alert(jQuery.expandedEach(['a'],"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,151,"""function(key,val) { jQuery[val] = key;})[0])"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,152,"setupCode + ""alert((function(){"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,153,"""(function(){ jQuery.a = 0;})(); return ['a']})()[0]);"");"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,155,// Loop object is a variable. Test that warning is raised.
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,156,"testSame(setupCode + ""var a = ['a'];"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,157,"""jQuery.expandedEach(a, function(key,val){ jQuery[key]=val; })"","
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,158,INVALID_LIT_ERROR);
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,160,// Invalid property name. Test that warning is raised.
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,161,"testSame(setupCode + ""var obj2={};"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,162,"""jQuery.expandedEach(['foo','bar'], function(i, name) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,163,"""obj2[ '[object ' + name + ']' ] = 'a';});"", NAME_ERROR, true);"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,165,// Useless expansion (key not used). Test that warning is raised.
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,166,"testSame(setupCode + ""var obj2={};"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,167,"""jQuery.expandedEach(['foo','bar'], function(i, name) {"" +"
True,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,test/com/google/javascript/jscomp/ExpandJqueryAliasesTest.java,168,"""obj2[i] = 1;});"", USELESS_EACH_ERROR, false);"
