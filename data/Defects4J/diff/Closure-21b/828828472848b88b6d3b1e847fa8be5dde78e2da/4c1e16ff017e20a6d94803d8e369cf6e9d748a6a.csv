is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,316,"f (n != null && NodeUtil.isLhs(n, assign) &&"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,316,"if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign) &&"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,379,"odeUtil.isLhs(n, parent)) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,379,"NodeUtil.isVarOrSimpleAssignLhs(n, parent)) {"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,429,"NodeUtil.isLhs(name, name.getParent());"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,429,"!NodeUtil.isVarOrSimpleAssignLhs(name, name.getParent());"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,359,"f (NodeUtil.isLhs(n, n.getParent())) {"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,359,"if (NodeUtil.isVarOrSimpleAssignLhs(n, n.getParent())) {"
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,339,"& !NodeUtil.isLhs(callNode, parent)"
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,339,"&& !NodeUtil.isVarOrSimpleAssignLhs(callNode, parent)"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,881,"f (NodeUtil.isLhs(n, parent)) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,881,"if (NodeUtil.isVarOrSimpleAssignLhs(n, parent)) {"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,924,"f (NodeUtil.isLhs(n, parent)) {"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,924,"if (NodeUtil.isVarOrSimpleAssignLhs(n, parent)) {"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2025,"tatic boolean isLhs(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2025,"static boolean isVarOrSimpleAssignLhs(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2031,* Determines whether this node is used as an L-value. Notice that sometimes
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2032,* names are used as both L-values and R-values.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2034,"* We treat ""var x;"" as a pseudo-L-value, which kind of makes sense if you"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2035,"* treat it as ""assignment to 'undefined' at the top of the scope"". But if"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2036,"* we're honest with ourselves, it doesn't make sense, and we only do this"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2037,* because it makes sense to treat this as synactically similar to
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2038,"* ""var x = 0;""."
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2040,* @param node The node
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2041,* @return True if n is an L-value.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2043,static boolean isLValue(Node node) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2044,int nType = node.getType();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2045,Preconditions.checkArgument(nType == Token.NAME || nType == Token.GETPROP ||
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2046,nType == Token.GETELEM);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2047,Node parent = node.getParent();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2048,return (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == node)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2049,|| (NodeUtil.isForIn(parent) && parent.getFirstChild() == node)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2050,|| NodeUtil.isVar(parent)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2051,|| (parent.getType() == Token.FUNCTION &&
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2052,parent.getFirstChild() == node)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2053,|| parent.getType() == Token.DEC
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2054,|| parent.getType() == Token.INC
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2055,|| parent.getType() == Token.LP
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2056,|| parent.getType() == Token.CATCH;
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,223,"& !NodeUtil.isLhs(n, n.getParent())) {"
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,223,&& !NodeUtil.isLValue(n)) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,883,ode parent = node.getParent();
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,885,eturn (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == node)
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,886,| (NodeUtil.isForIn(parent) && parent.getFirstChild() == node)
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,887,| NodeUtil.isVar(parent)
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,888,| parent.getType() == Token.DEC
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,889,| parent.getType() == Token.INC;
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,882,return NodeUtil.isLValue(node);
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,87,public void testLocalUndefined() throws Exception {
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,88,"// Some javascript libraries like to create a local instance of ""undefined"","
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,89,// to ensure that other libraries don't try to overwrite it.
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,91,"// Most of the time, this is ok, because normalization will rename"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,92,// that variable to undefined$$1. But this won't happen if they don't
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,93,// include the default externs.
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,95,// This test is just to make sure that the compiler doesn't crash.
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,96,CompilerOptions options = new CompilerOptions();
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,97,CompilationLevel.SIMPLE_OPTIMIZATIONS.setOptionsForCompilationLevel(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,98,options);
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,99,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,100,"JSSourceFile externs = JSSourceFile.fromCode(""externs.js"", """");"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,101,"JSSourceFile input = JSSourceFile.fromCode(""input.js"","
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,102,"""(function (undefined) { alert(undefined); })();"");"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,103,"compiler.compile(externs, input, options);"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,778,"foldSame(""function f(undefined) {}"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,779,"foldSame(""try {} catch(undefined) {}"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,780,"foldSame(""for (undefined in {}) {}"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,781,"foldSame(""undefined++;"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,782,"fold(""undefined += undefined;"", ""undefined += void 0;"");"
