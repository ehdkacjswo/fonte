is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,23,import com.google.javascript.rhino.jstype.JSType;
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,96,terable<ObjectType> types = ImmutableList.copyOf(
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,97,ypeRegistry.getEachReferenceTypeWithProperty(propName));
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,98,or (ObjectType type : types) {
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,99,ode pNode = type.getPropertyNode(propName);
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,100,f (pNode != null && srcName.equals(pNode.getSourceFileName())) {
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,101,"ypeRegistry.unregisterPropertyOnType(propName, type);"
False,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,102,ype.removeProperty(propName);
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,97,Iterable<JSType> types = ImmutableList.copyOf(
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,98,typeRegistry.getTypesWithProperty(propName));
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,99,for (JSType type : types) {
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,100,ObjectType objType = type.toObjectType();
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,101,if (objType != null) {
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,102,Node pNode = objType.getPropertyNode(propName);
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,103,if (pNode != null && srcName.equals(pNode.getSourceFileName())) {
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,104,"typeRegistry.unregisterPropertyOnType(propName, type);"
True,src/com/google/javascript/jscomp/FieldCleanupPass.java,src/com/google/javascript/jscomp/FieldCleanupPass.java,105,objType.removeProperty(propName);
