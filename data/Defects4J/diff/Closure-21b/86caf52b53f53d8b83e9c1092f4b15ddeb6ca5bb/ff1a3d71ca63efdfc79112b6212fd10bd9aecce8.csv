is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,112,** Map of all globals that we may aliasing */
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,112,/** Map of all globals that we may alias */
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,115,** Holds all of the globals that can be aliased to GLOBAL_ */
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,116,rivate final List<Node> globalUses = Lists.newArrayList();
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,593,or (Node globalUse : globalUses) {
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,594,eplaceGlobalUse(globalUse);
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,591,for (Node globalUse : global.uses) {
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,592,replaceGlobalUse(globalUse);
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,658,"// If a variable is declared in both externs and normal source,"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,659,// don't alias it.
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,660,if (n.getParent().getType() == Token.VAR ||
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,661,n.getParent().getType() == Token.FUNCTION) {
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,662,globals.remove(name);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,677,lobalUses.add(n);
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,680,global.uses.add(n);
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,754,List<Node> uses = Lists.newArrayList();
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,21,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,31,import java.util.Set;
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,631,private Set<Var> hasOkDuplicateDeclaration = Sets.newHashSet();
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,635,"cope s, String name, Node n, Node parent, Node gramps,"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,636,ode nodeWithLineNumber) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,639,"Scope s, String name, Node n, CompilerInput input) {"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,641,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,644,if (v != null && s.isGlobal()) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,645,// We allow variables to be duplicate declared if one
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,646,// declaration appears in source and the other in externs.
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,647,// This deals with issues where a browser built-in is declared
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,648,// in one browser but not in another.
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,649,if (v.isExtern() && !input.isExtern()) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,650,if (hasOkDuplicateDeclaration.add(v)) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,651,return;
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,660,"odeUtil.getSourceName(nodeWithLineNumber), nodeWithLineNumber,"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,677,"input.getName(), n,"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,672,"eplaceVarWithAssignment(n, parent, gramps);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,689,"replaceVarWithAssignment(n, parent, parent.getParent());"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,23,mport com.google.javascript.rhino.jstype.JSType;
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,95,"eclareVar(fnName, fnNameNode, n, null, null, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,94,declareVar(fnNameNode);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,103,"eclareVar(a.getString(), a, args, n, null, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,102,declareVar(a);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,125,reconditions.checkState(child.getType() == Token.NAME);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,127,tring name = child.getString();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,128,"eclareVar(name, child, n, parent, null, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,124,declareVar(child);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,143,"eclareVar(fnName, n.getFirstChild(), n, parent, null, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,139,declareVar(n.getFirstChild());
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,155,"eclareVar(var.getString(), var, n, parent, null, n);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,151,declareVar(var);
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,181,"cope s, String name,"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,182,"ode n, Node parent, Node gramps, Node nodeWithLineNumber);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,177,"Scope s, String name, Node n, CompilerInput input);"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,190,"cope s, String name,"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,191,"ode n, Node parent, Node gramps, Node nodeWithLineNumber) {"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,185,"Scope s, String name, Node n, CompilerInput input) {"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,186,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,212,"SError.make(sourceName, nodeWithLineNumber,"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,208,"JSError.make(sourceName, n,"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,223,"SError.make(sourceName, nodeWithLineNumber,"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,219,"JSError.make(sourceName, n,"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,232, @param name The variable name
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,233, @param n The node corresponding to the variable name (usually a NAME node)
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,234, @param parent The parent node of {@code n}
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,235, @param gramps The parent node of {@code parent}
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,228,* @param n The node corresponding to the variable name.
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,237, @param nodeWithLineNumber The node to use to access the line number of
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,238,"     the variable declaration, if needed"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,240,"rivate void declareVar(String name, Node n, Node parent,"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,241,"ode gramps, JSType declaredType,"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,242,ode nodeWithLineNumber) {
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,231,private void declareVar(Node n) {
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,232,Preconditions.checkState(n.getType() == Token.NAME);
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,234,CompilerInput input = compiler.getInput(sourceName);
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,235,String name = n.getString();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,246,"cope, name, n, parent, gramps, nodeWithLineNumber);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,239,"scope, name, n, input);"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,248,"cope.declare(name, n, declaredType, compiler.getInput(sourceName));"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,241,"scope.declare(name, n, null, input);"
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,96,"/** @suppress {duplicate} */ var extern = 3;"", ""extern = 3;"","
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,96,"""/** @suppress {duplicate} */ var extern = 3;"", ""var extern = 3;"","
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,258,/ Verify global redefinition of extern definition is removed.
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,259,"est(""/** @suppress {duplicate} */\nvar window;"", """");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,258,// Verify the 1st global redefinition of extern definition is not removed.
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,259,"test(""/** @suppress {duplicate} */\nvar window;"", ""var window;"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,261,// Verify the 2nd global redefinition of extern definition is removed.
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,262,"test(""/** @suppress {duplicate} */\nvar window;"" +"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,263,"""/** @suppress {duplicate} */\nvar window;"", ""var window;"");"
