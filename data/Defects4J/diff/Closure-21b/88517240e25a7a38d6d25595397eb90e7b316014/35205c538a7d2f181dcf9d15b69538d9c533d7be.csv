is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,513,f (bType.isAllType() || bType.isEmptyType() || bType.isUnknownType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,513,if (bType.isAllType() || bType.isEmptyType() || bType.isUnknownType() ||
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,514,aType.isAllType() || aType.isEmptyType() || aType.isUnknownType()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,524,f (otherType.isSubtype(getNativeType(JSTypeNative.OBJECT_TYPE))) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,525,if (!otherType.getGreatestSubtype(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,526,getNativeType(JSTypeNative.OBJECT_TYPE)).isEmptyType()) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3865,"compare(UNKNOWN, NULL_TYPE, subclassOfUnresolvedNamedType);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3867,"JSType functionAndNull = createUnionType(NULL_TYPE, dateMethod);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3868,"compare(UNKNOWN, functionAndNull, dateMethod);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4353,public void testSymmetryOfTestForEquality() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4354,List<JSType> listA = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4355,List<JSType> listB = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4356,for (JSType typeA : listA) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4357,for (JSType typeB : listB) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4358,TernaryValue aOnB = typeA.testForEquality(typeB);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4359,TernaryValue bOnA = typeB.testForEquality(typeA);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4360,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4361,"String.format(""testForEquality not symmetrical:\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4362,"""typeA: %s\ntypeB: %s\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4363,"""a.testForEquality(b): %s\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4364,"""b.testForEquality(a): %s\n"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4365,"typeA, typeB, aOnB, bOnA),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4366,aOnB == bOnA);
