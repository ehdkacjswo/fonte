is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,28,import com.google.javascript.rhino.JSDocInfo.Marker;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,30,import com.google.javascript.rhino.SourcePosition;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,169,"* If {@code sym} is a function, try to find a Symbol for"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,170,* a parameter with the given name.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,172,* Returns null if we couldn't find one.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,174,"* Notice that this just makes a best effort, and may not be able"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,175,* to find parameters for non-conventional function definitions.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,176,"* For example, we would not be able to find ""y"" in this code:"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,177,* <code>
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,178,* var x = x() ? function(y) {} : function(y) {};
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,179,* </code>
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,181,"public Symbol getParameterInFunction(Symbol sym, String paramName) {"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,182,SymbolScope scope = getScopeInFunction(sym);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,183,if (scope != null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,184,Symbol param = scope.getSlot(paramName);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,185,if (param != null && param.scope == scope) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,186,return param;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,189,return null;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,192,private SymbolScope getScopeInFunction(Symbol sym) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,193,FunctionType type = sym.getFunctionType();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,194,if (type == null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,195,return null;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,198,Node functionNode = type.getSource();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,199,if (functionNode == null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,200,return null;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,203,return scopes.get(functionNode);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,581,// Create references to parameters in the JSDoc.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,582,for (Symbol sym : getAllSymbols()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,583,JSDocInfo info = sym.getJSDocInfo();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,584,if (info == null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,585,continue;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,588,for (Marker marker : info.getMarkers()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,589,SourcePosition<Node> pos = marker.getNameNode();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,590,if (pos == null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,591,continue;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,594,Node paramNode = pos.getItem();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,595,"Symbol param = getParameterInFunction(sym, paramNode.getString());"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,596,if (param != null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,597,param.defineReferenceAt(paramNode);
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,124, A piece of information in a marker containing a position with a string.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,124,* A piece of information (found in a marker) which contains a position
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,125,* with a string.
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,130, A piece of information in a marker containing a position with a string
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,131, that has no leading or trailing whitespace.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,131,* A piece of information (found in a marker) which contains a position
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,132,* with a string that has no leading or trailing whitespace.
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,144, A piece of information in a marker containing a position with a type.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,145,* A piece of information (found in a marker) which contains a position
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,146,* with a name node.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,148,public static class NamePosition extends SourcePosition<Node> {}
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,151,* A piece of information (found in a marker) which contains a position
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,152,* with a type expression syntax tree.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,180,private SourcePosition<Node> nameNode = null;
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,176," Gets the position info for the annotation name (e.g., ""@see"")."
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,185,"* Gets the position information for the annotation name. (e.g., ""param"")"
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,187, Gets the position info for parameter name of a @param tag.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,196,* Gets the position information for the name found
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,197,* in a @param tag.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,198,* @deprecated Use #getNameNode
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,200,@Deprecated
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,198, Gets the position info for the description part of a block tag.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,210,* Gets the position information for the name found
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,211,* in an @param tag.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,213,public SourcePosition<Node> getNameNode() {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,214,return nameNode;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,217,void setNameNode(SourcePosition<Node> p) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,218,nameNode = p;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,222,* Gets the position information for the description found
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,223,* in a block tag.
False,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,209, Gets the position info for the type expression of a block tag.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,234,* Gets the position information for the type expression found
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,235,"* in some block tags, like ""@param"" and ""@return""."
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,43,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,197,// Record the name as both a SourcePosition<String> and a
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,198,"// SourcePosition<Node>. The <String> form is deprecated,"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,199,// because <Node> is more consistent with how other name
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,200,// references are handled (see #markTypeNode)
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,202,// TODO(nicksantos): Remove all uses of the Name position
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,203,// and replace them with the NameNode position.
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,211,SourcePosition<Node> nodePos =
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,212,new JSDocInfo.NamePosition();
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,213,"Node node = Node.newString(Token.NAME, name, lineno, charno);"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,214,node.setLength(name.length());
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,215,nodePos.setItem(node);
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,216,"nodePos.setPositionInformation(lineno, charno,"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,217,"lineno, charno + name.length());"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,218,currentMarker.setNameNode(nodePos);
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,338,ublic void testReferencesInJSDoc() {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,338,public void testReferencesInJSDocType() {
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,371,ublic void testReferencesInJSDoc2() {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,371,public void testReferencesInJSDocType2() {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,392,public void testReferencesInJSDocName() {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,393,"String code = ""/** @param {Object} x */ function f(x) {}\n"";"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,394,SymbolTable table = createSymbolTable(code);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,395,"Symbol x = getLocalVar(table, ""x"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,396,assertNotNull(x);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,398,List<Reference> refs = Lists.newArrayList(table.getReferences(x));
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,399,"assertEquals(2, refs.size());"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,401,"assertEquals(code.indexOf(""x) {""), refs.get(0).getNode().getCharno());"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,402,"assertEquals(code.indexOf(""x */""), refs.get(1).getNode().getCharno());"
