is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,85,* Gets this mutable as an instance of Boolean.
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,87,"* @return a Boolean instance containing the value from this mutable, never null"
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,89,public Boolean toBoolean() {
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,90,return Boolean.valueOf(booleanValue());
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,178, @return a Double instance containing the value from this mutable
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,178,"* @return a Double instance containing the value from this mutable, never null"
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,181,eturn new Double(doubleValue());
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,181,return Double.valueOf(doubleValue());
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,250, @return a Float instance containing the value from this mutable
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,250,"* @return a Float instance containing the value from this mutable, never null"
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,253,eturn new Float(floatValue());
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,253,return Float.valueOf(floatValue());
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,234, @return a Integer instance containing the value from this mutable
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,234,"* @return a Integer instance containing the value from this mutable, never null"
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,237,eturn new Integer(intValue());
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,237,return Integer.valueOf(intValue());
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,232, @return a Long instance containing the value from this mutable
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,232,"* @return a Long instance containing the value from this mutable, never null"
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,235,eturn new Long(longValue());
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,235,return Long.valueOf(longValue());
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,242, @return a Short instance containing the value from this mutable
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,242,"* @return a Short instance containing the value from this mutable, never null"
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,245,eturn new Short(shortValue());
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,245,return Short.valueOf(shortValue());
False,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,98,inal MutableBoolean mutBool = new MutableBoolean(false);
True,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,101,final MutableBoolean mutBool = new MutableBoolean(false);
True,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,102,"assertEquals(Boolean.FALSE, mutBool.toBoolean());"
True,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,103,"assertEquals(false, mutBool.booleanValue());"
True,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,106,"assertEquals(Boolean.TRUE, mutBool.toBoolean());"
