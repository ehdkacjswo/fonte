is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,9,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,19,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,21,// adapted from org.apache.axis.utils.IDKey
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,24,* Wrap an identity key (System.identityHashCode())
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,25,* so that an object can only be equal() to itself.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,27,* This is necessary to disambiguate the occasional duplicate
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,28,* identityHashCodes that can occur.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,31,public final class IDKey {
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,32,private final Object value;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,33,private final int id;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,36,* Constructor for IDKey
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,37,* @param _value
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,39,public IDKey(Object _value) {
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,40,// This is the Object hashcode
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,41,id = System.identityHashCode(_value);
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,42,// There have been some cases (LANG-459) that return the
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,43,// same identity hash code for different objects.  So
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,44,// the value is also added to disambiguate these cases.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,45,value = _value;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,49,* returns hashcode - i.e. the system identity hashcode.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,50,* @return the hashcode
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,52,public int hashCode() {
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,53,return id;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,57,* checks if instances are equal
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,58,* @param other
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,59,* @return if the instances are for the same object
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,61,public boolean equals(Object other) {
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,62,if (!(other instanceof IDKey)) {
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,63,return false;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,65,IDKey idKey = (IDKey) other;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,66,if (id != idKey.id) {
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,67,return false;
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,69,// Note that identity equals is used.
True,src/java/org/apache/commons/lang/IDKey.java,src/java/org/apache/commons/lang/IDKey.java,70,return value == idKey.value;
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,30,import org.apache.commons.lang.IDKey;
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,116,"* N.B. we cannot store the actual objects in a HashSet, as that would use the very hashCode()"
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,117,* we are in the process of calculating.
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,119,* So we generate a one-to-one mapping from the original object to a new object.
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,121,* Now HashSet uses equals() to determine if two elements with the same hashcode really
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,122,"* are equal, so we also need to ensure that the replacement objects are only equal"
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,123,* if the original objects are identical.
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,125,* The original implementation (2.4 and before) used the System.indentityHashCode()
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,126,* method - however this is not guaranteed to generate unique ids (e.g. LANG-459)
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,128,* We now use the IDKey helper class (adapted from org.apache.axis.utils.IDKey)
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,129,* to disambiguate the duplicate ids.
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,137,eturn getRegistry().contains(toIdentityHashCodeInteger(value));
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,156,return getRegistry().contains(new IDKey(value));
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,509,etRegistry().add(toIdentityHashCodeInteger(value));
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,513, Returns an Integer for the given object's default hash code.
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,515, @see System#identityHashCode(Object)
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,516, @param value
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,517,            object for which the hashCode is to be calculated
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,518, @return Default int hash code
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,520,rivate static Integer toIdentityHashCodeInteger(Object value) {
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,521,eturn new Integer(System.identityHashCode(value));
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,528,getRegistry().add(new IDKey(value));
False,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,537,etRegistry().remove(toIdentityHashCodeInteger(value));
True,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,src/java/org/apache/commons/lang/builder/HashCodeBuilder.java,544,getRegistry().remove(new IDKey(value));
