is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,736,* Appends an object followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,737,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,739,* @param obj  the object to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,740,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,742,public StrBuilder appendln(Object obj) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,743,return append(obj).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,747,* Appends a string followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,748,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,750,* @param str  the string to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,751,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,753,public StrBuilder appendln(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,754,return append(str).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,758,* Appends part of a string followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,759,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,761,* @param str  the string to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,762,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,763,"* @param length  the length to append, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,764,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,766,"public StrBuilder appendln(String str, int startIndex, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,767,"return append(str, startIndex, length).appendNewLine();"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,771,* Appends a string buffer followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,772,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,774,* @param str  the string buffer to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,775,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,777,public StrBuilder appendln(StringBuffer str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,778,return append(str).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,782,* Appends part of a string buffer followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,783,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,785,* @param str  the string to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,786,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,787,"* @param length  the length to append, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,788,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,790,"public StrBuilder appendln(StringBuffer str, int startIndex, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,791,"return append(str, startIndex, length).appendNewLine();"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,795,* Appends another string builder followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,796,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,798,* @param str  the string builder to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,799,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,801,public StrBuilder appendln(StrBuilder str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,802,return append(str).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,806,* Appends part of a string builder followed by a new line to this string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,807,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,809,* @param str  the string to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,810,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,811,"* @param length  the length to append, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,812,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,814,"public StrBuilder appendln(StrBuilder str, int startIndex, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,815,"return append(str, startIndex, length).appendNewLine();"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,819,* Appends a char array followed by a new line to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,820,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,822,* @param chars  the char array to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,823,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,825,public StrBuilder appendln(char[] chars) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,826,return append(chars).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,830,* Appends a char array followed by a new line to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,831,* Appending null will call {@link #appendNull()}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,833,* @param chars  the char array to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,834,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,835,"* @param length  the length to append, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,836,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,838,"public StrBuilder appendln(char[] chars, int startIndex, int length) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,839,"return append(chars, startIndex, length).appendNewLine();"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,843,* Appends a boolean value followed by a new line to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,845,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,846,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,848,public StrBuilder appendln(boolean value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,849,return append(value).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,853,* Appends a char value followed by a new line to the string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,855,* @param ch  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,856,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,858,public StrBuilder appendln(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,859,return append(ch).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,863,* Appends an int value followed by a new line to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,865,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,866,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,868,public StrBuilder appendln(int value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,869,return append(value).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,873,* Appends a long value followed by a new line to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,875,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,876,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,878,public StrBuilder appendln(long value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,879,return append(value).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,883,* Appends a float value followed by a new line to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,885,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,886,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,888,public StrBuilder appendln(float value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,889,return append(value).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,893,* Appends a double value followed by a new line to the string builder using <code>String.valueOf</code>.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,895,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,896,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,898,public StrBuilder appendln(double value) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,899,return append(value).appendNewLine();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,904,* Appends each item in an array to the builder without any separators.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,905,* Appending a null array will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,906,* Each object is appended using {@link #append(Object)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,908,* @param array  the array to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,909,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,911,public StrBuilder appendAll(Object[] array) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,912,if (array != null && array.length > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,913,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,914,append(array[i]);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,917,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,921,* Appends each item in a collection to the builder without any separators.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,922,* Appending a null collection will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,923,* Each object is appended using {@link #append(Object)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,925,* @param coll  the collection to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,926,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,928,public StrBuilder appendAll(Collection coll) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,929,if (coll != null && coll.size() > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,930,Iterator it = coll.iterator();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,931,while (it.hasNext()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,932,append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,935,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,939,* Appends each item in an iterator to the builder without any separators.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,940,* Appending a null iterator will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,941,* Each object is appended using {@link #append(Object)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,943,* @param it  the iterator to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,944,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,946,public StrBuilder appendAll(Iterator it) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,947,if (it != null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,948,while (it.hasNext()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,949,append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,952,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1027,* Appends a separator if the builder is currently non-empty.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1028,* Appending a null separator will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1029,* The separator is appended using {@link #append(String)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1030,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1031,* This method is useful for adding a separator each time around the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1032,* loop except the first.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1033,* <pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1034,* for (Iterator it = list.iterator(); it.hasNext(); ) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1035,"*   appendSeparator("","");"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1036,*   append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1038,* </pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1039,"* Note that for this simple example, you should use"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1040,"* {@link #appendWithSeparators(Collection, String)}."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1042,"* @param separator  the separator to use, null means no separator"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1043,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1045,public StrBuilder appendSeparator(String separator) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1046,if (separator != null && size() > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1047,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1049,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1053,* Appends a separator if the builder is currently non-empty.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1054,* The separator is appended using {@link #append(char)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1055,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1056,* This method is useful for adding a separator each time around the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1057,* loop except the first.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1058,* <pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1059,* for (Iterator it = list.iterator(); it.hasNext(); ) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1060,"*   appendSeparator(',');"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1061,*   append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1063,* </pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1064,"* Note that for this simple example, you should use"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1065,"* {@link #appendWithSeparators(Collection, String)}."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1067,* @param separator  the separator to use
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1068,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1070,public StrBuilder appendSeparator(char separator) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1071,if (size() > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1072,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1074,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1078,* Appends a separator to the builder if the loop index is greater than zero.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1079,* Appending a null separator will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1080,* The separator is appended using {@link #append(String)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1081,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1082,* This method is useful for adding a separator each time around the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1083,* loop except the first.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1084,* <pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1085,* for (int i = 0; i < list.size(); i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1086,"*   appendSeparator("","", i);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1087,*   append(list.get(i));
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1089,* </pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1090,"* Note that for this simple example, you should use"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1091,"* {@link #appendWithSeparators(Collection, String)}."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1093,"* @param separator  the separator to use, null means no separator"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1094,* @param loopIndex  the loop index
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1095,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1097,"public StrBuilder appendSeparator(String separator, int loopIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1098,if (separator != null && loopIndex > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1099,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1101,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1105,* Appends a separator to the builder if the loop index is greater than zero.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1106,* The separator is appended using {@link #append(char)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1107,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1108,* This method is useful for adding a separator each time around the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1109,* loop except the first.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1110,* <pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1111,* for (int i = 0; i < list.size(); i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1112,"*   appendSeparator("","", i);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1113,*   append(list.get(i));
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1115,* </pre>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1116,"* Note that for this simple example, you should use"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1117,"* {@link #appendWithSeparators(Collection, String)}."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1119,* @param separator  the separator to use
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1120,* @param loopIndex  the loop index
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1121,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1123,"public StrBuilder appendSeparator(char separator, int loopIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1124,if (loopIndex > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1125,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1127,return this;
False,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,25,mport org.apache.commons.lang.SystemUtils;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,30,import org.apache.commons.lang.SystemUtils;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,39,/** The system line separator. */
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,40,private static final String SEP = SystemUtils.LINE_SEPARATOR;
False,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,79,"ssertEquals(""---"" + SystemUtils.LINE_SEPARATOR + ""+++"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,82,"assertEquals(""---"" + SEP + ""+++"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,83,"ssertEquals(""---#"" + SystemUtils.LINE_SEPARATOR, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,86,"assertEquals(""---#"" + SEP, sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,441,ublic void testAppend_Primitive() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,444,public void testAppend_Boolean() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,473,public void testAppendln_Object() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,474,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,475,sb.appendln((Object) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,476,"assertEquals("""" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,478,sb.appendln((Object) FOO);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,479,"assertEquals(SEP + ""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,481,sb.appendln(new Integer(6));
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,482,"assertEquals(SEP + ""foo"" + SEP + ""6"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,486,public void testAppendln_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,487,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,488,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,489,public StrBuilder append(String str) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,490,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,491,return super.append(str);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,493,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,494,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,495,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,498,"sb.appendln(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,499,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,500,"assertEquals(2, count[0]);  // appendNewLine() calls append(String)"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,501,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,505,public void testAppendln_String_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,506,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,507,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,508,"public StrBuilder append(String str, int startIndex, int length) {"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,509,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,510,"return super.append(str, startIndex, length);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,512,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,513,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,514,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,517,"sb.appendln(""foo"", 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,518,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,519,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,520,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,524,public void testAppendln_StringBuffer() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,525,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,526,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,527,public StrBuilder append(StringBuffer str) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,528,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,529,return super.append(str);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,531,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,532,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,533,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,536,"sb.appendln(new StringBuffer(""foo""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,537,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,538,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,539,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,543,public void testAppendln_StringBuffer_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,544,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,545,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,546,"public StrBuilder append(StringBuffer str, int startIndex, int length) {"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,547,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,548,"return super.append(str, startIndex, length);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,550,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,551,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,552,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,555,"sb.appendln(new StringBuffer(""foo""), 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,556,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,557,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,558,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,562,public void testAppendln_StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,563,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,564,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,565,public StrBuilder append(StrBuilder str) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,566,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,567,return super.append(str);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,569,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,570,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,571,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,574,"sb.appendln(new StrBuilder(""foo""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,575,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,576,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,577,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,581,public void testAppendln_StrBuilder_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,582,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,583,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,584,"public StrBuilder append(StrBuilder str, int startIndex, int length) {"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,585,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,586,"return super.append(str, startIndex, length);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,588,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,589,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,590,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,593,"sb.appendln(new StrBuilder(""foo""), 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,594,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,595,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,596,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,600,public void testAppendln_CharArray() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,601,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,602,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,603,public StrBuilder append(char[] str) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,604,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,605,return super.append(str);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,607,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,608,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,609,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,612,"sb.appendln(""foo"".toCharArray());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,613,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,614,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,615,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,619,public void testAppendln_CharArray_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,620,final int[] count = new int[2];
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,621,StrBuilder sb = new StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,622,"public StrBuilder append(char[] str, int startIndex, int length) {"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,623,count[0]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,624,"return super.append(str, startIndex, length);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,626,public StrBuilder appendNewLine() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,627,count[1]++;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,628,return super.appendNewLine();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,631,"sb.appendln(""foo"".toCharArray(), 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,632,"assertEquals(""foo"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,633,"assertEquals(1, count[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,634,"assertEquals(1, count[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,638,public void testAppendln_Boolean() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,639,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,640,sb.appendln(true);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,641,"assertEquals(""true"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,643,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,644,sb.appendln(false);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,645,"assertEquals(""false"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,649,public void testAppendln_PrimitiveNumber() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,650,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,651,sb.appendln(0);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,652,"assertEquals(""0"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,654,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,655,sb.appendln(1L);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,656,"assertEquals(""1"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,658,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,659,sb.appendln(2.3f);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,660,"assertEquals(""2.3"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,662,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,663,sb.appendln(4.5d);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,664,"assertEquals(""4.5"" + SEP, sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,838,public void testAppendAll_Array() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,839,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,840,sb.appendAll((Object[]) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,841,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,843,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,844,sb.appendAll(new Object[0]);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,845,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,847,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,848,"sb.appendAll(new Object[]{""foo"", ""bar"", ""baz""});"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,849,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,853,public void testAppendAll_Collection() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,854,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,855,sb.appendAll((Collection) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,856,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,858,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,859,sb.appendAll(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,860,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,862,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,863,"sb.appendAll(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,864,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,868,public void testAppendAll_Iterator() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,869,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,870,sb.appendAll((Iterator) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,871,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,873,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,874,sb.appendAll(Collections.EMPTY_LIST.iterator());
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,875,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,877,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,878,"sb.appendAll(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,879,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,964,public void testAppendSeparator_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,965,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,966,"sb.appendSeparator("","");  // no effect"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,967,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,968,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,969,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,970,"sb.appendSeparator("","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,971,"assertEquals(""foo,"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,975,public void testAppendSeparator_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,976,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,977,"sb.appendSeparator(',');  // no effect"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,978,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,979,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,980,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,981,"sb.appendSeparator(',');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,982,"assertEquals(""foo,"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,986,public void testAppendSeparator_String_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,987,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,988,"sb.appendSeparator("","", 0);  // no effect"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,989,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,990,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,991,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,992,"sb.appendSeparator("","", 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,993,"assertEquals(""foo,"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,995,"sb.appendSeparator("","", -1);  // no effect"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,996,"assertEquals(""foo,"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1000,public void testAppendSeparator_char_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1001,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1002,"sb.appendSeparator(',', 0);  // no effect"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1003,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1004,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1005,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1006,"sb.appendSeparator(',', 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1007,"assertEquals(""foo,"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1009,"sb.appendSeparator(',', -1);  // no effect"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1010,"assertEquals(""foo,"", sb.toString());"
