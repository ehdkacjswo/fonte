is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34," @version $Id: DateUtils.java,v 1.21 2004/07/05 18:07:44 stevencaswell Exp $"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34,"* @version $Id: DateUtils.java,v 1.22 2004/07/11 18:40:04 stevencaswell Exp $"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,397,/ TODO: Decide whether this code is removed or goes into 2.1
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,400, <p>Parses a date string formatted in CVS format.</p>
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,402, @param dateStr  the date to parse
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,403, @return the parsed date
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,404, @throws IllegalArgumentException if the date cannot be parsed
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,405,ublic static Calendar parseCVS(String dateStr) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,406,f (dateStr == null) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,407,"hrow new IllegalArgumentException(""The date must not be null"");"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,409,/Get the symbol names
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,410,ateFormatSymbols symbols = new DateFormatSymbols(Locale.ENGLISH);
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,412,/Prep the string to parse
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,413,tring value = dateStr.toLowerCase().trim();
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,415,/Get the current date/time
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,416,alendar now = Calendar.getInstance();
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,417,"f (value.endsWith("" ago"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,418,"/If this was a date that was ""ago"" the current time..."
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,419,/Strip out the ' ago' part
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,420,"alue = value.substring(0, value.length() - 4);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,422,/Split the value and unit
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,423,"nt start = value.indexOf("" "");"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,424,f (start < 0) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,425,"hrow new IllegalArgumentException(""Could not find space in between value and unit"");"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,427,tring unit = value.substring(start + 1);
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,428,"alue = value.substring(0, start);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,429,"/We support ""a week"", so we need to parse the value as ""a"""
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,430,nt val = 0;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,431,"f (value.equals(""a"") || value.equals(""an"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,432,al = 1;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,433, else {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,434,al = Integer.parseInt(value);
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,437,/Determine the unit
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,438,"f (unit.equals(""milliseconds"") || unit.equals(""millisecond"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,439,"ow.add(Calendar.MILLISECOND, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,440," else if (unit.equals(""seconds"") || unit.equals(""second"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,441,"ow.add(Calendar.SECOND, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,442," else if (unit.equals(""minutes"") || unit.equals(""minute"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,443,"ow.add(Calendar.MINUTE, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,444," else if (unit.equals(""hours"") || unit.equals(""hour"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,445,"ow.add(Calendar.HOUR, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,446," else if (unit.equals(""days"") || unit.equals(""day"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,447,"ow.add(Calendar.DATE, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,448," else if (unit.equals(""weeks"") || unit.equals(""week"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,449,"ow.add(Calendar.DATE, -val * 7);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,450," else if (unit.equals(""fortnights"") || unit.equals(""fortnight"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,451,"ow.add(Calendar.DATE, -val * 14);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,452," else if (unit.equals(""months"") || unit.equals(""month"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,453,"ow.add(Calendar.MONTH, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,454," else if (unit.equals(""years"") || unit.equals(""year"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,455,"ow.add(Calendar.YEAR, -val);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,456, else {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,457,"hrow new IllegalArgumentException(""We do not understand that many units ago"");"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,459,eturn now;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,460," else if (value.startsWith(""last "")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,461,/If this was the last time a certain field was met
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,462,/Strip out the 'last ' part
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,463,alue = value.substring(5);
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,464,/Get the current date/time
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,465,tring[] strings = symbols.getWeekdays();
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,466,or (int i = 0; i < strings.length; i++) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,467,f (value.equalsIgnoreCase(strings[i])) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,468,/How many days after Sunday
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,469,nt daysAgo = now.get(Calendar.DAY_OF_WEEK) - i;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,470,f (daysAgo <= 0) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,471,aysAgo += 7;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,473,"ow.add(Calendar.DATE, -daysAgo);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,474,eturn now;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,477,trings = symbols.getMonths();
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,478,or (int i = 0; i < strings.length; i++) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,479,f (value.equalsIgnoreCase(strings[i])) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,480,/How many days after January
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,481,nt monthsAgo = now.get(Calendar.MONTH) - i;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,482,f (monthsAgo <= 0) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,483,onthsAgo += 12;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,485,"ow.add(Calendar.MONTH, -monthsAgo);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,486,eturn now;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,489,"f (value.equals(""week"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,490,"ow.add(Calendar.DATE, -7);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,491,eturn now;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,493,"hrow new IllegalArgumentException(""We do not understand that last units"");"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,494," else if (value.equals(""yesterday"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,495,"ow.add(Calendar.DATE, -1);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,496,eturn now;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,497," else if (value.equals(""tomorrow"")) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,498,"ow.add(Calendar.DATE, 1);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,499,eturn now;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,501,/Try to parse the date a number of different ways
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,502,or (int i = 0; i < dateFormats.length; i++) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,503,ry {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,504,ate datetime = dateFormats[i].parse(dateStr);
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,505,alendar cal = Calendar.getInstance();
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,506,al.setTime(datetime);
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,507,eturn cal;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,508, catch (ParseException pe) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,509,/we ignore this and just keep trying
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,513,"hrow new IllegalArgumentException(""Unable to parse '"" + dateStr + ""'."");"
