is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,293,"* <p>Convert a <code>String</code> to a <code>byte</code>, returning"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,294,* <code>zero</code> if the conversion fails.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,296,"* <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,298,* <pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,299,*   NumberUtils.toByte(null) = 0
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,300,"*   NumberUtils.toByte("""")   = 0"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,301,"*   NumberUtils.toByte(""1"")  = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,302,* </pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,304,"* @param str  the string to convert, may be null"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,305,"* @return the byte represented by the string, or <code>zero</code> if"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,306,*  conversion fails
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,308,public static byte toByte(String str) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,309,"return toByte(str, (byte) 0);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,313,"* <p>Convert a <code>String</code> to a <code>byte</code>, returning a"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,314,* default value if the conversion fails.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,316,"* <p>If the string is <code>null</code>, the default value is returned.</p>"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,318,* <pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,319,"*   NumberUtils.toByte(null, 1) = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,320,"*   NumberUtils.toByte("""", 1)   = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,321,"*   NumberUtils.toByte(""1"", 0)  = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,322,* </pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,324,"* @param str  the string to convert, may be null"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,325,* @param defaultValue  the default value
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,326,"* @return the byte represented by the string, or the default if conversion fails"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,328,"public static byte toByte(String str, byte defaultValue) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,329,if(str == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,330,return defaultValue;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,332,try {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,333,return Byte.parseByte(str);
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,334,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,335,return defaultValue;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,340,"* <p>Convert a <code>String</code> to a <code>short</code>, returning"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,341,* <code>zero</code> if the conversion fails.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,343,"* <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,345,* <pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,346,*   NumberUtils.toShort(null) = 0
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,347,"*   NumberUtils.toShort("""")   = 0"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,348,"*   NumberUtils.toShort(""1"")  = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,349,* </pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,351,"* @param str  the string to convert, may be null"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,352,"* @return the short represented by the string, or <code>zero</code> if"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,353,*  conversion fails
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,355,public static short toShort(String str) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,356,"return toShort(str, (short) 0);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,360,"* <p>Convert a <code>String</code> to an <code>short</code>, returning a"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,361,* default value if the conversion fails.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,363,"* <p>If the string is <code>null</code>, the default value is returned.</p>"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,365,* <pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,366,"*   NumberUtils.toShort(null, 1) = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,367,"*   NumberUtils.toShort("""", 1)   = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,368,"*   NumberUtils.toShort(""1"", 0)  = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,369,* </pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,371,"* @param str  the string to convert, may be null"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,372,* @param defaultValue  the default value
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,373,"* @return the short represented by the string, or the default if conversion fails"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,375,"public static short toShort(String str, short defaultValue) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,376,if(str == null) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,377,return defaultValue;
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,379,try {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,380,return Short.parseShort(str);
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,381,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,382,return defaultValue;
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,154,* Test for {@link NumberUtils#toByte(String)}.
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,156,public void testToByteString() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,157,"assertTrue(""toByte(String) 1 failed"", NumberUtils.toByte(""123"") == 123);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,158,"assertTrue(""toByte(String) 2 failed"", NumberUtils.toByte(""abc"") == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,159,"assertTrue(""toByte(empty) failed"", NumberUtils.toByte("""") == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,160,"assertTrue(""toByte(null) failed"", NumberUtils.toByte(null) == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,164,"* Test for {@link NumberUtils#toByte(String, byte)}."
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,166,public void testToByteStringI() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,167,"assertTrue(""toByte(String,byte) 1 failed"", NumberUtils.toByte(""123"", (byte) 5) == 123);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,168,"assertTrue(""toByte(String,byte) 2 failed"", NumberUtils.toByte(""12.3"", (byte) 5) == 5);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,172,* Test for {@link NumberUtils#toShort(String)}.
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,174,public void testToShortString() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,175,"assertTrue(""toShort(String) 1 failed"", NumberUtils.toShort(""12345"") == 12345);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,176,"assertTrue(""toShort(String) 2 failed"", NumberUtils.toShort(""abc"") == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,177,"assertTrue(""toShort(empty) failed"", NumberUtils.toShort("""") == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,178,"assertTrue(""toShort(null) failed"", NumberUtils.toShort(null) == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,182,"* Test for {@link NumberUtils#toShort(String, short)}."
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,184,public void testToShortStringI() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,185,"assertTrue(""toShort(String,short) 1 failed"", NumberUtils.toShort(""12345"", (short) 5) == 12345);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,186,"assertTrue(""toShort(String,short) 2 failed"", NumberUtils.toShort(""1234.5"", (short) 5) == 5);"
