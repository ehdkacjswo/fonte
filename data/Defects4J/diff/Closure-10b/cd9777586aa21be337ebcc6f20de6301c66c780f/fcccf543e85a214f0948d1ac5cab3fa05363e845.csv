is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,935,ecl.copyInformationFromForTree(getSourceInfoNode());
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,935,setSourceInfo(decl);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,956,ode sourceInfoNode = getSourceInfoNode();
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,961,"ourceInfoNode, namespace),"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,960,"firstNode /* real source info will be filled in below */,"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,961,"namespace),"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,965,ecl.copyInformationFromForTree(sourceInfoNode);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,965,setSourceInfo(decl);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,970, Get the node to pull source info from.
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,971," On incremental compiles, this may not be the original goog.provde node."
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,972, It may be a node that's in the process of being modified.
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,970,* Copy source info to the new node.
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,974,rivate Node getSourceInfoNode() {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,972,private void setSourceInfo(Node newNode) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,973,Node provideStringNode = getProvideStringNode();
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,974,int offset = getSourceInfoOffset(provideStringNode);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,975,Node sourceInfoNode = provideStringNode == null
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,976,? firstNode : provideStringNode;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,977,newNode.copyInformationFromForTree(sourceInfoNode);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,978,if (offset != 0) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,979,newNode.setSourcePositionForTree(
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,980,newNode.getSourcePosition() + offset);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,985,* Get the offset into the provide node where the symbol appears.
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,987,private int getSourceInfoOffset(Node provideStringNode) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,988,if (provideStringNode == null) {
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,989,return 0;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,992,int indexOfLastDot = namespace.lastIndexOf('.');
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,994,// +1 for the opening quote
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,995,// +1 for the dot
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,996,"// if there's no dot, then the -1 index cancels it out"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,997,// so elegant!
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,998,return 2 + indexOfLastDot;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1001,private Node getProvideStringNode() {
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,978,irstNode;
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1005,null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,865,public int getSourcePosition() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,866,return sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1145,public void setSourcePositionForTree(int sourcePosition) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1146,this.sourcePosition = sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1148,for (Node child = getFirstChild();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1149,child != null; child = child.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1150,child.setSourcePositionForTree(sourcePosition);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1905,ourcePosition = other.sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1918,sourcePosition = other.sourcePosition;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,21,import com.google.common.base.Predicates;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1018,/** Finds the first matching qualified name node in post-traversal order. */
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1019,"protected final Node findQualifiedNameNode(final String name, Node root) {"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1020,final List<Node> matches = Lists.newArrayList();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1021,"NodeUtil.visitPostOrder(root,"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1022,new NodeUtil.Visitor() {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1023,@Override public void visit(Node n) {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1024,if (name.equals(n.getQualifiedName())) {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1025,matches.add(n);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1029,Predicates.<Node>alwaysTrue());
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1030,return matches.get(0);
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,827,public void testSourcePositionPreservation() {
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,828,"test(""goog.provide('foo.bar.baz');"","
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,829,"""var foo = {};"" +"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,830,"""foo.bar = {};"" +"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,831,"""foo.bar.baz = {};"");"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,833,Node root = getLastCompiler().getRoot();
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,835,"Node fooDecl = findQualifiedNameNode(""foo"", root);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,836,"Node fooBarDecl = findQualifiedNameNode(""foo.bar"", root);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,837,"Node fooBarBazDecl = findQualifiedNameNode(""foo.bar.baz"", root);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,839,"assertEquals(1, fooDecl.getLineno());"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,840,"assertEquals(14, fooDecl.getCharno());"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,842,"assertEquals(1, fooBarDecl.getLineno());"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,843,"assertEquals(18, fooBarDecl.getCharno());"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,845,"assertEquals(1, fooBarBazDecl.getLineno());"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,846,"assertEquals(22, fooBarBazDecl.getCharno());"
