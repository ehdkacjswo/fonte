is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,239,eturn (NodeUtil.isNullOrUndefined(n) || n.getType() == Token.EMPTY)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,239,return (NodeUtil.isNullOrUndefined(n) || n.isEmpty())
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,302,f (n.getChildCount() == 1 && n.getFirstChild().getType() == Token.NAME
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,302,if (n.getChildCount() == 1 && n.getFirstChild().isName()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,586,f (child.getType() != Token.EMPTY
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,587,"& !isLiteralValue(child, includeFunctions)) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,586,"if ((!child.isEmpty()) && !isLiteralValue(child, includeFunctions)) {"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,681,f (block.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,680,if (!block.isBlock()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,686,f (n.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,685,if (!n.isEmpty()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,939,f (callNode.getType() != Token.NEW) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,938,if (!callNode.isNew()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,949,f (nameNode.getType() == Token.NAME &&
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,948,if (nameNode.isName() &&
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,988,f (callNode.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,987,if (!callNode.isCall()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1000,f (nameNode.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,999,if (nameNode.isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1005, else if (nameNode.getType() == Token.GETPROP) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1004,} else if (nameNode.isGetProp()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1020,f (nameNode.getFirstChild().getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1019,if (nameNode.getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1027,f (nameNode.getFirstChild().getType() == Token.REGEXP
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1026,if (nameNode.getFirstChild().isRegExp()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1030, else if (nameNode.getFirstChild().getType() == Token.STRING
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1029,} else if (nameNode.getFirstChild().isString()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1035,param.getType() == Token.STRING
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1036,| param.getType() == Token.REGEXP))
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1034,(param.isString() || param.isRegExp()))
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1049,reconditions.checkState(n.getType() == Token.CALL);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1047,Preconditions.checkState(n.isCall());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1057,reconditions.checkState(n.getType() == Token.NEW);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1055,Preconditions.checkState(n.isNew());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1364,eturn n.getType() == Token.NULL;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1362,return n.isNull();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1488,eturn n.getType() == Token.EXPR_RESULT;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1486,return n.isExprResult();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1511,eturn n.getType() == Token.GETPROP
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1512,| n.getType() == Token.GETELEM;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1509,return n.isGetProp() || n.isGetElem();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1519,eturn n.getType() == Token.GETPROP;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1516,return n.isGetProp();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1526,eturn n.getType() == Token.NAME;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1523,return n.isName();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1533,eturn n.getType() == Token.NEW;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1530,return n.isNew();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1540,eturn n.getType() == Token.VAR;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1537,return n.isVar();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1552,eturn n.getType() == Token.NAME && n.getParent().getType() == Token.VAR;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1549,return n.isName() && n.getParent().isVar();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1575,eturn n.getType() == Token.STRING;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1572,return n.isString();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1586,eturn n.getType() == Token.EXPR_RESULT
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1587,& n.getFirstChild().getType() == Token.ASSIGN;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1583,return n.isExprResult()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1584,&& n.getFirstChild().isAssign();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1594,eturn n.getType() == Token.ASSIGN;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1591,return n.isAssign();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1605,eturn n.getType() == Token.EXPR_RESULT
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1606,& n.getFirstChild().getType() == Token.CALL;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1602,return n.isExprResult()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1603,&& n.getFirstChild().isCall();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1613,eturn n.getType() == Token.FOR
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1610,return n.isFor()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1747,eturn n.getType() == Token.SCRIPT || n.getType() == Token.BLOCK;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1744,return n.isScript() || n.isBlock();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1774,eturn n.getType() == Token.CASE || n.getType() == Token.DEFAULT;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1771,return n.isCase() || n.isDefault();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1787,eturn (n != null && n.getType() == Token.LABEL_NAME);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1784,return (n != null && n.isLabelName());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1792,eturn parent.getType() == Token.TRY && parent.getChildCount() == 3
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1789,return parent.isTry() && parent.getChildCount() == 3
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1799,eturn parent.getType() == Token.TRY
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1796,return parent.isTry()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1813, else if (node.getType() == Token.CATCH) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1810,} else if (node.isCatch()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1824, else if (node.getType() == Token.BLOCK) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1821,} else if (node.isBlock()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1832, else if (parent.getType() == Token.VAR) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1829,} else if (parent.isVar()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1841, else if (parent.getType() == Token.LABEL
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1838,} else if (parent.isLabel()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1847, else if (parent.getType() == Token.FOR
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1844,} else if (parent.isFor()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1863,reconditions.checkState(tryNode.getType() == Token.TRY);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1860,Preconditions.checkState(tryNode.isTry());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1875,reconditions.checkState(block.getType() == Token.BLOCK);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1872,Preconditions.checkState(block.isBlock());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1897,eturn n.getType() == Token.CALL;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1894,return n.isCall();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1912,eturn n.getType() == Token.FUNCTION;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1909,return n.isFunction();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1927,eturn node.getType() == Token.THIS;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1924,return node.isThis();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1935,eturn node.getType() == Token.ARRAYLIT;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1932,return node.isArrayLit();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1951,eturn n.getType() == Token.FUNCTION && isStatement(n);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1948,return n.isFunction() && isStatement(n);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1961,& (n.getParent().getType() == Token.SCRIPT
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1962,| n.getParent().getParent().getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1958,&& (n.getParent().isScript()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1959,|| n.getParent().getParent().isFunction());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1989,eturn n.getType() == Token.FUNCTION && !isStatement(n);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1986,return n.isFunction() && !isStatement(n);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2020,f (callNode.getType() == Token.CALL) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2017,if (callNode.isCall()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2024,f (last != null && last.getType() == Token.STRING) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2021,if (last != null && last.isString()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2072,f (callNode.getFirstChild().getFirstChild().getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2069,if (callNode.getFirstChild().getFirstChild().isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2090,eturn (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n) ||
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2091,arent.getType() == Token.VAR;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2087,return (parent.isAssign() && parent.getFirstChild() == n) ||
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2088,parent.isVar();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2104, @param node The node
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2101,* @param n The node
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2107,tatic boolean isLValue(Node node) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2108,nt nType = node.getType();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2109,reconditions.checkArgument(nType == Token.NAME || nType == Token.GETPROP ||
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2110,Type == Token.GETELEM);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2111,ode parent = node.getParent();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2112,eturn (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == node)
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2113,| (NodeUtil.isForIn(parent) && parent.getFirstChild() == node)
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2114,| NodeUtil.isVar(parent)
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2115,| (parent.getType() == Token.FUNCTION &&
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2116,arent.getFirstChild() == node)
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2117,| parent.getType() == Token.DEC
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2118,| parent.getType() == Token.INC
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2119,| parent.getType() == Token.LP
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2120,| parent.getType() == Token.CATCH;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2104,static boolean isLValue(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2105,Preconditions.checkArgument(n.isName() || n.isGetProp() ||
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2106,n.isGetElem());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2107,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2108,return (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2109,|| (NodeUtil.isForIn(parent) && parent.getFirstChild() == n)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2110,|| parent.isVar()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2111,|| (parent.isFunction() && parent.getFirstChild() == n)
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2112,|| parent.isDec()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2113,|| parent.isInc()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2114,|| parent.isLP()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2115,|| parent.isCatch();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2133,eturn parent.getType() == Token.OBJECTLIT;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2128,return parent.isObjectLit();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2345,reconditions.checkState(addingRoot.getType() == Token.BLOCK ||
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2346,ddingRoot.getType() == Token.SCRIPT);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2340,Preconditions.checkState(addingRoot.isBlock() ||
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2341,addingRoot.isScript());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2348,ddingRoot.getFirstChild().getType() != Token.SCRIPT);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2343,!addingRoot.getFirstChild().isScript());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2427,nt type = current.getType();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2428,f (type == Token.NAME || type == Token.THIS) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2422,if (current.isName() || current.isThis()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2431,reconditions.checkState(type == Token.GETPROP);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2425,Preconditions.checkState(current.isGetProp());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2571,f (n.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2565,if (n.isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2573,f (parent != null && parent.getType() == Token.VAR) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2567,if (parent != null && parent.isVar()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2680,eturn n.getType() == Token.NAME
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2681,& n.getString().equals(name);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2674,return n.isName() && n.getString().equals(name);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2708,eturn isFunctionDeclaration(n) || n.getType() == Token.VAR;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2701,return isFunctionDeclaration(n) || n.isVar();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2731,eturn n.getType() == Token.BLOCK
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2724,return n.isBlock()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2858,reconditions.checkArgument(n.getType() == Token.TRY);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2851,Preconditions.checkArgument(n.isTry());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2867,reconditions.checkArgument(n.getType() == Token.TRY);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2860,Preconditions.checkArgument(n.isTry());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2876,reconditions.checkArgument(n.getType() == Token.BLOCK);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2877,eturn n.hasChildren() && n.getFirstChild().getType() == Token.CATCH;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2869,Preconditions.checkArgument(n.isBlock());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2870,return n.hasChildren() && n.getFirstChild().isCatch();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2886,reconditions.checkArgument(fnNode.getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2879,Preconditions.checkArgument(fnNode.isFunction());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2915,f (parent.getType() == Token.GETPROP &&
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2908,if (parent.isGetProp() &&
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2929,reconditions.checkState(n.getType() == Token.FUNCTION);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2922,Preconditions.checkState(n.isFunction());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2934,f (parent.getType() == Token.ASSIGN) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2927,if (parent.isAssign()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2937, else if (parent.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2930,} else if (parent.isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2976,hile (n != null && n.getType() != Token.SCRIPT) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2969,while (n != null && !n.isScript()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2980,eturn (n != null && n.getType() == Token.SCRIPT) ? n.getInputId() : null;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2973,return (n != null && n.isScript()) ? n.getInputId() : null;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3127,nt parentType = parent.getType();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3128,f (parentType == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3120,if (parent.isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3130, else if (parentType == Token.ASSIGN) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3122,} else if (parent.isAssign()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3134, else if (parentType == Token.FUNCTION) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3126,} else if (parent.isFunction()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3136, else if (parentType == Token.VAR && parent.hasOneChild()) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3128,} else if (parent.isVar() && parent.hasOneChild()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3146,nt parentType = parent.getType();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3150, else if (parentType == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3141,} else if (parent.isName()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3152, else if (parentType == Token.ASSIGN) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3143,} else if (parent.isAssign()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2216,/*** AST type check methods ***/
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2218,public boolean isArrayLit() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2219,return this.getType() == Token.ARRAYLIT;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2222,public boolean isAssign() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2223,return this.getType() == Token.ASSIGN;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2226,public boolean isBlock() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2227,return this.getType() == Token.BLOCK;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2230,public boolean isCall() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2231,return this.getType() == Token.CALL;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2234,public boolean isCase() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2235,return this.getType() == Token.CASE;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2238,public boolean isCatch() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2239,return this.getType() == Token.CATCH;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2242,public boolean isDec() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2243,return this.getType() == Token.DEC;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2246,public boolean isDefault() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2247,return this.getType() == Token.DEFAULT;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2250,public boolean isDo() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2251,return this.getType() == Token.DO;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2254,public boolean isEmpty() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2255,return this.getType() == Token.EMPTY;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2258,public boolean isExprResult() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2259,return this.getType() == Token.EXPR_RESULT;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2262,public boolean isFor() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2263,return this.getType() == Token.FOR;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2266,public boolean isFunction() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2267,return this.getType() == Token.FUNCTION;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2270,public boolean isGet() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2271,return this.getType() == Token.GET;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2274,public boolean isGetElem() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2275,return this.getType() == Token.GETELEM;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2278,public boolean isGetProp() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2279,return this.getType() == Token.GETPROP;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2282,public boolean isIf() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2283,return this.getType() == Token.IF;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2286,public boolean isInc() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2287,return this.getType() == Token.INC;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2290,public boolean isLabel() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2291,return this.getType() == Token.LABEL;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2294,public boolean isLabelName() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2295,return this.getType() == Token.LABEL_NAME;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2298,public boolean isLP() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2299,return this.getType() == Token.LP;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2302,public boolean isName() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2303,return this.getType() == Token.NAME;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2306,public boolean isNew() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2307,return this.getType() == Token.NEW;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2310,public boolean isNull() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2311,return this.getType() == Token.NULL;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2314,public boolean isObjectLit() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2315,return this.getType() == Token.OBJECTLIT;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2318,public boolean isRegExp() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2319,return this.getType() == Token.REGEXP;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2322,public boolean isScript() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2323,return this.getType() == Token.SCRIPT;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2326,public boolean isSet() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2327,return this.getType() == Token.SET;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2330,public boolean isString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2331,return this.getType() == Token.STRING;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2334,public boolean isThis() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2335,return this.getType() == Token.THIS;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2338,public boolean isTry() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2339,return this.getType() == Token.TRY;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2342,public boolean isVar() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2343,return this.getType() == Token.VAR;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2346,public boolean isVoid() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2347,return this.getType() == Token.VOID;
