is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,305,oolean stripBlock = n.isSyntheticBlock() ||
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,306,.getType() == Token.SCRIPT ||
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,307,(context != Context.PRESERVE_BLOCK) && (n.getChildCount() < 2));
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,308,f (!stripBlock) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,305,boolean preserveBlock = context == Context.PRESERVE_BLOCK;
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,306,if (preserveBlock) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,329,f (!stripBlock) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,327,if (preserveBlock) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,348,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,346,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,357,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,355,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,365,"ddNonEmptyExpression(first, Context.OTHER, false);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,363,"addNonEmptyStatement(first, Context.OTHER, false);"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,377,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,375,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,420,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,418,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,477,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,475,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,480,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,478,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,483,"ddNonEmptyExpression(first.getNext(), Context.OTHER, false);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,481,"addNonEmptyStatement(first.getNext(), Context.OTHER, false);"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,636,ddNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,634,addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,667,rivate void addNonEmptyExpression(
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,665,private void addNonEmptyStatement(
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,677,f (n.getType() == Token.BLOCK ) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,675,if (n.getType() == Token.BLOCK) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,705,if (count > 1) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,706,context = Context.PRESERVE_BLOCK;
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,983,f (c.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,985,if (c.getType() == Token.BLOCK) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,986,"i += getNonEmptyChildCount(c, maxCount-i);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,987,} else if (c.getType() != Token.EMPTY) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,993,f (c.getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,997,if (c.getType() == Token.BLOCK) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,998,Node result = getFirstNonEmptyChild(c);
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,999,if (result != null) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,1000,return result;
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,1002,} else if (c.getType() != Token.EMPTY) {
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,840," ""this.local = function(){alert(this.name)};}"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,840,"+ ""this.local = function(){alert(this.name)};}"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,927,"estReparse(""switch(a) { case 2: case 3: { stuff(); break; }"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,927,"testReparse(""switch(a) { case 2: case 3: stuff(); break;"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,937,Compiler compiler = new Compiler();
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,939,"ssertTrue(code, parse1.checkTreeEqualsSilent(parse2));"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,940,String explanation = parse1.checkTreeEquals(parse2);
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,941,"assertNull(""\nExpected: "" + compiler.toSource(parse1) +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,942,"""\nResult: "" + compiler.toSource(parse2) +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,943,"""\n"" + explanation, explanation);"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1056,"ode ast = new Node(Token.SCRIPT,"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1057,"ew Node(Token.EXPR_RESULT, Node.newString(""f"")),"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1058,"ew Node(Token.EXPR_RESULT, Node.newString(""g"")));"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1059,tring result = new CodePrinter.Builder(ast).setPrettyPrint(true).build();
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1060,"Node ast = new Node(Token.SCRIPT,"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1061,"new Node(Token.EXPR_RESULT, Node.newString(""f"")),"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1062,"new Node(Token.EXPR_RESULT, Node.newString(""g"")));"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,1063,String result = new CodePrinter.Builder(ast).setPrettyPrint(true).build();
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,127,public void testContainingBlockPreservation() {
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,128,"testSame(""if(y){startMarker();x();endMarker()}"");"
False,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,40,"var d;var c;{var a=1;var b=2}"");"
True,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,40,"""var d;var c;var a=1;var b=2"");"
False,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,42,"{var a=1;var b=2}"");"
True,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,42,"""var a=1;var b=2"");"
False,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,49,"{var a=1;var b=2}{var e=5;var f=6}"");"
True,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,49,"""var a=1;var b=2;var e=5;var f=6"");"
False,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,57,"var d;var c;{var a=1;var b=2}{var e=5;var f=6}"");"
True,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,test/com/google/javascript/jscomp/RemoveTryCatchTest.java,57,"""var d;var c;var a=1;var b=2;var e=5;var f=6"");"
