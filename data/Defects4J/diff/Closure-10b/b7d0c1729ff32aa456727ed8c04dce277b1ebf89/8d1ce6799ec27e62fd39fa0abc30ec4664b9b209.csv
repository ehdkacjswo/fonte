is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,104,/ TODO(user): I would like to void exploit assign output this and make
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,105,/ both peephole optimization.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,106,"odeTraversal.traverse(compiler, root, new ExploitAssigns());"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,115,rivate class ExploitAssigns extends AbstractPostOrderCallback {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,117,"ublic void visit(NodeTraversal t, Node expr, Node exprParent) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,118,f (!NodeUtil.isExprAssign(expr)) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,119,eturn;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,122,"ollapseAssign(t, expr.getFirstChild(), expr, exprParent);"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,126, Try to collapse the given assign into subsequent expressions.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,128,"rivate void collapseAssign(NodeTraversal t, Node assign, Node expr,"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,129,ode exprParent) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,130,ode leftValue = assign.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,131,ode rightValue = leftValue.getNext();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,132,"f (isCollapsibleValue(leftValue, true) &&"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,133,"ollapseAssignEqualTo(expr, exprParent, leftValue)) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,134,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,135," else if (isCollapsibleValue(rightValue, false) &&"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,136,"ollapseAssignEqualTo(expr, exprParent, rightValue)) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,137,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,138, else if (rightValue.getType() == Token.ASSIGN) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,139,/ Recursively deal with nested assigns.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,140,"ollapseAssign(t, rightValue, expr, exprParent);"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,145, Determines whether we know enough about the given value to be able
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,146, to collapse it into subsequent expressions.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,148," For example, we can collapse booleans and variable names:"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,149, <code>
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,150, x = 3; y = x; // y = x = 3;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,151, a = true; b = true; // b = a = true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,152, <code>
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,153, But we won't try to collapse complex expressions.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,155, @param value The value node.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,156, @param isLValue Whether it's on the left-hand side of an expr.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,158,"rivate boolean isCollapsibleValue(Node value, boolean isLValue) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,159,witch (value.getType()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,160,ase Token.GETPROP:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,161,"/ Do not collapse GETPROPs on arbitrary objects, because"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,162,"/ they may be implemented  setter functions, and oftentimes"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,163,"/ setter functions fail on native objects. This is ok for ""THIS"""
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,164,"/ objects, because we assume that they are non-native."
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,165,eturn !isLValue || value.getFirstChild().getType() == Token.THIS;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,167,ase Token.NAME:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,168,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,170,efault:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,171,eturn NodeUtil.isImmutableValue(value);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,176, Collapse the given assign expression into the expression directly
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,177," following it, if possible."
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,179, @param expr The expression that may be moved.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,180, @param exprParent The parent of {@code expr}.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,181," @param value The value of this expression, expressed as a node. Each"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,182,"     expression may have multiple values, so this function may be called"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,183,"     multiple times for the same expression. For example,"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,184,     <code>
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,185,     a = true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,186,     </code>
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,187,"     is equal to the name ""a"" and the boolean ""true""."
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,188, @return Whether the expression was collapsed succesfully.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,190,"rivate boolean collapseAssignEqualTo(Node expr, Node exprParent,"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,191,ode value) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,192,ode assign = expr.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,193,ode parent = exprParent;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,194,ode next = expr.getNext();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,195,hile (next != null) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,196,witch (next.getType()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,197,ase Token.AND:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,198,ase Token.OR:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,199,ase Token.HOOK:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,200,ase Token.IF:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,201,ase Token.RETURN:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,202,ase Token.EXPR_RESULT:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,203,/ Dive down the left side
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,204,arent = next;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,205,ext = next.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,206,reak;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,208,ase Token.VAR:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,209,f (next.getFirstChild().hasChildren()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,210,arent = next.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,211,ext = parent.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,212,reak;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,214,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,216,ase Token.GETPROP:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,217,ase Token.NAME:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,218,f (next.isQualifiedName()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,219,tring nextName = next.getQualifiedName();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,220,f (value.isQualifiedName() &&
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,221,extName.equals(value.getQualifiedName())) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,222,/ If the previous expression evaluates to value of a
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,223,"/ qualified name, and that qualified name is used again"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,224,"/ shortly, then we can exploit the assign here."
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,226,/ Verify the assignment doesn't change its own value.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,227,"f (!isSafeReplacement(next, assign)) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,228,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,231,xprParent.removeChild(expr);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,232,xpr.removeChild(assign);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,233,"arent.replaceChild(next, assign);"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,234,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,237,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,239,ase Token.ASSIGN:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,240,"/ Assigns are really tricky. In lots of cases, we want to inline"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,241,/ into the right side of the assign. But the left side of the
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,242,"/ assign is evaluated first, and it may have convoluted logic:"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,243,/   a = null;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,244,/   (a = b).c = null;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,245,/ We don't want to exploit the first assign. Similarly:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,246,/   a.b = null;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,247,/   a.b.c = null;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,248,/ We don't want to exploit the first assign either.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,250,"/ To protect against this, we simply only inline when the left side"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,251,/ is guaranteed to evaluate to the same L-value no matter what.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,252,ode leftSide = next.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,253,f (leftSide.getType() == Token.NAME ||
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,254,eftSide.getType() == Token.GETPROP &&
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,255,eftSide.getFirstChild().getType() == Token.THIS) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,256,/ Dive down the right side of the assign.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,257,arent = next;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,258,ext = leftSide.getNext();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,259,reak;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,260, else {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,261,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,264,efault:
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,265,f (NodeUtil.isImmutableValue(next)
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,266,& next.isEquivalentTo(value)) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,267,"/ If the r-value of the expr assign is an immutable value,"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,268,"/ and the value is used again shortly, then we can exploit"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,269,/ the assign here.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,270,xprParent.removeChild(expr);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,271,xpr.removeChild(assign);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,272,"arent.replaceChild(next, assign);"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,273,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,275,/ Return without inlining a thing
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,276,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,280,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,285, Checks name referenced in node to determine if it might have
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,286, changed.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,287, @return Whether the replacement can be made.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,289,"rivate boolean isSafeReplacement(Node node, Node replacement) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,290,/ No checks are needed for simple names.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,291,f (node.getType() == Token.NAME) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,292,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,294,reconditions.checkArgument(node.getType() == Token.GETPROP);
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,296,ode name = node.getFirstChild();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,297,f (name.getType() == Token.NAME
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,298,"& isNameAssignedTo(name.getString(), replacement)) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,299,eturn false;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,302,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,306, @return Whether name is assigned in the expression rooted at node.
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,308,"rivate boolean isNameAssignedTo(String name, Node node) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,309,or (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,310,"f (isNameAssignedTo(name, c)) {"
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,311,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,315,f (node.getType() == Token.NAME) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,316,ode parent = node.getParent();
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,317,f (parent.getType() == Token.ASSIGN && parent.getFirstChild() == node) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,318,f (name.equals(node.getString())) {
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,319,eturn true;
False,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,src/com/google/javascript/jscomp/CollapseVariableDeclarations.java,324,eturn false;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,584,passes.add(exploitAssign);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1610,"* Some simple, local collapses (e.g., {@code var x; var y;} becomes"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1611,"* {@code var x,y;}."
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1613,private final PassFactory exploitAssign =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1614,"new PassFactory(""expointAssign"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1615,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1616,protected CompilerPass createInternal(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1617,"return new PeepholeOptimizationsPass(compiler,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1618,new ExploitAssigns());
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,2,* Copyright 2006 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,16,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,18,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,19,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,20,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,23,* Tries to chain assignments together.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,25,* @author nicksantos@google.com (Nick Santos)
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,26,* @author acleung@google.com (Alan Leung)
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,29,class ExploitAssigns extends AbstractPeepholeOptimization {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,31,@Override
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,32,Node optimizeSubtree(Node subtree) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,33,for (Node child = subtree.getFirstChild(); child != null;) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,34,Node next = child.getNext();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,35,if (NodeUtil.isExprAssign(child)) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,36,"collapseAssign(child.getFirstChild(), child, subtree);"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,38,child = next;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,40,return subtree;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,44,* Try to collapse the given assign into subsequent expressions.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,46,"private void collapseAssign(Node assign, Node expr,"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,47,Node exprParent) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,48,Node leftValue = assign.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,49,Node rightValue = leftValue.getNext();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,50,"if (isCollapsibleValue(leftValue, true) &&"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,51,"collapseAssignEqualTo(expr, exprParent, leftValue)) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,52,reportCodeChange();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,53,"} else if (isCollapsibleValue(rightValue, false) &&"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,54,"collapseAssignEqualTo(expr, exprParent, rightValue)) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,55,reportCodeChange();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,56,} else if (rightValue.getType() == Token.ASSIGN) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,57,// Recursively deal with nested assigns.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,58,"collapseAssign(rightValue, expr, exprParent);"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,63,* Determines whether we know enough about the given value to be able
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,64,* to collapse it into subsequent expressions.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,66,"* For example, we can collapse booleans and variable names:"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,67,* <code>
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,68,* x = 3; y = x; // y = x = 3;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,69,* a = true; b = true; // b = a = true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,70,* <code>
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,71,* But we won't try to collapse complex expressions.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,73,* @param value The value node.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,74,* @param isLValue Whether it's on the left-hand side of an expr.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,76,"private boolean isCollapsibleValue(Node value, boolean isLValue) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,77,switch (value.getType()) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,78,case Token.GETPROP:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,79,"// Do not collapse GETPROPs on arbitrary objects, because"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,80,"// they may be implemented  setter functions, and oftentimes"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,81,"// setter functions fail on native objects. This is ok for ""THIS"""
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,82,"// objects, because we assume that they are non-native."
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,83,return !isLValue || value.getFirstChild().getType() == Token.THIS;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,85,case Token.NAME:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,86,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,88,default:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,89,return NodeUtil.isImmutableValue(value);
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,94,* Collapse the given assign expression into the expression directly
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,95,"* following it, if possible."
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,97,* @param expr The expression that may be moved.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,98,* @param exprParent The parent of {@code expr}.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,99,"* @param value The value of this expression, expressed as a node. Each"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,100,"*     expression may have multiple values, so this function may be called"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,101,"*     multiple times for the same expression. For example,"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,102,*     <code>
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,103,*     a = true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,104,*     </code>
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,105,"*     is equal to the name ""a"" and the boolean ""true""."
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,106,* @return Whether the expression was collapsed succesfully.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,108,"private boolean collapseAssignEqualTo(Node expr, Node exprParent,"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,109,Node value) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,110,Node assign = expr.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,111,Node parent = exprParent;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,112,Node next = expr.getNext();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,113,while (next != null) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,114,switch (next.getType()) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,115,case Token.AND:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,116,case Token.OR:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,117,case Token.HOOK:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,118,case Token.IF:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,119,case Token.RETURN:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,120,case Token.EXPR_RESULT:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,121,// Dive down the left side
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,122,parent = next;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,123,next = next.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,124,break;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,126,case Token.VAR:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,127,if (next.getFirstChild().hasChildren()) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,128,parent = next.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,129,next = parent.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,130,break;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,132,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,134,case Token.GETPROP:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,135,case Token.NAME:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,136,if (next.isQualifiedName()) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,137,String nextName = next.getQualifiedName();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,138,if (value.isQualifiedName() &&
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,139,nextName.equals(value.getQualifiedName())) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,140,// If the previous expression evaluates to value of a
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,141,"// qualified name, and that qualified name is used again"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,142,"// shortly, then we can exploit the assign here."
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,144,// Verify the assignment doesn't change its own value.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,145,"if (!isSafeReplacement(next, assign)) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,146,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,149,exprParent.removeChild(expr);
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,150,expr.removeChild(assign);
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,151,"parent.replaceChild(next, assign);"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,152,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,155,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,157,case Token.ASSIGN:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,158,"// Assigns are really tricky. In lots of cases, we want to inline"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,159,// into the right side of the assign. But the left side of the
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,160,"// assign is evaluated first, and it may have convoluted logic:"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,161,//   a = null;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,162,//   (a = b).c = null;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,163,// We don't want to exploit the first assign. Similarly:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,164,//   a.b = null;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,165,//   a.b.c = null;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,166,// We don't want to exploit the first assign either.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,168,"// To protect against this, we simply only inline when the left side"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,169,// is guaranteed to evaluate to the same L-value no matter what.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,170,Node leftSide = next.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,171,if (leftSide.getType() == Token.NAME ||
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,172,leftSide.getType() == Token.GETPROP &&
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,173,leftSide.getFirstChild().getType() == Token.THIS) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,174,// Dive down the right side of the assign.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,175,parent = next;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,176,next = leftSide.getNext();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,177,break;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,178,} else {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,179,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,182,default:
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,183,if (NodeUtil.isImmutableValue(next)
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,184,&& next.isEquivalentTo(value)) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,185,"// If the r-value of the expr assign is an immutable value,"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,186,"// and the value is used again shortly, then we can exploit"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,187,// the assign here.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,188,exprParent.removeChild(expr);
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,189,expr.removeChild(assign);
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,190,"parent.replaceChild(next, assign);"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,191,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,193,// Return without inlining a thing
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,194,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,198,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,202,* Checks name referenced in node to determine if it might have
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,203,* changed.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,204,* @return Whether the replacement can be made.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,206,"private boolean isSafeReplacement(Node node, Node replacement) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,207,// No checks are needed for simple names.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,208,if (node.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,209,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,211,Preconditions.checkArgument(node.getType() == Token.GETPROP);
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,213,Node name = node.getFirstChild();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,214,if (name.getType() == Token.NAME
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,215,"&& isNameAssignedTo(name.getString(), replacement)) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,216,return false;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,219,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,223,* @return Whether name is assigned in the expression rooted at node.
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,226,"private boolean isNameAssignedTo(String name, Node node) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,227,for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,228,"if (isNameAssignedTo(name, c)) {"
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,229,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,233,if (node.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,234,Node parent = node.getParent();
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,235,if (parent.getType() == Token.ASSIGN && parent.getFirstChild() == node) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,236,if (name.equals(node.getString())) {
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,237,return true;
True,src/com/google/javascript/jscomp/ExploitAssigns.java,src/com/google/javascript/jscomp/ExploitAssigns.java,242,return false;
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,49,ublic void testExprExploitationTypes() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,50,"est(""a = true; b = true"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,51,"b = a = true"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,52,"est(""a = !0; b = !0"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,53,"b = a = !0"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,54,"est(""a = !1; b = !1"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,55,"b = a = !1"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,56,"est(""a = void 0; b = void 0"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,57,"b = a = void 0"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,58,"est(""a = -Infinity; b = -Infinity"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,59,"b = a = -Infinity"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,62,ublic void testExprExploitationTypes2() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,63,"est(""a = !0; b = !0"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,64,"b = a = !0"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,67,ublic void testExprExploitation() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,68,"est(""a = null; b = null; var c = b"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,69,"var c = b = a = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,70,"est(""a = null; b = null"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,71,"b = a = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,72,"est(""a = undefined; b = undefined"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,73,"b = a = undefined"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,74,"est(""a = 0; b = 0"", ""b=a=0"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,75,"est(""a = 'foo'; b = 'foo'"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,76,"b = a = \""foo\"""");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,77,"est(""a = c; b = c"", ""b=a=c"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,79,"estSame(""a = 0; b = 1"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,80,"estSame(""a = \""foo\""; b = \""foox\"""");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,82,"est(""a = null; a && b;"", ""(a = null)&&b"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,83,"est(""a = null; a || b;"", ""(a = null)||b"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,85,"est(""a = null; a ? b : c;"", ""(a = null) ? b : c"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,87,"est(""a = null; this.foo = null;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,88,"this.foo = a = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,89,"est(""function f(){ a = null; return null; }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,90,"function f(){return a = null}"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,92,"est(""a = true; if (a) { foo(); }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,93,"if (a = true) { foo() }"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,94,"est(""a = true; if (a && a) { foo(); }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,95,"if ((a = true) && a) { foo() }"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,96,"est(""a = false; if (a) { foo(); }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,97,"if (a = false) { foo() }"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,99,"est(""a = !0; if (a) { foo(); }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,100,"if (a = !0) { foo() }"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,101,"est(""a = !0; if (a && a) { foo(); }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,102,"if ((a = !0) && a) { foo() }"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,103,"est(""a = !1; if (a) { foo(); }"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,104,"if (a = !1) { foo() }"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,106,"estSame(""a = this.foo; a();"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,107,"est(""a = b; b = a;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,108,"b = a = b"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,109,"estSame(""a = b; a.c = a"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,110,"est(""this.foo = null; this.bar = null;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,111,"this.bar = this.foo = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,112,"est(""this.foo = null; this.bar = null; this.baz = this.bar"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,113,"this.baz = this.bar = this.foo = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,114,"est(""this.foo = null; a = null;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,115,"a = this.foo = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,116,"est(""this.foo = null; a = this.foo;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,117,"a = this.foo = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,118,"est(""a.b.c=null; a=null;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,119,"a = a.b.c = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,120,"estSame(""a = null; a.b.c = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,121,"est(""(a=b).c = null; this.b = null;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,122,"this.b = (a=b).c = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,123,"estSame(""if(x) a = null; else b = a"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,126,ublic void testNestedExprExploitation() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,127,"est(""this.foo = null; this.bar = null; this.baz = null;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,128,"this.baz = this.bar = this.foo = null"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,130,"est(""a = 3; this.foo = a; this.bar = a; this.baz = 3;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,131,"this.baz = this.bar = this.foo = a = 3"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,132,"est(""a = 3; this.foo = a; this.bar = this.foo; this.baz = a;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,133,"this.baz = this.bar = this.foo = a = 3"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,134,"est(""a = 3; this.foo = a; this.bar = 3; this.baz = this.foo;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,135,"this.baz = this.bar = this.foo = a = 3"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,136,"est(""a = 3; this.foo = a; a = 3; this.bar = 3; "" +"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,137,"a = 3; this.baz = this.foo;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,138,"this.baz = a = this.bar = a = this.foo = a = 3"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,140,"est(""a = 4; this.foo = a; a = 3; this.bar = 3; "" +"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,141,"a = 3; this.baz = this.foo;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,142,"this.foo = a = 4; a = this.bar = a = 3; this.baz = this.foo"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,143,"est(""a = 3; this.foo = a; a = 4; this.bar = 3; "" +"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,144,"a = 3; this.baz = this.foo;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,145,"this.foo = a = 3; a = 4; a = this.bar = 3; this.baz = this.foo"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,146,"est(""a = 3; this.foo = a; a = 3; this.bar = 3; "" +"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,147,"a = 4; this.baz = this.foo;"","
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,148,"this.bar = a = this.foo = a = 3; a = 4; this.baz = this.foo"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,151,ublic void testBug1840071() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,152,/ Some external properties are implemented as setters. Let's
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,153,/ make sure that we don't collapse them inappropriately.
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,154,"est(""a.b = a.x; if (a.x) {}"", ""if (a.b = a.x) {}"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,155,"estSame(""a.b = a.x; if (a.b) {}"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,156,"est(""a.b = a.c = a.x; if (a.x) {}"", ""if (a.b = a.c = a.x) {}"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,157,"estSame(""a.b = a.c = a.x; if (a.c) {}"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,158,"estSame(""a.b = a.c = a.x; if (a.b) {}"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,161,ublic void testBug2072343() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,162,"estSame(""a = a.x;a = a.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,163,"estSame(""a = a.x;b = a.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,164,"est(""b = a.x;a = a.x"", ""a = b = a.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,165,"estSame(""a.x = a;a = a.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,166,"estSame(""a.b = a.b.x;a.b = a.b.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,167,"estSame(""a.y = a.y.x;b = a.y;c = a.y.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,168,"est(""a = a.x;b = a;c = a.x"", ""b = a = a.x;c = a.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,169,"est(""b = a.x;a = b;c = a.x"", ""a = b = a.x;c = a.x"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,172,ublic void testBadCollapseIntoCall() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,173,"/ Can't collapse this, because if we did, 'foo' would be called"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,174,/ in the wrong 'this' context.
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,175,"estSame(""this.foo = function() {}; this.foo();"");"
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,178,ublic void testBadCollapse() {
False,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,test/com/google/javascript/jscomp/CollapseVariableDeclarationsTest.java,179,"estSame(""this.$e$ = []; this.$b$ = null;"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,2,* Copyright 2006 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,20,* Unit tests for {@link ExploitAssigns}
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,22,* @author nicksantos@google.com (Nick Santos)
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,23,* @author acleung@google.com (Alan Leung)
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,25,public class ExploitAssignsTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,27,public void testExprExploitationTypes() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,28,"test(""a = true; b = true"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,29,"""b = a = true"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,30,"test(""a = !0; b = !0"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,31,"""b = a = !0"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,32,"test(""a = !1; b = !1"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,33,"""b = a = !1"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,34,"test(""a = void 0; b = void 0"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,35,"""b = a = void 0"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,36,"test(""a = -Infinity; b = -Infinity"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,37,"""b = a = -Infinity"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,40,public void testExprExploitationTypes2() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,41,"test(""a = !0; b = !0"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,42,"""b = a = !0"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,45,public void testExprExploitation() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,46,"test(""a = null; b = null; var c = b"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,47,"""var c = b = a = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,48,"test(""a = null; b = null"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,49,"""b = a = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,50,"test(""a = undefined; b = undefined"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,51,"""b = a = undefined"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,52,"test(""a = 0; b = 0"", ""b=a=0"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,53,"test(""a = 'foo'; b = 'foo'"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,54,"""b = a = \""foo\"""");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,55,"test(""a = c; b = c"", ""b=a=c"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,57,"testSame(""a = 0; b = 1"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,58,"testSame(""a = \""foo\""; b = \""foox\"""");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,60,"test(""a = null; a && b;"", ""(a = null)&&b"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,61,"test(""a = null; a || b;"", ""(a = null)||b"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,63,"test(""a = null; a ? b : c;"", ""(a = null) ? b : c"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,65,"test(""a = null; this.foo = null;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,66,"""this.foo = a = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,67,"test(""function f(){ a = null; return null; }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,68,"""function f(){return a = null}"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,70,"test(""a = true; if (a) { foo(); }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,71,"""if (a = true) { foo() }"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,72,"test(""a = true; if (a && a) { foo(); }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,73,"""if ((a = true) && a) { foo() }"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,74,"test(""a = false; if (a) { foo(); }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,75,"""if (a = false) { foo() }"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,77,"test(""a = !0; if (a) { foo(); }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,78,"""if (a = !0) { foo() }"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,79,"test(""a = !0; if (a && a) { foo(); }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,80,"""if ((a = !0) && a) { foo() }"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,81,"test(""a = !1; if (a) { foo(); }"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,82,"""if (a = !1) { foo() }"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,84,"testSame(""a = this.foo; a();"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,85,"test(""a = b; b = a;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,86,"""b = a = b"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,87,"testSame(""a = b; a.c = a"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,88,"test(""this.foo = null; this.bar = null;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,89,"""this.bar = this.foo = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,90,"test(""this.foo = null; this.bar = null; this.baz = this.bar"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,91,"""this.baz = this.bar = this.foo = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,92,"test(""this.foo = null; a = null;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,93,"""a = this.foo = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,94,"test(""this.foo = null; a = this.foo;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,95,"""a = this.foo = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,96,"test(""a.b.c=null; a=null;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,97,"""a = a.b.c = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,98,"testSame(""a = null; a.b.c = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,99,"test(""(a=b).c = null; this.b = null;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,100,"""this.b = (a=b).c = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,101,"testSame(""if(x) a = null; else b = a"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,104,public void testNestedExprExploitation() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,105,"test(""this.foo = null; this.bar = null; this.baz = null;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,106,"""this.baz = this.bar = this.foo = null"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,108,"test(""a = 3; this.foo = a; this.bar = a; this.baz = 3;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,109,"""this.baz = this.bar = this.foo = a = 3"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,110,"test(""a = 3; this.foo = a; this.bar = this.foo; this.baz = a;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,111,"""this.baz = this.bar = this.foo = a = 3"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,112,"test(""a = 3; this.foo = a; this.bar = 3; this.baz = this.foo;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,113,"""this.baz = this.bar = this.foo = a = 3"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,114,"test(""a = 3; this.foo = a; a = 3; this.bar = 3; "" +"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,115,"""a = 3; this.baz = this.foo;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,116,"""this.baz = a = this.bar = a = this.foo = a = 3"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,118,"test(""a = 4; this.foo = a; a = 3; this.bar = 3; "" +"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,119,"""a = 3; this.baz = this.foo;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,120,"""this.foo = a = 4; a = this.bar = a = 3; this.baz = this.foo"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,121,"test(""a = 3; this.foo = a; a = 4; this.bar = 3; "" +"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,122,"""a = 3; this.baz = this.foo;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,123,"""this.foo = a = 3; a = 4; a = this.bar = 3; this.baz = this.foo"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,124,"test(""a = 3; this.foo = a; a = 3; this.bar = 3; "" +"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,125,"""a = 4; this.baz = this.foo;"","
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,126,"""this.bar = a = this.foo = a = 3; a = 4; this.baz = this.foo"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,129,public void testBug1840071() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,130,// Some external properties are implemented as setters. Let's
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,131,// make sure that we don't collapse them inappropriately.
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,132,"test(""a.b = a.x; if (a.x) {}"", ""if (a.b = a.x) {}"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,133,"testSame(""a.b = a.x; if (a.b) {}"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,134,"test(""a.b = a.c = a.x; if (a.x) {}"", ""if (a.b = a.c = a.x) {}"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,135,"testSame(""a.b = a.c = a.x; if (a.c) {}"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,136,"testSame(""a.b = a.c = a.x; if (a.b) {}"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,139,public void testBug2072343() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,140,"testSame(""a = a.x;a = a.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,141,"testSame(""a = a.x;b = a.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,142,"test(""b = a.x;a = a.x"", ""a = b = a.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,143,"testSame(""a.x = a;a = a.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,144,"testSame(""a.b = a.b.x;a.b = a.b.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,145,"testSame(""a.y = a.y.x;b = a.y;c = a.y.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,146,"test(""a = a.x;b = a;c = a.x"", ""b = a = a.x;c = a.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,147,"test(""b = a.x;a = b;c = a.x"", ""a = b = a.x;c = a.x"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,150,public void testBadCollapseIntoCall() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,151,"// Can't collapse this, because if we did, 'foo' would be called"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,152,// in the wrong 'this' context.
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,153,"testSame(""this.foo = function() {}; this.foo();"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,156,public void testBadCollapse() {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,157,"testSame(""this.$e$ = []; this.$b$ = null;"");"
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,160,@Override
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,161,protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/ExploitAssignsTest.java,test/com/google/javascript/jscomp/ExploitAssignsTest.java,162,"return new PeepholeOptimizationsPass(compiler,new ExploitAssigns());"
