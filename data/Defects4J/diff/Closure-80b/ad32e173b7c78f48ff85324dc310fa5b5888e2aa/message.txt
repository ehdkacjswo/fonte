
Changes to completely remove goog.userAgent as required by
javatests/com/google/javascript/closure/CompileUserAgentTest.  This
requires three changes:

1) being able to remove expressions without side-effects in the global
scope with the PeepholeRemoveDeadCode pass. This is simply a change to
handle both BLOCK and SCRIPT.

2) a change to be able to fold constant result if conditions that have
side-effects (a = 1).  This was a change to include a smarter version
of NodeUtil.getBooleanValue. A general expression evaluator would be
preferred.

3) and finally a bit of a hack to handle assignments followed by if
statements.  I would prefer a general solution, but this works well
enough for this purpose.  A good general solution would need a general
in-place expression evaluator and control-flow value propagation, both
of which I've special cased. It handles this:

a = /MSIE/
if (a) {
a.exec(value);
}

(we want the regexp object to get inlined into the exec call so it is known to
be side-effect free).

R=gboyer,acleung
DELTA=388  (333 added, 28 deleted, 27 changed)


Revision created by MOE tool push_codebase.
MOE_MIGRATION=90004


git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@326 b0f006be-c8cd-11de-a2e8-8d36a3108c74
